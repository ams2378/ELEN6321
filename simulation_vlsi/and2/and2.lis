Using: /usr/bin/time -p /usr/cad/meta/rel/hspice/linux/hspice and2.sp
 ****** HSPICE  --  A-2007.09  32-BIT    (Aug 28 2007) 14:54:14 02/23/2013 linux
  Copyright (C) 2007 Synopsys, Inc. All Rights Reserved.                        
  Unpublished-rights reserved under US copyright laws.
  This program is protected by law and is subject to the 
  terms and conditions of the license agreement found in:
    /usr/cad/meta/rel/hspice/license.txt
  Use of this program is your acceptance to be bound by this 
  license agreement. HSPICE is the trademark of Synopsys, Inc.
  Input File: and2.sp                                                           
 lic:  
 lic: FLEXlm: v8.5b 
 lic: USER:   jy2525               HOSTNAME: vlsi12 
 lic: HOSTID: e091f595b530         PID:      31509 
 lic: Using FLEXlm license file: 
 lic: 27000@bioeeserv.ee.columbia.edu 
 lic: Checkout 1 hspice;  Encryption code: DEA048380846260FC020 
 lic: License/Maintenance for hspice will expire on 14-jun-2013/2011.09 
 lic: 1(in_use)/50(total) FLOATING license(s) on SERVER bioeeserv.ee.columbia.ed
 lic:   
 Init: read install configuration file: /usr/cad/meta/rel/hspice/meta.cfg
 Init: hspice initialization file: /usr/cad/meta/rel/hspice/hspice.ini
 .lib '/tools2/courses/ee6321/share/ibm_pdk/cmrf8sf/reldm/hspice/models/allmodels.inc' tt
 .lib './fixed_corner' tt
 .param  fixcnr = 0
 .lib 'fixed_corner'   tt_nhvt33
 .param
 + dvfbo_nhvt33_fc =   0.0000e+00
 + dcjorsti_nhvt33_fc =   0.0000e+00
 + dcjorgat_nhvt33_fc =   0.0000e+00
 + dvfbl_nhvt33_fc =   0.0000e+00
 + dlov_nhvt33_fc =   0.0000e+00
 + dcjorbot_nhvt33_fc =   0.0000e+00
 + dfol1_nhvt33_fc =   0.0000e+00
 + dtoxo_nhvt33_fc =   0.0000e+00
 + dlap_nhvt33_fc =   0.0000e+00
 + dvfblw_nhvt33_fc =   0.0000e+00
 + duo_nhvt33_fc =   0.0000e+00
 + drsw1_nhvt33_fc =   0.0000e+00
 + dwot_nhvt33_fc =   0.0000e+00
 .endl tt_nhvt33
 .lib 'fixed_corner'   tt_phvt33
 .param
 + dvfbo_phvt33_fc =   0.0000e+00
 + dcjorsti_phvt33_fc =   0.0000e+00
 + dcjorgat_phvt33_fc =   0.0000e+00
 + dvfbl_phvt33_fc =   0.0000e+00
 + dlov_phvt33_fc =   0.0000e+00
 + dcjorbot_phvt33_fc =   0.0000e+00
 + dfol1_phvt33_fc =   0.0000e+00
 + dtoxo_phvt33_fc =   0.0000e+00
 + dlap_phvt33_fc =   0.0000e+00
 + dvfblw_phvt33_fc =   0.0000e+00
 + duo_phvt33_fc =   0.0000e+00
 + drsw1_phvt33_fc =   0.0000e+00
 + dwot_phvt33_fc =   0.0000e+00
 .endl tt_phvt33
 .lib 'fixed_corner'   tt_bsim
 .param 
 + cor_rx_fc     = 0
 + cor_pc_fc     = 0
 + cor_tox_fc    = 0
 + cor_toxd_fc   = 0
 + cor_nfet_fc   = 0
 + cor_pfet_fc   = 0
 + cor_lpnf_fc   = 0
 + cor_lppf_fc   = 0
 + cor_lvnf_fc   = 0
 + cor_lvpf_fc   = 0
 + cor_dgnf_fc   = 0
 + cor_dgpf_fc   = 0
 + cor_nf33_fc   = 0
 + cor_pf33_fc   = 0
 + cor_zvtn_fc   = 0
 + cor_zvtdgn_fc = 0
 .endl  tt_bsim
 .endl  tt
 .lib './skew.file' stats
  
 ***********************************************************************
 * process model switch / user input parameters
 ***********************************************************************
 .param skewfix(nom,best,worst,xsig) = '(xsig>0)*(best-nom)*xsig + (xsig<=0)*(nom-worst)*xsig'
 *
 .param
 +     mc_d1 = agauss(0,1,3)
 +     mc_d2 = agauss(0,1,3)
 +     mc_d3 = agauss(0,1,3)
 +     mc_sw = '(mc_d1 != 0) || (mc_d2 != 0) || (mc_d3 != 0)'
 *
 +     mc_gl_f       = '(mc_global>0)*mc_sw'
 +     mc_fet_mm_f   = '(mc_global<2)*mc_sw'
 +     mc_std        = '(mc_global != 0)'
 *
 +     fet_dop_mm    = 'fet_dop_mis'
 +     fet_geo_mm    = 'fet_geo_mis'
 *
 +     pc_nest_f     = 'pc_nest * fet_geo_mm'
 +     pc_orient_f   = 'pc_orient * fet_geo_mm'
 +     pc_dist_f     = 'pc_dist * fet_geo_mm'
 +     rx_dist_f     = 'rx_dist * fet_geo_mm'
 *
 ***********************************************************************
 * statistical and corner analysis selections
 *     note: corner and monte carlo analyses are mutually exclusive
 * translate corner value to distribution "sigma" ( divide by 3 )
 ***********************************************************************
 .param
 +     cnr_rx   = '(1-mc_gl_f) * (cor_rx_fc + cor_rx*(1-fixcnr))/3'
 +     cnr_pc   = '(1-mc_gl_f) * (cor_pc_fc + cor_pc*(1-fixcnr))/3'
 +     cnr_tox  = '(1-mc_gl_f) * (cor_tox_fc + cor_tox*(1-fixcnr))/3'
 +     cnr_toxd = '(1-mc_gl_f) * (cor_toxd_fc + cor_toxd*(1-fixcnr))/3'
 +     cnr_noin = '(1-mc_gl_f) * cor_noin/3'
 +     cnr_noip = '(1-mc_gl_f) * cor_noip/3'
 +     cnr_res  = '(1-mc_gl_f) * cor_res/3'
 +     cnr_cap  = '(1-mc_gl_f) * cor_cap/3'
 +     cnr_ind  = '(1-mc_gl_f) * cor_ind/3'
 *
 +     cnr_nmos = 'cor_nmos * (1-fixcnr)'
 +     cnr_pmos = 'cor_pmos * (1-fixcnr)'
 *
 +     cnr_n    = '(1-mc_gl_f) * (cor_nfet_fc + cnr_nmos)/3'
 +     cnr_p    = '(1-mc_gl_f) * (cor_pfet_fc + cnr_pmos)/3'
 +     cnr_lpn  = '(1-mc_gl_f) * (cor_lpnf_fc + cnr_nmos)/3'
 +     cnr_lpp  = '(1-mc_gl_f) * (cor_lppf_fc + cnr_pmos)/3'
 +     cnr_lvn  = '(1-mc_gl_f) * (cor_lvnf_fc + cnr_nmos)/3'
 +     cnr_lvp  = '(1-mc_gl_f) * (cor_lvpf_fc + cnr_pmos)/3'
 +     cnr_dgn  = '(1-mc_gl_f) * (cor_dgnf_fc + cnr_nmos)/3'
 +     cnr_dgp  = '(1-mc_gl_f) * (cor_dgpf_fc + cnr_pmos)/3'
 +     cnr_n33  = '(1-mc_gl_f) * (cor_nf33_fc + cnr_nmos)/3'
 +     cnr_p33  = '(1-mc_gl_f) * (cor_pf33_fc + cnr_pmos)/3'
 +     cnr_zn   = '(1-mc_gl_f) * (cor_zvtn_fc + cnr_nmos)/3'
 +     cnr_zdg  = '(1-mc_gl_f) * (cor_zvtdgn_fc + cnr_nmos)/3'
 *
 +     cnr_nhv33 = '(1-mc_gl_f) * (cnr_nmos)/3'
 +     cnr_phv33 = '(1-mc_gl_f) * (cnr_pmos)/3'
 *
 +     npmsxt   = 'waferthk*1.0e-6'       $ convert units for nominal value
 *
 ***********************************************************************
 * aclv / acwv parameters and calculations
 ***********************************************************************
 .param
 +     total_aclv_fet   = 0.0036666e-6    $ aclv l tracking 1 sigma coefficients
 +     total_aclv_dgfet = 0.0053333e-6
 +     total_acwv_fet   = 0.0156666e-6    $ acwv w tracking 1 sigma coefficients
 +     total_acwv_dgfet = 0.0140e-6
 *
 +     aclv_fet_ni      = '0.0053e-6/(3*total_aclv_fet)'
 +     aclv_fet_or      = '0.0045e-6/(3*total_aclv_fet)'
 +     aclv_fet_dist    = '0.006874e-6/(3*total_aclv_fet)'
 +     aclv_fet_ran     = '0.0050e-6/(3*total_aclv_fet)'
 *
 +     aclv_dgfet_ni    = '0.007709e-6/(3*total_aclv_dgfet)'
 +     aclv_dgfet_or    = '0.006545e-6/(3*total_aclv_dgfet)'
 +     aclv_dgfet_dist  = '0.009999e-6/(3*total_aclv_dgfet)'
 +     aclv_dgfet_ran   = '0.007273e-6/(3*total_aclv_dgfet)'
 *
 *  calculate the rss factor
 +     aclv_factor_1    = '(pow(aclv_fet_ni,2)*(pc_nest_f==1))'
 +     aclv_factor_2    = '(pow(aclv_fet_or,2)*(pc_orient_f==1))'
 +     aclv_factor_3    = '(pow(aclv_fet_dist,2)*(pc_dist_f==1))'
 +     aclv_factor_4    = '(pow(aclv_fet_ran,2))'
 +     aclv_factor_5    = 'sqrt(aclv_factor_1 + aclv_factor_2 + aclv_factor_3 + aclv_factor_4)'
 +     aclv_factor_6    = '(aclv_fet_ni)*(pc_nest_f==1)'
 +     aclv_factor_7    = '(aclv_fet_or)*(pc_orient_f==1)'
 +     aclv_factor_8    = '(aclv_fet_dist)*(pc_dist_f==1)'
 +     aclv_factor      = 'aclv_factor_5/(aclv_factor_6+aclv_factor_7+aclv_factor_8+aclv_fet_ran)'
 *
 +     aclv_dgfactor_1  = '(pow(aclv_dgfet_ni,2)*(pc_nest_f==1))'
 +     aclv_dgfactor_2  = '(pow(aclv_dgfet_or,2)*(pc_orient_f==1))'
 +     aclv_dgfactor_3  = '(pow(aclv_dgfet_dist,2)*(pc_dist_f==1))'
 +     aclv_dgfactor_4  = '(pow(aclv_dgfet_ran,2))'
 +     aclv_dgfactor_5  = 'sqrt(aclv_dgfactor_1 + aclv_dgfactor_2 + aclv_dgfactor_3 + aclv_dgfactor_4)'
 +     aclv_dgfactor_6  = '(aclv_dgfet_ni)*(pc_nest_f==1)'
 +     aclv_dgfactor_7  = '(aclv_dgfet_or)*(pc_orient_f==1)'
 +     aclv_dgfactor_8  = '(aclv_dgfet_dist)*(pc_dist_f==1)'
 +     aclv_dgfactor    = 'aclv_dgfactor_5/(aclv_dgfactor_6+aclv_dgfactor_7+aclv_dgfactor_8+aclv_dgfet_ran)'
 *
 *
 +     acwv_fet_dist    = '0.01652e-6/(3*total_acwv_fet)'
 +     acwv_fet_ran     = '0.0440e-6/(3*total_acwv_fet)'
 +     acwv_dgfet_dist  = '0.02322e-6/(3*total_acwv_dgfet)'
 +     acwv_dgfet_ran   = '0.0350e-6/(3*total_acwv_dgfet)'
 *
 *  calculate the rss factor
 +     acwv_factor_1    = 'sqrt((pow(acwv_fet_dist,2)*(rx_dist_f==1))+(pow(acwv_fet_ran,2)))'
 +     acwv_factor_2    = '((acwv_fet_dist)*(rx_dist_f==1))+ acwv_fet_ran'
 +     acwv_factor      = 'acwv_factor_1/acwv_factor_2'
 *
 +     acwv_dgfactor_1  = 'sqrt((pow(acwv_dgfet_dist,2)*(rx_dist_f==1))+(pow(acwv_dgfet_ran,2)))'
 +     acwv_dgfactor_2  = '((acwv_dgfet_dist)*(rx_dist_f==1))+ acwv_dgfet_ran'
 +     acwv_dgfactor    = 'acwv_dgfactor_1/acwv_dgfactor_2'
 *
 +     aclv_nest_ags    = agauss(0,1,3)
 +     aclv_nest        = '(aclv_nest_ags*mc_fet_mm_f) + (1-mc_fet_mm_f)'
 +     aclv_iso_ags     = agauss(0,1,3)
 +     aclv_iso         = '(aclv_iso_ags*mc_fet_mm_f) + (1-mc_fet_mm_f)'
 +     aclv_v_ags       = agauss(0,1,3)
 +     aclv_v           = '(aclv_v_ags*mc_fet_mm_f) + (1-mc_fet_mm_f)'
 +     aclv_h_ags       = agauss(0,1,3)
 +     aclv_h           = '(aclv_h_ags*mc_fet_mm_f) + (1-mc_fet_mm_f)'
 +     aclv_out_ags     = agauss(0,1,3)
 +     aclv_out         = '(aclv_out_ags*mc_fet_mm_f) + (1-mc_fet_mm_f)'
 +     aclv_in_ags      = agauss(0,1,3)
 +     aclv_in          = '(aclv_in_ags*mc_fet_mm_f) + (1-mc_fet_mm_f)'
 *
 +     fet_aclv_nest    = '((pc_nest_f==1)*aclv_nest)+((pc_nest_f==2)*(pc_nest_add/(6*total_aclv_fet*aclv_fet_ni)))'
 +     fet_aclv_iso     = '((pc_nest_f==1)*aclv_iso)+((pc_nest_f==2)*(-pc_nest_add/(6*total_aclv_fet*aclv_fet_ni)))'
 *
 +     fet_aclv_v       = '((pc_orient_f==1)*aclv_v)+((pc_orient_f==2)*(pc_orient_add/(6*total_aclv_fet*aclv_fet_or)))'
 +     fet_aclv_h       = '((pc_orient_f==1)*aclv_h)+((pc_orient_f==2)*(-pc_orient_add/(6*total_aclv_fet*aclv_fet_or)))'
 *
 +     fet_aclv_out     = '((pc_dist_f==1)*aclv_out)+((pc_dist_f==2)*(pc_dist_add/(6*total_aclv_fet*aclv_fet_dist)))'
 +     fet_aclv_in      = '((pc_dist_f==1)*aclv_in)+((pc_dist_f==2)*(-pc_dist_add/(6*total_aclv_fet*aclv_fet_dist)))'
 *
 +     dgfet_aclv_nest  = '((pc_nest_f==1)*aclv_nest)+((pc_nest_f==2)*(pc_nest_add/(6*total_aclv_dgfet*aclv_dgfet_ni)))'
 +     dgfet_aclv_iso   = '((pc_nest_f==1)*aclv_iso)+((pc_nest_f==2)*(-pc_nest_add/(6*total_aclv_dgfet*aclv_dgfet_ni)))'
 *
 +     dgfet_aclv_v     = '((pc_orient_f==1)*aclv_v)+((pc_orient_f==2)*(pc_orient_add/(6*total_aclv_dgfet*aclv_dgfet_or)))'
 +     dgfet_aclv_h     = '((pc_orient_f==1)*aclv_h)+((pc_orient_f==2)*(-pc_orient_add/(6*total_aclv_dgfet*aclv_dgfet_or)))'
 *
 +     dgfet_aclv_out   = '((pc_dist_f==1)*aclv_out)+((pc_dist_f==2)*(pc_dist_add/(6*total_aclv_dgfet*aclv_dgfet_dist)))'
 +     dgfet_aclv_in    = '((pc_dist_f==1)*aclv_in)+((pc_dist_f==2)*(-pc_dist_add/(6*total_aclv_dgfet*aclv_dgfet_dist)))'
 *
 +     acwv_out_ags     = agauss(0,1,3)
 +     acwv_out         = '(acwv_out_ags*mc_fet_mm_f) + (mc_fet_mm_f-1)'
 +     acwv_in_ags      = agauss(0,1,3)
 +     acwv_in          = '(acwv_in_ags*mc_fet_mm_f) + (mc_fet_mm_f-1)'
 *
 +     fet_acwv_out     = '((rx_dist==1)*acwv_out)+((rx_dist==2)*(rx_dist_add/(6*total_acwv_fet*acwv_fet_dist)))'
 +     fet_acwv_in      = '((rx_dist==1)*acwv_in)+((rx_dist==2)*(-rx_dist_add/(6*total_acwv_fet*acwv_fet_dist)))'
 *
 +     dgfet_acwv_out   = '((rx_dist==1)*acwv_out)+((rx_dist==2)*(rx_dist_add/(6*total_acwv_dgfet*acwv_dgfet_dist)))'
 +     dgfet_acwv_in    = '((rx_dist==1)*acwv_in)+((rx_dist==2)*(-rx_dist_add/(6*total_acwv_dgfet*acwv_dgfet_dist)))'
 *
 ***********************************************************************
 * define correlation matrix: mosfet device types vs. process effects
 ***********************************************************************
 .param
 +   xnlmtx     = agauss(0,mc_std,3)            $ delta l distributions
 +   dnlmtx     = xnlmtx
 +   xplmtx     = agauss(0,mc_std,3)
 +   dplmtx     = xplmtx
 +   xlpnlmtx   = agauss(0,mc_std,3)
 +   dlpnlmtx   = xlpnlmtx
 +   xlpplmtx   = agauss(0,mc_std,3)
 +   dlpplmtx   = xlpplmtx
 +   xlvnlmtx   = agauss(0,mc_std,3)
 +   dlvnlmtx   = xlvnlmtx
 +   xlvplmtx   = agauss(0,mc_std,3)
 +   dlvplmtx   = xlvplmtx
 +   xdgnlmtx   = agauss(0,mc_std,3)
 +   ddgnlmtx   = xdgnlmtx
 +   xdgplmtx   = agauss(0,mc_std,3)
 +   ddgplmtx   = xdgplmtx
 +   xn33lmtx   = agauss(0,mc_std,3)
 +   dn33lmtx   = xn33lmtx
 +   xp33lmtx   = agauss(0,mc_std,3)
 +   dp33lmtx   = xp33lmtx
 +   xnhv33lmtx = agauss(0,mc_std,3)
 +   dnhv33lmtx = xnhv33lmtx
 +   xphv33lmtx = agauss(0,mc_std,3)
 +   dphv33lmtx = xphv33lmtx
 +   xznlmtx    = agauss(0,mc_std,3)
 +   dznlmtx    = xznlmtx
 +   xzdglmtx   = agauss(0,mc_std,3)
 +   dzdglmtx   = xzdglmtx
 *
 +   lmtx_n     = '0.7545*dnlmtx + 0.6157*dplmtx + 0.2273*dlvnlmtx'
 +   lmtx_p     = '0.7545*dnlmtx - 0.6157*dplmtx + 0.2273*dlvplmtx'
 +   lmtx_lpn   = '0.7545*dnlmtx + 0.6157*dplmtx - 0.2273*dlpnlmtx'
 +   lmtx_lpp   = '0.7545*dnlmtx - 0.6157*dplmtx - 0.2273*dlpplmtx'
 +   lmtx_lvn   = '0.7545*dnlmtx + 0.6157*dplmtx - 0.2273*dlvnlmtx'
 +   lmtx_lvp   = '0.7545*dnlmtx - 0.6157*dplmtx - 0.2273*dlvplmtx'
 +   lmtx_dgn   = '0.7545*dnlmtx + 0.6157*dplmtx - 0.2273*ddgnlmtx'
 +   lmtx_dgp   = '0.7545*dnlmtx - 0.6157*dplmtx - 0.2273*ddgplmtx'
 +   lmtx_n33   = '0.7545*dnlmtx + 0.6157*dplmtx - 0.2273*dn33lmtx'
 +   lmtx_p33   = '0.7545*dnlmtx - 0.6157*dplmtx - 0.2273*dp33lmtx'
 +   lmtx_nhv33 = '0.7545*dnlmtx + 0.6157*dplmtx - 0.2273*dnhv33lmtx'
 +   lmtx_phv33 = '0.7545*dnlmtx - 0.6157*dplmtx - 0.2273*dphv33lmtx'
 +   lmtx_zn    = '0.7545*dnlmtx + 0.6157*dplmtx - 0.2273*dznlmtx'
 +   lmtx_zdg   = '0.7545*dnlmtx - 0.6157*dplmtx - 0.2273*dzdglmtx'
 *
 +   xnvth0     = agauss(0,mc_std,3)            $ vth0 distributions
 +   dnvth0     = xnvth0
 +   xpvth0     = agauss(0,mc_std,3)
 +   dpvth0     = xpvth0
 +   xlpnvth0   = agauss(0,mc_std,3)
 +   dlpnvth0   = xlpnvth0
 +   xlppvth0   = agauss(0,mc_std,3)
 +   dlppvth0   = xlppvth0
 +   xlvnvth0   = agauss(0,mc_std,3)
 +   dlvnvth0   = xlvnvth0
 +   xlvpvth0   = agauss(0,mc_std,3)
 +   dlvpvth0   = xlvpvth0
 +   xdgnvth0   = agauss(0,mc_std,3)
 +   ddgnvth0   = xdgnvth0
 +   xdgpvth0   = agauss(0,mc_std,3)
 +   ddgpvth0   = xdgpvth0
 +   xn33vth0   = agauss(0,mc_std,3)
 +   dn33vth0   = xn33vth0
 +   xp33vth0   = agauss(0,mc_std,3)
 +   dp33vth0   = xp33vth0
 +   xnhv33vth0 = agauss(0,mc_std,3)
 +   dnhv33vth0 = xnhv33vth0
 +   xphv33vth0 = agauss(0,mc_std,3)
 +   dphv33vth0 = xphv33vth0
 +   xznvth0    = agauss(0,mc_std,3)
 +   dznvth0    = xznvth0
 +   xzdgvth0   = agauss(0,mc_std,3)
 +   dzdgvth0   = xzdgvth0
 *
 +   vmtx_n   = '0.984*dnvth0 + 0.178*dlvnvth0'
 +   vmtx_p   = '0.984*dpvth0 + 0.178*dlvpvth0'
 +   vmtx_lvn = '0.984*dnvth0 - 0.178*dlvnvth0'
 +   vmtx_lvp = '0.984*dpvth0 - 0.178*dlvpvth0'
 *
 +   xnwint     = agauss(0,mc_std,3)            $ delta w distributions
 +   dnwint     = xnwint
 +   xpwint     = agauss(0,mc_std,3)
 +   dpwint     = xpwint
 +   xlpnwint   = agauss(0,mc_std,3)
 +   dlpnwint   = xlpnwint
 +   xlppwint   = agauss(0,mc_std,3)
 +   dlppwint   = xlppwint
 +   xlvnwint   = agauss(0,mc_std,3)
 +   dlvnwint   = xlvnwint
 +   xlvpwint   = agauss(0,mc_std,3)
 +   dlvpwint   = xlvpwint
 +   xdgnwint   = agauss(0,mc_std,3)
 +   ddgnwint   = xdgnwint
 +   xdgpwint   = agauss(0,mc_std,3)
 +   ddgpwint   = xdgpwint
 +   xn33wint   = agauss(0,mc_std,3)
 +   dn33wint   = xn33wint
 +   xp33wint   = agauss(0,mc_std,3)
 +   dp33wint   = xp33wint
 +   xnhv33wint = agauss(0,mc_std,3)
 +   dnhv33wint = xnhv33wint
 +   xphv33wint = agauss(0,mc_std,3)
 +   dphv33wint = xphv33wint
 +   xznwint    = agauss(0,mc_std,3)
 +   dznwint    = xznwint
 +   xzdgwint   = agauss(0,mc_std,3)
 +   dzdgwint   = xzdgwint
 *
 ***********************************************************************
 * define nwell proximity parameters
 ***********************************************************************
 .param
 +   band1  = 0.15u                           $ [meter]
 +   band2  = 0.325u
 +   band3  = 0.375u
 +   band4  = 0.425u
 +   band5  = 0.475u
 +   band6  = 0.55u
 +   band7  = 0.70u
 +   band8  = 0.90u
 +   band9  = 1.20u
 +   band10 = 1.70u
 *
 ***********************************************************************
 * define rgate diffusion parameters
 ***********************************************************************
 .param
 +   diff_thn = 0.36u                         $ [meter]
 +   diff_thk = 0.44u
 *
 ***********************************************************************
 * process parameters
 ***********************************************************************
 .param   
 +   pi      = 3.14159
 +   e0      = 8.8542p
 +   ersi    = 11.9
 +   mu0     = 1.2566e-6
 +   eoxsti  = 3.9
 +   eoxdepo = 4.1
 *
 *                                            $ process image distributions
 +   xistns  = agauss(0,mc_std,3)             $ ns bias
 +   distns  = xistns
 +   xistnw  = agauss(0,mc_std,3)             $ nw bias
 +   distnw  = xistnw
 +   xistkx  = agauss(0,mc_std,3)             $ kx bias
 +   distkx  = xistkx
 +   xistl1  = agauss(0,mc_std,3)             $ l1 bias
 +   distl1  = xistl1
 * 
 +   ndelrx  = -0.045u                        $ shallow trench image
 *                                            $ rx bias tolerance
 +   tdelrx  = '0.04u * (dnwint*mc_gl_f - cnr_rx)'
 +   delrx   = 'ndelrx + tdelrx'
 *                                            $ pc image bias tolerance
 +   tdelpc  = '0.1u * (dnlmtx*mc_gl_f - cnr_pc)'
 *                                            $ poly line width bias
 +   lwbpc   = '-0.028u + 0.022u*(dnlmtx*mc_gl_f - cnr_pc)'
 *                                            $ dg poly line width bias
 +   lwbpcdg = '-0.020u + 0.034u*(ddgnlmtx*mc_gl_f - cnr_pc)'
 *
 +   opendf   = '0.50u + 0.5*tdelrx'          $ rx overlap past ca
 +   oppcendf = '0.45u + 0.5*lwbpc'           $ pc overlap past ca
 *
 +   tdelkx   = '0.14u * distkx'              $ kx bias tolerance
 +   tdell1   = '0.20u * distl1'              $ l1 bias tolerance
 +   ndelnw   =  0.44u                        $ nw image
 +   tdelnw   = '0.24u*distnw'
 +   nwendf   = '0.90u + 0.5*tdelnw'          $ nw overlap past contacts
 +   delns    = '0.90u + 0.30u*distns'        $ ns image (with outdiffusion)
 +   kxendf   = '0.90u + 0.5*tdelkx'          $ kx overlap past vx
 +   wanodn   = 2.0u                          $ esd n+/sx anode width
 *
 *                                            $ process profile distributions
 +   xthnox  = agauss('-cnr_tox',mc_std,3)    $ thin gate oxide
 +   dthnox  = xthnox
 +   xthkox  = agauss('-cnr_toxd',mc_std,3)   $ thick gate oxide
 +   dthkox  = xthkox
 +   xpcthk  = agauss(cnr_ind,mc_std,3)       $ poly line thickness
 +   dpcthk  = xpcthk
 +   xpcsti  = agauss(cnr_ind,mc_std,3)       $ sti thickness
 +   dpcsti  = xpcsti
 *
 +   oppcthkn = 0.15u                         $ poly line thickness
 +   oppcthkf = 'oppcthkn + 0.015u*dpcthk'
 +   oppcstin = 0.35u                         $ sti thickness
 +   oppcstif = 'oppcstin + 0.03u*dpcsti'
 +   oppcstie = 'oppcstif + 0.062u'           $ effective sti thickness
 *
 *                                       pc area, peri cap (f/meter**2, f/meter)
 +   oppcdown = '3.453e-11 / oppcstie'
 +   oppcfrng = '3.453e-11 * (1.18 + (2/pi)*log(1 + oppcthkn/oppcstie))'
 *
 *                                              n+ s/d resistor
 *
 +   xndrs     = agauss(cnr_res,mc_std,3)
 +   dndrs     = xndrs
 +   xndren    = agauss(cnr_res,mc_std,3)
 +   dndren    = xndren
 *
 +   opndrsn   = 73                           $ rs, ohm/sq
 +   opndrsf   = 'opndrsn + 9.5*dndrs'
 +   opndrenn  = 12u                          $ rend, ohm-meter exponent
 +   opndrenf  = 'opndrenn+ 11.999u*dndren'
 +   opnddwn   = -0.034u                      $ delta w
 +   opnddwf   = 'opnddwn + tdelrx'
 +   opndrstc  =  1810u                       $ rs   tcr = +1810 ppm
 +   opndrntc  =  2100u                       $ rend tcr = +2100 ppm
 +   opndvcr   =   900u                       $ vcr = 900 ppm/v
 +   opndma    =  4.0                         $ mis-match coefficients
 +   opndml    =  2.0
 +   opndmw    =  0
 +   ndrgw     = 3000                         $ parasitic res parameters
 +   ndrgl     = 200
 *
 *                                              nwell resistor
 *
 +   xnwrs     = agauss(cnr_res,mc_std,3)
 +   dnwrs     = xnwrs
 *
 +   nwrsn     = 540                          $ rs, ohm/sq
 +   nwrsf     = 'nwrsn + 110*dnwrs'
 +   nwdwn     = -0.02u                       $ delta w
 +   nwdwf     = 'nwdwn + tdelnw'
 +   nwrstc1   =  1175u                       $ rs  tcr1 = +1175 ppm
 +   nwrstc2   =    10u                       $ rs  tcr2 = +  10 ppm
 +   nwrntc    =  3000u                       $ rend tcr = +3000 ppm
 +   nwshk     =  120                         $ self-heating parameters
 +   nwshm     = -0.05
 +   nwvcr     =  16.8m                       $ vcr = 16.8k ppm/v
 +   nwma      =  1.7                         $ mis-match coefficients
 +   nwml      =  0
 +   nwmw      =  1.0
 *
 *                                              silcide resistor
 *
 +   xpcrsi    = agauss(cnr_res,mc_std,3)     $ silicided poly sheet rho dist
 +   dpcrsi    = xpcrsi
 *
 +   pcrsin    =  7.0                         $ rs, ohm/sq
 +   pcrsi     = 'pcrsin + 3.0*dpcrsi'
 *
 +   xsilren   = agauss(cnr_res,mc_std,3)
 +   dsilren   = xsilren
 +   xcadim    = agauss(cnr_res,mc_std,3)
 +   dcadim    = xcadim
 *
 +   silren    =  0.884                       $ rend, ohm-meter, exponent
 +   silref    = 'silren + 1.012*dsilren'
 +   silrdwn   =  0.017u                      $ delta w
 +   silrdwf   = 'silrdwn + 0.022u*(dnlmtx*mc_gl_f - cnr_pc)'
 +   silrdln   =  0.0u                        $ delta l
 +   silrdlf   = 'silrdln + 0.025u*dcadim'
 +   silrst1   =  3260u                       $ rs   tc1 = +3260 ppm
 +   silrntc   =  1860u                       $ rend tcr = +1860 ppm
 +   silrma    =  0.7                         $ mis-match coefficients
 +   silrml    =  0.2
 +   silrmw    =  0.4
 *
 *                                              p+ poly resistor
 *
 +   xpcrs     = agauss(cnr_res,mc_std,3)
 +   dpcrs     = xpcrs
 +   xpcren    = agauss(cnr_res,mc_std,3)
 +   dpcren    = xpcren
 +   xnoipc    = agauss(cnr_res,mc_std,3)
 +   dnoipc    = xnoipc
 *
 +   oppcrsn   =  340                         $ rs, ohm/sq
 +   oppcrsf   = 'oppcrsn + 51*dpcrs'
 +   oppcrenn  = 54u                          $ rend, ohm-meter exponent
 +   oppcrenf  = 'oppcrenn + 16u*dpcren'
 +   oppcdwn   = -0.031u                      $ delta w
 +   oppcdwf   = 'oppcdwn + tdelpc'
 +   oppcrst1  =  77u                         $ rs   tc1 = +  77 ppm
 +   oppcrst2  =  0u                          $ rs   tc2 =     0 ppm
 +   oppcrntc  = -1220u                       $ rend tcr = -1220 ppm
 +   oppcma    =  4.0                         $ mis-match coefficients
 +   oppcml    =  0
 +   oppcmw    =  1.0
 +   pcnwrgw   = 500                          $ parasitic res parameters
 +   pcnwrgl   = 300
 +   pcbbrgw   = 300
 +   pcbbrgl   = 100
 +   pcsxrgw   = 500
 +   pcsxrgl   = 300
 *
 *                                              rp poly resistor
 *
 +   xrprs     = agauss(cnr_res,mc_std,3)
 +   drprs     = xrprs
 +   xrpren    = agauss(cnr_res,mc_std,3)
 +   drpren    = xrpren
 +   xnoirp    = agauss(cnr_res,mc_std,3)
 +   dnoirp    = xnoirp
 *
 +   oprprsn   =  228                         $ rs, ohm/sq
 +   oprprsf   = 'oprprsn + 18.2*drprs'
 +   oprprenn  =  45u                         $ rend, ohm-meter exponent
 +   oprprenf  = 'oprprenn + 30u*drpren'
 +   oprpdwn   = -0.031u                      $ delta w
 +   oprpdwf   = 'oprpdwn + tdelpc'
 +   oprprst1  =    45u                       $ rs  tcr1 = +  79 ppm
 +   oprprst2  =  0.20u                       $ rs  tcr2 = + 0.2 ppm
 +   oprprntc  =   750u                       $ rend tcr = + 750 ppm
 +   oprpma    =  7.0                         $ mis-match coefficients
 +   oprpml    =  0
 +   oprpmw    =  2.0
 +   rpnwrgw   = 500                          $ parasitic res parameters
 +   rpnwrgl   = 300
 +   rpbbrgw   = 300
 +   rpbbrgl   = 100
 +   rpsxrgw   = 500
 +   rpsxrgl   = 300
 *
 *                                              rr poly resistor
 *
 +   xrrrs     = agauss(cnr_res,mc_std,3)
 +   drrrs     = xrrrs
 +   xdlbn     = agauss('-cnr_res',mc_std,3)
 +   ddlbn     = xdlbn
 +   xnoirr    = agauss(cnr_res,mc_std,3)
 +   dnoirr    = xnoirr
 *
 +   oprrrsn   = 1700                         $ rs, ohm/sq
 +   oprrrsf   = 'oprrrsn + 340*drrrs'
 +   opdlbnn   =  0.439u                      $ bn overlap op + outdiffusion
 +   opdlbnf   = 'opdlbnn + 0.11u*ddlbn'
 +   oprrdwn   = -0.073u                      $ delta w
 +   oprrdwf   = 'oprrdwn + tdelpc'
 +   oprrtc1   = -1173u                       $ rs tcr1 = -1173 ppm
 +   oprrtc2   =  2.60u                       $ rs tcr2 = +2.60 ppm
 +   oprrshk   =  130                         $ self-heating parameters
 +   oprrshm   =  0.18
 +   oprrvcr   = -300u                        $ vcr = -300 ppm/v
 +   oprrma    =  5.0                         $ mis-match coefficients
 +   oprrml    =  0
 +   oprrmw    =  1.0
 +   rrnwrgw   = 300                          $ parasitic res parameters
 +   rrnwrgl   = 200
 +   rrbbrgw   =  70
 +   rrbbrgl   = 100
 +   rrsxrgw   = 300
 +   rrsxrgl   = 200
 *
 *                                              kx beol resistor
 *
 +   xkxrs     = agauss(cnr_res,mc_std,3)
 +   dkxrs     = xkxrs
 +   xkxren    = agauss(cnr_res,mc_std,3)
 +   dkxren    = xkxren
 *
 +   kxrsn     =  58.5                        $ rs, ohm/sq
 +   kxrsf     = 'kxrsn + 4.68*dkxrs'
 +   kxrenn    =  20u                         $ rend, ohm-meter
 +   kxrenf    = '1u*(exp(3.6243+0.5108*dkxren)-17.5)'
 +   kxdwn     =  0.22u                       $ delta w
 +   kxdwf     = 'kxdwn + tdelkx'
 +   kxrstc1   = -375u                        $ rs tc1 = - 375 ppm
 +   kxrstc2   =  0u                          $ rs tc2 =     0 ppm
 +   kxrntc    =  2500u                       $ ren tc = +2500 ppm
 +   kxshk     =  100                         $ self-heating parameters
 +   kxshm     =  0.25
 +   kxma      =  0.6                         $ mis-match coefficients
 +   kxml      =  0.387
 +   kxmw      =  0.5
 +   kxms      =  0
 *
 *                                              l1 beol resistor
 *
 +   xl1rs     = agauss(cnr_res,mc_std,3)
 +   dl1rs     = xl1rs
 +   xl1ren    = agauss(cnr_res,mc_std,3)
 +   dl1ren    = xl1ren
 *
 +   l1rsn     =  60                          $ rs, ohm/sq
 +   l1rsf     = 'l1rsn + 4.8*dl1rs'
 +   l1renn    =  3.6243                      $ rend exponent, ohm-meter
 +   l1renf    = 'l1renn + 0.5108*dl1ren'
 +   l1dwn     =  0.22u                       $ delta w
 +   l1dwf     = 'l1dwn + tdell1'
 *
 *                                              nfet
 *
 +   xnu0      = agauss(0,mc_std,3)
 +   dnu0      = xnu0
 +   xncgov    = agauss('-cnr_n',mc_std,3)
 +   dncgov    = xncgov
 +   xncj      = agauss('-cnr_n',mc_std,3)
 +   dncj      = xncj
 +   xncjsw    = agauss('-cnr_n',mc_std,3)
 +   dncjsw    = xncjsw
 +   xncjsg    = agauss('-cnr_n',mc_std,3)
 +   dncjsg    = xncjsg
 +   xnrdsw    = agauss('-cnr_n*(1-fixcnr)',mc_std,3)
 +   dnrdsw    = xnrdsw
 +   xnoi_n    = agauss('-cnr_noin',mc_std,3)
 +   dnoi_n    = xnoi_n
 *
 *                                            $ fixed corner adders
 +   cvth_n    = 'fixcnr * skewfix(0.113,0.0793,0.1512,cnr_n)'
 +   cpvt_n    = 'fixcnr * skewfix(0,-0.0007865,0.0008827,cnr_n)'
 +   cxl_n     = 'fixcnr * skewfix(2.8e-8,3.35e-8,2.25e-8,cnr_n)'
 +   clpc_n    = 'fixcnr * skewfix(2.8e-8,3.35e-8,2.25e-8,cnr_pc)'
 +   cxw_n     = 'fixcnr * skewfix(1.0e-8,-1.0e-8,3e-8,cnr_n)'
 +   cwrx_n    = 'fixcnr * skewfix(1.0e-8,-1.0e-8,3e-8,cnr_rx)'
 +   cu0_n     = 'fixcnr * skewfix(440,453.2,387.2,cnr_n)'
 +   crds_n    = 'fixcnr * skewfix(55,52.525,57.475,cnr_n)'
 *
 *                                            $ gate oxide thickness (meter)
 +   toxe_n    = '3.03n + 0.2n*dthnox'
 +   toxp_n    = '2.70n + 0.15n*dthnox'
 *                                            $ base threshold voltage (v)
 +   vtol_n    = '0.036*(vmtx_n*mc_gl_f - cnr_n*(1-fixcnr))'
 +   vth0_n    = '0.113 + vtol_n + cvth_n'
 +   pvth0_n   = '0 + cpvt_n'
 +   lint_n    = '0.014u + cxl_n + clpc_n'    $ delta l (one side)
 +   ltol_n    = -0.0055u
 +   xlint_n   = 'lmtx_n*mc_gl_f - cnr_pc*(1-fixcnr)'
 +   wint_n    = '5n + cxw_n + cwrx_n'        $ delta w (one side)
 +   wtol_n    = -0.02u
 +   xwint_n   = 'dnwint*mc_gl_f - cnr_rx*(1-fixcnr)'
 +   xu0_n     = 'dnu0*mc_gl_f + cnr_n*(1-fixcnr)'
 +   u0_n      = '440 + 100*xu0_n + cu0_n'    $ base mobility (cm**2/vsec)
 +   rdsw_n    = '55.0 + 13*dnrdsw + crds_n'  $ base series res (ohm-um)
 +   cgsl_n    = '330p + 45p*dncgov'          $ g/s overlap cap at 0v (f/meter)
 +   cgdl_n    = '330p + 45p*dncgov'          $ g/d overlap cap at 0v (f/meter)
 +   cgso_n    = 0                            $ g/s overlap cap offset (f/meter)
 +   cgdo_n    = 0                            $ g/d overlap cap offset (f/meter)
 +   rsh_n     = pcrsi                        $ s/d sheet resistance (ohms/sq)
 +   js_n      = 0.107u                       $ n+ area sat cur (a/meter**2)
 +   jsw_n     = 73f                          $ n+ sidewall sat cur (a/meter)
 +   n_n       = 1.017                        $ ideality
 +   cj_n      = '1.05m + 0.20m*dncj'         $ n+ diode cap (f/meter**2)
 +   pb_n      = 0.72                         $ voltage dependence
 +   mj_n      = 0.35
 +   cjsw_n    = '50p + 17.5p*dncjsw'         $ n+ sti sidewall cap (f/meter)
 +   pbsw_n    = 1.0                          $ voltage dependence
 +   mjsw_n    = 0.01
 +   cjsg_n    = '380p + 76p*dncjsg'          $ n+ gate sidewall cap (f/meter)
 +   pbsg_n    = 1.128                        $ voltage dependence
 +   mjsg_n    = 0.639
 +   cta_n     = 1.0m                         $ temperature parameters
 +   pta_n     = 1.5m
 +   ctp_n     = 1.4m
 +   ptp_n     = 0
 +   bd_n      = 10.5
 +   lk1a_n    = 0.81m                        $ diode leakage parameters
 +   lk3a_n    = 32u
 +   lk1p_n    = 0.8n
 +   lk3p_n    = 0
 *
 *                                              pfet
 *
 +   xpu0      = agauss(0,mc_std,3)
 +   dpu0      = xpu0
 +   xpcgov    = agauss('-cnr_p',mc_std,3)
 +   dpcgov    = xpcgov
 +   xpcj      = agauss('-cnr_p',mc_std,3)
 +   dpcj      = xpcj
 +   xpcjsw    = agauss('-cnr_p',mc_std,3)
 +   dpcjsw    = xpcjsw
 +   xpcjsg    = agauss('-cnr_p',mc_std,3)
 +   dpcjsg    = xpcjsg
 +   xprdsw    = agauss('-cnr_p*(1-fixcnr)',mc_std,3)
 +   dprdsw    = xprdsw
 +   xnoi_p    = agauss('-cnr_noip',mc_std,3)
 +   dnoi_p    = xnoi_p
 *
 *                                            $ fixed corner adders
 +   cvth_p    = 'fixcnr * skewfix(-0.236,-0.1915,-0.2735,cnr_p)'
 +   cpvt_p    = 'fixcnr * skewfix(0,0.0004927,-0.0003915,cnr_p)'
 +   cxl_p     = 'fixcnr * skewfix(2.8e-8,3.35e-8,2.25e-8,cnr_p)'
 +   clpc_p    = 'fixcnr * skewfix(2.8e-8,3.35e-8,2.25e-8,cnr_pc)'
 +   cxw_p     = 'fixcnr * skewfix(-2.0e-8,-4.0e-8,0e-8,cnr_p)'
 +   cwrx_p    = 'fixcnr * skewfix(-2.0e-8,-4.0e-8,0e-8,cnr_rx)'
 +   cu0_p     = 'fixcnr * skewfix(94,96.82,82.72,cnr_p)'
 +   crds_p    = 'fixcnr * skewfix(110,96.14,126.5,cnr_p)'
 *
 *                                            $ gate oxide thickness (meter)
 +   toxe_p    = '3.23n + 0.2n*dthnox'
 +   toxp_p    = '2.674n + 0.15n*dthnox'
 *                                            $ base threshold voltage (v)
 +   vtol_p    = '0.036*(vmtx_p*mc_gl_f + cnr_p*(1-fixcnr))'
 +   vth0_p    = '-0.236 + vtol_p + cvth_p'
 +   pvth0_p   = '0 + cpvt_p'
 +   lint_p    = '0.014u + cxl_p + clpc_p'    $ delta l (one side)
 +   ltol_p    = -0.0055u
 +   xlint_p   = 'lmtx_p*mc_gl_f - cnr_pc*(1-fixcnr)'
 +   wint_p    = '0.02u + cxw_p + cwrx_p'     $ delta w (one side)
 +   wtol_p    = -0.02u
 +   xwint_p   = 'dpwint*mc_gl_f - cnr_rx*(1-fixcnr)'
 +   xu0_p     = 'dpu0*mc_gl_f + cnr_p*(1-fixcnr)'
 +   u0_p      = '94 + 16*xu0_p + cu0_p'      $ base mobility (cm**2/vsec)
 +   rdsw_p    = '110 + 16.5*dprdsw + crds_p' $ base series res (ohm-um)
 +   cgsl_p    = '300p + 45p*dpcgov'          $ g/s overlap cap at 0v (f/meter)
 +   cgdl_p    = '300p + 45p*dpcgov'          $ g/d overlap cap at 0v (f/meter)
 +   cgso_p    = 17p                          $ g/s overlap cap offset (f/meter)
 +   cgdo_p    = 17p                          $ g/d overlap cap offset (f/meter)
 +   rsh_p     = pcrsi                        $ s/d sheet resistance (ohms/sq)
 +   js_p      = 90n                          $ p+ area sat cur (a/meter**2)
 +   jsw_p     = 27f                          $ p+ sidewall sat cur (a/meter)
 +   n_p       = 1.006                        $ ideality
 +   cj_p      = '1.05m + 0.20m*dpcj'         $ p+ diode cap (f/meter**2)
 +   pb_p      = 0.66                         $ voltage dependence
 +   mj_p      = 0.41
 +   cjsw_p    = '50p + 17.5p*dpcjsw'         $ p+ sti sidewall cap (f/meter)
 +   pbsw_p    = 1.0                          $ voltage dependence
 +   mjsw_p    = 0.01
 +   cjsg_p    = '415p + 83p*dpcjsg'          $ p+ gate sidewall cap (f/meter)
 +   pbsg_p    = 1.16                         $ voltage dependence
 +   mjsg_p    = 0.574
 +   cta_p     = 1.0m                         $ temperature parameters
 +   pta_p     = 1.1m
 +   ctp_p     = 2.5m
 +   ptp_p     = 0
 +   bd_p      = 10.5
 +   lk1a_p    = 0.6m                         $ diode leakage parameters
 +   lk3a_p    = 20u
 +   lk1p_p    = 0.8n
 +   lk3p_p    = 5p
 *
 *                                              lpnfet
 *
 +   xlpnvsat  = agauss('cnr_lpn*(1-fixcnr)',mc_std,3)
 +   dlpnvsat  = xlpnvsat
 +   xlpnu0    = agauss(0,mc_std,3)
 +   dlpnu0    = xlpnu0
 +   xlpncgov  = agauss('-cnr_lpn',mc_std,3)
 +   dlpncgov  = xlpncgov
 +   xlpncj    = agauss('-cnr_lpn',mc_std,3)
 +   dlpncj    = xlpncj
 +   xlpncjsw  = agauss('-cnr_lpn',mc_std,3)
 +   dlpncjsw  = xlpncjsw
 +   xlpncjsg  = agauss('-cnr_lpn',mc_std,3)
 +   dlpncjsg  = xlpncjsg
 +   xnoi_lpn  = agauss('-cnr_noin',mc_std,3)
 +   dnoi_lpn  = xnoi_lpn
 *
 *                                            $ fixed corner adders
 +   cvth_lpn  = 'fixcnr * skewfix(0.5583,0.50576,0.60795,cnr_lpn)'
 +   cpvt_lpn  = 'fixcnr * skewfix(0,-0.0032837,0.0032665,cnr_lpn)'
 +   cxl_lpn   = 'fixcnr * skewfix(2.8e-8,3.65e-8,1.45e-8,cnr_lpn)'
 +   clpc_lpn  = 'fixcnr * skewfix(2.8e-8,3.35e-8,2.24e-8,cnr_pc)'
 +   cxw_lpn   = 'fixcnr * skewfix(1.0e-8,-1.0e-8,3e-8,cnr_lpn)'
 +   cwrx_lpn  = 'fixcnr * skewfix(1.0e-8,-1.0e-8,3e-8,cnr_rx)'
 +   cu0_lpn   = 'fixcnr * skewfix(440.2,453.4,387.4,cnr_lpn)'
 +   crds_lpn  = 'fixcnr * skewfix(45,30.38,72,cnr_lpn)'
 *
 *                                            $ gate oxide thickness (meter)
 +   toxe_lpn  = '3.03n + 0.2n*dthnox'
 +   toxp_lpn  = '2.637n + 0.15n*dthnox'
 *                                            $ base threshold voltage (v)
 +   vtol_lpn  = '0.075*(dlpnvth0*mc_gl_f - cnr_lpn*(1-fixcnr))'
 +   vth0_lpn  = '0.5583 + vtol_lpn + cvth_lpn'
 +   pvth0_lpn = '0 + cpvt_lpn'
 +   vsat_lpn  = '1.080e5 + 1.045e4*dlpnvsat' $ saturation velocity (m/sec)
 +   lint_lpn  = '0.014u + cxl_lpn + clpc_lpn'  $ delta l (one side)
 +   ltol_lpn  = -0.0055u
 +   xlint_lpn = 'lmtx_lpn*mc_gl_f - cnr_pc*(1-fixcnr)'
 +   wint_lpn  = '0.005u + cxw_lpn + cwrx_lpn'  $ delta w (one side)
 +   wtol_lpn  = -0.02u
 +   xwint_lpn = 'dlpnwint*mc_gl_f - cnr_rx*(1-fixcnr)'
 +   xu0_lpn   = 'dlpnu0*mc_gl_f + cnr_lpn*(1-fixcnr)'
 +   u0_lpn    = '440.2 + 110*xu0_lpn + cu0_lpn'  $ base mobility (cm**2/vsec)
 +   rdsw_lpn  = '45 + 15*dnrdsw + crds_lpn'  $ base series res (ohm-um)
 +   cgsl_lpn  = '330p + 45p*dlpncgov'        $ g/s overlap cap at 0v (f/meter)
 +   cgdl_lpn  = '330p + 45p*dlpncgov'        $ g/d overlap cap at 0v (f/meter)
 +   cgso_lpn  = 0                            $ g/s overlap cap offset (f/meter)
 +   cgdo_lpn  = 0                            $ g/d overlap cap offset (f/meter)
 +   rsh_lpn   = pcrsi                        $ s/d sheet resistance (ohms/sq)
 +   js_lpn    = 0.107u                       $ n+ area sat cur (a/meter**2)
 +   jsw_lpn   = 73f                          $ n+ sidewall sat cur (a/meter)
 +   n_lpn     = 1.017                        $ ideality
 +   cj_lpn    = '1.15m + 0.23m*dlpncj'       $ n+ diode cap (f/meter**2)
 +   pb_lpn    = 0.72                         $ voltage dependence
 +   mj_lpn    = 0.35
 +   cjsw_lpn  = '50p + 17.5p*dlpncjsw'       $ n+ sti sidewall cap (f/meter)
 +   pbsw_lpn  = 1.0                          $ voltage dependence
 +   mjsw_lpn  = 0.01
 +   cjsg_lpn  = '441p + 88p*dlpncjsg'        $ n+ gate sidewall cap (f/meter)
 +   pbsg_lpn  = 1.128                        $ voltage dependence
 +   mjsg_lpn  = 0.639
 *
 *                                              lppfet
 *
 +   xlppu0    = agauss(0,mc_std,3)
 +   dlppu0    = xlppu0
 +   xlppcgov  = agauss('-cnr_lpp',mc_std,3)
 +   dlppcgov  = xlppcgov
 +   xlppcj    = agauss('-cnr_lpp',mc_std,3)
 +   dlppcj    = xlppcj
 +   xlppcjsw  = agauss('-cnr_lpp',mc_std,3)
 +   dlppcjsw  = xlppcjsw
 +   xlppcjsg  = agauss('-cnr_lpp',mc_std,3)
 +   dlppcjsg  = xlppcjsg
 +   xnoi_lpp  = agauss('-cnr_noip',mc_std,3)
 +   dnoi_lpp  = xnoi_lpp
 *
 *                                            $ fixed corner adders
 +   cvth_lpp  = 'fixcnr * skewfix(-0.4577,-0.3349,-0.5795,cnr_lpp)'
 +   cpvt_lpp  = 'fixcnr * skewfix(-0.00295,0.00098,-0.00716,cnr_lpp)'
 +   cxl_lpp   = 'fixcnr * skewfix(2.8e-8,2.85e-8,1.95e-8,cnr_lpp)'
 +   clpc_lpp  = 'fixcnr * skewfix(2.8e-8,3.35e-8,2.25e-8,cnr_pc)'
 +   cxw_lpp   = 'fixcnr * skewfix(-2.0e-8,-4.0e-8,0e-8,cnr_lpp)'
 +   cwrx_lpp  = 'fixcnr * skewfix(-2.0e-8,-4.0e-8,0e-8,cnr_rx)'
 +   cu0_lpp   = 'fixcnr * skewfix(114.8,128.58,101.02,cnr_lpp)'
 +   crds_lpp  = 'fixcnr * skewfix(162,154.7,259.2,cnr_lpp)'
 *
 *                                            $ gate oxide thickness (meter)
 +   toxe_lpp   = '3.23n + 0.2n*dthnox'
 +   toxp_lpp   = '2.864n + 0.15n*dthnox'
 *                                            $ base threshold voltage (v)
 +   vtol_lpp  = '0.095*(dlppvth0*mc_gl_f + cnr_lpp*(1-fixcnr))'
 +   vth0_lpp  = '-0.4577 + vtol_lpp + cvth_lpp'
 +   pvth0_lpp = '-0.00295 + cpvt_lpp'
 +   lint_lpp  = '0.014u + cxl_lpp + clpc_lpp'  $ delta l (one side)
 +   ltol_lpp  = -0.0055u
 +   xlint_lpp = 'lmtx_lpp*mc_gl_f - cnr_pc*(1-fixcnr)'
 +   wint_lpp  = '0.02u + cxw_lpp + cwrx_lpp'   $ delta w (one side)
 +   wtol_lpp  = -0.02u
 +   xwint_lpp = 'dlppwint*mc_gl_f - cnr_rx*(1-fixcnr)'
 +   xu0_lpp   = 'dlppu0*mc_gl_f + cnr_lpp*(1-fixcnr)'
 +   u0_lpp    = '114.8 + 56*xu0_lpp + cu0_lpp'  $ base mobility (cm**2/vsec)
 +   rdsw_lpp  = '162 + 32*dprdsw + crds_lpp' $ base series res (ohm-um)
 +   cgsl_lpp  = '310p + 45p*dlppcgov'        $ g/s overlap cap at 0v (f/meter)
 +   cgdl_lpp  = '310p + 45p*dlppcgov'        $ g/d overlap cap at 0v (f/meter)
 +   cgso_lpp  = 0                            $ g/s overlap cap offset (f/meter)
 +   cgdo_lpp  = 0                            $ g/d overlap cap offset (f/meter)
 +   rsh_lpp   = pcrsi                        $ s/d sheet resistance (ohms/sq)
 +   js_lpp    = 90n                          $ p+ area sat cur (a/meter**2)
 +   jsw_lpp   = 27f                          $ p+ sidewall sat cur (a/meter)
 +   n_lpp     = 1.006                        $ ideality
 +   cj_lpp    = '1.25m + 0.25m*dlppcj'       $ p+ diode cap (f/meter**2)
 +   pb_lpp    = 0.65                         $ voltage dependence
 +   mj_lpp    = 0.41
 +   cjsw_lpp  = '50p + 17.5p*dlppcjsw'       $ p+ sti sidewall cap (f/meter)
 +   pbsw_lpp  = 1.0                          $ voltage dependence
 +   mjsw_lpp  = 0.01
 +   cjsg_lpp  = '494p + 99p*dlppcjsg'        $ p+ gate sidewall cap (f/meter)
 +   pbsg_lpp  = 1.16                         $ voltage dependence
 +   mjsg_lpp  = 0.574
 *
 *                                              lvt nfet
 *
 +   xlvnu0    = agauss(0,mc_std,3)
 +   dlvnu0    = xlvnu0
 +   xlvncgov  = agauss('-cnr_lvn',mc_std,3)
 +   dlvncgov  = xlvncgov
 +   xlvncj    = agauss('-cnr_lvn',mc_std,3)
 +   dlvncj    = xlvncj
 +   xlvncjsw  = agauss('-cnr_lvn',mc_std,3)
 +   dlvncjsw  = xlvncjsw
 +   xlvncjsg  = agauss('-cnr_lvn',mc_std,3)
 +   dlvncjsg  = xlvncjsg
 +   xnoi_lvn  = agauss('-cnr_noin',mc_std,3)
 +   dnoi_lvn  = xnoi_lvn
 *
 *                                            $ fixed corner adders
 +   cvth_lvn  = 'fixcnr * skewfix(0.06417,0.000763,0.1354,cnr_lvn)'
 +   cpvt_lvn  = 'fixcnr * skewfix(0,-0.001551,-0.0003284,cnr_lvn)'
 +   cxl_lvn   = 'fixcnr * skewfix(2.8e-8,3.0e-8,2.25e-8,cnr_lvn)'
 +   clpc_lvn  = 'fixcnr * skewfix(2.8e-8,3.35e-8,2.25e-8,cnr_pc)'
 +   cxw_lvn   = 'fixcnr * skewfix(1.0e-8,-1.0e-8,3e-8,cnr_lvn)'
 +   cwrx_lvn  = 'fixcnr * skewfix(1.0e-8,-1.0e-8,3e-8,cnr_rx)'
 +   cu0_lvn   = 'fixcnr * skewfix(499,514,481.4,cnr_lvn)'
 +   crds_lvn  = 'fixcnr * skewfix(55,52.525,57.475,cnr_lvn)'
 *
 *                                            $ gate oxide thickness (meter)
 +   toxe_lvn  = '3.03n + 0.2n*dthnox'
 +   toxp_lvn  = '2.70n + 0.15n*dthnox'
 *                                            $ base threshold voltage (v)
 +   vtol_lvn  = '0.045*(vmtx_lvn*mc_gl_f - cnr_lvn*(1-fixcnr))'
 +   vth0_lvn  = '0.06417 + vtol_lvn + cvth_lvn'
 +   pvth0_lvn = '0 + cpvt_lvn'
 +   lint_lvn  = '0.014u + cxl_lvn + clpc_lvn'  $ delta l (one side)
 +   ltol_lvn  = -0.0055u
 +   xlint_lvn = 'lmtx_lvn*mc_gl_f - cnr_pc*(1-fixcnr)'
 +   wint_lvn  = '0.005u + cxw_lvn + cwrx_lvn'  $ delta w (one side)
 +   wtol_lvn  = -0.02u
 +   xwint_lvn = 'dlvnwint*mc_gl_f - cnr_rx*(1-fixcnr)'
 +   xu0_lvn   = 'dlvnu0*mc_gl_f + cnr_lvn*(1-fixcnr)'
 +   u0_lvn    = '499 - 150*xu0_lvn + cu0_lvn'   $ base mobility (cm**2/vsec)
 +   rdsw_lvn  = '55 + 11*dnrdsw + crds_lvn'  $ base series res (ohm-um)
 +   cgsl_lvn  = '340p + 45p*dlvncgov'        $ g/s overlap cap at 0v (f/meter)
 +   cgdl_lvn  = '340p + 45p*dlvncgov'        $ g/d overlap cap at 0v (f/meter)
 +   cgso_lvn  = 0                            $ g/s overlap cap offset (f/meter)
 +   cgdo_lvn  = 0                            $ g/d overlap cap offset (f/meter)
 +   rsh_lvn   = pcrsi                        $ s/d sheet resistance (ohms/sq)
 +   js_lvn    = 0.107u                       $ n+ area sat cur (a/meter**2)
 +   jsw_lvn   = 73f                          $ n+ sidewall sat cur (a/meter)
 +   n_lvn     = 1.017                        $ ideality
 +   cj_lvn    = '1.05m + 0.20m*dlvncj'       $ n+ diode cap (f/meter**2)
 +   pb_lvn    = 0.72                         $ voltage dependence
 +   mj_lvn    = 0.335
 +   cjsw_lvn  = '15p + 5.25p*dlvncjsw'       $ n+ sti sidewall cap (f/meter)
 +   pbsw_lvn  = 1.0                          $ voltage dependence
 +   mjsw_lvn  = 0.3
 +   cjsg_lvn  = '365p + 73p*dlvncjsg'        $ n+ gate sidewall cap (f/meter)
 +   pbsg_lvn  = 1.128                        $ voltage dependence
 +   mjsg_lvn  = 0.67
 *
 *                                              lvt pfet
 *
 +   xlvpu0    = agauss(0,mc_std,3)
 +   dlvpu0    = xlvpu0
 +   xlvpcgov  = agauss('-cnr_lvp',mc_std,3)
 +   dlvpcgov  = xlvpcgov
 +   xlvpcj    = agauss('-cnr_lvp',mc_std,3)
 +   dlvpcj    = xlvpcj
 +   xlvpcjsw  = agauss('-cnr_lvp',mc_std,3)
 +   dlvpcjsw  = xlvpcjsw
 +   xlvpcjsg  = agauss('-cnr_lvp',mc_std,3)
 +   dlvpcjsg  = xlvpcjsg
 +   xnoi_lvp  = agauss('-cnr_noip',mc_std,3)
 +   dnoi_lvp  = xnoi_lvp
 *
 *                                            $ fixed corner adders
 +   cvth_lvp  = 'fixcnr * skewfix(-0.082,-0.03094,-0.1274,cnr_lvp)'
 +   cpvt_lvp  = 'fixcnr * skewfix(0,-0.004973,-0.005969,cnr_lvp)'
 +   cxl_lvp   = 'fixcnr * skewfix(2.8e-8,3.0e-8,2.25e-8,cnr_lvp)'
 +   clpc_lvp  = 'fixcnr * skewfix(2.8e-8,3.35e-8,2.25e-8,cnr_pc)'
 +   cxw_lvp   = 'fixcnr * skewfix(-2.0e-8,-4.0e-8,0e-8,cnr_lvp)'
 +   cwrx_lvp  = 'fixcnr * skewfix(-2.0e-8,-4.0e-8,0e-8,cnr_rx)'
 +   cu0_lvp   = 'fixcnr * skewfix(97.3,100.2,94.38,cnr_lvp)'
 +   crds_lvp  = 'fixcnr * skewfix(110,105.05,114.95,cnr_lvp)'
 *
 *                                            $ gate oxide thickness (meter)
 +   toxe_lvp  = '3.23n + 0.2n*dthnox'
 +   toxp_lvp  = '2.70n + 0.15n*dthnox'
 *                                            $ base threshold voltage (v)
 +   vtol_lvp  = '0.042*(vmtx_lvp*mc_gl_f + cnr_lvp*(1-fixcnr))'
 +   vth0_lvp  = '-0.082 + vtol_lvp + cvth_lvp'
 +   pvth0_lvp = '0 + cpvt_lvp'
 +   lint_lvp  = '0.014u + cxl_lvp + clpc_lvp'  $ delta l (one side)
 +   ltol_lvp  = -0.0055u
 +   xlint_lvp = 'lmtx_lvp*mc_gl_f - cnr_pc*(1-fixcnr)'
 +   wint_lvp  = '0.02u + cxw_lvp + cwrx_lvp'   $ delta w (one side)
 +   wtol_lvp  = -0.02u
 +   xwint_lvp = 'dlvpwint*mc_gl_f - cnr_rx*(1-fixcnr)'
 +   xu0_lvp   = 'dlvpu0*mc_gl_f + cnr_lvp*(1-fixcnr)'
 +   u0_lvp    = '97.3 - 12*xu0_lvp + cu0_lvp'   $ base mobility (cm**2/vsec)
 +   rdsw_lvp  = '110 + 13*dprdsw + crds_lvp' $ base series res (ohm-um)
 +   cgsl_lvp  = '340p + 45p*dlvpcgov'        $ g/s overlap cap at 0v (f/meter)
 +   cgdl_lvp  = '340p + 45p*dlvpcgov'        $ g/d overlap cap at 0v (f/meter)
 +   cgso_lvp  = 0                            $ g/s overlap cap offset (f/meter)
 +   cgdo_lvp  = 0                            $ g/d overlap cap offset (f/meter)
 +   rsh_lvp   = pcrsi                        $ s/d sheet resistance (ohms/sq)
 +   js_lvp    = 90n                          $ p+ area sat cur (a/meter**2)
 +   jsw_lvp   = 27f                          $ p+ sidewall sat cur (a/meter)
 +   n_lvp     = 1.006                        $ ideality
 +   cj_lvp    = '1.05m + 0.20m*dlvpcj'       $ p+ diode cap (f/meter**2)
 +   pb_lvp    = 0.8                          $ voltage dependence
 +   mj_lvp    = 0.4
 +   cjsw_lvp  = '8p + 2.8p*dlvpcjsw'         $ p+ sti sidewall cap (f/meter)
 +   pbsw_lvp  = 1.0                          $ voltage dependence
 +   mjsw_lvp  = 0.1
 +   cjsg_lvp  = '430p + 86p*dlvpcjsg'        $ p+ gate sidewall cap (f/meter)
 +   pbsg_lvp  = 1.16                         $ voltage dependence
 +   mjsg_lvp  = 0.65
 *
 *                                              2.5v dgnfet
 *
 +   xdgnvsat  = agauss('cnr_dgn*(1-fixcnr)',mc_std,3)
 +   ddgnvsat  = xdgnvsat
 +   xdgnu0    = agauss(0,mc_std,3)
 +   ddgnu0    = xdgnu0
 +   xdgncgov  = agauss('-cnr_dgn',mc_std,3)
 +   ddgncgov  = xdgncgov
 +   xdgncj    = agauss('-cnr_dgn',mc_std,3)
 +   ddgncj    = xdgncj
 +   xdgncjsw  = agauss('-cnr_dgn',mc_std,3)
 +   ddgncjsw  = xdgncjsw
 +   xdgncjsg  = agauss('-cnr_dgn',mc_std,3)
 +   ddgncjsg  = xdgncjsg
 +   xnoi_dgn  = agauss('-cnr_noin',mc_std,3)
 +   dnoi_dgn  = xnoi_dgn
 *
 *                                            $ fixed corner adders
 +   cvth_dgn  = 'fixcnr * skewfix(0.461,0.3909,0.5371,cnr_dgn)'
 +   cxl_dgn   = 'fixcnr * skewfix(2.8e-8,3.75e-8,1.75e-8,cnr_dgn)'
 +   clpc_dgn  = 'fixcnr * skewfix(2.8e-8,3.59e-8,1.99e-8,cnr_pc)'
 +   cxw_dgn   = 'fixcnr * skewfix(0e-8,-1.5e-8,1.5e-8,cnr_dgn)'
 +   cwrx_dgn  = 'fixcnr * skewfix(0e-8,-1.5e-8,1.5e-8,cnr_rx)'
 +   cu0_dgn   = 'fixcnr * skewfix(426,477.1,374.9,cnr_dgn)'
 +   crds_dgn  = 'fixcnr * skewfix(105,42,168,cnr_dgn)'
 *
 *                                            $ gate oxide thickness (meter)
 +   toxe_dgn  = '5.9n + 0.40n*dthkox'
 +   toxp_dgn  = '5.65n + 0.40n*dthkox'
 *                                            $ base threshold voltage (v)
 +   vtol_dgn  = '0.06*(ddgnvth0*mc_gl_f - cnr_dgn*(1-fixcnr))'
 +   vth0_dgn  = '0.461 + vtol_dgn + cvth_dgn'
 +   pvth0_dgn =  0
 +   vsat_dgn  = '7.7e4 + 1.54e4*ddgnvsat'    $ saturation velocity (m/sec)
 +   lint_dgn  = '0.014u + cxl_dgn + clpc_dgn'  $ delta l (one side)
 +   ltol_dgn  = -0.008u
 +   xlint_dgn = 'lmtx_dgn*mc_gl_f - cnr_pc*(1-fixcnr)'
 +   wint_dgn  = '0.0u + cxw_dgn + cwrx_dgn'    $ delta w (one side)
 +   wtol_dgn  = -0.015u
 +   xwint_dgn = 'ddgnwint*mc_gl_f - cnr_rx*(1-fixcnr)'
 +   xu0_dgn   = 'ddgnu0*mc_gl_f + cnr_dgn*(1-fixcnr)'
 +   u0_dgn    = '426 + 85*xu0_dgn + cu0_dgn' $ base mobility (cm**2/vsec)
 +   rdsw_dgn  = '105 + 21*dnrdsw + crds_dgn' $ base series res (ohm-um)
 +   cgsl_dgn  = '315p + 45p*ddgncgov'        $ g/s overlap cap at 0v (f/meter)
 +   cgdl_dgn  = '315p + 45p*ddgncgov'        $ g/d overlap cap at 0v (f/meter)
 +   cgso_dgn  = 0                            $ g/s overlap cap offset (f/meter)
 +   cgdo_dgn  = 0                            $ g/d overlap cap offset (f/meter)
 +   rsh_dgn   = pcrsi                        $ s/d sheet resistance (ohms/sq)
 +   js_dgn    = 4.0u                         $ n+ area sat cur (a/meter**2)
 +   jsw_dgn   = 4.0p                         $ n+ sti sidewall sat cur (a/meter)
 +   n_dgn     = 1.114                        $ ideality
 +   cj_dgn    = '1.0m + 0.20m*ddgncj'        $ n+ diode cap (f/meter**2)
 +   pb_dgn    = 0.752                        $ voltage dependence
 +   mj_dgn    = 0.34
 +   cjsw_dgn  = '28.56p + 10p*ddgncjsw'      $ n+ sti sidewall cap (f/meter)
 +   pbsw_dgn  = 0.163                        $ voltage dependence
 +   mjsw_dgn  = 0.599
 +   cjsg_dgn  = '195p + 39p*ddgncjsg'        $ n+ gate sidewall cap (f/meter)
 +   pbsg_dgn  = 1.8                          $ voltage dependence
 +   mjsg_dgn  = 0.75
 *
 *                                              2.5v dgpfet
 *
 +   xdgpu0    = agauss(0,mc_std,3)
 +   ddgpu0    = xdgpu0
 +   xdgpcgov  = agauss('-cnr_dgp',mc_std,3)
 +   ddgpcgov  = xdgpcgov
 +   xdgpcj    = agauss('-cnr_dgp',mc_std,3)
 +   ddgpcj    = xdgpcj
 +   xdgpcjsw  = agauss('-cnr_dgp',mc_std,3)
 +   ddgpcjsw  = xdgpcjsw
 +   xdgpcjsg  = agauss('-cnr_dgp',mc_std,3)
 +   ddgpcjsg  = xdgpcjsg
 +   xnoi_dgp  = agauss('-cnr_noip',mc_std,3)
 +   dnoi_dgp  = xnoi_dgp
 *
 *                                            $ fixed corner adders
 +   cvth_dgp  = 'fixcnr * skewfix(-0.4365,-0.3548,-0.4920,cnr_dgp)'
 +   cxl_dgp   = 'fixcnr * skewfix(2.8e-8,3.75e-8,1.75e-8,cnr_dgp)'
 +   clpc_dgp  = 'fixcnr * skewfix(2.8e-8,3.59e-8,1.99e-8,cnr_pc)'
 +   cxw_dgp   = 'fixcnr * skewfix(2e-8,0.5e-8,3.5e-8,cnr_dgp)'
 +   cwrx_dgp  = 'fixcnr * skewfix(2e-8,0.5e-8,3.5e-8,cnr_rx)'
 +   cu0_dgp   = 'fixcnr * skewfix(168,188.2,147.8,cnr_dgp)'
 +   crds_dgp  = 'fixcnr * skewfix(200,80,320,cnr_dgp)'
 *
 *                                            $ gate oxide thickness (meter)
 *                                            $ gate oxide thickness (meter)
 +   toxe_dgp  = '6.15n + 0.40n*dthkox'
 +   toxp_dgp  = '5.7n + 0.40n*dthkox'
 *                                            $ base threshold voltage (v)
 +   vtol_dgp  = '0.05*(ddgpvth0*mc_gl_f + cnr_dgp*(1-fixcnr))'
 +   vth0_dgp  = '-0.4365 + vtol_dgp + cvth_dgp'
 +   pvth0_dgp =  0
 +   lint_dgp  = '0.014u + cxl_dgp + clpc_dgp'  $ delta l (one side)
 +   ltol_dgp  = -0.008u
 +   xlint_dgp = 'lmtx_dgp*mc_gl_f - cnr_pc*(1-fixcnr)'
 +   wint_dgp  = '-0.01u + cxw_dgp + cwrx_dgp'  $ delta w (one side)
 +   wtol_dgp  = -0.015u
 +   xwint_dgp = 'ddgpwint*mc_gl_f - cnr_rx*(1-fixcnr)'
 +   xu0_dgp   = 'ddgpu0*mc_gl_f + cnr_dgp*(1-fixcnr)'
 +   u0_dgp    = '168 + 50*xu0_dgp + cu0_dgp' $ base mobility (cm**2/vsec)
 +   rdsw_dgp  = '200 + 76*dprdsw + crds_dgp' $ base series res (ohm-um)
 +   cgsl_dgp  = '315p + 45p*ddgpcgov'        $ g/s overlap cap at 0v (f/meter)
 +   cgdl_dgp  = '315p + 45p*ddgpcgov'        $ g/d overlap cap at 0v (f/meter)
 +   cgso_dgp  = 0                            $ g/s overlap cap offset (f/meter)
 +   cgdo_dgp  = 0                            $ g/d overlap cap offset (f/meter)
 +   rsh_dgp   = pcrsi                        $ s/d sheet resistance (ohms/sq)
 +   js_dgp    = 12u                          $ p+ area sat cur (a/meter**2)
 +   jsw_dgp   = 960f                         $ p+ sidewall sat cur (a/meter)
 +   n_dgp     = 1.1                          $ ideality
 +   cj_dgp    = '1.0m + 0.20m*ddgpcj'        $ p+ diode cap (f/meter**2)
 +   pb_dgp    = 0.556                        $ voltage dependence
 +   mj_dgp    = 0.31
 +   cjsw_dgp  = '45p + 15.8p*ddgpcjsw'       $ p+ sti sidewall cap (f/meter)
 +   pbsw_dgp  = 1.0                          $ voltage dependence
 +   mjsw_dgp  = 0.001
 +   cjsg_dgp  = '300p + 60p*ddgpcjsg'        $ p+ gate sidewall cap (f/meter)
 +   pbsg_dgp  = 1.16                         $ voltage dependence
 +   mjsg_dgp  = 0.75
 *
 *                                              3.3v dgnfet
 *
 +   xn33vsat  = agauss('cnr_n33*(1-fixcnr)',mc_std,3)
 +   dn33vsat  = xn33vsat
 +   xn33u0    = agauss(0,mc_std,3)
 +   dn33u0    = xn33u0
 +   xn33cgov  = agauss('-cnr_n33',mc_std,3)
 +   dn33cgov  = xn33cgov
 +   xn33cj    = agauss('-cnr_n33',mc_std,3)
 +   dn33cj    = xn33cj
 +   xn33cjsw  = agauss('-cnr_n33',mc_std,3)
 +   dn33cjsw  = xn33cjsw
 +   xn33cjsg  = agauss('-cnr_n33',mc_std,3)
 +   dn33cjsg  = xn33cjsg
 +   xnoi_n33  = agauss('-cnr_noin',mc_std,3)
 +   dnoi_n33  = xnoi_n33
 *
 *                                            $ fixed corner adders
 +   cvth_n33  = 'fixcnr * skewfix(0.4514,0.3615,0.5399,cnr_n33)'
 +   cxl_n33   = 'fixcnr * skewfix(6.5e-8,7.40e-8,5.449e-8,cnr_n33)'
 +   clpc_n33  = 'fixcnr * skewfix(6.5e-8,7.311e-8,5.693e-8,cnr_pc)'
 +   cxw_n33   = 'fixcnr * skewfix(0e-8,-1.5e-8,1.5e-8,cnr_n33)'
 +   cwrx_n33  = 'fixcnr * skewfix(0e-8,-1.5e-8,1.5e-8,cnr_rx)'
 +   cu0_n33   = 'fixcnr * skewfix(380,425.6,334.4,cnr_n33)'
 +   crds_n33  = 'fixcnr * skewfix(102,40.8,163.2,cnr_n33)'
 *
 *                                            $ gate oxide thickness (meter)
 +   toxe_n33  = '5.9n + 0.50n*dthkox'
 +   toxp_n33  = '5.6n + 0.50n*dthkox'
 *                                            $ base threshold voltage (v)
 +   vtol_n33  = '0.06*(dn33vth0*mc_gl_f - cnr_n33*(1-fixcnr))'
 +   vth0_n33  = '0.4514 + vtol_n33 + cvth_n33'
 +   pvth0_n33 =  0
 +   vsat_n33  = '7.32e4 + 7.4e2*dn33vsat'    $ saturation velocity (m/sec)
 +   lint_n33  = '0.0325u + cxl_n33 + clpc_n33'  $ delta l (one side)
 +   ltol_n33  = -0.008u
 +   xlint_n33 = 'lmtx_n33*mc_gl_f - cnr_pc*(1-fixcnr)'
 +   wint_n33  = '0.0u + cxw_n33 + cwrx_n33'     $ delta w (one side)
 +   wtol_n33  = -0.015u
 +   xwint_n33 = 'dn33wint*mc_gl_f - cnr_rx*(1-fixcnr)'
 +   xu0_n33   = 'dn33u0*mc_gl_f + cnr_n33*(1-fixcnr)'
 +   u0_n33    = '380 + 94*xu0_n33 + cu0_n33' $ base mobility (cm**2/vsec)
 +   rdsw_n33  = '102 + 20.4*dnrdsw + crds_n33'  $ base series res (ohm-um)
 +   cgsl_n33  = '425p + 60p*dn33cgov'        $ g/s overlap cap at 0v (f/meter)
 +   cgdl_n33  = '425p + 60p*dn33cgov'        $ g/d overlap cap at 0v (f/meter)
 +   cgso_n33  = 0                            $ g/s overlap cap offset (f/meter)
 +   cgdo_n33  = 0                            $ g/d overlap cap offset (f/meter)
 +   rsh_n33   = pcrsi                        $ s/d sheet resistance (ohms/sq)
 +   js_n33    = 4.0u                         $ n+ area sat cur (a/meter**2)
 +   jsw_n33   = 4.0p                         $ n+ sti sidewall sat cur (a/meter)
 +   n_n33     = 1.114                        $ ideality
 +   cj_n33    = '0.8m + 0.16m*dn33cj'        $ n+ diode cap (f/meter**2)
 +   pb_n33    = 0.752                        $ voltage dependence
 +   mj_n33    = 0.31
 +   cjsw_n33  = '28.56p + 10p*dn33cjsw'      $ n+ sti sidewall cap (f/meter)
 +   pbsw_n33  = 0.163                        $ voltage dependence
 +   mjsw_n33  = 0.599
 +   cjsg_n33  = '190p + 38p*dn33cjsg'        $ n+ gate sidewall cap (f/meter)
 +   pbsg_n33  = 1.1                          $ voltage dependence
 +   mjsg_n33  = 0.45
 *
 *                                              3.3v dgpfet
 *
 +   xp33u0    = agauss(0,mc_std,3)
 +   dp33u0    = xp33u0
 +   xp33cgov  = agauss('-cnr_p33',mc_std,3)
 +   dp33cgov  = xp33cgov
 +   xp33cj    = agauss('-cnr_p33',mc_std,3)
 +   dp33cj    = xp33cj
 +   xp33cjsw  = agauss('-cnr_p33',mc_std,3)
 +   dp33cjsw  = xp33cjsw
 +   xp33cjsg  = agauss('-cnr_p33',mc_std,3)
 +   dp33cjsg  = xp33cjsg
 +   xnoi_p33  = agauss('-cnr_noip',mc_std,3)
 +   dnoi_p33  = xnoi_p33
 *
 *                                            $ fixed corner adders
 +   cvth_p33  = 'fixcnr * skewfix(-0.4223,-0.3923,-0.4523,cnr_p33)'
 +   cxl_p33   = 'fixcnr * skewfix(1.1e-7,1.23e-7,0.97e-7,cnr_p33)'
 +   clpc_p33  = 'fixcnr * skewfix(1.1e-7,1.18e-7,1.02e-7,cnr_pc)'
 +   cxw_p33   = 'fixcnr * skewfix(2e-8,0.507e-8,3.5068e-8,cnr_p33)'
 +   cwrx_p33  = 'fixcnr * skewfix(2e-8,0.473e-8,3.4727e-8,cnr_rx)'
 +   cu0_p33   = 'fixcnr * skewfix(140,156.8,123.2,cnr_p33)'
 +   crds_p33  = 'fixcnr * skewfix(90,36,144,cnr_p33)'
 *
 *                                            $ gate oxide thickness (meter)
 +   toxe_p33  = '6.15n + 0.50n*dthkox'
 +   toxp_p33  = '5.65n + 0.50n*dthkox'
 *                                            $ base threshold voltage (v)
 +   vtol_p33  = '0.04*(dp33vth0*mc_gl_f + cnr_p33*(1-fixcnr))'
 +   vth0_p33  = '-0.4223 + vtol_p33 + cvth_p33'
 +   pvth0_p33 =  0
 +   lint_p33  = '0.055u + cxl_p33 + clpc_p33'   $ delta l (one side)
 +   ltol_p33  = -0.008u
 +   xlint_p33 = 'lmtx_p33*mc_gl_f - cnr_pc*(1-fixcnr)'
 +   wint_p33  = '-0.01u + cxw_p33 + cwrx_p33'   $ delta w (one side)
 +   wtol_p33  = -0.015u
 +   xwint_p33 = 'dp33wint*mc_gl_f - cnr_rx*(1-fixcnr)'
 +   xu0_p33   = 'dp33u0*mc_gl_f + cnr_p33*(1-fixcnr)'
 +   u0_p33    = '140 + 31*xu0_p33 + cu0_p33' $ base mobility (cm**2/vsec)
 +   rdsw_p33  = '90 + 20*dprdsw + crds_p33'  $ base series res (ohm-um)
 +   cgsl_p33  = '425p + 60p*dp33cgov'        $ g/s overlap cap at 0v (f/meter)
 +   cgdl_p33  = '425p + 60p*dp33cgov'        $ g/d overlap cap at 0v (f/meter)
 +   cgso_p33  = 0                            $ g/s overlap cap offset (f/meter)
 +   cgdo_p33  = 0                            $ g/d overlap cap offset (f/meter)
 +   rsh_p33   = pcrsi                        $ s/d sheet resistance (ohms/sq)
 +   js_p33    = 12u                          $ p+ area sat cur (a/meter**2)
 +   jsw_p33   = 960f                         $ p+ sidewall sat cur (a/meter)
 +   n_p33     = 1.1                          $ ideality
 +   cj_p33    = '0.8m + 0.16m*dp33cj'        $ p+ diode cap (f/meter**2)
 +   pb_p33    = 0.556                        $ voltage dependence
 +   mj_p33    = 0.26
 +   cjsw_p33  = '45p + 15.8p*dp33cjsw'       $ p+ sti sidewall cap (f/meter)
 +   pbsw_p33  = 1.0                          $ voltage dependence
 +   mjsw_p33  = 0.001
 +   cjsg_p33  = '155p + 31p*dp33cjsg'        $ p+ gate sidewall cap (f/meter)
 +   pbsg_p33  = 1.16                         $ voltage dependence
 +   mjsg_p33  = 0.46
 *
 *                                                   3.3v hvt nfet
 *
 +   xnhv33dl   = agauss('-cnr_nhv33',mc_std,3)    $ distributions
 +   dnhv33dl   = xnhv33dl
 +   xnhv33u0   = agauss(cnr_nhv33,mc_std,3)
 +   dnhv33u0   = xnhv33u0
 +   xnhv33cj   = agauss('-cnr_nhv33',mc_std,3)
 +   dnhv33cj   = xnhv33cj
 +   xnhv33cjsw = agauss('-cnr_nhv33',mc_std,3)
 +   dnhv33cjsw = xnhv33cjsw
 +   xnhv33cjsg = agauss('-cnr_nhv33',mc_std,3)
 +   dnhv33cjsg = xnhv33cjsg
 +   xnhv33fol1 = agauss('cnr_nhv33',mc_std,3)
 +   dnhv33fol1 = xnhv33fol1
 +   xnhv33fol2 = agauss('cnr_nhv33',mc_std,3)
 +   dnhv33fol2 = xnhv33fol2
 +   xnoi_nhv33 = agauss('-cnr_noin',mc_std,3)
 +   dnoi_nhv33 = xnoi_nhv33
 *
 +   tox_nhv33   = '5.20n + 0.50n*dthkox*(1-fixcnr) + dtoxo_nhvt33_fc'  $ gate oxide thickness (meter)
 +   vtol_nhv33  = '0.066*(dnhv33vth0*mc_gl_f - cnr_nhv33*(1-fixcnr))'
 +   vfb_nhv33   = '-0.879 + vtol_nhv33 + dvfbo_nhvt33_fc'              $ base threshold voltage (v)
 +   vfbl_nhv33  = '-0.05316 + dvfbl_nhvt33_fc'
 +   vfblw_nhv33 = '0.001 + dvfblw_nhvt33_fc'
 +   lint_nhv33  = '0.0325u + dlap_nhvt33_fc'                           $ delta l (one side)
 +   ltol_nhv33  = -0.008u
 +   xlint_nhv33 = 'lmtx_nhv33*mc_gl_f - cnr_pc*(1-fixcnr)'
 +   dl_nhv33    = '0 + 1.0e-8*dnhv33dl'
 +   lov_nhv33   = 'lint_nhv33 + 3.865e-8 + dl_nhv33 + dlov_nhvt33_fc'
 +   wint_nhv33  = '0.0u + dwot_nhvt33_fc'                              $ delta w (one side)
 +   wtol_nhv33  = -0.015u
 +   xwint_nhv33 = 'dnhv33wint*mc_gl_f - cnr_rx*(1-fixcnr)'
 +   uo_nhv33    = '0.0430 + 0.006*dnhv33u0 + duo_nhvt33_fc'            $ base mobility (m**2/vsec)
 +   rsw_nhv33   = '262 + 26.0*dnrdsw + drsw1_nhvt33_fc'                $ base series resistance (ohm-um)
 +   fol1_nhv33  = '0.2706 + 20.0m*dnhv33fol1 + dfol1_nhvt33_fc'        $ first order short channel roll-off and body effect
 +   fol2_nhv33  = '-0.01036 + 1.0m*dnhv33fol2'                         $ second order short channel roll-off and body effect
 *
 +   rsh_nhv33  = pcrsi                       $ s/d sheet resistance (ohms/sq)
 +   js_nhv33   = 4.0u                        $ n+ area sat cur (a/meter**2)
 +   jsw_nhv33  = 4.0p                        $ n+ sidewall sat cur (a/meter)
 +   n_nhv33    = 1.114                       $ ideality
 +   cj_nhv33   = '0.8m + 0.2m*dnhv33cj + dcjorbot_nhvt33_fc'    $ n+ diode cap (f/meter**2)
 +   pb_nhv33   = 0.752                       $ voltage dependence
 +   mj_nhv33   = 0.31
 +   cjsw_nhv33 = '65.0p + 16p*dnhv33cjsw + dcjorsti_nhvt33_fc'  $ n+ sti sidewall cap (f/meter)
 +   pbsw_nhv33 = 0.163                       $ voltage dependence
 +   mjsw_nhv33 = 0.05
 +   cjsg_nhv33 = '178p + 45p*dnhv33cjsg + dcjorgat_nhvt33_fc'   $ n+ gate sidewall cap (f/meter)
 +   pbsg_nhv33 = 1.1                         $ voltage dependence
 +   mjsg_nhv33 = 0.36
 *
 *                                                  3.3v hvt pfet
 *
 +   xphv33dl   = agauss('-cnr_phv33',mc_std,3)   $ distributions
 +   dphv33dl   = xphv33dl
 +   xphv33u0   = agauss(cnr_phv33,mc_std,3)
 +   dphv33u0   = xphv33u0
 +   xphv33cj   = agauss('-cnr_phv33',mc_std,3)
 +   dphv33cj   = xphv33cj
 +   xphv33cjsw = agauss('-cnr_phv33',mc_std,3)
 +   dphv33cjsw = xphv33cjsw
 +   xphv33cjsg = agauss('-cnr_phv33',mc_std,3)
 +   dphv33cjsg = xphv33cjsg
 +   xphv33fol1 = agauss('cnr_phv33',mc_std,3)
 +   dphv33fol1 = xphv33fol1
 +   xphv33fol2 = agauss('cnr_phv33',mc_std,3)
 +   dphv33fol2 = xphv33fol2
 +   xnoi_phv33 = agauss('-cnr_noip',mc_std,3)
 +   dnoi_phv33 = xnoi_phv33
 *
 +   tox_phv33   = '5.25n + 0.50n*dthkox*(1-fixcnr) + dtoxo_phvt33_fc' $ gate oxide thickness (meter)
 +   vtol_phv33  = '0.067*(dphv33vth0*mc_gl_f + cnr_phv33*(1-fixcnr))'
 +   vfb_phv33   = '-0.827 - vtol_phv33 + dvfbo_phvt33_fc'             $ base threshold voltage (v)
 +   vfbl_phv33  = '-0.02486 + dvfbl_phvt33_fc'
 +   vfblw_phv33 = '0 + dvfblw_phvt33_fc'
 +   lint_phv33  = '0.055u + dlap_phvt33_fc'                           $ delta l (one side)
 +   ltol_phv33  = -0.008u
 +   xlint_phv33 = 'lmtx_phv33*mc_gl_f - cnr_pc*(1-fixcnr)'
 +   dl_phv33    = '0 + 0.8e-8*dphv33dl'
 +   lov_phv33   = 'lint_phv33 + 1.45e-8 + dl_phv33 + dlov_phvt33_fc'
 +   wint_phv33  = '-0.01u + dwot_phvt33_fc'                           $ delta w (one side)
 +   wtol_phv33  = -0.015u
 +   xwint_phv33 = 'dphv33wint*mc_gl_f - cnr_rx*(1-fixcnr)'
 +   uo_phv33    = '0.0104 + 0.0014*dphv33u0 + duo_phvt33_fc'          $ base mobility (m**2/vsec)
 +   rsw_phv33   = '1008 + 100*dprdsw + drsw1_phvt33_fc'               $ base series resistance (ohm-um)
 +   fol1_phv33  = '0.1064 + 1.5m*dphv33fol1 + dfol1_phvt33_fc'        $ first order short channel roll-off and body effect
 +   fol2_phv33  = '0.02438 + 1.2m*dphv33fol2'                         $ second order short channel roll-off and body effect
 *
 +   rsh_phv33  = pcrsi                       $ s/d sheet resistance (ohms/sq)
 +   js_phv33   = 12u                         $ p+ area sat cur (a/meter**2)
 +   jsw_phv33  = 960f                        $ p+ sidewall sat cur (a/meter)
 +   n_phv33    = 1.1                         $ ideality
 +   cj_phv33   = '0.8m + 0.2m*dphv33cj + dcjorbot_phvt33_fc'   $ p+ diode cap (f/meter**2)
 +   pb_phv33   = 0.556                       $ voltage dependence
 +   mj_phv33   = 0.26
 +   cjsw_phv33 = '45p + 11.3p*dphv33cjsw + dcjorsti_phvt33_fc' $ p+ sti sidewall cap (f/meter)
 +   pbsw_phv33 = 0.5                         $ voltage dependence
 +   mjsw_phv33 = 0.05
 +   cjsg_phv33 = '155p + 38p*dphv33cjsg + dcjorgat_phvt33_fc'  $ p+ gate sidewall cap (f/meter)
 +   pbsg_phv33 = 1.16                        $ voltage dependence
 +   mjsg_phv33 = 0.36
 *
 *                                              zvt nfet
 *
 +   xznu0     = agauss(0,mc_std,3)
 +   dznu0     = xznu0
 +   xnoi_zn   = agauss('-cnr_noin',mc_std,3)
 +   dnoi_zn   = xnoi_zn
 *
 *                                            $ fixed corner adders
 +   cvth_zn   = 'fixcnr * skewfix(0.0065,-0.06168,0.07336,cnr_zn)'
 +   cxl_zn    = 'fixcnr * skewfix(3.0e-8,3.8e-8,2.2e-8,cnr_zn)'
 +   clpc_zn   = 'fixcnr * skewfix(3.0e-8,3.8e-8,2.2e-8,cnr_pc)'
 +   cxw_zn    = 'fixcnr * skewfix(2.5e-7,1.6e-7,3.4e-7,cnr_zn)'
 +   cwrx_zn   = 'fixcnr * skewfix(2.5e-7,1.6e-7,3.4e-7,cnr_rx)'
 +   cu0_zn    = 'fixcnr * skewfix(470,484.1,445.6,cnr_zn)'
 +   crds_zn   = 'fixcnr * skewfix(54,51.57,56.43,cnr_zn)'
 *
 *                                            $ gate oxide thickness (meter)
 +   toxe_zn   = '3.03n + 0.2n*dthnox'
 +   toxp_zn   = '2.65n + 0.15n*dthnox'
 *                                            $ base threshold voltage (v)
 +   vtol_zn   = '0.055*(dznvth0*mc_gl_f - cnr_zn*(1-fixcnr))'
 +   vth0_zn   = '0.0065 + vtol_zn + cvth_zn'
 +   pvth0_zn  =  0
 +   lint_zn   = '0.015u + cxl_zn + clpc_zn'  $ delta l (one side)
 +   ltol_zn   = -0.008u
 +   xlint_zn  = 'lmtx_zn*mc_gl_f - cnr_pc*(1-fixcnr)'
 +   wint_zn   = '0.125u + cxw_zn + cwrx_zn'  $ delta w (one side)
 +   wtol_zn   = -0.09u
 +   xwint_zn  = 'dznwint*mc_gl_f - cnr_rx*(1-fixcnr)'
 +   xu0_zn    = 'dznu0*mc_gl_f + cnr_zn*(1-fixcnr)'
 +   u0_zn     = '470 - 115*xu0_zn + cu0_zn'  $ base mobility (cm**2/vsec)
 +   rdsw_zn   = '54 + 10*dnrdsw + crds_zn'   $ base series res (ohm-um)
 +   cgsl_zn   = '435p + 65p*dncgov'          $ g/s overlap cap at 0v (f/meter)
 +   cgdl_zn   = '435p + 65p*dncgov'          $ g/d overlap cap at 0v (f/meter)
 +   cgso_zn   = 130.8p                       $ g/s overlap cap offset (f/meter)
 +   cgdo_zn   = 130.8p                       $ g/d overlap cap offset (f/meter)
 +   rsh_zn    = pcrsi                        $ s/d sheet resistance (ohms/sq)
 +   js_zn     = 0.4072u                      $ n+ area sat cur (a/meter**2)
 +   jsw_zn    = 188.6f                       $ n+ sidewall sat cur (a/meter)
 +   n_zn      = 1.12                         $ ideality
 +   cj_zn     = '0.30m + 0.20m*dncj'         $ n+ diode cap (f/meter**2)
 +   pb_zn     = 0.4445                       $ voltage dependence
 +   mj_zn     = 0.3073
 +   cjsw_zn   = 0                            $ n+ sti sidewall cap (f/meter)
 +   pbsw_zn   = 0.1                          $ voltage dependence
 +   mjsw_zn   = 0.1
 +   cjsg_zn   = '96.8p + 19.4p*dncjsg'       $ n+ gate sidewall cap (f/meter)
 +   pbsg_zn   = 0.201                        $ voltage dependence
 +   mjsg_zn   = 0.2604
 +   cta_zn    = 1.92m                        $ temperature parameters
 +   pta_zn    = 1.65m
 +   ctp_zn    = 4.56m
 +   ptp_zn    = 1.0m
 *
 *                                              zvt dgnfet
 *
 +   xzdgu0    = agauss(0,mc_std,3)
 +   dzdgu0    = xzdgu0
 +   xnoi_zdg  = agauss('-cnr_noin',mc_std,3)
 +   dnoi_zdg  = xnoi_zdg
 *
 *                                            $ fixed corner adders
 +   cvth_zdg  = 'fixcnr * skewfix(-0.105,-0.17193,-0.04724,cnr_zdg)'
 +   cxl_zdg   = 'fixcnr * skewfix(2.8e-8,3.6e-8,2.0e-8,cnr_zdg)'
 +   clpc_zdg  = 'fixcnr * skewfix(2.8e-8,3.6e-8,2.0e-8,cnr_pc)'
 +   cxw_zdg   = 'fixcnr * skewfix(0e-7,0.9e-7,-0.9e-7,cnr_zdg)'
 +   cwrx_zdg  = 'fixcnr * skewfix(0e-7,0.9e-7,-0.9e-7,cnr_rx)'
 +   cu0_zdg   = 'fixcnr * skewfix(420,442.5,395.9,cnr_zdg)'
 +   crds_zdg  = 'fixcnr * skewfix(79,75.445,82.555,cnr_zdg)'
 *
 *                                            $ gate oxide thickness (meter)
 +   toxe_zdg  = '5.9n + 0.40n*dthkox'
 +   toxp_zdg  = '5.54n + 0.40n*dthkox'
 *                                            $ base threshold voltage (v)
 +   vtol_zdg  = '0.045*(dzdgvth0*mc_gl_f - cnr_zdg*(1-fixcnr))'
 +   vth0_zdg  = '-0.118 + vtol_zdg + cvth_zdg'
 +   pvth0_zdg =  0
 +   lint_zdg  = '0.016u + cxl_zdg + clpc_zdg'  $ delta l (one side)
 +   ltol_zdg  = -0.008u
 +   xlint_zdg = 'lmtx_zdg*mc_gl_f - cnr_pc*(1-fixcnr)'
 +   wint_zdg  = '0.0u + cxw_zdg + cwrx_zdg'    $ delta w (one side)
 +   wtol_zdg  = -0.015u
 +   xwint_zdg = 'dzdgwint*mc_gl_f - cnr_rx*(1-fixcnr)'
 +   xu0_zdg   = 'dzdgu0*mc_gl_f + cnr_zdg*(1-fixcnr)'
 +   u0_zdg    = '420 - 84*xu0_zdg + cu0_zdg' $ base mobility (cm**2/vsec)
 +   rdsw_zdg  = '79 + 16*dnrdsw + crds_zdg'  $ base series res (ohm-um)
 +   cgsl_zdg  = '430p + 45p*ddgncgov'        $ g/s overlap cap at 0v (f/meter)
 +   cgdl_zdg  = '430p + 45p*ddgncgov'        $ g/d overlap cap at 0v (f/meter)
 +   cgso_zdg  = 0                            $ g/s overlap cap offset (f/meter)
 +   cgdo_zdg  = 0                            $ g/d overlap cap offset (f/meter)
 +   rsh_zdg   = pcrsi                        $ s/d sheet resistance (ohms/sq)
 +   js_zdg    = 0.4072u                      $ n+ area sat cur (a/meter**2)
 +   jsw_zdg   = 188.6f                       $ n+ sidewall sat cur (a/meter)
 +   n_zdg     = 1.12                         $ ideality
 +   cj_zdg    = '0.33m + 0.20m*ddgncj'       $ n+ diode cap (f/meter**2)
 +   pb_zdg    = 0.56                         $ voltage dependence
 +   mj_zdg    = 0.35
 +   cjsw_zdg  = 0                            $ n+ sti sidewall cap (f/meter)
 +   pbsw_zdg  = 0.1                          $ voltage dependence
 +   mjsw_zdg  = 0.1
 +   cjsg_zdg  = '120p + 24p*ddgncjsg'        $ n+ gate sidewall cap (f/meter)
 +   pbsg_zdg  = 0.5                          $ voltage dependence
 +   mjsg_zdg  = 0.35
 *
 *                                              nwell to substrate diode
 *
 +   xnwcj       = agauss(cnr_cap,mc_std,3)
 +   dnwcj       = xnwcj
 +   xnwcjsw     = agauss(cnr_cap,mc_std,3)
 +   dnwcjsw     = xnwcjsw
 +   xpwrs       = agauss(cnr_res,mc_std,3)
 +   dpwrs       = xpwrs
 *
 +   delnw       = 'ndelnw + tdelnw'          $ nw image
 +   js_nw       = 0.170u                     $ sat current (a/meter**2)
 +   jsw_nw      = 0.165p                     $ sidewall sat current (a/meter)
 +   n_nw        = 1.02                       $ ideality
 +   cj_nw       = '0.93m + 0.28m*dnwcj'      $ capacitance (f/meter**2)
 +   pb_nw       = 0.78                       $ voltage dependence
 +   mj_nw       = 0.34
 +   cjsw_nw     = '0.50n + 0.15n*dnwcjsw'    $ sidewall cap (f/meter)
 +   pbsw_nw     = 0.69                       $ voltage dependence
 +   mjsw_nw     = 0.34
 +   cta_nw      = 0.8m                       $ temperature parameters
 +   pta_nw      = 1.6m
 +   ctp_nw      = 1.1m
 +   ptp_nw      = 2.0m
 +   bd_nw       = 10.5
 +   lk1a_nw     = 0.79m                      $ diode leakage parameters
 +   lk3a_nw     = 14u
 +   lk1p_nw     = 0.83n
 +   lk3p_nw     = 0
 +   nwrs        = nwrsf                      $ nw sheet rho (ohm/sq)
 +   pwrs        = '260 + 110*dpwrs'          $ pw(sx) sheet rho (ohm/sq)
 *
 *                                              di diode
 *
 +   xistdi      = agauss(cnr_res,mc_std,3)
 +   distdi      = xistdi
 +   tdeldi      = '0.5*distdi'               $ sat current tolerance
 *
 +   dima        = 6.5                        $ mis-match coefficients
 +   dimw        = 0
 +   diml        = 0
 *
 *                                              pwell to n-isolation diode
 *
 +   xpwicj      = agauss(0,mc_std,3)
 +   dpwicj      = xpwicj
 +   xpwicjsw    = agauss(0,mc_std,3)
 +   dpwicjsw    = xpwicjsw
 *
 +   js_pwi      = 0.22u                      $ sat current (a/meter**2)
 +   jsw_pwi     = 0.35p                      $ sidewall sat cur (a/meter)
 +   n_pwi       = 1.04                       $ ideality
 +   cj_pwi      = '0.92m + 0.28m*dpwicj'     $ capacitance (f/meter**2)
 +   pb_pwi      = 0.78                       $ voltage dependence
 +   mj_pwi      = 0.35
 +   cjsw_pwi    = '0.92n + 0.28n*dpwicjsw'   $ sidewall cap (f/meter)
 +   pbsw_pwi    = 0.50                       $ voltage dependence
 +   mjsw_pwi    = 0.32
 +   cta_pwi     = 0.9m                       $ temperature parameters
 +   pta_pwi     = 2.0m
 +   ctp_pwi     = 1.8m
 +   ptp_pwi     = 1.3m
 +   bd_pwi      = 9.0
 +   lk1a_pwi    = 0.77m                      $ diode leakage parameters
 +   lk3a_pwi    = 0
 +   lk1p_pwi    = 1.7n
 +   lk3p_pwi    = 2p
 *
 *                                              pwell (bt) to t3 isolation diode
 *
 +   xpwt3cj     = agauss(0,mc_std,3)
 +   dpwt3cj     = xpwt3cj
 *
 +   js_pwt3     = 0.40u                      $ sat current (a/meter**2)
 +   jsw_pwt3    = 0.24p                      $ sidewall sat cur (a/meter)
 +   n_pwt3      = 1.0015                     $ ideality
 +   cj_pwt3     = '0.72m + 0.29m*dpwt3cj'    $ capacitance (f/meter**2)
 +   pb_pwt3     = 0.75                       $ voltage dependence
 +   mj_pwt3     = 0.35
 +   cta_pwt3    = 0.62m                      $ temperature parameters
 +   pta_pwt3    = 1.4m
 +   bd_pwt3     = 13.0
 +   lk1a_pwt3   = 0.011m                     $ diode leakage parameters
 +   lk3a_pwt3   = 0
 +   lk1p_pwt3   = 0.13n
 +   lk3p_pwt3   = 0
 *
 *                                              n-isolation to substrate diode
 *
 +   xpixcj      = agauss(0,mc_std,3)
 +   dpixcj      = xpixcj
 +   xpixcjsw    = agauss(0,mc_std,3)
 +   dpixcjsw    = xpixcjsw
 *
 +   js_pix      = 0.32u                      $ sat current (a/meter**2)
 +   jsw_pix     = 0.04p                      $ sidewall sat cur (a/meter)
 +   n_pix       = 1.03                       $ ideality
 +   cj_pix      = '0.25m + 0.08m*dpixcj'     $ capacitance (f/meter**2)
 +   pb_pix      = 0.76                       $ voltage dependence
 +   mj_pix      = 0.42
 +   cjsw_pix    = '0.03n + 0.02n*dpixcjsw'   $ sidewall cap (f/meter)
 +   pbsw_pix    = 0.75                       $ voltage dependence
 +   mjsw_pix    = 0.35
 +   cta_pix     = 1.3m                       $ temperature parameters
 +   pta_pix     = 2.2m
 +   ctp_pix     = 2.0m
 +   ptp_pix     = 0.5m
 +   bd_pix      = 10.0
 +   lk1a_pix    = 0.75m                      $ diode leakage parameters
 +   lk3a_pix    = 0
 +   lk1p_pix    = 20p
 +   lk3p_pix    = 0
 *
 *                                              t3 isolation to substrate diode
 *
 +   xt3xcj      = agauss(0,mc_std,3)
 +   dt3xcj      = xt3xcj
 +   xt3xcjsw    = agauss(0,mc_std,3)
 +   dt3xcjsw    = xt3xcjsw
 *
 +   js_t3x      = 0.62u                      $ sat current (a/meter**2)
 +   jsw_t3x     = 1.67p                      $ sidewall sat cur (a/meter)
 +   n_t3x       = 1.06                       $ ideality
 +   cj_t3x      = '0.20m + 0.08m*dt3xcj'     $ capacitance (f/meter**2)
 +   pb_t3x      = 0.70                       $ voltage dependence
 +   mj_t3x      = 0.40
 +   cjsw_t3x    = '2.35n + 0.95n*dt3xcjsw'   $ sidewall capacitance (f/meter)
 +   pbsw_t3x    = 0.75                       $ voltage dependence
 +   mjsw_t3x    = 0.40
 +   cta_t3x     = 1.8m                       $ temperature parameters
 +   pta_t3x     = 2.5m
 +   ctp_t3x     = 1.2m
 +   ptp_t3x     = 1.9m
 +   bd_t3x      = 10.5
 +   lk1a_t3x    = 0                          $ diode leakage parameters
 +   lk3a_t3x    = 0
 +   lk1p_t3x    = 0.1n
 +   lk3p_t3x    = 0
 *
 *                                              nmos varactor / pcdcaps
 *
 +   xnpcrs   = agauss(0,mc_std,3)            $ n+ poly rs distribution
 +   dnpcrs   = xnpcrs
 *
 +   nco_mv   = 12.3m                       
 +   co_mv    = 'nco_mv - 1.23m*dthnox'       $ unit capacitance (f/meter**2)
 +   nqs_mv   = 430u
 +   qs_mv    = 'nqs_mv - 65u*dnwrs'          $ nwell depletion region charge
 +   qp_mv    = '12.3m - 2.46m*dnpcrs'        $ gate depletion charge
 +   pon_mv   = 2.5m                          $ hole-to-electron density ratio
 +   vbi_mv   = 0.055                         $ built-in potential, gate and nw
 *
 +   nco_mvdg = 6.2m
 +   co_mvdg  = 'nco_mvdg - 0.62m*dthkox'     $ unit capacitance (f/meter**2)
 +   nqs_mvdg = 440u
 +   qs_mvdg  = 'nqs_mvdg - 66u*dnwrs'        $ nwell depletion region charge
 +   qp_mvdg  = '11m - 2.2m*dnpcrs'           $ gate depletion charge
 +   pon_mvdg = 5m                            $ hole-to-electron density ratio
 +   vbi_mvdg = 0.029                         $ built-in potential, gate and nw
 *
 +   emw      = 0                             $ additional metal wiring width
 *
 *                                              ha varactor
 *
 +   xazvar  = agauss('-cnr_cap',mc_std,3)
 +   dazvar  = xazvar
 +   xaxvar  = agauss(cnr_cap,mc_std,3)
 +   daxvar  = xaxvar
 +   xayvar  = agauss(cnr_cap,mc_std,3)
 +   dayvar  = xayvar
 +   xnbnsr  = agauss('-cnr_cap',mc_std,3)
 +   dnbnsr  = xnbnsr
 +   xnscja  = agauss('-cnr_cap',mc_std,3)
 +   dnscja  = xnscja
 +   xnscjp  = agauss('-cnr_cap',mc_std,3)
 +   dnscjp  = xnscjp
 *                                              sheet resistivities
 +   nrnw    = '270p + 65p*dnwrs'             $ vertical nwell (ohm-meter**2)
 +   nbnsr   = '120 + 30*dnbnsr'              $ buried subcollector (ohm/sq)
 *
 +   azvar   = '0.30*dazvar'                  $ doping variations
 +   axvar   = '0.21*daxvar'
 +   ayvar   = '0.50*dayvar'
 *
 +   nncahav = 2.40m                          $ unit area cap (f/meter**2)
 +   nncphav = 0.19n                          $ unit peri cap (f/meter)
 *
 *                                              ns to substrate (w/ rn) diode
 *
 +   js_rns     = 0.3u                        $ sat current (a/meter**2)
 +   jsw_rns    = 0.54p                       $ sidewall sat current (a/meter)
 +   n_rns      = 1.03                        $ ideality
 +   ncjsa      = '0.27m + 0.15m*dnscja'      $ capacitance (f/meter**2)
 +   pb_rns     = 0.75                        $ voltage dependence
 +   mj_rns     = 0.45
 +   ncjsp      = '1.45n + 0.2n*dnscjp'       $ sidewall cap (f/meter)
 +   pbsw_rns   = 0.70                        $ voltage dependence
 +   mjsw_rns   = 0.40
 +   cta_rns    = 1.8m                        $ temperature parameters
 +   pta_rns    = 2.9m
 +   ctp_rns    = 0.9m
 +   ptp_rns    = 1.8m
 +   bd_rns     = 8.5
 *
 *                                              schottky barrier diode
 *
 +   xsbdisat = agauss('-cnr_res',mc_std,3)
 +   dsbdisat = xsbdisat
 +   xsbdlk   = agauss('-cnr_res',mc_std,3)
 +   dsbdlk   = xsbdlk
 +   xsbdcj   = agauss('-cnr_cap',mc_std,3)
 +   dsbdcj   = xsbdcj
 *
 +   delbnn   =  -0.4975u                     $ bn photo + p+ outdiffusion
 +   delbn    = 'delbnn + 0.05u*ddlbn'
 *
 +   sbdia    = '2.453*exp(1.80*dsbdisat)'    $ area saturation current (a/meter**2)
 +   sbdinf   = '-0.09*exp(1.80*dsbdisat)'    $ nf sat current correction factor
 +   sbdlk    = 'exp(24.866 + 5.17*dsbdlk)'   $ reverse leakage current
 *
 +   nnsbdcj  = 0.7737m                       $ sbd cj area (f/meter**2)
 +   nsbdcj   = 'nnsbdcj + 0.19m*dsbdcj'
 *
 +   nnsbdcjp = 0.6259n                       $ sbd cj peri (f/meter)
 +   nsbdcjp  = 'nnsbdcjp + 0.25n*dsbdcj'
 *
 +   nvepi    = '0.6n - 0.3n*dsbdisat'        $ vertical epi res (ohm-meter**2)
 *
 *                                              beol area cap (f/meter**2)
 *
 +   xpcap   = agauss(0,mc_std,3)
 +   dpcap   = xpcap
 +   tpcap   = '1.0 + 0.20*dpcap'             $ extracted wiring cap tolerance
 *
 *                                              nitride mim capacitors
 *
 +   xcmima   = agauss(cnr_cap,mc_std,3)
 +   dcmima   = xcmima
 +   xcmimp   = agauss(cnr_cap,mc_std,3)
 +   dcmimp   = xcmimp
 +   xcmimha  = agauss(cnr_cap,mc_std,3)
 +   dcmimha  = xcmimha
 +   xcmimhp  = agauss(cnr_cap,mc_std,3)
 +   dcmimhp  = xcmimhp
 +   xcdlmimp = agauss(cnr_cap,mc_std,3)
 +   dcdlmimp = xcdlmimp
 +   xistqy   = agauss(0,mc_std,3)
 +   distqy   = xistqy
 +   xisthy   = agauss(0,mc_std,3)
 +   disthy   = xisthy
 +   xistkt   = agauss(0,mc_std,3)
 +   distkt   = xistkt
 +   xftrs    = agauss('-cnr_cap',mc_std,3)
 +   dftrs    = xftrs
 +   xqyt     = agauss(cnr_cap,mc_std,3)
 +   dqyt     = xqyt
 +   xhyt     = agauss(cnr_cap,mc_std,3)
 +   dhyt     = xhyt
 +   xktt     = agauss(cnr_cap,mc_std,3)
 +   dktt     = xktt
 *
 +   ncmima   =  2.05m                        $ mim qx cap area (f/meter**2)
 +   cmima    = 'ncmima + 0.205m*dcmima'
 +   ncmimp   =  0.157n                       $ mim qx cap peri (f/meter)
 +   cmimp    = 'ncmimp + 0.079n*dcmimp'
 +   ncmimha  =  2.05m                        $ mim hx cap area (f/meter**2)
 +   cmimha   = 'ncmimha + 0.205m*dcmimha'
 +   ncmimhp  =  0.309n                       $ mim hx cap peri (f/meter)
 +   cmimhp   = 'ncmimhp + 0.155n*dcmimhp'
 +   ncmimta  =  2.05m                        $ mim kx cap area (f/meter**2)
 +   cmimta   = 'ncmimta + 0.205m*dcmima'
 +   ncmimpol =  0.12n                        $ ol single nit mim cap peri (f/m)
 +   cmimpol  = 'ncmimpol + 0.061n*dcmimp'
 +   ncdlmimp =  0.44n                        $ ol dual nit mim cap peri (f/m)
 +   cdlmimp  = 'ncdlmimp + 0.22n*dcdlmimp'
 *
 +   ndelqy   = 0u                            $ qy level image
 +   delqy    = 'ndelqy + 0.30u*distqy'
 +   ndelhy   = 0u                            $ hy level image
 +   delhy    = 'ndelhy + 0.30u*disthy'
 +   ndelkt   = 0u                            $ kt level image
 +   delkt    = 'ndelkt + 0.30u*distkt'
 *
 +   prvft    = '0.40 + 0.20*dftrs'           $ ft via resistance (ohm/via)
 +   qyrs     = '0.17 - 0.034*dqyt'           $ qy plate res (ohm/sq)
 +   hyrs     = '0.17 - 0.034*dhyt'           $ hy plate res (ohm/sq)
 *
 +   qyt     = '0.242u + 0.0202u*dqyt'        $ qy thickness
 +   hyt     = '0.242u + 0.0202u*dhyt'        $ hy thickness
 +   ktt     = '0.242u + 0.0202u*dktt'        $ kt thickness
 *
 *                                              single hi-k ol mim capacitors
 *
 +   xchkmima = agauss(cnr_cap,mc_std,3)
 +   dchkmima = xchkmima
 +   xchkmimp = agauss(cnr_cap,mc_std,3)
 +   dchkmimp = xchkmimp
 +   xistqt   = agauss(cnr_cap,mc_std,3)
 +   distqt   = xistqt
 +   xistht   = agauss(cnr_cap,mc_std,3)
 +   distht   = xistht
 +   xjtrs    = agauss('-cnr_cap',mc_std,3)
 +   djtrs    = xjtrs
 +   xqtt     = agauss(cnr_cap,mc_std,3)
 +   dqtt     = xqtt
 *
 +   nchkmima =  4.10m                        $ ol mim cap area (f/meter**2)
 +   cchkmima = 'nchkmima + 0.41m*dchkmima'
 +   nchkmimp =  0.40n                        $ ol mim cap peri (f/meter)
 +   cchkmimp = 'nchkmimp + 0.20n*dchkmimp'
 *
 +   ndelqt   = -0.23u                        $ qt level image
 +   delqt    = 'ndelqt + 0.30u*distqt'
 +   ndelht   = -0.07u                        $ ht level image
 +   delht    = 'ndelht + 0.20u*distht'
 *
 +   prvjt    = '0.049 + exp(-2.975+3.87*djtrs)'  $ jt via res (ohm/via)
 +   qtrs     = '1.8 - 0.7*dqtt'                  $ qt plate res (ohm/sq)
 *
 +   qtt      = '0.142u + 0.028u*dqtt'        $ qt thickness
 *
 *                                              beol devices
 *
 +   xistm1  = agauss(cnr_cap,mc_std,3)       $ image distributions
 +   distm1  = xistm1
 +   xistm2  = agauss(cnr_cap,mc_std,3)
 +   distm2  = xistm2
 +   xistm3  = agauss(cnr_cap,mc_std,3)
 +   distm3  = xistm3
 +   xistm4  = agauss(cnr_cap,mc_std,3)
 +   distm4  = xistm4
 +   xistm5  = agauss(cnr_cap,mc_std,3)
 +   distm5  = xistm5
 +   xistm6  = agauss(cnr_cap,mc_std,3)
 +   distm6  = xistm6
 +   xistmq  = agauss(cnr_ind,mc_std,3)
 +   distmq  = xistmq
 +   xistlm  = agauss(cnr_ind,mc_std,3)
 +   distlm  = xistlm
 +   xistmg  = agauss(cnr_ind,mc_std,3)
 +   distmg  = xistmg
 +   xisttd  = agauss(cnr_ind,mc_std,3)
 +   disttd  = xisttd
 +   xistly  = agauss(cnr_ind,mc_std,3)
 +   distly  = xistly
 +   xiste1  = agauss(cnr_ind,mc_std,3)
 +   diste1  = xiste1
 +   xistma  = agauss(cnr_ind,mc_std,3)
 +   distma  = xistma
 +   xistam  = agauss(cnr_ind,mc_std,3)
 +   distam  = xistam
 +   xistol  = agauss(cnr_ind,mc_std,3)
 +   distol  = xistol
 +   xistld  = agauss(cnr_ind,mc_std,3)
 +   distld  = xistld
 *
 +   delm1n  = -0.023u                        $ m1 mask bias
 +   tdelm1  = '0.045u*distm1'
 +   delm1   = 'delm1n + tdelm1'
 +   delm2n  = 0.02u                          $ m2 mask bias
 +   tdelm2  = '0.06u*distm2'
 +   delm2   = 'delm2n + tdelm2'
 +   delm3n  = 0.02u                          $ m3 mask bias
 +   tdelm3  = '0.06u*distm3'
 +   delm3   = 'delm3n + tdelm3'
 +   delm4n  = 0.02u                          $ m4 mask bias
 +   tdelm4  = '0.06u*distm4'
 +   delm4   = 'delm4n + tdelm4'
 +   delm5n  = 0.02u                          $ m5 mask bias
 +   tdelm5  = '0.06u*distm5'
 +   delm5   = 'delm5n + tdelm5'
 +   delm6n  = 0.02u                          $ m6 mask bias
 +   tdelm6  = '0.06u*distm6'
 +   delm6   = 'delm6n + tdelm6'
 +   delmqn  = -0.024u                        $ mq mask bias
 +   delmq   = 'delmqn + 0.09u*distmq'
 +   dellmn  = -0.024u                        $ lm mask bias
 +   dellm   = 'dellmn + 0.09u*distlm'
 +   delmgn  = -0.024u                        $ mg mask bias
 +   delmg   = 'delmgn + 0.09u*distmg'
 +   deltdn  = 0.0                            $ td mask bias
 +   deltd   = 'deltdn + 0.05u*disttd'
 +   dellyn  = -0.02u                         $ ly mask bias
 +   delly   = 'dellyn + 0.26u*distly'
 +   dele1n  = 0.0                            $ e1 mask bias
 +   dele1   = 'dele1n + 0.25u*diste1'
 +   delman  = 0.16u                          $ ma mask bias
 +   delma   = 'delman + 0.86u*distma'
 +   delamn  =  0.16u                         $ am mask bias
 +   delam   = 'delamn + 0.60u*distam'
 +   deloln  = 0.16u                          $ ol mask bias
 +   delol   = 'deloln + 0.26u*distol'
 +   delldn  = -0.11u                         $ ld mask bias
 +   delld   = 'delldn + 0.60u*distld'
 *
 +   xpmsxt  = agauss(0,mc_std,3)             $ profile distributions
 +   dpmsxt  = xpmsxt
 +   xcapct  = agauss(cnr_ind,mc_std,3)
 +   dcapct  = xcapct
 +   xm1t    = agauss(cnr_ind,mc_std,3)
 +   dm1t    = xm1t
 +   xm2t    = agauss(cnr_ind,mc_std,3)
 +   dm2t    = xm2t
 +   xm3t    = agauss(cnr_ind,mc_std,3)
 +   dm3t    = xm3t
 +   xm4t    = agauss(cnr_ind,mc_std,3)
 +   dm4t    = xm4t
 +   xm5t    = agauss(cnr_ind,mc_std,3)
 +   dm5t    = xm5t
 +   xm6t    = agauss(cnr_ind,mc_std,3)
 +   dm6t    = xm6t
 +   xmqt    = agauss(cnr_ind,mc_std,3)
 +   dmqt    = xmqt
 +   xlmt    = agauss(cnr_ind,mc_std,3)
 +   dlmt    = xlmt
 +   xmgt    = agauss(cnr_ind,mc_std,3)
 +   dmgt    = xmgt
 +   xtdt    = agauss(cnr_ind,mc_std,3)
 +   dtdt    = xtdt
 +   xlyt    = agauss(cnr_ind,mc_std,3)
 +   dlyt    = xlyt
 +   xe1t    = agauss(cnr_ind,mc_std,3)
 +   de1t    = xe1t
 +   xmat    = agauss(cnr_ind,mc_std,3)
 +   dmat    = xmat
 +   xamt    = agauss(cnr_ind,mc_std,3)
 +   damt    = xamt
 +   xolt    = agauss(cnr_ind,mc_std,3)
 +   dolt    = xolt
 +   xldt    = agauss(cnr_ind,mc_std,3)
 +   dldt    = xldt
 +   xm1m2t  = agauss(cnr_ind,mc_std,3)
 +   dm1m2t  = xm1m2t
 +   xm2m3t  = agauss(cnr_ind,mc_std,3)
 +   dm2m3t  = xm2m3t
 +   xmxmqt  = agauss(cnr_ind,mc_std,3)
 +   dmxmqt  = xmxmqt
 +   xm3m4t  = agauss(cnr_ind,mc_std,3)
 +   dm3m4t  = xm3m4t
 +   xm4m5t  = agauss(cnr_ind,mc_std,3)
 +   dm4m5t  = xm4m5t
 +   xm5m6t  = agauss(cnr_ind,mc_std,3)
 +   dm5m6t  = xm5m6t
 +   xmqmgt  = agauss(cnr_ind,mc_std,3)
 +   dmqmgt  = xmqmgt
 +   xmqlmt  = agauss(cnr_ind,mc_std,3)
 +   dmqlmt  = xmqlmt
 +   xmglmt  = agauss(cnr_ind,mc_std,3)
 +   dmglmt  = xmglmt
 +   xmqlyt  = agauss(cnr_ind,mc_std,3)
 +   dmqlyt  = xmqlyt
 +   xmglyt  = agauss(cnr_ind,mc_std,3)
 +   dmglyt  = xmglyt
 +   xlmtdt  = agauss(cnr_ind,mc_std,3)
 +   dlmtdt  = xlmtdt
 +   xlye1t  = agauss(cnr_ind,mc_std,3)
 +   dlye1t  = xlye1t
 +   xe1mat  = agauss(cnr_ind,mc_std,3)
 +   de1mat  = xe1mat
 +   xmqamt  = agauss(cnr_ind,mc_std,3)
 +   dmqamt  = xmqamt
 +   xmqolt  = agauss(cnr_ind,mc_std,3)
 +   dmqolt  = xmqolt
 +   xmgolt  = agauss(cnr_ind,mc_std,3)
 +   dmgolt  = xmgolt
 +   xolldt  = agauss(cnr_ind,mc_std,3)
 +   dolldt  = xolldt
 *
 +   pmsxt   = 'npmsxt + 12.5u*dpmsxt'        $ p- substrate thickness
 +   capctn  = 0.32u                          $ ca between pc and m1 1.0 <= m1 <= wmax
 +   capct   = 'capctn + 0.095u*dcapct'
 +   capctin = 0.35u                          $ ca between pc and m1 wmin <= m1 <= 1.0
 +   capcti  = 'capctin + 0.095u*dcapct'
 +   m1tn    = 0.32u                          $ m1 thickness 1.0 <= m1 <= wmax
 +   m1t     = 'm1tn + 0.11u*dm1t'
 +   m1tin   = 0.29u                          $ m1 thickness wmin <= m1 <= 1.0
 +   m1ti    = 'm1tin + 0.11u*dm1t'
 +   m2tn    = 0.32u                          $ m2 thickness
 +   m2t     = 'm2tn + 0.12u*dm2t'
 +   m3tn    = 0.32u                          $ m3 thickness
 +   m3t     = 'm3tn + 0.12u*dm3t'
 +   m4tn    = 0.32u                          $ m4 thickness
 +   m4t     = 'm4tn + 0.12u*dm4t'
 +   m5tn    = 0.32u                          $ m5 thickness
 +   m5t     = 'm5tn + 0.12u*dm5t'
 +   m6tn    = 0.32u                          $ m6 thickness
 +   m6t     = 'm6tn + 0.12u*dm6t'
 +   mqtn    = 0.60u                          $ mq thickness
 +   mqt     = 'mqtn + 0.14u*dmqt'
 +   lmtn    = 0.60u                          $ lm thickness
 +   lmt     = 'lmtn + 0.14u*dlmt'
 +   mgtn    = 0.60u                          $ mg thickness
 +   mgt     = 'mgtn + 0.14u*dmgt'
 +   tdtn    = 1.27u                          $ td thickness
 +   tdt     = 'tdtn + 0.18u*dtdt'
 +   lytn    = 0.46u                          $ ly thickness
 +   lyt     = 'lytn + 0.07u*dlyt'
 +   e1tn    = 3.0u                           $ e1 thickness
 +   e1t     = 'e1tn + 0.50u*de1t'
 +   matn    = 4.0u                           $ ma thickness
 +   mat     = 'matn + 0.50u*dmat'
 +   amtn    = 4.0u                           $ am thickness
 +   amt     = 'amtn + 0.40u*damt'
 +   oltn    = 3.0u                           $ ol thickness
 +   olt     = 'oltn + 0.50u*dolt'
 +   ldtn    = 4.0u                           $ ld thickness
 +   ldt     = 'ldtn + 0.40u*dldt'
 +   m1m2tn  = 0.35u                          $ m1-m2 thickness
 +   m1m2t   = 'm1m2tn + 0.08u*dm1m2t'
 +   m2m3tn  = 0.35u                          $ m2-m3 thickness
 +   m2m3t   = 'm2m3tn + 0.08u*dm2m3t'
 +   m2mqtn  = 0.60u                          $ m2-mq thickness
 +   m2mqt   = 'm2mqtn + 0.12u*dmxmqt'
 +   m3m4tn  = 0.35u                          $ m3-m4 thickness
 +   m3m4t   = 'm3m4tn + 0.08u*dm3m4t'
 +   m3mqtn  = 0.60u                          $ m3-mq thickness
 +   m3mqt   = 'm3mqtn + 0.12u*dmxmqt'
 +   m4m5tn  = 0.35u                          $ m4-m5 thickness
 +   m4m5t   = 'm4m5tn + 0.08u*dm4m5t'
 +   m4mqtn  = 0.60u                          $ m4-mq thickness
 +   m4mqt   = 'm4mqtn + 0.12u*dmxmqt'
 +   m5m6tn  = 0.35u                          $ m5-m6 thickness
 +   m5m6t   = 'm5m6tn + 0.08u*dm5m6t'
 +   m5mqtn  = 0.60u                          $ m5-mq thickness
 +   m5mqt   = 'm5mqtn + 0.12u*dmxmqt'
 +   m6mqtn  = 0.60u                          $ m6-mq thickness
 +   m6mqt   = 'm6mqtn + 0.12u*dmxmqt'
 +   mxmqtn  = 0.60u                          $ mx-mq thickness
 +   mxmqt   = 'mxmqtn + 0.12u*dmxmqt'
 +   mqmgtn  = 0.60u                          $ mq-mg thickness
 +   mqmgt   = 'mqmgtn + 0.12u*dmqmgt'
 +   mqlmtn  = 0.60u                          $ mq-lm thickness
 +   mqlmt   = 'mqlmtn + 0.12u*dmqlmt'
 +   mglmtn  = 0.60u                          $ mg-lm thickness
 +   mglmt   = 'mglmtn + 0.12u*dmglmt'
 +   lmtdtn  = 0.92u                          $ lm-td thickness
 +   lmtdt   = 'lmtdtn + 0.09u*dlmtdt'
 +   mqlytn  = 1.4u                           $ mq-ly thickness
 +   mqlyt   = 'mqlytn + 0.30u*dmqlyt'
 +   mglytn  = 1.4u                           $ mg-ly thickness
 +   mglyt   = 'mglytn + 0.30u*dmglyt'
 +   lye1tn  = 4.00u                          $ ly-e1 thickness
 +   lye1t   = 'lye1tn + 0.50u*dlye1t'
 +   e1matn  = 4.00u                          $ e1-ma thickness
 +   e1mat   = 'e1matn + 0.50u*de1mat'
 +   mqamtn  = 1.92u                          $ mq-am thickness
 +   mqamt   = 'mqamtn + 0.30u*dmqamt'
 +   mqoltn  = 2.10u                          $ mq-ol thickness
 +   mqolt   = 'mqoltn + 0.42u*dmqolt'
 +   mgoltn  = 2.10u                          $ mg-ol thickness
 +   mgolt   = 'mgoltn + 0.42u*dmgolt'
 +   olldtn  = 0.90u                          $ ol-ld thickness
 +   olldt   = 'olldtn + 0.12u*dolldt'
 *
 +   xrsub   = agauss(0,mc_std,3)             $ sheet resistivity distributions
 +   drsub   = xrsub
 +   xcars   = agauss(0,mc_std,3)
 +   dcars   = xcars
 *
 +   rsub    = '0.015 + 0.005*drsub'          $ sub res (ohm-meter)
 +   rsubc   = '750p + 320p*dpwrs'            $ sub contact res (ohm-meter**2)
 +   cars    = '9.0 * exp(0.8*dcars)'         $ ca rs (ohm/contact)
 +   m1rsn   = 0.0643                         $ m1 rs (ohm/sq) 1.0 <= m1 <= wmax
 +   m1rs    = 'm1rsn - 0.0242*dm1t'
 +   m1rsin  = 0.0709                         $ m1 rs (ohm/sq) 0.5 <= m1 <= 1.0
 +   m1rsi   = 'm1rsin - 0.0297*dm1t'
 +   m2rsn   = 0.0639                         $ m2 rs (ohm/sq)
 +   m2rs    = 'm2rsn - 0.0262*dm2t'
 +   m3rsn   = 0.0639                         $ m3 rs (ohm/sq)
 +   m3rs    = 'm3rsn - 0.0262*dm3t'
 +   m4rsn   = 0.0639                         $ m4 rs (ohm/sq)
 +   m4rs    = 'm4rsn - 0.0262*dm4t'
 +   m5rsn   = 0.0639                         $ m5 rs (ohm/sq)
 +   m5rs    = 'm5rsn - 0.0262*dm5t'
 +   m6rsn   = 0.0639                         $ m6 rs (ohm/sq)
 +   m6rs    = 'm6rsn - 0.0262*dm6t'
 +   mqrsn   = 0.0339                         $ mq rs (ohm/sq)
 +   mqrs    = 'mqrsn - 0.0068*dmqt'
 +   lmrsn   = 0.0339                         $ lm rs (ohm/sq)
 +   lmrs    = 'lmrsn - 0.0068*dlmt'
 +   mgrsn   = 0.0339                         $ mg rs (ohm/sq)
 +   mgrs    = 'mgrsn - 0.0068*dmgt'
 +   lyrsn   = 0.0890                         $ ly rs (ohm/sq)
 +   lyrs    = 'lyrsn - 0.014*dlyt'
 +   e1rs    = '0.0063 - 0.0013*de1t'         $ e1 rs (ohm/sq)
 +   mars    = '0.0070 - 0.0014*dmat'         $ ma rs (ohm/sq)
 +   amrs    = '0.0070 - 0.0014*damt'         $ am rs (ohm/sq)
 +   olrs    = '0.0063 - 0.0013*dolt'         $ ol rs (ohm/sq)
 +   ldrs    = '0.0070 - 0.0015*dldt'         $ ld rs (ohm/sq)
 *
 *                                              temp coefficients (per degc)
 *
 +   trsub   = 0.0040                         $ substrate resistivity
 +   trsubc  = 0.0036                         $ substrate contact resistance
 +   tnbnsr  = 0.00205                        $ n+ subcollector rs
 +   tpcrsi  = 0.0032                         $ silicided poly rs
 +   tnwrs   = 0.0020                         $ nw rs
 +   tm1rs   = 0.0030                         $ m1 rs
 +   tm2rs   = 0.0030                         $ m2 rs
 +   tm3rs   = 0.0030                         $ m3 rs
 +   tm4rs   = 0.0030                         $ m4 rs
 +   tm5rs   = 0.0030                         $ m5 rs
 +   tm6rs   = 0.0030                         $ m6 rs
 +   tmxrs   = 0.0030                         $ mx rs
 +   tmqrs   = 0.0030                         $ mq rs
 +   tlmrs   = 0.0030                         $ lm rs
 +   tmgrs   = 0.0030                         $ mg rs
 +   tlyrs   = 0.0033                         $ ly rs
 +   te1rs   = 0.0033                         $ e1 rs
 +   tmars   = 0.0038                         $ ma rs
 +   tamrs   = 0.0030                         $ am rs
 +   tolrs   = 0.0030                         $ ol rs
 +   tldrs   = 0.0030                         $ ld rs
 *
 .endl
 .inc './skew_psp.file'
 * path, component, release: cmos8base/rel/hspice/models/skew_psp.file, tech8_models, mod_cmos8base
 * cmvc revision: 1.1 10/10/12 12:16:49
 *
 ***********************************************************************
 *
 *>  ibm cmrf8sf/bicmos8wl  skew_psp.file  mosfet psp model process parameters
 *
 * ibm confidential
 * (c) 2009 ibm corporation
 * licensed materials - property of ibm
 * us government users restricted rights - use, duplication or disclosure
 * restricted by gsa adp schedule contract with ibm corporation.
 *
 ***********************************************************************
 .param
 *                                             nfet psp parameters
 *
 +  xnfol1  = agauss('cnr_n*(1-fixcnr)',mc_std,3)
 +  dnfol1  = xnfol1
 +  xnfol2  = agauss('cnr_n*(1-fixcnr)',mc_std,3)
 +  dnfol2  = xnfol2
 +  xnnsub  = agauss('-cnr_n*(1-fixcnr)',mc_std,3)
 +  dnnsub  = xnnsub
 +  xndl    = agauss('-cnr_n',mc_std,3)
 +  dndl    = xndl
 *
 +   cvfb_n    = 'fixcnr * skewfix(-1.142,-1.188,-1.0985,cnr_n)'
 +   cvfblw_n  = 'fixcnr * skewfix(-0.0018,-0.00251,-0.0009,cnr_n)'
 +   cu0_psp_n = 'fixcnr * skewfix(0.1015,0.107,0.09175,cnr_n)'
 +   crsw_n    = 'fixcnr * skewfix(55,64,40,cnr_n)'
 *
 +  tox_psp_n   = '2.64n + 0.15n*dthnox'         $ gate oxide thickness (meter)
 *                                               $ base threshold voltage (v)
 +  vtol_psp_n  = '0.001*(vmtx_n*mc_gl_f - cnr_n*(1-fixcnr))'
 +  vfb_psp_n   = '-1.142 + vtol_psp_n + cvfb_n'
 +  vfblw_n     = '-0.0018 - cvfblw_n'
 +  lint_psp_n  = '0.014u + cxl_n + clpc_n'      $ delta l (one side)
 +  wint_psp_n  = '0.005u + cxw_n + cwrx_n'      $ delta w (one side)
 *                                               $ base mobility (m**2/vsec)
 +  uo_psp_n    = '0.1015 + 0.014*xu0_n + cu0_psp_n'
 +  thesatl_psp_n = '1.2 + 0.06*xu0_n'
 +  rsw_psp_n   = '55.0 + 6.0*dnrdsw + crsw_n'   $ base series resistance (ohm-um)
 +  nsubo_psp_n = '2.25e+23 + 6e22*dnnsub'       $ channel doping
 +  fol1_psp_n  = '0.012 + 0.0126*dnfol1'        $ first order short channel roll-off and body effect
 +  fol2_psp_n  = '0.1m + 0.1m*dnfol2'           $ second order short channel roll-off and body effect
 +  dl_psp_n    = '1.36e-8 + 3.4e-9*dndl'        $ length of gate to s/d overlap region
 *
 *                                             pfet psp parameters
 *
 +  xpfol1  = agauss('cnr_p*(1-fixcnr)',mc_std,3)
 +  dpfol1  = xpfol1
 +  xpfol2  = agauss('cnr_p*(1-fixcnr)',mc_std,3)
 +  dpfol2  = xpfol2
 +  xpnsub  = agauss('-cnr_p*(1-fixcnr)',mc_std,3)
 +  dpnsub  = xpnsub
 +  xpdl    = agauss('-cnr_p',mc_std,3)
 +  dpdl    = xpdl
 *
 +   cvfb_p    = 'fixcnr * skewfix(-0.897,-0.945,-0.8505,cnr_p)'
 +   cvfblw_p  = 'fixcnr * skewfix(0,0.00057,-0.000165,cnr_p)'
 +   cu0_psp_p = 'fixcnr * skewfix(0.0112,0.0121,0.01,cnr_p)'
 *
 +  tox_psp_p   = '2.386n + 0.15n*dthnox'        $ gate oxide thickness (meter)
 *                                               $ base threshold voltage (v)
 +  vtol_psp_p  = '0.001*(vmtx_p*mc_gl_f + cnr_p*(1-fixcnr))'
 +  vfb_psp_p   = '-0.897 - vtol_psp_p + cvfb_p'
 +  vfblw_p     = '0 + cvfblw_p'
 +  lint_psp_p  = '0.014u + cxl_p + clpc_p'      $ delta l (one side)
 +  wint_psp_p  = '0.02u + cxw_p + cwrx_p'       $ delta w (one side)
 *                                               $ base mobility (m**2/vsec)
 +  uo_psp_p    = '0.0112 + 0.0017*xu0_p + cu0_psp_p'
 +  thesatl_psp_p = '0.2486 + 0.001*xu0_p'
 +  rsw_psp_p   = '150 + 35*dprdsw'              $ base series resistance (ohm-um)
 +  nsubo_psp_p = '1.435e+23 + 5.0e22*dpnsub'    $ channel doping
 +  fol1_psp_p  = '1e-12 + 1.5m*dpfol1'          $ first order short channel roll-off and body effect
 +  fol2_psp_p  = '0.39m + 1.26m*dpfol2'         $ second order short channel roll-off and body effect
 +  dl_psp_p    = '1.0e-8 + 3.2e-9*dpdl'         $ length of gate to s/d overlap region
 *
 *                                             dgnfet psp parameters
 *
 +  xdgnfol1 = agauss('cnr_dgn*(1-fixcnr)',mc_std,3)
 +  ddgnfol1 = xdgnfol1
 +  xdgnfol2 = agauss('cnr_dgn*(1-fixcnr)',mc_std,3)
 +  ddgnfol2 = xdgnfol2
 +  xdgndl   = agauss('-cnr_dgn',mc_std,3)
 +  ddgndl   = xdgndl
 *
 +   cvfb_dgn    = 'fixcnr * skewfix(-902.13e-3,-981.63e-3,-833.13e-3,cnr_dgn)'
 +   cu0_psp_dgn = 'fixcnr * skewfix(46.90e-3,49.75e-3,43.9e-3,cnr_dgn)'
 +   cvfblw_dgn  = 'fixcnr * skewfix(-3.541e-3,-6.5045e-3,0.0945e-3,cnr_dgn)'
 *
 +  tox_psp_dgn = '5.2n + 0.40n*dthkox'          $ gate oxide thickness (meter)
 + vtol_psp_dgn = '0.06*(ddgnvth0*mc_gl_f - cnr_dgn*(1-fixcnr))'
 *                                               $ base threshold voltage (v)
 +  vfb_psp_dgn = '-902.13e-3 + vtol_psp_dgn + cvfb_dgn'
 +    vfblw_dgn = '-3.541e-3 + cvfblw_dgn'
 + lint_psp_dgn = '0.014u + cxl_dgn + clpc_dgn'  $ delta l (one side)
 + wint_psp_dgn = '0.0u + cxw_dgn + cwrx_dgn'    $ delta w (one side)
 *                                               $ base mobility (m**2/vsec)
 +   uo_psp_dgn = '46.90e-3 + 8.8e-3*xu0_dgn + cu0_psp_dgn'
 +  rsw_psp_dgn = '77.61 + 10*dnrdsw'            $ base series resistance (ohm-um)
 + fol1_psp_dgn = '210.0e-3 + 10m*ddgnfol1'      $ first order short channel roll-off and body effect
 + fol2_psp_dgn = '-13.39e-3 + 3m*ddgnfol2'      $ second order short channel roll-off and body effect
 +   dl_psp_dgn = '3.876e-8 + 6.7e-9*ddgndl'     $ length of gate to s/d overlap region
 *
 *                                             dgpfet psp parameters
 *
 +  xdgpfol1 = agauss('cnr_dgp*(1-fixcnr)',mc_std,3)
 +  ddgpfol1 = xdgpfol1
 +  xdgpfol2 = agauss('cnr_dgp*(1-fixcnr)',mc_std,3)
 +  ddgpfol2 = xdgpfol2
 +  xdgpdl   = agauss('-cnr_dgp',mc_std,3)
 +  ddgpdl   = xdgpdl
 *
 +   cvfb_dgp    = 'fixcnr * skewfix(-909.57e-3,-999.57e-3,-843.57e-3,cnr_dgp)'
 +   cvfblw_dgp  = 'fixcnr * skewfix(-0.4365,-0.3548,-0.4920,cnr_dgp)'
 +   cu0_psp_dgp = 'fixcnr * skewfix(0.02203,0.02596,0.01955,cnr_dgp)'
 *
 +  tox_psp_dgp = '5.2n + 0.40n*dthkox'          $ gate oxide thickness (meter)
 *                                               $ base threshold voltage (v)
 + vtol_psp_dgp = '0.055*(ddgpvth0*mc_gl_f + cnr_dgp*(1-fixcnr))'
 +  vfb_psp_dgp = '-909.57e-3 + vtol_psp_dgp + cvfb_dgp'
 +    vfblw_dgp = 13.65e-3
 + lint_psp_dgp = '0.014u + cxl_dgp + clpc_dgp'  $ delta l (one side)
 + wint_psp_dgp = '-0.01u + cxw_dgp + cwrx_dgp'  $ delta w (one side)
 *                                               $ base mobility (m**2/vsec)
 +   uo_psp_dgp = 'exp(-3.8153 + 0.24*xu0_dgp) + cu0_psp_dgp'
 +  rsw_psp_dgp = '75.81 + 15*dprdsw'            $ base series resistance (ohm-um)
 + fol1_psp_dgp = '71.13e-3 + 15m*ddgpfol1'      $ first order short channel roll-off and body effect
 + fol2_psp_dgp = '-1.858e-3 + 7m*ddgpfol2'      $ second order short channel roll-off and body effect
 +   dl_psp_dgp = '3.749e-8 + 7.4e-9*ddgpdl'     $ length of gate to s/d overlap region
 .inc './models.inc'
 * path, component, release: cmrf8sf/reldm/hspice/models/models.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.4 10/11/05 07:55:33
 *
 * ibm cmrf8sf hspice model file include statements
 *
 * please refer to the model reference guide for model usage information
 * and parameter definitions.
 *
 *.hdl './coupled_cpw.va'
 *.hdl './hacap.va'
 *.hdl './mvcap.va'
 *.hdl './esd_modules.va'
 *.hdl './esdnsh_spe.va'
 *.hdl './gsnap.va'
 *.hdl './single_cpw.va'
 .include './bondpad.inc'
 * path, component, release: cmrf8sf/reldm/hspice/models/bondpad.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.4 07/03/28 13:14:13
 * tech:cmrf8sf
 *
 ***************************************************************************
 *
 *  bondpad model (ams type wirebond or c4)
 *
 ***************************************************************************
 *
 *                              in
 *     cox represents oxide      o
 *     capacitance between       +-----------+
 *     bondpad and groundplane.  |           |
 *                        cox1 -----  cox2 -----
 *                             -----       -----
 *                               |           |
 *                     cgp2      |           |
 *                +___||___+     |           |
 *                |   ||   |     |           |
 *                |        |     |           |
 *            +---+-/\/\/\/+---- | ----------+ 2
 *            |     rgp2         |           |
 *            |                  |           |
 *     gp  o--+---+-/\/\/\/+-----+ 1         |
 *                | rgp1   |     |           |
 *                |        |     |           |
 *                +___||___+     |           |
 *                    ||         |           |
 *   rgp and cgp       cgp1      |           |
 *   represent the               |           |
 *   groundplane                ----        ----
 *   resistance and              /\          /\    dns  represents the pn
 *   capacitance.               /  \        /  \   junction diode between
 *                         dns1 ----   dns2 ----   the rx groundplane and
 *                               |           |     the substrate.
 *                               |           |
 *                               +3          +4
 *                               |           |
 *                               /           /     rsb represents the series
 *                               \           \     resistance from dns to a
 *                          rsb1 /      rsb2 /     substrate contact. it has a
 *                               \           \     very high value for bf and pc
 *                               |           |     bondpads effectively removing
 *                               +-----------+     the diode from the circuit.
 *                                     |
 *                                     |
 *                                     o sx (substrate)
 *
 * all elements (cox, cgp, rgp, dns and rsb) are distributed in order to
 * account for high frequency effects.
 *******************************************************************************
 *
 * notes:
 *
 *  1. either length and width or area and perimeter must be specified in
 *     order to get a valid result. otherwise, the internal oxide capacitance
 *     will be set to zero.
 *
 *  2. when specifying area and perimeter, the statistical variation and metal
 *     bias of the width and length of the bondpad will not be calculated.
 *
 *  3. either c4 or wirebond bondpads are supported.
 *     the c4 bondpad consists of a square or rectangular last metal (lm) pad
 *       with the passed-in dimensions (l,w).
 *     the wirebond bondpad consists of a square, rectangular or octagonal last
 *       metal (lm) pad with the passed-in dimensions (l,w).
 *
 *
 *
 *
 *                        <--------------- l ------------------------>
 *                       +-------------------------------------------+  ^
 *                       |                                           |  |
 *                       |                                           |  |
 *                       |                                           |  |
 *                       |                                           |  |
 *                       |             lm                            |  |
 *                       |                                           |  w
 *                       |                                           |  |
 *                       |                                           |  |
 *                       |                                           |  |
 *                       |                                           |  |
 *                       |                                           |  |
 *                       |                                           |  |
 *                       +-------------------------------------------+  v
 *
 *******************************************************************************
 *
 * ibm confidential
 * (c) 2004 ibm corporation
 *
 *******************************************************************************
 *
 *
 .subckt bondpad (in gp sx)
 *
 +    l      =  -1u     $ length of bondpad (m)
 +    w      =  -1u     $ width of bondpad (m)
 +    wbc4   =  -1      $ currently unused
 +    tvw    =  10u     $ currently unused
 +    rect   =  1       $ rectangular (1, default) or octagonal (-1)
 +    tlev1  =  3       $ number of (1x) metal levels in spiral
 +    tlev2  =  2       $ number of (2x) metal levels in spiral
 +    bp     =  2       $ groundplane (bf=2, default)
 *                      $ groundplane (pc=7)
 *                      $ groundplane (m1=8)
 *                      $ groundplane (rx=11)
 +    dtemp  =  0       $ temperature difference between element and
 *                      $ circuit temperature (deg c).
 *
 * skew file conversion table
 + tleval  ='0'
 *
 + lmtvovlp='3u'
 * element multipliers for powerspice
 + cmult='1'
 + rmult='1'
 + lenmult='1'
 + ptvw='tvw*lenmult'
 + rxflfrac='0.20'
 + rxeff='oppcstif-2*rxflfrac*oppcstif'
 + pcflfrac='0.20'
 + pceff='oppcthkf-2*pcflfrac*oppcthkf'
 + m1flfrac='0.09'
 + m1teff='m1t-2*m1flfrac*m1t'
 + m2flfrac='0.09'
 + m2teff='m2t-2*m2flfrac*m2t'
 + mqflfrac='0.09'
 + mqteff='mqt-2*mqflfrac*mqt'
 + lyflfrac='0.09'
 + lyteff='lyt-2*lyflfrac*lyt'
 + e1flfrac='0.00'
 + e1teff='e1t-2*e1flfrac*e1t'
 + maflfrac='0.00'
 + mateff='mat-2*maflfrac*mat'
 + m3flfrac='0.09'
 + m3teff='m3t-2*m3flfrac*m3t'
 + m4flfrac='0.09'
 + m4teff='m4t-2*m4flfrac*m4t'
 + mgflfrac='0.09'
 + mgteff='mgt-2*mgflfrac*mgt'
 *
 * nlev conversion from tlev
 + nlev='tlev1+(tlev2==1)+(tlev2==2)*4'
 *
 * calculations of stack height info.
 + prt3='mat'
 + delpr3='(delma)/1'
 + sect3='e1t'
 + delsec3='(dele1)/1'
 + secprt3='e1mat'
 *
 + prt4='mat'
 + delpr4='(delma)/1'
 + sect4='e1t'
 + delsec4='(dele1)/1'
 + secprt4='e1mat'
 *
 + prt5='mat'
 + delpr5='(delma)/1'
 + sect5='e1t'
 + delsec5='(dele1)/1'
 + secprt5='e1mat'
 *
 + prt6='mat'
 + delpr6='(delma)/1'
 + sect6='e1t'
 + delsec6='(dele1)/1'
 + secprt6='e1mat'
 *
 + prt7='mat'
 + delpr7='(delma)/1'
 + sect7='e1t'
 + delsec7='(dele1)/1'
 + secprt7='e1mat'
 *
 *
 * calculations of primary and secondary.
 + pprt='(nlev==3)*prt3+(nlev==4)*prt4+(nlev==5)*prt5+(nlev==6)*prt6+(nlev==7)*prt7'
 + pdelpr='(nlev==3)*delpr3+(nlev==4)*delpr4+(nlev==5)*delpr5+(nlev==6)*delpr6+(nlev==7)*delpr7'
 + psect='(nlev==3)*sect3+(nlev==4)*sect4+(nlev==5)*sect5+(nlev==6)*sect6+(nlev==7)*sect7'
 + pdelsec='(nlev==3)*delsec3+(nlev==4)*delsec4+(nlev==5)*delsec5+(nlev==6)*delsec6+(nlev==7)*delsec7'
 + psecprt='(nlev==3)*secprt3+(nlev==4)*secprt4+(nlev==5)*secprt5+(nlev==6)*secprt6+(nlev==7)*secprt7'
 + h3='rxeff+pceff+capct+m1teff+m1m2t+m2teff+m2mqt+mqteff+mqlyt+lyteff+lye1t+psect+psecprt+pprt'
 + h4='rxeff+pceff+capct+m1teff+m1m2t+m2teff+m2m3t+m3teff+m3mqt+mqteff+mqlyt+lyteff+lye1t+psect+psecprt+pprt'
 + h5='rxeff+pceff+capct+m1teff+m1m2t+m2teff+m2m3t+m3teff+m3m4t+m4teff+m4mqt+mqteff+mqlyt+lyteff+lye1t+psect+psecprt+pprt'
 + h6='rxeff+pceff+capct+m1teff+m1m2t+m2teff+m2mqt+mqteff+mqmgt+mgteff+mglyt+lyteff+lye1t+psect+psecprt+pprt'
 + h7='rxeff+pceff+capct+m1teff+m1m2t+m2teff+m2m3t+m3teff+m3mqt+mqteff+mqmgt+mgteff+mglyt+lyteff+lye1t+psect+psecprt+pprt'
 + phpr='(nlev==3)*h3+(nlev==4)*h4+(nlev==5)*h5+(nlev==6)*h6+(nlev==7)*h7-pprt'
 + phsec='phpr-psect-psecprt'
 *
 *
 * calculate # sides
 + rbp     ='(rect==1)'                           $ rectangular
 + obp     ='(rect==-1)'                          $ octagonal
 + pn      ='(rbp*4 + obp*8)'                     $ number of sides
 *
 * set width for square or rectangular pad
 + pwp     ='((w*1e6>0)*w + (w*1e6<=0)*l)'        $ w=l if w is not given
 *
 * check to see if length is less than width
 + pw      ='(min(pwp,l)*lenmult+pdelpr)'         $ net width
 + pl      ='(max(pwp,l)*lenmult+pdelpr)'         $ net length
 *
 * calculate appropriate area and perimeter depending on geometry
 + sbp     ='pw*(rbp + obp*(1.4142 -1))'          $ length of shorter side
 + areap   ='(rbp + obp*4.82843)*pwr(sbp,2)'
 + pbarea  ='areap+(pl-pw)*pw'
 + pbperim ='pn*sbp+2*(pl-pw)'
 + parea ='pbarea'
 + pperim='pbperim'
 *
 * calculations of groundplane stack height.
 + phgpsx='(bp==2)*(0)+(bp==8)*(oppcstif+oppcthkf+capct+m1t)+(bp==11)*(0)+(bp==7)*(oppcstif+oppcthkf)'
 + phpreff='phpr-phgpsx'
 + phseceff='phsec-phgpsx'
 *
 * calculations of groundplane resistance
 + gpres='((bp==2)*813.9+(bp==8)*m1rsi+(bp==11)*pcrsi+(bp==7)*pcrsi)*(1/3)*pl/pw'
 + tgp='(bp==2)*(trsub)+(bp==8)*(tm1rs)+(bp==7)*(tpcrsi)+(bp==11)*tpcrsi'
 + rsx='1e9'
 *
 * capacitance coefficients
 + pcprs='e0*4.065/phpreff'
 + pcses='e0*4.041/phseceff'
 + pcprsf='e0*4.065*(2*0.638/(pi-2)*log(pi/2)+2*2.434/pi*log(1+pprt/phpreff))'
 + pcsesf='e0*4.041*(2*0.517/(pi-2)*log(pi/2)+2*1.705/pi*log(1+psect/phseceff))'
 *
 * calculate bondpad to substrate oxide capacitance
 *
 *
 *
 *
 + pcox ='(pcprs*pbarea + pcprsf*pbperim)'
 *
 + csx   ='(2.143e-6*parea)'
 *
 * subcircuit network
 cox1  in 1            c='0.5*pcox'
 cox2  in 2            c='0.5*pcox'
 cgp1  gp 1            c='0.6*csx'
 cgp2  gp 2            c='csx'
 rgp1  gp 1            r='0.5*gpres'       tc1=tgp dtemp=dtemp
 rgp2  gp 2            r='2*gpres'         tc1=tgp dtemp=dtemp
 dns1  3  1    dcsx    area='parea*0.5'    pj='pperim*0.5'
 dns2  4  2    dcsx    area='parea*0.5'    pj='pperim*0.5'
 rsb1  sx 3            r='rsx*2'
 rsb2  sx 4            r='rsx*2'
 *
 * n+ to sx diode
 *
 .model dcsx d
 + level = 1
 +  dcap = 1
 +  tlev = 0
 + tlevc = 0
 +  tref = 25
 +    eg = 1.17
 +   xti = 3.0
 +    is = 1e-20
 +    cj = 0.69m
 +    pb = 0.510
 +    mj = 0.385
 +   cjp = 0.175n
 +   php = 0.670
 +  mjsw = 0.250
 +    vb = 35

 .ends bondpad
 *
 .include './coupledcpw.inc'
 * path, component, release: cmrf8sf/reldm/hspice/models/coupledcpw.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.5 09/03/19 10:37:01
 *
 *>  ibm cmrf8sf "coupledcpw" line model (ma metallization options)
 *
 ***************************************************************************
 *
 *   licensed materials - property of ibm
 *
 *
 *   ibm confidential
 *   (c) 2008 ibm corporation
 *
 *   us government users restricted rights - use, duplication
 *   or disclosure restricted by gsa adp schedule contract with
 *   ibm corporation.
 *
 ***************************************************************************
 * {converted to hspice } simulator lang = spectre
 *
 .subckt  coupledcpw (va1 va2 vb1 vb2 vshield)
 .param
 *
 ***************************************************************************
 *
 * syntax:
 *  x1 va vb coupledcpw
 *  l               = 0.0001   // transmission line length [m]
 *  w               = 4e-06    // transmission line width [m]
 *  s               = 6e-06    // distance to left conductor [m]
 *  d               = 6e-06    // distance to between conductor [m]
 *  wire_opt        = wireopt  // metal option parameter: see table below
 *  layerads        = 11        // signal layer:                    see table below
 *  patternfill     = 1        // pattern fill                     0="no metal fill modelled", and 1="metal fill modelled"
 *  dtemper         = 0        // temperature difference between circuit and signal metal layer (c)
 *  temper            = globally defined temperature (c)
 *  tlev1           --> [3,4,5,6] = [(m1 m2 m3), (m1 m2 m3 m4), (m1 m2 m3 m4 m5), (m1 m2 m3 m4 m5 m6)]
 *  tlev2           --> [2,3]   = [(mq lm), (mq mg lm)]
 *
 ***************************************************************************
 *
 * notes:
 *
 ***************************************************************************
 *
 * notes:
 *
 * this model was created based on the following design manual and beol process assumptions document:
 * design manual                    : cmos8rf (cmrf8sf) design manual: es # 57p9006 ec # j88658, april 24, 2007
 * beol process assumptions document: cmrf8sf beol process           : es # 70p6227 ec # j95133, october 23, 2006
 * the "wireopt" parameter which is internal to this spectre file is set based on tlev1 and tlev2.
 * the internal "wireopt" parameter tells which metal dielectric stack is being used.
 * a list of the wireopt values corresponding to the different beol metal-dielectric
 * stack options and tlev1 and telv2 combinations in cmrf8sf is shown below:
 *
 * "wireopt"     stack         tlev1     tlev2
 * ---------     -----         -----     -----
 * 1             2_1_ly_e1_ma       2         1
 * 2             3_1_ly_e1_ma       3         1
 * 3             2_2_ly_e1_ma       2         2
 * 4             2_3_ly_e1_ma       3         2
 * 5             3_2_ly_e1_ma       4         1
 *
 * every possible metal layer in a technology is assigned a unique number which is used
 * to assign the parameters "layer_sig", "layer_bot", and "layer_top"(see cross-section
 * below). for the cmrf8sf technology, the numbers assigned to every possible metal layer
 * are as follows:
 *
 * "layer_sig"/"layer_bot"/"layer_top"      metal layer
 * -----------------------------------      -----------
 * 1                                        m1
 * 2                                        m2
 * 3                                        m3
 * 4                                        m4
 * 7                                        mq
 * 8                                        mg
 * 9                                        ly
 * 10                                        e1
 * 11                                        ma
 *
 * there are four possible cases of metal crossing lines that are possible to be used by
 * this model distinguished by the parameter "plane". "plane"=0="none" means that no metal
 * crosses above or below the signal layer (silicon substrate below the signal layer).
 * "plane"=1="above" means that metal crosses above the signal layer and the signal layer
 * is open to the silicon substrate below. "plane"=2="below" means that metal crosses below
 * below the signal line (between the signa layer and the si substrate). "plane"=both means
 * that metal crosses the signal line both above and below (as shown in the cross-section)
 * below.
 *
 ***************************************************************************
 *
 *single rc-line cross-section
 *============================
 *
 *xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx crossover (optional)
 *
 *    neighbor           signal              neighbor
 *     -----            --------              -----
 *    |     |  spacing |        |  spacing   |     |
 *    |     |<-------->|        |<---------->|     |        signal layer
 *    |     |          |        |            |     |
 *     -----            --------              -----
 *
 *
 * xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx crossunder (optional)
 *
 *  --------------------------------------------------------
 *  /////////////////// silicon  substrate /////////////////
 *  ////////////////////////////////////////////////////////
 *
 ** single_rc default parameters ******************************************
 *
 +  l              = 0.0001
 +  w              = 4e-06
 +  s              = 6e-06
 +  d              = 6e-06
 +  layerads       = 11
 +  patternfill    = 1
 +  dtemper        = 0
 +  tlev1          = 3
 +  tlev2          = 2
 *
 ** additional constants and parameters *************************************
 *
 *
 +  layer_sig      = 'layerads'
 +  layer_bot      = 'layer_sig'
 +  layer_top      = 'layer_sig'
 +  crosstype      = 0
 +  plane          = 0
 +  crosscapfactor = 1
 +  c_cust         = 1e-10
 +  cc_cust        = 1e-11
 + eo = 8.8542e-12
 + pattern_fill = 'patternfill'
 + wire_opt = '(tlev1-1 + 2*(tlev1==4))*(tlev2==1) + (tlev1+1)*(tlev2==2)'
 *
 ** metal stack ************************************************************
 *
 *
 * put vertical metal positions in model file:
 *
 *
 * 2_1_ly_e1_ma...wireopt=1
 *
 + m1bot1 = 'capct+oppcthkf+oppcstif'
 + m1top1 = 'm1bot1 + m1t'
 + m2bot1 = 'm1top1 + m1m2t'
 + m2top1 = 'm2bot1 + m2t'
 + mqbot1 = 'm2top1 + mxmqt'
 + mqtop1 = 'mqbot1 + mqt'
 + lybot1 = 'mqtop1 + mqlyt'
 + lytop1 = 'lybot1 + lyt'
 + e1bot1 = 'lytop1 + lye1t'
 + e1top1 = 'e1bot1 + e1t'
 + mabot1 = 'e1top1 + e1mat'
 + matop1 = 'mabot1 + mat'
 *
 * 3_1_ly_e1_ma...wireopt=2
 *
 + m1bot2 = 'capct+oppcthkf+oppcstif'
 + m1top2 = 'm1bot2 + m1t'
 + m2bot2 = 'm1top2 + m1m2t'
 + m2top2 = 'm2bot2 + m2t'
 + m3bot2 = 'm2top2 + m2m3t'
 + m3top2 = 'm3bot2 + m3t'
 + mqbot2 = 'm3top2 + mxmqt'
 + mqtop2 = 'mqbot2 + mqt'
 + lybot2 = 'mqtop2 + mqlyt'
 + lytop2 = 'lybot2 + lyt'
 + e1bot2 = 'lytop2 + lye1t'
 + e1top2 = 'e1bot2 + e1t'
 + mabot2 = 'e1top2 + e1mat'
 + matop2 = 'mabot2 + mat'
 *
 * 2_2_ly_e1_ma...wireopt=3
 *
 + m1bot3 = 'capct+oppcthkf+oppcstif'
 + m1top3 = 'm1bot3 + m1t'
 + m2bot3 = 'm1top3 + m1m2t'
 + m2top3 = 'm2bot3 + m2t'
 + mqbot3 = 'm2top3 + mxmqt'
 + mqtop3 = 'mqbot3 + mqt'
 + mgbot3 = 'mqtop3 + mqmgt'
 + mgtop3 = 'mgbot3 + mgt'
 + lybot3 = 'mgtop3 + mqlyt'
 + lytop3 = 'lybot3 + lyt'
 + e1bot3 = 'lytop3 + lye1t'
 + e1top3 = 'e1bot3 + e1t'
 + mabot3 = 'e1top3 + e1mat'
 + matop3 = 'mabot3 + mat'
 *
 * 2_3_ly_e1_ma...wireopt=4
 *
 + m1bot4 = 'capct+oppcthkf+oppcstif'
 + m1top4 = 'm1bot4 + m1t'
 + m2bot4 = 'm1top4 + m1m2t'
 + m2top4 = 'm2bot4 + m2t'
 + m3bot4 = 'm2top4 + m2m3t'
 + m3top4 = 'm3bot4 + m3t'
 + mqbot4 = 'm3top4 + mxmqt'
 + mqtop4 = 'mqbot4 + mqt'
 + mgbot4 = 'mqtop4 + mqmgt'
 + mgtop4 = 'mgbot4 + mgt'
 + lybot4 = 'mgtop4 + mqlyt'
 + lytop4 = 'lybot4 + lyt'
 + e1bot4 = 'lytop4 + lye1t'
 + e1top4 = 'e1bot4 + e1t'
 + mabot4 = 'e1top4 + e1mat'
 + matop4 = 'mabot4 + mat'
 *
 * 3_2_ly_e1_ma...wireopt=5
 *
 + m1bot5 = 'capct+oppcthkf+oppcstif'
 + m1top5 = 'm1bot5 + m1t'
 + m2bot5 = 'm1top5 + m1m2t'
 + m2top5 = 'm2bot5 + m2t'
 + m3bot5 = 'm2top5 + m2m3t'
 + m3top5 = 'm3bot5 + m3t'
 + m4bot5 = 'm3top5 + m3m4t'
 + m4top5 = 'm4bot5 + m4t'
 + mqbot5 = 'm4top5 + mxmqt'
 + mqtop5 = 'mqbot5 + mqt'
 + lybot5 = 'mqtop5 + mqlyt'
 + lytop5 = 'lybot5 + lyt'
 + e1bot5 = 'lytop5 + lye1t'
 + e1top5 = 'e1bot5 + e1t'
 + mabot5 = 'e1top5 + e1mat'
 + matop5 = 'mabot5 + mat'
 *
 * end of vertical metal position entries:
 *
 *
 * put nominal vertical metal positions in model file:
 *
 *
 * 2_1_ly_e1_ma...wireopt=1
 *
 + m1bot1_n = 'capct+oppcthkn+oppcstin'
 + m1top1_n = 'm1bot1 + m1t'
 + m2bot1_n = 'm1top1 + m1m2t'
 + m2top1_n = 'm2bot1 + m2t'
 + mqbot1_n = 'm2top1 + mxmqt'
 + mqtop1_n = 'mqbot1 + mqt'
 + lybot1_n = 'mqtop1 + mqlyt'
 + lytop1_n = 'lybot1 + lyt'
 + e1bot1_n = 'lytop1 + lye1t'
 + e1top1_n = 'e1bot1 + e1t'
 + mabot1_n = 'e1top1 + e1mat'
 + matop1_n = 'mabot1 + mat'
 *
 * 3_1_ly_e1_ma...wireopt=2
 *
 + m1bot2_n = 'capct+oppcthkn+oppcstin'
 + m1top2_n = 'm1bot2 + m1t'
 + m2bot2_n = 'm1top2 + m1m2t'
 + m2top2_n = 'm2bot2 + m2t'
 + m3bot2_n = 'm2top2 + m2m3t'
 + m3top2_n = 'm3bot2 + m3t'
 + mqbot2_n = 'm3top2 + mxmqt'
 + mqtop2_n = 'mqbot2 + mqt'
 + lybot2_n = 'mqtop2 + mqlyt'
 + lytop2_n = 'lybot2 + lyt'
 + e1bot2_n = 'lytop2 + lye1t'
 + e1top2_n = 'e1bot2 + e1t'
 + mabot2_n = 'e1top2 + e1mat'
 + matop2_n = 'mabot2 + mat'
 *
 * 2_2_ly_e1_ma...wireopt=3
 *
 + m1bot3_n = 'capct+oppcthkn+oppcstin'
 + m1top3_n = 'm1bot3 + m1t'
 + m2bot3_n = 'm1top3 + m1m2t'
 + m2top3_n = 'm2bot3 + m2t'
 + mqbot3_n = 'm2top3 + mxmqt'
 + mqtop3_n = 'mqbot3 + mqt'
 + mgbot3_n = 'mqtop3 + mqmgt'
 + mgtop3_n = 'mgbot3 + mgt'
 + lybot3_n = 'mgtop3 + mqlyt'
 + lytop3_n = 'lybot3 + lyt'
 + e1bot3_n = 'lytop3 + lye1t'
 + e1top3_n = 'e1bot3 + e1t'
 + mabot3_n = 'e1top3 + e1mat'
 + matop3_n = 'mabot3 + mat'
 *
 * 2_3_ly_e1_ma...wireopt=4
 *
 + m1bot4_n = 'capct+oppcthkn+oppcstin'
 + m1top4_n = 'm1bot4 + m1t'
 + m2bot4_n = 'm1top4 + m1m2t'
 + m2top4_n = 'm2bot4 + m2t'
 + m3bot4_n = 'm2top4 + m2m3t'
 + m3top4_n = 'm3bot4 + m3t'
 + mqbot4_n = 'm3top4 + mxmqt'
 + mqtop4_n = 'mqbot4 + mqt'
 + mgbot4_n = 'mqtop4 + mqmgt'
 + mgtop4_n = 'mgbot4 + mgt'
 + lybot4_n = 'mgtop4 + mqlyt'
 + lytop4_n = 'lybot4 + lyt'
 + e1bot4_n = 'lytop4 + lye1t'
 + e1top4_n = 'e1bot4 + e1t'
 + mabot4_n = 'e1top4 + e1mat'
 + matop4_n = 'mabot4 + mat'
 *
 * 3_2_ly_e1_ma...wireopt=5
 *
 + m1bot5_n = 'capct+oppcthkn+oppcstin'
 + m1top5_n = 'm1bot5 + m1t'
 + m2bot5_n = 'm1top5 + m1m2t'
 + m2top5_n = 'm2bot5 + m2t'
 + m3bot5_n = 'm2top5 + m2m3t'
 + m3top5_n = 'm3bot5 + m3t'
 + m4bot5_n = 'm3top5 + m3m4t'
 + m4top5_n = 'm4bot5 + m4t'
 + mqbot5_n = 'm4top5 + mxmqt'
 + mqtop5_n = 'mqbot5 + mqt'
 + lybot5_n = 'mqtop5 + mqlyt'
 + lytop5_n = 'lybot5 + lyt'
 + e1bot5_n = 'lytop5 + lye1t'
 + e1top5_n = 'e1bot5 + e1t'
 + mabot5_n = 'e1top5 + e1mat'
 + matop5_n = 'mabot5 + mat'
 *
 * end of nominal vertical metal position entries:
 *
 *
 * create stack definition variables:
 *
 + ly1  = '(wire_opt==1)'
 + ly2  = '(wire_opt==2)'
 + ly3  = '(wire_opt==3)'
 + ly4  = '(wire_opt==4)'
 + ly5  = '(wire_opt==5)'
 *
 * end stack definition variables:
 *
 + dlw = 'delm1*(layer_sig==1) + delm2*(layer_sig==2) + delm3*(layer_sig==3) + delm4*(layer_sig==4) + delmq*(layer_sig==7) + delmg*(layer_sig==8) + delly*(layer_sig==9) + dele1*(layer_sig==10) + delma*(layer_sig==11)'
 *
 + w_l       = 'w + dlw'
 + s_l       = 'abs(s - dlw)'
 + d_l       = 'abs(d - dlw)'
 *
 + cf = 'crosscapfactor'
 *
 * begin dielectric stack definition:
 *
 + m1_eps_side = 3.8621
 + m2_eps_side = 3.6
 + m3_eps_side = 3.6
 + m4_eps_side = 3.6
 + mq_eps_side = 3.6
 + mg_eps_side = 3.6
 + ly_eps_side = 4.5413
 + e1_eps_side = 4.1677
 + ma_eps_side = 3.8388
 *
 + layer_eps_side = 'm1_eps_side*(layer_sig==1) + m2_eps_side*(layer_sig==2) + m3_eps_side*(layer_sig==3) + m4_eps_side*(layer_sig==4) + mq_eps_side*(layer_sig==7) + mg_eps_side*(layer_sig==8) + ly_eps_side*(layer_sig==9) + e1_eps_side*(layer_sig==10) + ma_eps_side*(layer_sig==11)'
 + under_eps_side = 'm1_eps_side*(layer_bot==1) + m2_eps_side*(layer_bot==2) + m3_eps_side*(layer_bot==3) + m4_eps_side*(layer_bot==4) + mq_eps_side*(layer_bot==7) + mg_eps_side*(layer_bot==8) + ly_eps_side*(layer_bot==9) + e1_eps_side*(layer_bot==10) + ma_eps_side*(layer_bot==11)'
 + over_eps_side  = 'm1_eps_side*(layer_top==1) + m2_eps_side*(layer_top==2) + m3_eps_side*(layer_top==3) + m4_eps_side*(layer_top==4) + mq_eps_side*(layer_top==7) + mg_eps_side*(layer_top==8) + ly_eps_side*(layer_top==9) + e1_eps_side*(layer_top==10) + ma_eps_side*(layer_top==11)'
 *
 + m1_eps_side_over = 7
 + m2_eps_side_over = 7
 + m3_eps_side_over = 7
 + m4_eps_side_over = 7
 + mq_eps_side_over = 7
 + mg_eps_side_over = 7
 + ly_eps_side_over = 7
 + e1_eps_side_over = 7
 + ma_eps_side_over = 4.1
 *
 + layer_eps_side_over  = 'm1_eps_side_over*(layer_sig==1) + m2_eps_side_over*(layer_sig==2) + m3_eps_side_over*(layer_sig==3) + m4_eps_side_over*(layer_sig==4) + mq_eps_side_over*(layer_sig==7) + mg_eps_side_over*(layer_sig==8) + ly_eps_side_over*(layer_sig==9) + e1_eps_side_over*(layer_sig==10) + ma_eps_side_over*(layer_sig==11)'
 + under_eps_side_over  = 'm1_eps_side_over*(layer_bot==1) + m2_eps_side_over*(layer_bot==2) + m3_eps_side_over*(layer_bot==3) + m4_eps_side_over*(layer_bot==4) + mq_eps_side_over*(layer_bot==7) + mg_eps_side_over*(layer_bot==8) + ly_eps_side_over*(layer_bot==9) + e1_eps_side_over*(layer_bot==10) + ma_eps_side_over*(layer_bot==11)'
 + over_eps_side_over   = 'm1_eps_side_over*(layer_top==1) + m2_eps_side_over*(layer_top==2) + m3_eps_side_over*(layer_top==3) + m4_eps_side_over*(layer_top==4) + mq_eps_side_over*(layer_top==7) + mg_eps_side_over*(layer_top==8) + ly_eps_side_over*(layer_top==9) + e1_eps_side_over*(layer_top==10) + ma_eps_side_over*(layer_top==11)'
 *
 *
 *                     2_1_ly_e1_ma          3_1_ly_e1_ma          2_2_ly_e1_ma          2_3_ly_e1_ma          3_2_ly_e1_ma
 *
 + m1_bot_4eps =       'ly1*(1.4129e-07) +    ly2*(1.4129e-07) +    ly3*(1.4129e-07) +    ly4*(1.4129e-07) +    ly5*(1.4129e-07)'
 + m2_bot_4eps =       'ly1*(3.0183e-07) +    ly2*(3.0183e-07) +    ly3*(3.0183e-07) +    ly4*(3.0183e-07) +    ly5*(3.0183e-07)'
 + m3_bot_4eps =                             'ly2*(4.7442e-07) +                          ly4*(4.7442e-07) +    ly5*(4.7442e-07)'
 + m4_bot_4eps =                                                                                               'ly5*(6.4701e-07)'
 + mq_bot_4eps =       'ly1*(5.5505e-07) +    ly2*(7.2764e-07) +    ly3*(5.5505e-07) +    ly4*(7.2764e-07) +    ly5*(9.0023e-07)'
 + mg_bot_4eps =                                                   'ly3*(8.7217e-07) +    ly4*(1.0448e-06)'
 + ly_bot_4eps =       'ly1*(1.0422e-06) +    ly2*(1.2148e-06) +    ly3*(1.3593e-06) +    ly4*(1.5319e-06) +    ly5*(1.3874e-06)'
 + e1_bot_4eps =       'ly1*(1.9622e-06) +    ly2*(2.1348e-06) +    ly3*(2.2793e-06) +    ly4*(2.4519e-06) +    ly5*(2.3074e-06)'
 + ma_bot_4eps =       'ly1*(3.5017e-06) +    ly2*(3.6743e-06) +    ly3*(3.8188e-06) +    ly4*(3.9914e-06) +    ly5*(3.8469e-06)'
 *
 + layer_bot_4eps = 'm1_bot_4eps*(layer_sig==1) + m2_bot_4eps*(layer_sig==2) + m3_bot_4eps*(layer_sig==3) + m4_bot_4eps*(layer_sig==4) + mq_bot_4eps*(layer_sig==7) + mg_bot_4eps*(layer_sig==8) + ly_bot_4eps*(layer_sig==9) + e1_bot_4eps*(layer_sig==10) + ma_bot_4eps*(layer_sig==11)'
 + under_bot_4eps = 'm1_bot_4eps*(layer_bot==1) + m2_bot_4eps*(layer_bot==2) + m3_bot_4eps*(layer_bot==3) + m4_bot_4eps*(layer_bot==4) + mq_bot_4eps*(layer_bot==7) + mg_bot_4eps*(layer_bot==8) + ly_bot_4eps*(layer_bot==9) + e1_bot_4eps*(layer_bot==10) + ma_bot_4eps*(layer_bot==11)'
 + over_bot_4eps =  'm1_bot_4eps*(layer_top==1) + m2_bot_4eps*(layer_top==2) + m3_bot_4eps*(layer_top==3) + m4_bot_4eps*(layer_top==4) + mq_bot_4eps*(layer_top==7) + mg_bot_4eps*(layer_top==8) + ly_bot_4eps*(layer_top==9) + e1_bot_4eps*(layer_top==10) + ma_bot_4eps*(layer_top==11)'
 *
 *                     2_1_ly_e1_ma          3_1_ly_e1_ma          2_2_ly_e1_ma          2_3_ly_e1_ma          3_2_ly_e1_ma
 *
 + m1_top_4eps =       'ly1*(2.1813e-07) +    ly2*(2.1813e-07) +    ly3*(2.1813e-07) +    ly4*(2.1813e-07) +    ly5*(2.1813e-07)'
 + m2_top_4eps =       'ly1*(3.9072e-07) +    ly2*(3.9072e-07) +    ly3*(3.9072e-07) +    ly4*(3.9072e-07) +    ly5*(3.9072e-07)'
 + m3_top_4eps =                             'ly2*(5.6331e-07) +                          ly4*(5.6331e-07) +    ly5*(5.6331e-07)'
 + m4_top_4eps =                                                                                               'ly5*(7.359e-07)'
 + mq_top_4eps =       'ly1*(7.0783e-07) +    ly2*(8.8042e-07) +    ly3*(7.0783e-07) +    ly4*(8.8042e-07) +    ly5*(1.053e-06)'
 + mg_top_4eps =                                                   'ly3*(1.0249e-06) +    ly4*(1.1975e-06)'
 + ly_top_4eps =       'ly1*(1.1473e-06) +    ly2*(1.3199e-06) +    ly3*(1.4645e-06) +    ly4*(1.637e-06) +     ly5*(1.4925e-06)'
 + e1_top_4eps =       'ly1*(2.6869e-06) +    ly2*(2.8594e-06) +    ly3*(3.004e-06) +     ly4*(3.1766e-06) +    ly5*(3.032e-06)'
 + ma_top_4eps =       'ly1*(4.5951e-06) +    ly2*(4.7677e-06) +    ly3*(4.9122e-06) +    ly4*(5.0848e-06) +    ly5*(4.9403e-06)'
 *                             2_1_ly_e1_ma          3_1_ly_e1_ma          2_2_ly_e1_ma          2_3_ly_e1_ma          3_2_ly_e1_ma
 *
 + m1_top_fill =               'ly1*(m1tn) +          ly2*(m1tn) +          ly3*(m1tn) +          ly4*(m1tn) +          ly5*(m1tn)'
 + m2_top_fill = 'm1_top_fill + ly1*(m2tn) +          ly2*(m2tn) +          ly3*(m2tn) +          ly4*(m2tn) +          ly5*(m2tn)'
 + m3_top_fill = 'm2_top_fill +                       ly2*(m3tn) +                                ly4*(m3tn) +          ly5*(m3tn)'
 + m4_top_fill = 'm3_top_fill +                                                                                         ly5*(m4tn)'
 + mq_top_fill = 'm4_top_fill + ly1*(mqtn) +          ly2*(mqtn) +          ly3*(mqtn) +          ly4*(mqtn) +          ly5*(mqtn)'
 + mg_top_fill = 'mq_top_fill +                                             ly3*(mgtn) +          ly4*(mgtn)'
 + ly_top_fill = 'mg_top_fill + ly1*(lytn) +          ly2*(lytn) +          ly3*(lytn) +          ly4*(lytn) +          ly5*(lytn)'
 + e1_top_fill = 'ly_top_fill + ly1*(e1tn) +          ly2*(e1tn) +          ly3*(e1tn) +          ly4*(e1tn) +          ly5*(e1tn)'
 + ma_top_fill = 'e1_top_fill + ly1*(matn) +          ly2*(matn) +          ly3*(matn) +          ly4*(matn) +          ly5*(matn)'
 *
 *                             2_1_ly_e1_ma          3_1_ly_e1_ma          2_2_ly_e1_ma          2_3_ly_e1_ma          3_2_ly_e1_ma
 *
 + m1_bot_fill = 'm1_top_fill - ly1*(m1tn) -          ly2*(m1tn) -          ly3*(m1tn) -          ly4*(m1tn) -          ly5*(m1tn)'
 + m2_bot_fill = 'm2_top_fill - ly1*(m2tn) -          ly2*(m2tn) -          ly3*(m2tn) -          ly4*(m2tn) -          ly5*(m2tn)'
 + m3_bot_fill = 'm3_top_fill -                       ly2*(m3tn) -                                ly4*(m3tn) -          ly5*(m3tn)'
 + m4_bot_fill = 'm4_top_fill -                                                                                         ly5*(m4tn)'
 + mq_bot_fill = 'mq_top_fill - ly1*(mqtn) -          ly2*(mqtn) -          ly3*(mqtn) -          ly4*(mqtn) -          ly5*(mqtn)'
 + mg_bot_fill = 'mg_top_fill -                                             ly3*(mgtn) -          ly4*(mgtn)'
 + ly_bot_fill = 'ly_top_fill - ly1*(lytn) -          ly2*(lytn) -          ly3*(lytn) -          ly4*(lytn) -          ly5*(lytn)'
 + e1_bot_fill = 'e1_top_fill - ly1*(e1tn) -          ly2*(e1tn) -          ly3*(e1tn) -          ly4*(e1tn) -          ly5*(e1tn)'
 + ma_bot_fill = 'ma_top_fill - ly1*(matn) -          ly2*(matn) -          ly3*(matn) -          ly4*(matn) -          ly5*(matn)'
 *
 + layer_top_4eps = 'm1_top_4eps*(layer_sig==1) + m2_top_4eps*(layer_sig==2) + m3_top_4eps*(layer_sig==3) + m4_top_4eps*(layer_sig==4) + mq_top_4eps*(layer_sig==7) + mg_top_4eps*(layer_sig==8) + ly_top_4eps*(layer_sig==9) + e1_top_4eps*(layer_sig==10) + ma_top_4eps*(layer_sig==11)'
 + under_top_4eps = 'm1_top_4eps*(layer_bot==1) + m2_top_4eps*(layer_bot==2) + m3_top_4eps*(layer_bot==3) + m4_top_4eps*(layer_bot==4) + mq_top_4eps*(layer_bot==7) + mg_top_4eps*(layer_bot==8) + ly_top_4eps*(layer_bot==9) + e1_top_4eps*(layer_bot==10) + ma_top_4eps*(layer_bot==11)'
 + over_top_4eps  = 'm1_top_4eps*(layer_top==1) + m2_top_4eps*(layer_top==2) + m3_top_4eps*(layer_top==3) + m4_top_4eps*(layer_top==4) + mq_top_4eps*(layer_top==7) + mg_top_4eps*(layer_top==8) + ly_top_4eps*(layer_top==9) + e1_top_4eps*(layer_top==10) + ma_top_4eps*(layer_top==11)'
 *
 + crossover_top_fill   = 'm1_top_fill*(layer_top==1) + m2_top_fill*(layer_top==2) + m3_top_fill*(layer_top==3) + m4_top_fill*(layer_top==4) + mq_top_fill*(layer_top==7) + mg_top_fill*(layer_top==8) + ly_top_fill*(layer_top==9) + e1_top_fill*(layer_top==10) + ma_top_fill*(layer_top==11)'
 + signal_top_fill      = 'm1_top_fill*(layer_sig==1) + m2_top_fill*(layer_sig==2) + m3_top_fill*(layer_sig==3) + m4_top_fill*(layer_sig==4) + mq_top_fill*(layer_sig==7) + mg_top_fill*(layer_sig==8) + ly_top_fill*(layer_sig==9) + e1_top_fill*(layer_sig==10) + ma_top_fill*(layer_sig==11)'
 + crossunder_top_fill  = 'm1_top_fill*(layer_bot==1) + m2_top_fill*(layer_bot==2) + m3_top_fill*(layer_bot==3) + m4_top_fill*(layer_bot==4) + mq_top_fill*(layer_bot==7) + mg_top_fill*(layer_bot==8) + ly_top_fill*(layer_bot==9) + e1_top_fill*(layer_bot==10) + ma_top_fill*(layer_bot==11)'
 + crossover_bot_fill   = 'm1_bot_fill*(layer_top==1) + m2_bot_fill*(layer_top==2) + m3_bot_fill*(layer_top==3) + m4_bot_fill*(layer_top==4) + mq_bot_fill*(layer_top==7) + mg_bot_fill*(layer_top==8) + ly_bot_fill*(layer_top==9) + e1_bot_fill*(layer_top==10) + ma_bot_fill*(layer_top==11)'
 + signal_bot_fill      = 'm1_bot_fill*(layer_sig==1) + m2_bot_fill*(layer_sig==2) + m3_bot_fill*(layer_sig==3) + m4_bot_fill*(layer_sig==4) + mq_bot_fill*(layer_sig==7) + mg_bot_fill*(layer_sig==8) + ly_bot_fill*(layer_sig==9) + e1_bot_fill*(layer_sig==10) + ma_bot_fill*(layer_sig==11)'
 + crossunder_bot_fill  = 'm1_bot_fill*(layer_bot==1) + m2_bot_fill*(layer_bot==2) + m3_bot_fill*(layer_bot==3) + m4_bot_fill*(layer_bot==4) + mq_bot_fill*(layer_bot==7) + mg_bot_fill*(layer_bot==8) + ly_bot_fill*(layer_bot==9) + e1_bot_fill*(layer_bot==10) + ma_bot_fill*(layer_bot==11)'
 *
 + h_fill_under = '(signal_bot_fill - crossunder_top_fill)*(plane == 2 || plane == 3) + (0.0)*(plane == 0 || plane == 1)'
 + h_fill_over  = '(crossover_bot_fill - signal_top_fill )*(plane == 1 || plane == 3) + (0.0)*(plane == 0 || plane == 2)'
 *
 + w_fill  = '1e-6*(0.9*(layer_sig==1) + 0.9*(layer_sig==2) + 0.9*(layer_sig==3) + 0.9*(layer_sig==4) + 1.2*(layer_sig==7) + 1.2*(layer_sig==8) + 6*(layer_sig==9) + 6*(layer_sig==10) + 11*(layer_sig==11))'
 + s_fill  = '1e-6*(0.3*(layer_sig==1) + 0.3*(layer_sig==2) + 0.3*(layer_sig==3) + 0.3*(layer_sig==4) + 0.4*(layer_sig==7) + 0.4*(layer_sig==8) + 2*(layer_sig==9) + 2*(layer_sig==10) + 5*(layer_sig==11))'
 + sf2sh   = '1e-6*(0.4*(layer_sig==1) + 0.4*(layer_sig==2) + 0.4*(layer_sig==3) + 0.4*(layer_sig==4) + 0.8*(layer_sig==7) + 0.8*(layer_sig==8) + 4*(layer_sig==9) + 4*(layer_sig==10) + 8*(layer_sig==11))'
 *
 *
 + delta_wel   = '0.0115*(layer_sig==1) + 0*(layer_sig==2) + 0*(layer_sig==3) + 0*(layer_sig==4) + 0.022*(layer_sig==7) + 0.022*(layer_sig==8) + 0*(layer_sig==9) + 0*(layer_sig==10) + 0*(layer_sig==11)'
 + delta_wphys = '0*(layer_sig==1) + -0.01*(layer_sig==2) + -0.01*(layer_sig==3) + -0.01*(layer_sig==4) + -0.01*(layer_sig==7) + -0.01*(layer_sig==8) + 0.01*(layer_sig==9) + 0*(layer_sig==10) + -0.08*(layer_sig==11)'
 + wo          = '2*(layer_sig==1) + 2*(layer_sig==2) + 2*(layer_sig==3) + 2*(layer_sig==4) + 2*(layer_sig==7) + 2*(layer_sig==8) + 2*(layer_sig==9) + 2*(layer_sig==10) + 4*(layer_sig==11)'
 + sopc        = '0.9999*(layer_sig==1) + 0.9999*(layer_sig==2) + 0.9999*(layer_sig==3) + 0.9999*(layer_sig==4) + 0.9999*(layer_sig==7) + 0.9999*(layer_sig==8) + 0.9999*(layer_sig==9) + 0.9999*(layer_sig==10) + 0.9999*(layer_sig==11)'
 + wopc        = '0.9999*(layer_sig==1) + 0.9999*(layer_sig==2) + 0.9999*(layer_sig==3) + 0.9999*(layer_sig==4) + 0.9999*(layer_sig==7) + 0.9999*(layer_sig==8) + 0.9999*(layer_sig==9) + 0.9999*(layer_sig==10) + 0.9999*(layer_sig==11)'
 + wlim        = '2*(layer_sig==1) + 2*(layer_sig==2) + 2*(layer_sig==3) + 2*(layer_sig==4) + 2*(layer_sig==7) + 2*(layer_sig==8) + 2*(layer_sig==9) + 2*(layer_sig==10) + 4*(layer_sig==11)'
 + rsquare     = 'm1rs*(layer_sig==1) + m2rs*(layer_sig==2) + m3rs*(layer_sig==3) + m4rs*(layer_sig==4) + mqrs*(layer_sig==7) + mgrs*(layer_sig==8) + lyrs*(layer_sig==9) + e1rs*(layer_sig==10) + mars*(layer_sig==11)'
 + tcr         = 'tm1rs*(layer_sig==1) + tm2rs*(layer_sig==2) + tm3rs*(layer_sig==3) + tm4rs*(layer_sig==4) + tmqrs*(layer_sig==7) + tmgrs*(layer_sig==8) + tlyrs*(layer_sig==9) + te1rs*(layer_sig==10) + tmars*(layer_sig==11)'
 *
 + si_top = 0
 *
 + layer_bot1 =   'ly1*(m1bot1*(layer_sig==1)      + m2bot1*(layer_sig==2)     + mqbot1*(layer_sig==7)     + lybot1*(layer_sig==9)     + e1bot1*(layer_sig==10)    + mabot1*(layer_sig==11)   )'
 + layer_bot2 =   'ly2*(m1bot2*(layer_sig==1)      + m2bot2*(layer_sig==2)     + m3bot2*(layer_sig==3)     + mqbot2*(layer_sig==7)     + lybot2*(layer_sig==9)     + e1bot2*(layer_sig==10)    + mabot2*(layer_sig==11)   )'
 + layer_bot3 =   'ly3*(m1bot3*(layer_sig==1)      + m2bot3*(layer_sig==2)     + mqbot3*(layer_sig==7)     + mgbot3*(layer_sig==8)     + lybot3*(layer_sig==9)     + e1bot3*(layer_sig==10)    + mabot3*(layer_sig==11)   )'
 + layer_bot4 =   'ly4*(m1bot4*(layer_sig==1)      + m2bot4*(layer_sig==2)     + m3bot4*(layer_sig==3)     + mqbot4*(layer_sig==7)     + mgbot4*(layer_sig==8)     + lybot4*(layer_sig==9)     + e1bot4*(layer_sig==10)    + mabot4*(layer_sig==11)   )'
 + layer_bot5 =   'ly5*(m1bot5*(layer_sig==1)      + m2bot5*(layer_sig==2)     + m3bot5*(layer_sig==3)     + m4bot5*(layer_sig==4)     + mqbot5*(layer_sig==7)     + lybot5*(layer_sig==9)     + e1bot5*(layer_sig==10)    + mabot5*(layer_sig==11)   )'
 *
 + layer_botf = 'layer_bot1 + layer_bot2 + layer_bot3 + layer_bot4 + layer_bot5'
 *
 + over_top1 =   'ly1*(m1top1*(layer_bot==1)      + m2top1*(layer_bot==2)     + mqtop1*(layer_bot==7)     + lytop1*(layer_bot==9)     + e1top1*(layer_bot==10)    + matop1*(layer_bot==11)   )'
 + over_top2 =   'ly2*(m1top2*(layer_bot==1)      + m2top2*(layer_bot==2)     + m3top2*(layer_bot==3)     + mqtop2*(layer_bot==7)     + lytop2*(layer_bot==9)     + e1top2*(layer_bot==10)    + matop2*(layer_bot==11)   )'
 + over_top3 =   'ly3*(m1top3*(layer_bot==1)      + m2top3*(layer_bot==2)     + mqtop3*(layer_bot==7)     + mgtop3*(layer_bot==8)     + lytop3*(layer_bot==9)     + e1top3*(layer_bot==10)    + matop3*(layer_bot==11)   )'
 + over_top4 =   'ly4*(m1top4*(layer_bot==1)      + m2top4*(layer_bot==2)     + m3top4*(layer_bot==3)     + mqtop4*(layer_bot==7)     + mgtop4*(layer_bot==8)     + lytop4*(layer_bot==9)     + e1top4*(layer_bot==10)    + matop4*(layer_bot==11)   )'
 + over_top5 =   'ly5*(m1top5*(layer_bot==1)      + m2top5*(layer_bot==2)     + m3top5*(layer_bot==3)     + m4top5*(layer_bot==4)     + mqtop5*(layer_bot==7)     + lytop5*(layer_bot==9)     + e1top5*(layer_bot==10)    + matop5*(layer_bot==11)   )'
 *
 + over_topf = 'over_top1 + over_top2 + over_top3 + over_top4 + over_top5'
 *
 + under_bot1 =   'ly1*(m1bot1*(layer_top==1)      + m2bot1*(layer_top==2)     + mqbot1*(layer_top==7)     + lybot1*(layer_top==9)     + e1bot1*(layer_top==10)    + mabot1*(layer_top==11)   )'
 + under_bot2 =   'ly2*(m1bot2*(layer_top==1)      + m2bot2*(layer_top==2)     + m3bot2*(layer_top==3)     + mqbot2*(layer_top==7)     + lybot2*(layer_top==9)     + e1bot2*(layer_top==10)    + mabot2*(layer_top==11)   )'
 + under_bot3 =   'ly3*(m1bot3*(layer_top==1)      + m2bot3*(layer_top==2)     + mqbot3*(layer_top==7)     + mgbot3*(layer_top==8)     + lybot3*(layer_top==9)     + e1bot3*(layer_top==10)    + mabot3*(layer_top==11)   )'
 + under_bot4 =   'ly4*(m1bot4*(layer_top==1)      + m2bot4*(layer_top==2)     + m3bot4*(layer_top==3)     + mqbot4*(layer_top==7)     + mgbot4*(layer_top==8)     + lybot4*(layer_top==9)     + e1bot4*(layer_top==10)    + mabot4*(layer_top==11)   )'
 + under_bot5 =   'ly5*(m1bot5*(layer_top==1)      + m2bot5*(layer_top==2)     + m3bot5*(layer_top==3)     + m4bot5*(layer_top==4)     + mqbot5*(layer_top==7)     + lybot5*(layer_top==9)     + e1bot5*(layer_top==10)    + mabot5*(layer_top==11)   )'
 *
 + under_botf = 'under_bot1 + under_bot2 + under_bot3 + under_bot4 + under_bot5'
 *
 + layer_top1 =   'ly1*(m1top1*(layer_sig==1)      + m2top1*(layer_sig==2)     + mqtop1*(layer_sig==7)     + lytop1*(layer_sig==9)     + e1top1*(layer_sig==10)    + matop1*(layer_sig==11)   )'
 + layer_top2 =   'ly2*(m1top2*(layer_sig==1)      + m2top2*(layer_sig==2)     + m3top2*(layer_sig==3)     + mqtop2*(layer_sig==7)     + lytop2*(layer_sig==9)     + e1top2*(layer_sig==10)    + matop2*(layer_sig==11)   )'
 + layer_top3 =   'ly3*(m1top3*(layer_sig==1)      + m2top3*(layer_sig==2)     + mqtop3*(layer_sig==7)     + mgtop3*(layer_sig==8)     + lytop3*(layer_sig==9)     + e1top3*(layer_sig==10)    + matop3*(layer_sig==11)   )'
 + layer_top4 =   'ly4*(m1top4*(layer_sig==1)      + m2top4*(layer_sig==2)     + m3top4*(layer_sig==3)     + mqtop4*(layer_sig==7)     + mgtop4*(layer_sig==8)     + lytop4*(layer_sig==9)     + e1top4*(layer_sig==10)    + matop4*(layer_sig==11)   )'
 + layer_top5 =   'ly5*(m1top5*(layer_sig==1)      + m2top5*(layer_sig==2)     + m3top5*(layer_sig==3)     + m4top5*(layer_sig==4)     + mqtop5*(layer_sig==7)     + lytop5*(layer_sig==9)     + e1top5*(layer_sig==10)    + matop5*(layer_sig==11)   )'
 *
 + layer_topf = 'layer_top1 + layer_top2 + layer_top3 + layer_top4 + layer_top5'
 *
 *
 + h1 = '1e-15*(abs( layer_botf - over_topf  )==0) + abs( layer_botf - over_topf  )'
 + h2 = '1e-15*(abs( under_botf - layer_topf )==0) + abs( under_botf - layer_topf )'
 + th = '1e-15*(abs( layer_topf - layer_botf )==0) + abs( layer_topf - layer_botf )'
 *
 * create nominal versions of vertical dimension computations:
 *
 + layer_bot1_n =   'ly1*(m1bot1_n*(layer_sig==1)      + m2bot1_n*(layer_sig==2)     + mqbot1_n*(layer_sig==7)     + lybot1_n*(layer_sig==9)     + e1bot1_n*(layer_sig==10)    + mabot1_n*(layer_sig==11)   )'
 + layer_bot2_n =   'ly2*(m1bot2_n*(layer_sig==1)      + m2bot2_n*(layer_sig==2)     + m3bot2_n*(layer_sig==3)     + mqbot2_n*(layer_sig==7)     + lybot2_n*(layer_sig==9)     + e1bot2_n*(layer_sig==10)    + mabot2_n*(layer_sig==11)   )'
 + layer_bot3_n =   'ly3*(m1bot3_n*(layer_sig==1)      + m2bot3_n*(layer_sig==2)     + mqbot3_n*(layer_sig==7)     + mgbot3_n*(layer_sig==8)     + lybot3_n*(layer_sig==9)     + e1bot3_n*(layer_sig==10)    + mabot3_n*(layer_sig==11)   )'
 + layer_bot4_n =   'ly4*(m1bot4_n*(layer_sig==1)      + m2bot4_n*(layer_sig==2)     + m3bot4_n*(layer_sig==3)     + mqbot4_n*(layer_sig==7)     + mgbot4_n*(layer_sig==8)     + lybot4_n*(layer_sig==9)     + e1bot4_n*(layer_sig==10)    + mabot4_n*(layer_sig==11)   )'
 + layer_bot5_n =   'ly5*(m1bot5_n*(layer_sig==1)      + m2bot5_n*(layer_sig==2)     + m3bot5_n*(layer_sig==3)     + m4bot5_n*(layer_sig==4)     + mqbot5_n*(layer_sig==7)     + lybot5_n*(layer_sig==9)     + e1bot5_n*(layer_sig==10)    + mabot5_n*(layer_sig==11)   )'
 *
 + layer_botf_n= 'layer_bot1_n + layer_bot2_n + layer_bot3_n + layer_bot4_n + layer_bot5_n'
 *
 + over_top1_n =   'ly1*(m1top1_n*(layer_bot==1)      + m2top1_n*(layer_bot==2)     + mqtop1_n*(layer_bot==7)     + lytop1_n*(layer_bot==9)     + e1top1_n*(layer_bot==10)    + matop1_n*(layer_bot==11)   )'
 + over_top2_n =   'ly2*(m1top2_n*(layer_bot==1)      + m2top2_n*(layer_bot==2)     + m3top2_n*(layer_bot==3)     + mqtop2_n*(layer_bot==7)     + lytop2_n*(layer_bot==9)     + e1top2_n*(layer_bot==10)    + matop2_n*(layer_bot==11)   )'
 + over_top3_n =   'ly3*(m1top3_n*(layer_bot==1)      + m2top3_n*(layer_bot==2)     + mqtop3_n*(layer_bot==7)     + mgtop3_n*(layer_bot==8)     + lytop3_n*(layer_bot==9)     + e1top3_n*(layer_bot==10)    + matop3_n*(layer_bot==11)   )'
 + over_top4_n =   'ly4*(m1top4_n*(layer_bot==1)      + m2top4_n*(layer_bot==2)     + m3top4_n*(layer_bot==3)     + mqtop4_n*(layer_bot==7)     + mgtop4_n*(layer_bot==8)     + lytop4_n*(layer_bot==9)     + e1top4_n*(layer_bot==10)    + matop4_n*(layer_bot==11)   )'
 + over_top5_n =   'ly5*(m1top5_n*(layer_bot==1)      + m2top5_n*(layer_bot==2)     + m3top5_n*(layer_bot==3)     + m4top5_n*(layer_bot==4)     + mqtop5_n*(layer_bot==7)     + lytop5_n*(layer_bot==9)     + e1top5_n*(layer_bot==10)    + matop5_n*(layer_bot==11)   )'
 *
 + over_topf_n= 'over_top1_n + over_top2_n + over_top3_n + over_top4_n + over_top5_n'
 *
 + under_bot1_n =   'ly1*(m1bot1_n*(layer_top==1)      + m2bot1_n*(layer_top==2)     + mqbot1_n*(layer_top==7)     + lybot1_n*(layer_top==9)     + e1bot1_n*(layer_top==10)    + mabot1_n*(layer_top==11)   )'
 + under_bot2_n =   'ly2*(m1bot2_n*(layer_top==1)      + m2bot2_n*(layer_top==2)     + m3bot2_n*(layer_top==3)     + mqbot2_n*(layer_top==7)     + lybot2_n*(layer_top==9)     + e1bot2_n*(layer_top==10)    + mabot2_n*(layer_top==11)   )'
 + under_bot3_n =   'ly3*(m1bot3_n*(layer_top==1)      + m2bot3_n*(layer_top==2)     + mqbot3_n*(layer_top==7)     + mgbot3_n*(layer_top==8)     + lybot3_n*(layer_top==9)     + e1bot3_n*(layer_top==10)    + mabot3_n*(layer_top==11)   )'
 + under_bot4_n =   'ly4*(m1bot4_n*(layer_top==1)      + m2bot4_n*(layer_top==2)     + m3bot4_n*(layer_top==3)     + mqbot4_n*(layer_top==7)     + mgbot4_n*(layer_top==8)     + lybot4_n*(layer_top==9)     + e1bot4_n*(layer_top==10)    + mabot4_n*(layer_top==11)   )'
 + under_bot5_n =   'ly5*(m1bot5_n*(layer_top==1)      + m2bot5_n*(layer_top==2)     + m3bot5_n*(layer_top==3)     + m4bot5_n*(layer_top==4)     + mqbot5_n*(layer_top==7)     + lybot5_n*(layer_top==9)     + e1bot5_n*(layer_top==10)    + mabot5_n*(layer_top==11)   )'
 *
 + under_botf_n= 'under_bot1_n + under_bot2_n + under_bot3_n + under_bot4_n + under_bot5_n'
 *
 + layer_top1_n =   'ly1*(m1top1_n*(layer_sig==1)      + m2top1_n*(layer_sig==2)     + mqtop1_n*(layer_sig==7)     + lytop1_n*(layer_sig==9)     + e1top1_n*(layer_sig==10)    + matop1_n*(layer_sig==11)   )'
 + layer_top2_n =   'ly2*(m1top2_n*(layer_sig==1)      + m2top2_n*(layer_sig==2)     + m3top2_n*(layer_sig==3)     + mqtop2_n*(layer_sig==7)     + lytop2_n*(layer_sig==9)     + e1top2_n*(layer_sig==10)    + matop2_n*(layer_sig==11)   )'
 + layer_top3_n =   'ly3*(m1top3_n*(layer_sig==1)      + m2top3_n*(layer_sig==2)     + mqtop3_n*(layer_sig==7)     + mgtop3_n*(layer_sig==8)     + lytop3_n*(layer_sig==9)     + e1top3_n*(layer_sig==10)    + matop3_n*(layer_sig==11)   )'
 + layer_top4_n =   'ly4*(m1top4_n*(layer_sig==1)      + m2top4_n*(layer_sig==2)     + m3top4_n*(layer_sig==3)     + mqtop4_n*(layer_sig==7)     + mgtop4_n*(layer_sig==8)     + lytop4_n*(layer_sig==9)     + e1top4_n*(layer_sig==10)    + matop4_n*(layer_sig==11)   )'
 + layer_top5_n =   'ly5*(m1top5_n*(layer_sig==1)      + m2top5_n*(layer_sig==2)     + m3top5_n*(layer_sig==3)     + m4top5_n*(layer_sig==4)     + mqtop5_n*(layer_sig==7)     + lytop5_n*(layer_sig==9)     + e1top5_n*(layer_sig==10)    + matop5_n*(layer_sig==11)   )'
 *
 + layer_topf_n = 'layer_top1_n + layer_top2_n + layer_top3_n + layer_top4_n + layer_top5_n'
 *
 *
 + h1_n = '1e-15*(abs( layer_botf_n - over_topf_n  )==0) + abs( layer_botf_n - over_topf_n  )'
 + h2_n = '1e-15*(abs( under_botf_n - layer_topf_n )==0) + abs( under_botf_n - layer_topf_n )'
 + th_n = '1e-15*(abs( layer_topf_n - layer_botf_n )==0) + abs( layer_topf_n - layer_botf_n )'
 *
 *
 * 4 cross-over types possible:
 * signal-substrate (hc,th)
 * crossover-signal-substrate  (h_over, h_under=hc)
 * crossover-signal-crossunder (h_over, h_under)
 * signal-crossunder (h_under, th)
 *
 + hc = 'abs( layer_botf - si_top )'
 + hc_n = 'abs( layer_botf_n - si_top )'
 + h_by_eps = 'layer_bot_4eps'
 + epsilon_r = 'hc_n/h_by_eps'
 + eps_side = 'layer_eps_side'
 + eps_side_over = 'layer_eps_side_over'
 + epsilon_r_side = 'eps_side'
 + epsilon_r_ratio = 'epsilon_r_side/epsilon_r'
 + h_under = '(plane==0)*hc + (plane==1)*hc + (plane==2)*h1 + (plane==3)*h1'
 + h_under_n = '(plane==0)*hc_n + (plane==1)*hc_n + (plane==2)*h1_n + (plane==3)*h1_n'
 + h_by_eps_under = 'abs( layer_bot_4eps - under_top_4eps )'
 + epsilon_r_under = '(plane==0)*h_under_n/h_by_eps + (plane==1)*h_under_n/h_by_eps + (plane==2)*h_under_n/h_by_eps_under + (plane==3)*h_under_n/h_by_eps_under'
 + h_over = '(plane==0)*1e-15 + (plane==1)*h2 + (plane==2)*1e-15 + (plane==3)*h2'
 + h_over_n = '(plane==0)*1e-15 + (plane==1)*h2_n + (plane==2)*1e-15 + (plane==3)*h2_n'
 + h_by_eps_over = 'abs( over_bot_4eps - layer_top_4eps )'
 + epsilon_r_over = '(plane==0)*eps_side_over + (plane==1)*(h_over_n/h_by_eps_over) + (plane==2)*eps_side_over + (plane==3)*(h_over_n/h_by_eps_over)'
 + th1 = 'th*h_over/(h_under+h_over)'
 + th2 = 'th*h_under/(h_under+h_over)'
 *
 * end vertical dimension computation of cross-over types
 *
 * end vertical metal stack definition.
 *
 *
 *
 x_cpwline (va1 va2 vb1 vb2 vshield) coupled_cpw
 + l                 = 'l'
 + w                 = 'w_l'
 + s                 = 's_l'
 + d                 = 'd_l'
 + top               = '(temper+dtemper)'
 + c_cust            = 'c_cust'
 + cm_cust           = 'cc_cust'
 + layer_sig         = 'layer_sig'
 + layer_bot         = 'layer_bot'
 + layer_top         = 'layer_top'
 + ctype             = 'crosstype'
 + pattern_fill      = 'pattern_fill'
 + plane             = 'plane'
 + ccf               = 'crosscapfactor'
 + th                = 'th'
 + rsqr              = 'rsquare'
 + tcr               = 'tcr'
 + h_sub             = 'hc'
 + h_below           = 'h_under'
 + h_above           = 'h_over'
 + eps_r_side        = 'eps_side'
 + eps_r_over        = 'eps_side_over'
 + eps_r_under       = 'epsilon_r'
 + eps_r_cross_under = 'epsilon_r_under'
 + eps_r_cross_over  = 'epsilon_r_over'
 + h_fill            = 'signal_bot_fill'
 + h_fill_below      = 'h_fill_under'
 + h_fill_above      = 'h_fill_over'
 + wfill             = 'w_fill'
 + sfill             = 's_fill'
 + sf2sh             = 'sf2sh'
 *
 .ends coupledcpw
 .include './coupledwires.inc'
 * path, component, release: cmrf8sf/reldm/hspice/models/coupledwires.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.10 09/10/21 14:03:48
 *
 *>  ibm cmrf8sf "coupledwires" line model (ma metallization options)
 *
 *   licensed materials - property of ibm
 *
 *   ibm confidential
 *   (c) 2008 ibm corporation
 *
 *   us government users restricted rights - use, duplication
 *   or disclosure restricted by gsa adp schedule contract with
 *   ibm corporation.
 *
 ***************************************************************************
 ***************************************************************************
 *
 *>  ibm "coupledwires" transmission line
 *
 ***************************************************************************
 * ===============================================
 * description of coupledwires model
 *
 * the basic coupled microstrip t-line structure is
 * a pair of metal signal wires above a metallic bottom shield,
 * with optional side shielding.
 *
 * this model describes the frequency dependent impedance,
 * attenuation and phase shift in a high bandwidth.  the
 * model is implemented in multi-segment rlc filter networks
 * and dependent sources and is therefore passive by construction.
 * the model works both in time and frequency domains in all
 * simulation analysis types (dc, ac, sp, pss ...).
 *
 * the model considers the standard copper line cheesing process,
 * and assumes super cheesing for wg > 50[um].
 * ===============================================
 * coupledwires input parameters
 * description of input parameters
 *
 * bwmax       --> maximum signal bandwidth used, in ghz.
 * l           --> length of the singlewire signal line, in meters.
 * w           --> width of the signal line, in meters.
 * d           --> distance between the signal wires.
 * s           --> seperation between signal wire and side shielding, in meters.
 * shieldsads  --> side shielding parameter; off = 0, on = 1.
 * patternfill --> 0 disables pattern fill modeling, 1 enables it.
 * tlev1       --> [3,4,5,6] = [(m1 m2 m3), (m1 m2 m3 m4), (m1 m2 m3 m4 m5), (m1 m2 m3 m4 m5 m6)]
 * tlev2       --> [2,3]   = [(mq lm), (mq mg lm)]
 * layerads    --> metal layer of the single signal wire:  see table immediately below.
 * overads     --> metal layer of the bottom shield:  see table immmediately below.
 * dtemp       --> difference between silicon surface and metal layers
 *                 (assumes all metal layers at same temperature)
 * {converted to hspice } simulator lang = spectre
 *
 .subckt  coupledwires (va1 va2 vb1 vb2 vshield)
 .param
 *
 ***************************************************************************
 *
 * syntax:
 *  x1 va vb coupledwires
 *
 ***************************************************************************
 *
 * notes:
 *
 ***************************************************************************
 *
 * notes:
 *
 * this model was created based on the following design manual and beol process assumptions document:
 * design manual                    : cmos8rf (cmrf8sf) design manual: es # 57p9006 ec # j88658, april 24, 2007
 * beol process assumptions document: cmrf8sf beol process           : es # 70p6227 ec # j95133, october 23, 2006
 * the "wireopt" parameter which is internal to this spectre file is set based on tlev1 and tlev2.
 * the internal "wireopt" parameter tells which metal dielectric stack is being used.
 * a list of the wireopt values corresponding to the different beol metal-dielectric
 * stack options and tlev1 and telv2 combinations in cmrf8sf is shown below:
 *
 * "wireopt"     stack         tlev1     tlev2
 * ---------     -----         -----     -----
 * 1             2_1_ly_e1_ma       2         1
 * 2             3_1_ly_e1_ma       3         1
 * 3             2_2_ly_e1_ma       2         2
 * 4             2_3_ly_e1_ma       3         2
 * 5             3_2_ly_e1_ma       4         1
 *
 * every possible metal layer in a technology is assigned a unique number which is used
 * to assign the parameters "layerads" and "overads"(see cross-section
 * below). for the cmrf8sf technology, the numbers assigned to every possible metal layer
 * are as follows:
 *
 * "layerads"/"overads"                     metal layer
 * -----------------------------------      -----------
 * 1                                        m1
 * 2                                        m2
 * 3                                        m3
 * 4                                        m4
 * 7                                        mq
 * 8                                        mg
 * 9                                        ly
 * 10                                        e1
 * 11                                        ma
 * ===============================================
 * ===============================================
 * cross-sections of coupled transmission line
 *
 * coupled transmission line without side shielding
 * ===============================================
 *
 *                 w              w
 *             <-------->     <-------->
 *              --------       --------  ^
 *             |        |  d  |        | |
 *             | signal |<--->| signal | | th
 *             |        |     |        | |
 *              --------       --------  v
 *                                       ^
 *                                       | h
 *                                       v
 *     -----------------------------------------  ^
 *    |                                         | |
 *    |              bottom shield              | | th_g
 *    |                                         | |
 *     -----------------------------------------  v
 *    <----------------------------------------->
 *                         wg
 *
 *
 * coupled transmission line with side shielding
 * ===============================================
 *
 *          ws           w              w            ws
 *       <------>    <-------->     <-------->    <------>
 *        ------      --------       ________      ------  ^
 *       | side |  s |        |  d  |        |    | side | |
 *       |shield|<-->| signal |<--->| signal |    |shield| | th
 *       |      |    |        |     |        |    |      | |
 *        ------      --------       --------      ------  v
 *                                                         ^
 *                                                         | h
 *                                                         v
 *        -----------------------------------------------  ^
 *       |                                               | |
 *       |                bottom shield                  | | th_g
 *       |                                               | |
 *        -----------------------------------------------  v
 *       <----------------------------------------------->
 *                               wg
 *
 * ===============================================
 ** coupledwires default parameters ******************************************
 *
 + bwmax       = 200
 + l           = 0.0001
 + w           = 4e-06
 + s           = 6e-06
 + d           = 5e-06
 + shieldsads  = 0
 + patternfill = 1
 + layerads    = 11
 + overads     = 1
 + dtemp       = 0
 + tlev1       = 3
 + tlev2       = 2
 *
 ** additional constants and parameters *************************************
 *
 *
 + customcap   = 0
 + c_cust      = 1e-10
 + cc_cust     = 1e-11
 + eo      = 8.8542e-12
 + e0      = 8.8542e-12
 + ratio   = 3.16228
 + denfill = 0.45
 + tref    = 25
 *
 + layer_sig = 'layerads'
 + layer_top = 'layerads'
 + layer_bot = 'overads'
 + plane     = 2
 + wire_opt  = '(tlev1-1 + 2*(tlev1==4))*(tlev2==1) + (tlev1+1)*(tlev2==2)'
 *
 ** metal stack ************************************************************
 *
 *
 * put vertical metal positions in model file:
 *
 *
 * 2_1_ly_e1_ma...wireopt=1
 *
 + m1bot1 = 'capct+oppcthkf+oppcstif'
 + m1top1 = 'm1bot1 + m1t'
 + m2bot1 = 'm1top1 + m1m2t'
 + m2top1 = 'm2bot1 + m2t'
 + mqbot1 = 'm2top1 + mxmqt'
 + mqtop1 = 'mqbot1 + mqt'
 + lybot1 = 'mqtop1 + mqlyt'
 + lytop1 = 'lybot1 + lyt'
 + e1bot1 = 'lytop1 + lye1t'
 + e1top1 = 'e1bot1 + e1t'
 + mabot1 = 'e1top1 + e1mat'
 + matop1 = 'mabot1 + mat'
 *
 * 3_1_ly_e1_ma...wireopt=2
 *
 + m1bot2 = 'capct+oppcthkf+oppcstif'
 + m1top2 = 'm1bot2 + m1t'
 + m2bot2 = 'm1top2 + m1m2t'
 + m2top2 = 'm2bot2 + m2t'
 + m3bot2 = 'm2top2 + m2m3t'
 + m3top2 = 'm3bot2 + m3t'
 + mqbot2 = 'm3top2 + mxmqt'
 + mqtop2 = 'mqbot2 + mqt'
 + lybot2 = 'mqtop2 + mqlyt'
 + lytop2 = 'lybot2 + lyt'
 + e1bot2 = 'lytop2 + lye1t'
 + e1top2 = 'e1bot2 + e1t'
 + mabot2 = 'e1top2 + e1mat'
 + matop2 = 'mabot2 + mat'
 *
 * 2_2_ly_e1_ma...wireopt=3
 *
 + m1bot3 = 'capct+oppcthkf+oppcstif'
 + m1top3 = 'm1bot3 + m1t'
 + m2bot3 = 'm1top3 + m1m2t'
 + m2top3 = 'm2bot3 + m2t'
 + mqbot3 = 'm2top3 + mxmqt'
 + mqtop3 = 'mqbot3 + mqt'
 + mgbot3 = 'mqtop3 + mqmgt'
 + mgtop3 = 'mgbot3 + mgt'
 + lybot3 = 'mgtop3 + mqlyt'
 + lytop3 = 'lybot3 + lyt'
 + e1bot3 = 'lytop3 + lye1t'
 + e1top3 = 'e1bot3 + e1t'
 + mabot3 = 'e1top3 + e1mat'
 + matop3 = 'mabot3 + mat'
 *
 * 2_3_ly_e1_ma...wireopt=4
 *
 + m1bot4 = 'capct+oppcthkf+oppcstif'
 + m1top4 = 'm1bot4 + m1t'
 + m2bot4 = 'm1top4 + m1m2t'
 + m2top4 = 'm2bot4 + m2t'
 + m3bot4 = 'm2top4 + m2m3t'
 + m3top4 = 'm3bot4 + m3t'
 + mqbot4 = 'm3top4 + mxmqt'
 + mqtop4 = 'mqbot4 + mqt'
 + mgbot4 = 'mqtop4 + mqmgt'
 + mgtop4 = 'mgbot4 + mgt'
 + lybot4 = 'mgtop4 + mqlyt'
 + lytop4 = 'lybot4 + lyt'
 + e1bot4 = 'lytop4 + lye1t'
 + e1top4 = 'e1bot4 + e1t'
 + mabot4 = 'e1top4 + e1mat'
 + matop4 = 'mabot4 + mat'
 *
 * 3_2_ly_e1_ma...wireopt=5
 *
 + m1bot5 = 'capct+oppcthkf+oppcstif'
 + m1top5 = 'm1bot5 + m1t'
 + m2bot5 = 'm1top5 + m1m2t'
 + m2top5 = 'm2bot5 + m2t'
 + m3bot5 = 'm2top5 + m2m3t'
 + m3top5 = 'm3bot5 + m3t'
 + m4bot5 = 'm3top5 + m3m4t'
 + m4top5 = 'm4bot5 + m4t'
 + mqbot5 = 'm4top5 + mxmqt'
 + mqtop5 = 'mqbot5 + mqt'
 + lybot5 = 'mqtop5 + mqlyt'
 + lytop5 = 'lybot5 + lyt'
 + e1bot5 = 'lytop5 + lye1t'
 + e1top5 = 'e1bot5 + e1t'
 + mabot5 = 'e1top5 + e1mat'
 + matop5 = 'mabot5 + mat'
 *
 * end of vertical metal position entries:
 *
 *
 * put nominal vertical metal positions in model file:
 *
 *
 * 2_1_ly_e1_ma...wireopt=1
 *
 + m1bot1_n = 'capct+oppcthkn+oppcstin'
 + m1top1_n = 'm1bot1 + m1t'
 + m2bot1_n = 'm1top1 + m1m2t'
 + m2top1_n = 'm2bot1 + m2t'
 + mqbot1_n = 'm2top1 + mxmqt'
 + mqtop1_n = 'mqbot1 + mqt'
 + lybot1_n = 'mqtop1 + mqlyt'
 + lytop1_n = 'lybot1 + lyt'
 + e1bot1_n = 'lytop1 + lye1t'
 + e1top1_n = 'e1bot1 + e1t'
 + mabot1_n = 'e1top1 + e1mat'
 + matop1_n = 'mabot1 + mat'
 *
 * 3_1_ly_e1_ma...wireopt=2
 *
 + m1bot2_n = 'capct+oppcthkn+oppcstin'
 + m1top2_n = 'm1bot2 + m1t'
 + m2bot2_n = 'm1top2 + m1m2t'
 + m2top2_n = 'm2bot2 + m2t'
 + m3bot2_n = 'm2top2 + m2m3t'
 + m3top2_n = 'm3bot2 + m3t'
 + mqbot2_n = 'm3top2 + mxmqt'
 + mqtop2_n = 'mqbot2 + mqt'
 + lybot2_n = 'mqtop2 + mqlyt'
 + lytop2_n = 'lybot2 + lyt'
 + e1bot2_n = 'lytop2 + lye1t'
 + e1top2_n = 'e1bot2 + e1t'
 + mabot2_n = 'e1top2 + e1mat'
 + matop2_n = 'mabot2 + mat'
 *
 * 2_2_ly_e1_ma...wireopt=3
 *
 + m1bot3_n = 'capct+oppcthkn+oppcstin'
 + m1top3_n = 'm1bot3 + m1t'
 + m2bot3_n = 'm1top3 + m1m2t'
 + m2top3_n = 'm2bot3 + m2t'
 + mqbot3_n = 'm2top3 + mxmqt'
 + mqtop3_n = 'mqbot3 + mqt'
 + mgbot3_n = 'mqtop3 + mqmgt'
 + mgtop3_n = 'mgbot3 + mgt'
 + lybot3_n = 'mgtop3 + mqlyt'
 + lytop3_n = 'lybot3 + lyt'
 + e1bot3_n = 'lytop3 + lye1t'
 + e1top3_n = 'e1bot3 + e1t'
 + mabot3_n = 'e1top3 + e1mat'
 + matop3_n = 'mabot3 + mat'
 *
 * 2_3_ly_e1_ma...wireopt=4
 *
 + m1bot4_n = 'capct+oppcthkn+oppcstin'
 + m1top4_n = 'm1bot4 + m1t'
 + m2bot4_n = 'm1top4 + m1m2t'
 + m2top4_n = 'm2bot4 + m2t'
 + m3bot4_n = 'm2top4 + m2m3t'
 + m3top4_n = 'm3bot4 + m3t'
 + mqbot4_n = 'm3top4 + mxmqt'
 + mqtop4_n = 'mqbot4 + mqt'
 + mgbot4_n = 'mqtop4 + mqmgt'
 + mgtop4_n = 'mgbot4 + mgt'
 + lybot4_n = 'mgtop4 + mqlyt'
 + lytop4_n = 'lybot4 + lyt'
 + e1bot4_n = 'lytop4 + lye1t'
 + e1top4_n = 'e1bot4 + e1t'
 + mabot4_n = 'e1top4 + e1mat'
 + matop4_n = 'mabot4 + mat'
 *
 * 3_2_ly_e1_ma...wireopt=5
 *
 + m1bot5_n = 'capct+oppcthkn+oppcstin'
 + m1top5_n = 'm1bot5 + m1t'
 + m2bot5_n = 'm1top5 + m1m2t'
 + m2top5_n = 'm2bot5 + m2t'
 + m3bot5_n = 'm2top5 + m2m3t'
 + m3top5_n = 'm3bot5 + m3t'
 + m4bot5_n = 'm3top5 + m3m4t'
 + m4top5_n = 'm4bot5 + m4t'
 + mqbot5_n = 'm4top5 + mxmqt'
 + mqtop5_n = 'mqbot5 + mqt'
 + lybot5_n = 'mqtop5 + mqlyt'
 + lytop5_n = 'lybot5 + lyt'
 + e1bot5_n = 'lytop5 + lye1t'
 + e1top5_n = 'e1bot5 + e1t'
 + mabot5_n = 'e1top5 + e1mat'
 + matop5_n = 'mabot5 + mat'
 *
 * end of nominal vertical metal position entries:
 *
 *
 * create stack definition variables:
 *
 + ly1  = '(wire_opt==1)'
 + ly2  = '(wire_opt==2)'
 + ly3  = '(wire_opt==3)'
 + ly4  = '(wire_opt==4)'
 + ly5  = '(wire_opt==5)'
 *
 * end stack definition variables:
 *
 + dlw   = 'delm1*(layer_sig==1) + delm2*(layer_sig==2) + delm3*(layer_sig==3) + delm4*(layer_sig==4) + delmq*(layer_sig==7) + delmg*(layer_sig==8) + delly*(layer_sig==9) + dele1*(layer_sig==10) + delma*(layer_sig==11)'
 + dlw_g = 'delm1*(layer_bot==1) + delm2*(layer_bot==2) + delm3*(layer_bot==3) + delm4*(layer_bot==4) + delmq*(layer_bot==7) + delmg*(layer_bot==8) + delly*(layer_bot==9) + dele1*(layer_bot==10) + delma*(layer_bot==11)'
 *
 + w_l = 'w + dlw'
 + s_l = 'abs(s - dlw)'
 + d_l = 'abs(d - dlw)'
 *
 * begin dielectric stack definition:
 *
 + m1_eps_side = 3.8621
 + m2_eps_side = 3.6
 + m3_eps_side = 3.6
 + m4_eps_side = 3.6
 + mq_eps_side = 3.6
 + mg_eps_side = 3.6
 + ly_eps_side = 4.5413
 + e1_eps_side = 4.1677
 + ma_eps_side = 3.8388
 *
 + layer_eps_side = 'm1_eps_side*(layer_sig==1) + m2_eps_side*(layer_sig==2) + m3_eps_side*(layer_sig==3) + m4_eps_side*(layer_sig==4) + mq_eps_side*(layer_sig==7) + mg_eps_side*(layer_sig==8) + ly_eps_side*(layer_sig==9) + e1_eps_side*(layer_sig==10) + ma_eps_side*(layer_sig==11)'
 + under_eps_side = 'm1_eps_side*(layer_bot==1) + m2_eps_side*(layer_bot==2) + m3_eps_side*(layer_bot==3) + m4_eps_side*(layer_bot==4) + mq_eps_side*(layer_bot==7) + mg_eps_side*(layer_bot==8) + ly_eps_side*(layer_bot==9) + e1_eps_side*(layer_bot==10) + ma_eps_side*(layer_bot==11)'
 + over_eps_side  = 'm1_eps_side*(layer_top==1) + m2_eps_side*(layer_top==2) + m3_eps_side*(layer_top==3) + m4_eps_side*(layer_top==4) + mq_eps_side*(layer_top==7) + mg_eps_side*(layer_top==8) + ly_eps_side*(layer_top==9) + e1_eps_side*(layer_top==10) + ma_eps_side*(layer_top==11)'
 *
 + m1_eps_side_over = 7
 + m2_eps_side_over = 7
 + m3_eps_side_over = 7
 + m4_eps_side_over = 7
 + mq_eps_side_over = 7
 + mg_eps_side_over = 7
 + ly_eps_side_over = 7
 + e1_eps_side_over = 7
 + ma_eps_side_over = 4.1
 *
 + layer_eps_side_over  = 'm1_eps_side_over*(layer_sig==1) + m2_eps_side_over*(layer_sig==2) + m3_eps_side_over*(layer_sig==3) + m4_eps_side_over*(layer_sig==4) + mq_eps_side_over*(layer_sig==7) + mg_eps_side_over*(layer_sig==8) + ly_eps_side_over*(layer_sig==9) + e1_eps_side_over*(layer_sig==10) + ma_eps_side_over*(layer_sig==11)'
 + under_eps_side_over  = 'm1_eps_side_over*(layer_bot==1) + m2_eps_side_over*(layer_bot==2) + m3_eps_side_over*(layer_bot==3) + m4_eps_side_over*(layer_bot==4) + mq_eps_side_over*(layer_bot==7) + mg_eps_side_over*(layer_bot==8) + ly_eps_side_over*(layer_bot==9) + e1_eps_side_over*(layer_bot==10) + ma_eps_side_over*(layer_bot==11)'
 + over_eps_side_over   = 'm1_eps_side_over*(layer_top==1) + m2_eps_side_over*(layer_top==2) + m3_eps_side_over*(layer_top==3) + m4_eps_side_over*(layer_top==4) + mq_eps_side_over*(layer_top==7) + mg_eps_side_over*(layer_top==8) + ly_eps_side_over*(layer_top==9) + e1_eps_side_over*(layer_top==10) + ma_eps_side_over*(layer_top==11)'
 *
 *
 *                     2_1_ly_e1_ma          3_1_ly_e1_ma          2_2_ly_e1_ma          2_3_ly_e1_ma          3_2_ly_e1_ma
 *
 + m1_bot_4eps =       'ly1*(1.4129e-07) +    ly2*(1.4129e-07) +    ly3*(1.4129e-07) +    ly4*(1.4129e-07) +    ly5*(1.4129e-07)'
 + m2_bot_4eps =       'ly1*(3.0183e-07) +    ly2*(3.0183e-07) +    ly3*(3.0183e-07) +    ly4*(3.0183e-07) +    ly5*(3.0183e-07)'
 + m3_bot_4eps =                             'ly2*(4.7442e-07) +                          ly4*(4.7442e-07) +    ly5*(4.7442e-07)'
 + m4_bot_4eps =                                                                                               'ly5*(6.4701e-07)'
 + mq_bot_4eps =       'ly1*(5.5505e-07) +    ly2*(7.2764e-07) +    ly3*(5.5505e-07) +    ly4*(7.2764e-07) +    ly5*(9.0023e-07)'
 + mg_bot_4eps =                                                   'ly3*(8.7217e-07) +    ly4*(1.0448e-06)'
 + ly_bot_4eps =       'ly1*(1.0422e-06) +    ly2*(1.2148e-06) +    ly3*(1.3593e-06) +    ly4*(1.5319e-06) +    ly5*(1.3874e-06)'
 + e1_bot_4eps =       'ly1*(1.9622e-06) +    ly2*(2.1348e-06) +    ly3*(2.2793e-06) +    ly4*(2.4519e-06) +    ly5*(2.3074e-06)'
 + ma_bot_4eps =       'ly1*(3.5017e-06) +    ly2*(3.6743e-06) +    ly3*(3.8188e-06) +    ly4*(3.9914e-06) +    ly5*(3.8469e-06)'
 *
 + layer_bot_4eps = 'm1_bot_4eps*(layer_sig==1) + m2_bot_4eps*(layer_sig==2) + m3_bot_4eps*(layer_sig==3) + m4_bot_4eps*(layer_sig==4) + mq_bot_4eps*(layer_sig==7) + mg_bot_4eps*(layer_sig==8) + ly_bot_4eps*(layer_sig==9) + e1_bot_4eps*(layer_sig==10) + ma_bot_4eps*(layer_sig==11)'
 + under_bot_4eps = 'm1_bot_4eps*(layer_bot==1) + m2_bot_4eps*(layer_bot==2) + m3_bot_4eps*(layer_bot==3) + m4_bot_4eps*(layer_bot==4) + mq_bot_4eps*(layer_bot==7) + mg_bot_4eps*(layer_bot==8) + ly_bot_4eps*(layer_bot==9) + e1_bot_4eps*(layer_bot==10) + ma_bot_4eps*(layer_bot==11)'
 + over_bot_4eps =  'm1_bot_4eps*(layer_top==1) + m2_bot_4eps*(layer_top==2) + m3_bot_4eps*(layer_top==3) + m4_bot_4eps*(layer_top==4) + mq_bot_4eps*(layer_top==7) + mg_bot_4eps*(layer_top==8) + ly_bot_4eps*(layer_top==9) + e1_bot_4eps*(layer_top==10) + ma_bot_4eps*(layer_top==11)'
 *
 *                     2_1_ly_e1_ma          3_1_ly_e1_ma          2_2_ly_e1_ma          2_3_ly_e1_ma          3_2_ly_e1_ma
 *
 + m1_top_4eps =       'ly1*(2.1813e-07) +    ly2*(2.1813e-07) +    ly3*(2.1813e-07) +    ly4*(2.1813e-07) +    ly5*(2.1813e-07)'
 + m2_top_4eps =       'ly1*(3.9072e-07) +    ly2*(3.9072e-07) +    ly3*(3.9072e-07) +    ly4*(3.9072e-07) +    ly5*(3.9072e-07)'
 + m3_top_4eps =                             'ly2*(5.6331e-07) +                          ly4*(5.6331e-07) +    ly5*(5.6331e-07)'
 + m4_top_4eps =                                                                                               'ly5*(7.359e-07)'
 + mq_top_4eps =       'ly1*(7.0783e-07) +    ly2*(8.8042e-07) +    ly3*(7.0783e-07) +    ly4*(8.8042e-07) +    ly5*(1.053e-06)'
 + mg_top_4eps =                                                   'ly3*(1.0249e-06) +    ly4*(1.1975e-06)'
 + ly_top_4eps =       'ly1*(1.1473e-06) +    ly2*(1.3199e-06) +    ly3*(1.4645e-06) +    ly4*(1.637e-06) +     ly5*(1.4925e-06)'
 + e1_top_4eps =       'ly1*(2.6869e-06) +    ly2*(2.8594e-06) +    ly3*(3.004e-06) +     ly4*(3.1766e-06) +    ly5*(3.032e-06)'
 + ma_top_4eps =       'ly1*(4.5951e-06) +    ly2*(4.7677e-06) +    ly3*(4.9122e-06) +    ly4*(5.0848e-06) +    ly5*(4.9403e-06)'
 *                             2_1_ly_e1_ma          3_1_ly_e1_ma          2_2_ly_e1_ma          2_3_ly_e1_ma          3_2_ly_e1_ma
 *
 + m1_top_fill =               'ly1*(m1tn) +          ly2*(m1tn) +          ly3*(m1tn) +          ly4*(m1tn) +          ly5*(m1tn)'
 + m2_top_fill = 'm1_top_fill + ly1*(m2tn) +          ly2*(m2tn) +          ly3*(m2tn) +          ly4*(m2tn) +          ly5*(m2tn)'
 + m3_top_fill = 'm2_top_fill +                       ly2*(m3tn) +                                ly4*(m3tn) +          ly5*(m3tn)'
 + m4_top_fill = 'm3_top_fill +                                                                                         ly5*(m4tn)'
 + mq_top_fill = 'm4_top_fill + ly1*(mqtn) +          ly2*(mqtn) +          ly3*(mqtn) +          ly4*(mqtn) +          ly5*(mqtn)'
 + mg_top_fill = 'mq_top_fill +                                             ly3*(mgtn) +          ly4*(mgtn)'
 + ly_top_fill = 'mg_top_fill + ly1*(lytn) +          ly2*(lytn) +          ly3*(lytn) +          ly4*(lytn) +          ly5*(lytn)'
 + e1_top_fill = 'ly_top_fill + ly1*(e1tn) +          ly2*(e1tn) +          ly3*(e1tn) +          ly4*(e1tn) +          ly5*(e1tn)'
 + ma_top_fill = 'e1_top_fill + ly1*(matn) +          ly2*(matn) +          ly3*(matn) +          ly4*(matn) +          ly5*(matn)'
 *
 *                             2_1_ly_e1_ma          3_1_ly_e1_ma          2_2_ly_e1_ma          2_3_ly_e1_ma          3_2_ly_e1_ma
 *
 + m1_bot_fill = 'm1_top_fill - ly1*(m1tn) -          ly2*(m1tn) -          ly3*(m1tn) -          ly4*(m1tn) -          ly5*(m1tn)'
 + m2_bot_fill = 'm2_top_fill - ly1*(m2tn) -          ly2*(m2tn) -          ly3*(m2tn) -          ly4*(m2tn) -          ly5*(m2tn)'
 + m3_bot_fill = 'm3_top_fill -                       ly2*(m3tn) -                                ly4*(m3tn) -          ly5*(m3tn)'
 + m4_bot_fill = 'm4_top_fill -                                                                                         ly5*(m4tn)'
 + mq_bot_fill = 'mq_top_fill - ly1*(mqtn) -          ly2*(mqtn) -          ly3*(mqtn) -          ly4*(mqtn) -          ly5*(mqtn)'
 + mg_bot_fill = 'mg_top_fill -                                             ly3*(mgtn) -          ly4*(mgtn)'
 + ly_bot_fill = 'ly_top_fill - ly1*(lytn) -          ly2*(lytn) -          ly3*(lytn) -          ly4*(lytn) -          ly5*(lytn)'
 + e1_bot_fill = 'e1_top_fill - ly1*(e1tn) -          ly2*(e1tn) -          ly3*(e1tn) -          ly4*(e1tn) -          ly5*(e1tn)'
 + ma_bot_fill = 'ma_top_fill - ly1*(matn) -          ly2*(matn) -          ly3*(matn) -          ly4*(matn) -          ly5*(matn)'
 *
 + layer_top_4eps = 'm1_top_4eps*(layer_sig==1) + m2_top_4eps*(layer_sig==2) + m3_top_4eps*(layer_sig==3) + m4_top_4eps*(layer_sig==4) + mq_top_4eps*(layer_sig==7) + mg_top_4eps*(layer_sig==8) + ly_top_4eps*(layer_sig==9) + e1_top_4eps*(layer_sig==10) + ma_top_4eps*(layer_sig==11)'
 + under_top_4eps = 'm1_top_4eps*(layer_bot==1) + m2_top_4eps*(layer_bot==2) + m3_top_4eps*(layer_bot==3) + m4_top_4eps*(layer_bot==4) + mq_top_4eps*(layer_bot==7) + mg_top_4eps*(layer_bot==8) + ly_top_4eps*(layer_bot==9) + e1_top_4eps*(layer_bot==10) + ma_top_4eps*(layer_bot==11)'
 + over_top_4eps  = 'm1_top_4eps*(layer_top==1) + m2_top_4eps*(layer_top==2) + m3_top_4eps*(layer_top==3) + m4_top_4eps*(layer_top==4) + mq_top_4eps*(layer_top==7) + mg_top_4eps*(layer_top==8) + ly_top_4eps*(layer_top==9) + e1_top_4eps*(layer_top==10) + ma_top_4eps*(layer_top==11)'
 *
 + crossover_top_fill   = 'm1_top_fill*(layer_top==1) + m2_top_fill*(layer_top==2) + m3_top_fill*(layer_top==3) + m4_top_fill*(layer_top==4) + mq_top_fill*(layer_top==7) + mg_top_fill*(layer_top==8) + ly_top_fill*(layer_top==9) + e1_top_fill*(layer_top==10) + ma_top_fill*(layer_top==11)'
 + signal_top_fill      = 'm1_top_fill*(layer_sig==1) + m2_top_fill*(layer_sig==2) + m3_top_fill*(layer_sig==3) + m4_top_fill*(layer_sig==4) + mq_top_fill*(layer_sig==7) + mg_top_fill*(layer_sig==8) + ly_top_fill*(layer_sig==9) + e1_top_fill*(layer_sig==10) + ma_top_fill*(layer_sig==11)'
 + crossunder_top_fill  = 'm1_top_fill*(layer_bot==1) + m2_top_fill*(layer_bot==2) + m3_top_fill*(layer_bot==3) + m4_top_fill*(layer_bot==4) + mq_top_fill*(layer_bot==7) + mg_top_fill*(layer_bot==8) + ly_top_fill*(layer_bot==9) + e1_top_fill*(layer_bot==10) + ma_top_fill*(layer_bot==11)'
 + crossover_bot_fill   = 'm1_bot_fill*(layer_top==1) + m2_bot_fill*(layer_top==2) + m3_bot_fill*(layer_top==3) + m4_bot_fill*(layer_top==4) + mq_bot_fill*(layer_top==7) + mg_bot_fill*(layer_top==8) + ly_bot_fill*(layer_top==9) + e1_bot_fill*(layer_top==10) + ma_bot_fill*(layer_top==11)'
 + signal_bot_fill      = 'm1_bot_fill*(layer_sig==1) + m2_bot_fill*(layer_sig==2) + m3_bot_fill*(layer_sig==3) + m4_bot_fill*(layer_sig==4) + mq_bot_fill*(layer_sig==7) + mg_bot_fill*(layer_sig==8) + ly_bot_fill*(layer_sig==9) + e1_bot_fill*(layer_sig==10) + ma_bot_fill*(layer_sig==11)'
 + crossunder_bot_fill  = 'm1_bot_fill*(layer_bot==1) + m2_bot_fill*(layer_bot==2) + m3_bot_fill*(layer_bot==3) + m4_bot_fill*(layer_bot==4) + mq_bot_fill*(layer_bot==7) + mg_bot_fill*(layer_bot==8) + ly_bot_fill*(layer_bot==9) + e1_bot_fill*(layer_bot==10) + ma_bot_fill*(layer_bot==11)'
 *
 + h_fill_under = '(signal_bot_fill - crossunder_top_fill)*(plane == 2 || plane == 3) + (0.0)*(plane == 0 || plane == 1)'
 + h_fill_over  = '(crossover_bot_fill - signal_top_fill )*(plane == 1 || plane == 3) + (0.0)*(plane == 0 || plane == 2)'
 *
 + w_fill  = '1e-6*(0.9*(layer_sig==1) + 0.9*(layer_sig==2) + 0.9*(layer_sig==3) + 0.9*(layer_sig==4) + 1.2*(layer_sig==7) + 1.2*(layer_sig==8) + 6*(layer_sig==9) + 6*(layer_sig==10) + 11*(layer_sig==11))'
 + s_fill  = '1e-6*(0.3*(layer_sig==1) + 0.3*(layer_sig==2) + 0.3*(layer_sig==3) + 0.3*(layer_sig==4) + 0.4*(layer_sig==7) + 0.4*(layer_sig==8) + 2*(layer_sig==9) + 2*(layer_sig==10) + 5*(layer_sig==11))'
 + sf2sh   = '1e-6*(0.4*(layer_sig==1) + 0.4*(layer_sig==2) + 0.4*(layer_sig==3) + 0.4*(layer_sig==4) + 0.8*(layer_sig==7) + 0.8*(layer_sig==8) + 4*(layer_sig==9) + 4*(layer_sig==10) + 8*(layer_sig==11))'
 *
 + denfillc = 'denfill*(1-s_fill/w_fill)'
 *
 *
 + si_top = 0
 *
 + layer_bot1 =   'ly1*(m1bot1*(layer_sig==1)      + m2bot1*(layer_sig==2)     + mqbot1*(layer_sig==7)     + lybot1*(layer_sig==9)     + e1bot1*(layer_sig==10)    + mabot1*(layer_sig==11)   )'
 + layer_bot2 =   'ly2*(m1bot2*(layer_sig==1)      + m2bot2*(layer_sig==2)     + m3bot2*(layer_sig==3)     + mqbot2*(layer_sig==7)     + lybot2*(layer_sig==9)     + e1bot2*(layer_sig==10)    + mabot2*(layer_sig==11)   )'
 + layer_bot3 =   'ly3*(m1bot3*(layer_sig==1)      + m2bot3*(layer_sig==2)     + mqbot3*(layer_sig==7)     + mgbot3*(layer_sig==8)     + lybot3*(layer_sig==9)     + e1bot3*(layer_sig==10)    + mabot3*(layer_sig==11)   )'
 + layer_bot4 =   'ly4*(m1bot4*(layer_sig==1)      + m2bot4*(layer_sig==2)     + m3bot4*(layer_sig==3)     + mqbot4*(layer_sig==7)     + mgbot4*(layer_sig==8)     + lybot4*(layer_sig==9)     + e1bot4*(layer_sig==10)    + mabot4*(layer_sig==11)   )'
 + layer_bot5 =   'ly5*(m1bot5*(layer_sig==1)      + m2bot5*(layer_sig==2)     + m3bot5*(layer_sig==3)     + m4bot5*(layer_sig==4)     + mqbot5*(layer_sig==7)     + lybot5*(layer_sig==9)     + e1bot5*(layer_sig==10)    + mabot5*(layer_sig==11)   )'
 *
 + layer_botf = 'layer_bot1 + layer_bot2 + layer_bot3 + layer_bot4 + layer_bot5'
 *
 + over_bot1 =   'ly1*(m1bot1*(layer_bot==1)      + m2bot1*(layer_bot==2)     + mqbot1*(layer_bot==7)     + lybot1*(layer_bot==9)     + e1bot1*(layer_bot==10)    + mabot1*(layer_bot==11)   )'
 + over_bot2 =   'ly2*(m1bot2*(layer_bot==1)      + m2bot2*(layer_bot==2)     + m3bot2*(layer_bot==3)     + mqbot2*(layer_bot==7)     + lybot2*(layer_bot==9)     + e1bot2*(layer_bot==10)    + mabot2*(layer_bot==11)   )'
 + over_bot3 =   'ly3*(m1bot3*(layer_bot==1)      + m2bot3*(layer_bot==2)     + mqbot3*(layer_bot==7)     + mgbot3*(layer_bot==8)     + lybot3*(layer_bot==9)     + e1bot3*(layer_bot==10)    + mabot3*(layer_bot==11)   )'
 + over_bot4 =   'ly4*(m1bot4*(layer_bot==1)      + m2bot4*(layer_bot==2)     + m3bot4*(layer_bot==3)     + mqbot4*(layer_bot==7)     + mgbot4*(layer_bot==8)     + lybot4*(layer_bot==9)     + e1bot4*(layer_bot==10)    + mabot4*(layer_bot==11)   )'
 + over_bot5 =   'ly5*(m1bot5*(layer_bot==1)      + m2bot5*(layer_bot==2)     + m3bot5*(layer_bot==3)     + m4bot5*(layer_bot==4)     + mqbot5*(layer_bot==7)     + lybot5*(layer_bot==9)     + e1bot5*(layer_bot==10)    + mabot5*(layer_bot==11)   )'
 *
 + over_botf = 'over_bot1 + over_bot2 + over_bot3 + over_bot4 + over_bot5'
 *
 + over_top1 =   'ly1*(m1top1*(layer_bot==1)      + m2top1*(layer_bot==2)     + mqtop1*(layer_bot==7)     + lytop1*(layer_bot==9)     + e1top1*(layer_bot==10)    + matop1*(layer_bot==11)   )'
 + over_top2 =   'ly2*(m1top2*(layer_bot==1)      + m2top2*(layer_bot==2)     + m3top2*(layer_bot==3)     + mqtop2*(layer_bot==7)     + lytop2*(layer_bot==9)     + e1top2*(layer_bot==10)    + matop2*(layer_bot==11)   )'
 + over_top3 =   'ly3*(m1top3*(layer_bot==1)      + m2top3*(layer_bot==2)     + mqtop3*(layer_bot==7)     + mgtop3*(layer_bot==8)     + lytop3*(layer_bot==9)     + e1top3*(layer_bot==10)    + matop3*(layer_bot==11)   )'
 + over_top4 =   'ly4*(m1top4*(layer_bot==1)      + m2top4*(layer_bot==2)     + m3top4*(layer_bot==3)     + mqtop4*(layer_bot==7)     + mgtop4*(layer_bot==8)     + lytop4*(layer_bot==9)     + e1top4*(layer_bot==10)    + matop4*(layer_bot==11)   )'
 + over_top5 =   'ly5*(m1top5*(layer_bot==1)      + m2top5*(layer_bot==2)     + m3top5*(layer_bot==3)     + m4top5*(layer_bot==4)     + mqtop5*(layer_bot==7)     + lytop5*(layer_bot==9)     + e1top5*(layer_bot==10)    + matop5*(layer_bot==11)   )'
 *
 + over_topf = 'over_top1 + over_top2 + over_top3 + over_top4 + over_top5'
 *
 + under_bot1 =   'ly1*(m1bot1*(layer_top==1)      + m2bot1*(layer_top==2)     + mqbot1*(layer_top==7)     + lybot1*(layer_top==9)     + e1bot1*(layer_top==10)    + mabot1*(layer_top==11)   )'
 + under_bot2 =   'ly2*(m1bot2*(layer_top==1)      + m2bot2*(layer_top==2)     + m3bot2*(layer_top==3)     + mqbot2*(layer_top==7)     + lybot2*(layer_top==9)     + e1bot2*(layer_top==10)    + mabot2*(layer_top==11)   )'
 + under_bot3 =   'ly3*(m1bot3*(layer_top==1)      + m2bot3*(layer_top==2)     + mqbot3*(layer_top==7)     + mgbot3*(layer_top==8)     + lybot3*(layer_top==9)     + e1bot3*(layer_top==10)    + mabot3*(layer_top==11)   )'
 + under_bot4 =   'ly4*(m1bot4*(layer_top==1)      + m2bot4*(layer_top==2)     + m3bot4*(layer_top==3)     + mqbot4*(layer_top==7)     + mgbot4*(layer_top==8)     + lybot4*(layer_top==9)     + e1bot4*(layer_top==10)    + mabot4*(layer_top==11)   )'
 + under_bot5 =   'ly5*(m1bot5*(layer_top==1)      + m2bot5*(layer_top==2)     + m3bot5*(layer_top==3)     + m4bot5*(layer_top==4)     + mqbot5*(layer_top==7)     + lybot5*(layer_top==9)     + e1bot5*(layer_top==10)    + mabot5*(layer_top==11)   )'
 *
 + under_botf = 'under_bot1 + under_bot2 + under_bot3 + under_bot4 + under_bot5'
 *
 + layer_top1 =   'ly1*(m1top1*(layer_sig==1)      + m2top1*(layer_sig==2)     + mqtop1*(layer_sig==7)     + lytop1*(layer_sig==9)     + e1top1*(layer_sig==10)    + matop1*(layer_sig==11)   )'
 + layer_top2 =   'ly2*(m1top2*(layer_sig==1)      + m2top2*(layer_sig==2)     + m3top2*(layer_sig==3)     + mqtop2*(layer_sig==7)     + lytop2*(layer_sig==9)     + e1top2*(layer_sig==10)    + matop2*(layer_sig==11)   )'
 + layer_top3 =   'ly3*(m1top3*(layer_sig==1)      + m2top3*(layer_sig==2)     + mqtop3*(layer_sig==7)     + mgtop3*(layer_sig==8)     + lytop3*(layer_sig==9)     + e1top3*(layer_sig==10)    + matop3*(layer_sig==11)   )'
 + layer_top4 =   'ly4*(m1top4*(layer_sig==1)      + m2top4*(layer_sig==2)     + m3top4*(layer_sig==3)     + mqtop4*(layer_sig==7)     + mgtop4*(layer_sig==8)     + lytop4*(layer_sig==9)     + e1top4*(layer_sig==10)    + matop4*(layer_sig==11)   )'
 + layer_top5 =   'ly5*(m1top5*(layer_sig==1)      + m2top5*(layer_sig==2)     + m3top5*(layer_sig==3)     + m4top5*(layer_sig==4)     + mqtop5*(layer_sig==7)     + lytop5*(layer_sig==9)     + e1top5*(layer_sig==10)    + matop5*(layer_sig==11)   )'
 *
 + layer_topf = 'layer_top1 + layer_top2 + layer_top3 + layer_top4 + layer_top5'
 *
 *
 + h1 = '1e-15*(abs( layer_botf - over_topf  )==0) + abs( layer_botf - over_topf  )'
 + th = '1e-15*(abs( layer_topf - layer_botf )==0) + abs( layer_topf - layer_botf )'
 *
 * create nominal versions of vertical dimension computations:
 *
 + layer_bot1_n =   'ly1*(m1bot1_n*(layer_sig==1)      + m2bot1_n*(layer_sig==2)     + mqbot1_n*(layer_sig==7)     + lybot1_n*(layer_sig==9)     + e1bot1_n*(layer_sig==10)    + mabot1_n*(layer_sig==11)   )'
 + layer_bot2_n =   'ly2*(m1bot2_n*(layer_sig==1)      + m2bot2_n*(layer_sig==2)     + m3bot2_n*(layer_sig==3)     + mqbot2_n*(layer_sig==7)     + lybot2_n*(layer_sig==9)     + e1bot2_n*(layer_sig==10)    + mabot2_n*(layer_sig==11)   )'
 + layer_bot3_n =   'ly3*(m1bot3_n*(layer_sig==1)      + m2bot3_n*(layer_sig==2)     + mqbot3_n*(layer_sig==7)     + mgbot3_n*(layer_sig==8)     + lybot3_n*(layer_sig==9)     + e1bot3_n*(layer_sig==10)    + mabot3_n*(layer_sig==11)   )'
 + layer_bot4_n =   'ly4*(m1bot4_n*(layer_sig==1)      + m2bot4_n*(layer_sig==2)     + m3bot4_n*(layer_sig==3)     + mqbot4_n*(layer_sig==7)     + mgbot4_n*(layer_sig==8)     + lybot4_n*(layer_sig==9)     + e1bot4_n*(layer_sig==10)    + mabot4_n*(layer_sig==11)   )'
 + layer_bot5_n =   'ly5*(m1bot5_n*(layer_sig==1)      + m2bot5_n*(layer_sig==2)     + m3bot5_n*(layer_sig==3)     + m4bot5_n*(layer_sig==4)     + mqbot5_n*(layer_sig==7)     + lybot5_n*(layer_sig==9)     + e1bot5_n*(layer_sig==10)    + mabot5_n*(layer_sig==11)   )'
 *
 + layer_botf_n= 'layer_bot1_n + layer_bot2_n + layer_bot3_n + layer_bot4_n + layer_bot5_n'
 *
 + over_top1_n =   'ly1*(m1top1_n*(layer_bot==1)      + m2top1_n*(layer_bot==2)     + mqtop1_n*(layer_bot==7)     + lytop1_n*(layer_bot==9)     + e1top1_n*(layer_bot==10)    + matop1_n*(layer_bot==11)   )'
 + over_top2_n =   'ly2*(m1top2_n*(layer_bot==1)      + m2top2_n*(layer_bot==2)     + m3top2_n*(layer_bot==3)     + mqtop2_n*(layer_bot==7)     + lytop2_n*(layer_bot==9)     + e1top2_n*(layer_bot==10)    + matop2_n*(layer_bot==11)   )'
 + over_top3_n =   'ly3*(m1top3_n*(layer_bot==1)      + m2top3_n*(layer_bot==2)     + mqtop3_n*(layer_bot==7)     + mgtop3_n*(layer_bot==8)     + lytop3_n*(layer_bot==9)     + e1top3_n*(layer_bot==10)    + matop3_n*(layer_bot==11)   )'
 + over_top4_n =   'ly4*(m1top4_n*(layer_bot==1)      + m2top4_n*(layer_bot==2)     + m3top4_n*(layer_bot==3)     + mqtop4_n*(layer_bot==7)     + mgtop4_n*(layer_bot==8)     + lytop4_n*(layer_bot==9)     + e1top4_n*(layer_bot==10)    + matop4_n*(layer_bot==11)   )'
 + over_top5_n =   'ly5*(m1top5_n*(layer_bot==1)      + m2top5_n*(layer_bot==2)     + m3top5_n*(layer_bot==3)     + m4top5_n*(layer_bot==4)     + mqtop5_n*(layer_bot==7)     + lytop5_n*(layer_bot==9)     + e1top5_n*(layer_bot==10)    + matop5_n*(layer_bot==11)   )'
 *
 + over_topf_n= 'over_top1_n + over_top2_n + over_top3_n + over_top4_n + over_top5_n'
 *
 *
 + over_bot1_n =   'ly1*(m1bot1_n*(layer_bot==1)    + m2bot1_n*(layer_bot==2)   + mqbot1_n*(layer_bot==7)   + lybot1_n*(layer_bot==9)   + e1bot1_n*(layer_bot==10)  + mabot1_n*(layer_bot==11) )'
 + over_bot2_n =   'ly2*(m1bot2_n*(layer_bot==1)    + m2bot2_n*(layer_bot==2)   + m3bot2_n*(layer_bot==3)   + mqbot2_n*(layer_bot==7)   + lybot2_n*(layer_bot==9)   + e1bot2_n*(layer_bot==10)  + mabot2_n*(layer_bot==11) )'
 + over_bot3_n =   'ly3*(m1bot3_n*(layer_bot==1)    + m2bot3_n*(layer_bot==2)   + mqbot3_n*(layer_bot==7)   + mgbot3_n*(layer_bot==8)   + lybot3_n*(layer_bot==9)   + e1bot3_n*(layer_bot==10)  + mabot3_n*(layer_bot==11) )'
 + over_bot4_n =   'ly4*(m1bot4_n*(layer_bot==1)    + m2bot4_n*(layer_bot==2)   + m3bot4_n*(layer_bot==3)   + mqbot4_n*(layer_bot==7)   + mgbot4_n*(layer_bot==8)   + lybot4_n*(layer_bot==9)   + e1bot4_n*(layer_bot==10)  + mabot4_n*(layer_bot==11) )'
 + over_bot5_n =   'ly5*(m1bot5_n*(layer_bot==1)    + m2bot5_n*(layer_bot==2)   + m3bot5_n*(layer_bot==3)   + m4bot5_n*(layer_bot==4)   + mqbot5_n*(layer_bot==7)   + lybot5_n*(layer_bot==9)   + e1bot5_n*(layer_bot==10)  + mabot5_n*(layer_bot==11) )'
 *
 + over_botf_n = 'over_bot1_n + over_bot2_n + over_bot3_n + over_bot4_n + over_bot5_n'
 *
 + under_bot1_n =   'ly1*(m1bot1_n*(layer_top==1)      + m2bot1_n*(layer_top==2)     + mqbot1_n*(layer_top==7)     + lybot1_n*(layer_top==9)     + e1bot1_n*(layer_top==10)    + mabot1_n*(layer_top==11)   )'
 + under_bot2_n =   'ly2*(m1bot2_n*(layer_top==1)      + m2bot2_n*(layer_top==2)     + m3bot2_n*(layer_top==3)     + mqbot2_n*(layer_top==7)     + lybot2_n*(layer_top==9)     + e1bot2_n*(layer_top==10)    + mabot2_n*(layer_top==11)   )'
 + under_bot3_n =   'ly3*(m1bot3_n*(layer_top==1)      + m2bot3_n*(layer_top==2)     + mqbot3_n*(layer_top==7)     + mgbot3_n*(layer_top==8)     + lybot3_n*(layer_top==9)     + e1bot3_n*(layer_top==10)    + mabot3_n*(layer_top==11)   )'
 + under_bot4_n =   'ly4*(m1bot4_n*(layer_top==1)      + m2bot4_n*(layer_top==2)     + m3bot4_n*(layer_top==3)     + mqbot4_n*(layer_top==7)     + mgbot4_n*(layer_top==8)     + lybot4_n*(layer_top==9)     + e1bot4_n*(layer_top==10)    + mabot4_n*(layer_top==11)   )'
 + under_bot5_n =   'ly5*(m1bot5_n*(layer_top==1)      + m2bot5_n*(layer_top==2)     + m3bot5_n*(layer_top==3)     + m4bot5_n*(layer_top==4)     + mqbot5_n*(layer_top==7)     + lybot5_n*(layer_top==9)     + e1bot5_n*(layer_top==10)    + mabot5_n*(layer_top==11)   )'
 *
 + under_botf_n= 'under_bot1_n + under_bot2_n + under_bot3_n + under_bot4_n + under_bot5_n'
 *
 + layer_top1_n =   'ly1*(m1top1_n*(layer_sig==1)      + m2top1_n*(layer_sig==2)     + mqtop1_n*(layer_sig==7)     + lytop1_n*(layer_sig==9)     + e1top1_n*(layer_sig==10)    + matop1_n*(layer_sig==11)   )'
 + layer_top2_n =   'ly2*(m1top2_n*(layer_sig==1)      + m2top2_n*(layer_sig==2)     + m3top2_n*(layer_sig==3)     + mqtop2_n*(layer_sig==7)     + lytop2_n*(layer_sig==9)     + e1top2_n*(layer_sig==10)    + matop2_n*(layer_sig==11)   )'
 + layer_top3_n =   'ly3*(m1top3_n*(layer_sig==1)      + m2top3_n*(layer_sig==2)     + mqtop3_n*(layer_sig==7)     + mgtop3_n*(layer_sig==8)     + lytop3_n*(layer_sig==9)     + e1top3_n*(layer_sig==10)    + matop3_n*(layer_sig==11)   )'
 + layer_top4_n =   'ly4*(m1top4_n*(layer_sig==1)      + m2top4_n*(layer_sig==2)     + m3top4_n*(layer_sig==3)     + mqtop4_n*(layer_sig==7)     + mgtop4_n*(layer_sig==8)     + lytop4_n*(layer_sig==9)     + e1top4_n*(layer_sig==10)    + matop4_n*(layer_sig==11)   )'
 + layer_top5_n =   'ly5*(m1top5_n*(layer_sig==1)      + m2top5_n*(layer_sig==2)     + m3top5_n*(layer_sig==3)     + m4top5_n*(layer_sig==4)     + mqtop5_n*(layer_sig==7)     + lytop5_n*(layer_sig==9)     + e1top5_n*(layer_sig==10)    + matop5_n*(layer_sig==11)   )'
 *
 + layer_topf_n = 'layer_top1_n + layer_top2_n + layer_top3_n + layer_top4_n + layer_top5_n'
 *
 *
 + h1_n = '1e-15*(abs( layer_botf_n - over_topf_n  )==0) + abs( layer_botf_n - over_topf_n  )'
 + th_n = '1e-15*(abs( layer_topf_n - layer_botf_n )==0) + abs( layer_topf_n - layer_botf_n )'
 *
 *
 *
 * end vertical dimension computation of cross-over types
 *
 * end vertical metal stack definition.
 *
 *
 *
 *
 *
 *
 * effective width and resistance calculations:
 *
 + delta_wel   = '0.0115*(layer_sig==1) + 0*(layer_sig==2) + 0*(layer_sig==3) + 0*(layer_sig==4) + 0.022*(layer_sig==7) + 0.022*(layer_sig==8) + 0*(layer_sig==9) + 0*(layer_sig==10) + 0*(layer_sig==11)'
 + delta_wphys = '0*(layer_sig==1) + -0.01*(layer_sig==2) + -0.01*(layer_sig==3) + -0.01*(layer_sig==4) + -0.01*(layer_sig==7) + -0.01*(layer_sig==8) + 0.01*(layer_sig==9) + 0*(layer_sig==10) + -0.08*(layer_sig==11)'
 + wo          = '2*(layer_sig==1) + 2*(layer_sig==2) + 2*(layer_sig==3) + 2*(layer_sig==4) + 2*(layer_sig==7) + 2*(layer_sig==8) + 2*(layer_sig==9) + 2*(layer_sig==10) + 4*(layer_sig==11)'
 + sopc        = '0.9999*(layer_sig==1) + 0.9999*(layer_sig==2) + 0.9999*(layer_sig==3) + 0.9999*(layer_sig==4) + 0.9999*(layer_sig==7) + 0.9999*(layer_sig==8) + 0.9999*(layer_sig==9) + 0.9999*(layer_sig==10) + 0.9999*(layer_sig==11)'
 + wopc        = '0.9999*(layer_sig==1) + 0.9999*(layer_sig==2) + 0.9999*(layer_sig==3) + 0.9999*(layer_sig==4) + 0.9999*(layer_sig==7) + 0.9999*(layer_sig==8) + 0.9999*(layer_sig==9) + 0.9999*(layer_sig==10) + 0.9999*(layer_sig==11)'
 + wopc1        = '0.9999*(layer_sig==1) + 0.9999*(layer_sig==2) + 0.9999*(layer_sig==3) + 0.9999*(layer_sig==4) + 0.9999*(layer_sig==7) + 0.9999*(layer_sig==8) + 0.9999*(layer_sig==9) + 0.9999*(layer_sig==10) + 0.9999*(layer_sig==11)'
 + wopc2        = '0.9999*(layer_sig==1) + 0.9999*(layer_sig==2) + 0.9999*(layer_sig==3) + 0.9999*(layer_sig==4) + 0.9999*(layer_sig==7) + 0.9999*(layer_sig==8) + 0.9999*(layer_sig==9) + 0.9999*(layer_sig==10) + 0.9999*(layer_sig==11)'
 + wopc3        = '0.9999*(layer_sig==1) + 0.9999*(layer_sig==2) + 0.9999*(layer_sig==3) + 0.9999*(layer_sig==4) + 0.9999*(layer_sig==7) + 0.9999*(layer_sig==8) + 0.9999*(layer_sig==9) + 0.9999*(layer_sig==10) + 0.9999*(layer_sig==11)'
 + wopc4        = '0.9999*(layer_sig==1) + 0.9999*(layer_sig==2) + 0.9999*(layer_sig==3) + 0.9999*(layer_sig==4) + 0.9999*(layer_sig==7) + 0.9999*(layer_sig==8) + 0.9999*(layer_sig==9) + 0.9999*(layer_sig==10) + 0.9999*(layer_sig==11)'
 + wopc5        = '0.9999*(layer_sig==1) + 0.9999*(layer_sig==2) + 0.9999*(layer_sig==3) + 0.9999*(layer_sig==4) + 0.9999*(layer_sig==7) + 0.9999*(layer_sig==8) + 0.9999*(layer_sig==9) + 0.9999*(layer_sig==10) + 0.9999*(layer_sig==11)'
 + sopc1        = '0.9999*(layer_sig==1) + 0.9999*(layer_sig==2) + 0.9999*(layer_sig==3) + 0.9999*(layer_sig==4) + 0.9999*(layer_sig==7) + 0.9999*(layer_sig==8) + 0.9999*(layer_sig==9) + 0.9999*(layer_sig==10) + 0.9999*(layer_sig==11)'
 + sopc2        = '0.9999*(layer_sig==1) + 0.9999*(layer_sig==2) + 0.9999*(layer_sig==3) + 0.9999*(layer_sig==4) + 0.9999*(layer_sig==7) + 0.9999*(layer_sig==8) + 0.9999*(layer_sig==9) + 0.9999*(layer_sig==10) + 0.9999*(layer_sig==11)'
 + sopc3        = '0.9999*(layer_sig==1) + 0.9999*(layer_sig==2) + 0.9999*(layer_sig==3) + 0.9999*(layer_sig==4) + 0.9999*(layer_sig==7) + 0.9999*(layer_sig==8) + 0.9999*(layer_sig==9) + 0.9999*(layer_sig==10) + 0.9999*(layer_sig==11)'
 + sopc4        = '0.9999*(layer_sig==1) + 0.9999*(layer_sig==2) + 0.9999*(layer_sig==3) + 0.9999*(layer_sig==4) + 0.9999*(layer_sig==7) + 0.9999*(layer_sig==8) + 0.9999*(layer_sig==9) + 0.9999*(layer_sig==10) + 0.9999*(layer_sig==11)'
 + sopc5        = '0.9999*(layer_sig==1) + 0.9999*(layer_sig==2) + 0.9999*(layer_sig==3) + 0.9999*(layer_sig==4) + 0.9999*(layer_sig==7) + 0.9999*(layer_sig==8) + 0.9999*(layer_sig==9) + 0.9999*(layer_sig==10) + 0.9999*(layer_sig==11)'
 + delta_bias   = '0.9999*(layer_sig==1) + 0.9999*(layer_sig==2) + 0.9999*(layer_sig==3) + 0.9999*(layer_sig==4) + 0.9999*(layer_sig==7) + 0.9999*(layer_sig==8) + 0.9999*(layer_sig==9) + 0.9999*(layer_sig==10) + 0.9999*(layer_sig==11)'
 + delta_lag   = '0.9999*(layer_sig==1) + 0.9999*(layer_sig==2) + 0.9999*(layer_sig==3) + 0.9999*(layer_sig==4) + 0.9999*(layer_sig==7) + 0.9999*(layer_sig==8) + 0.9999*(layer_sig==9) + 0.9999*(layer_sig==10) + 0.9999*(layer_sig==11)'
 + delta_phys   = '0*(layer_sig==1) + -0.01*(layer_sig==2) + -0.01*(layer_sig==3) + -0.01*(layer_sig==4) + -0.01*(layer_sig==7) + -0.01*(layer_sig==8) + 0.01*(layer_sig==9) + 0*(layer_sig==10) + -0.08*(layer_sig==11)'
 + l_min   = '0.16*(layer_sig==1) + 0.2*(layer_sig==2) + 0.2*(layer_sig==3) + 0.2*(layer_sig==4) + 0.4*(layer_sig==7) + 0.4*(layer_sig==8) + 0.6*(layer_sig==9) + 1.5*(layer_sig==10) + 4*(layer_sig==11)'
 + ibscale   = '0.9999*(layer_sig==1) + 0.9999*(layer_sig==2) + 0.9999*(layer_sig==3) + 0.9999*(layer_sig==4) + 0.9999*(layer_sig==7) + 0.9999*(layer_sig==8) + 0.9999*(layer_sig==9) + 0.9999*(layer_sig==10) + 0.9999*(layer_sig==11)'
 + ilscale   = '0.9999*(layer_sig==1) + 0.9999*(layer_sig==2) + 0.9999*(layer_sig==3) + 0.9999*(layer_sig==4) + 0.9999*(layer_sig==7) + 0.9999*(layer_sig==8) + 0.9999*(layer_sig==9) + 0.9999*(layer_sig==10) + 0.9999*(layer_sig==11)'
 + delta_wo   = '2*(layer_sig==1) + 2*(layer_sig==2) + 2*(layer_sig==3) + 2*(layer_sig==4) + 2*(layer_sig==7) + 2*(layer_sig==8) + 2*(layer_sig==9) + 2*(layer_sig==10) + 4*(layer_sig==11)'
 + res_type   = '1*(layer_sig==1) + 2*(layer_sig==2) + 2*(layer_sig==3) + 2*(layer_sig==4) + 3*(layer_sig==7) + 3*(layer_sig==8) + 4*(layer_sig==9) + 5*(layer_sig==10) + 6*(layer_sig==11)'
 + delta_bias_g   = '0.9999*(layer_bot==1) + 0.9999*(layer_bot==2) + 0.9999*(layer_bot==3) + 0.9999*(layer_bot==4) + 0.9999*(layer_bot==7) + 0.9999*(layer_bot==8) + 0.9999*(layer_bot==9) + 0.9999*(layer_bot==10) + 0.9999*(layer_bot==11)'
 + delta_lag_g   = '0.9999*(layer_bot==1) + 0.9999*(layer_bot==2) + 0.9999*(layer_bot==3) + 0.9999*(layer_bot==4) + 0.9999*(layer_bot==7) + 0.9999*(layer_bot==8) + 0.9999*(layer_bot==9) + 0.9999*(layer_bot==10) + 0.9999*(layer_bot==11)'
 + delta_phys_g   = '0*(layer_bot==1) + -0.01*(layer_bot==2) + -0.01*(layer_bot==3) + -0.01*(layer_bot==4) + -0.01*(layer_bot==7) + -0.01*(layer_bot==8) + 0.01*(layer_bot==9) + 0*(layer_bot==10) + -0.08*(layer_bot==11)'
 + l_min_g   = '0.16*(layer_bot==1) + 0.2*(layer_bot==2) + 0.2*(layer_bot==3) + 0.2*(layer_bot==4) + 0.4*(layer_bot==7) + 0.4*(layer_bot==8) + 0.6*(layer_bot==9) + 1.5*(layer_bot==10) + 4*(layer_bot==11)'
 + ibscale_g   = '0.9999*(layer_bot==1) + 0.9999*(layer_bot==2) + 0.9999*(layer_bot==3) + 0.9999*(layer_bot==4) + 0.9999*(layer_bot==7) + 0.9999*(layer_bot==8) + 0.9999*(layer_bot==9) + 0.9999*(layer_bot==10) + 0.9999*(layer_bot==11)'
 + ilscale_g   = '0.9999*(layer_bot==1) + 0.9999*(layer_bot==2) + 0.9999*(layer_bot==3) + 0.9999*(layer_bot==4) + 0.9999*(layer_bot==7) + 0.9999*(layer_bot==8) + 0.9999*(layer_bot==9) + 0.9999*(layer_bot==10) + 0.9999*(layer_bot==11)'
 + delta_wo_g   = '2*(layer_bot==1) + 2*(layer_bot==2) + 2*(layer_bot==3) + 2*(layer_bot==4) + 2*(layer_bot==7) + 2*(layer_bot==8) + 2*(layer_bot==9) + 2*(layer_bot==10) + 4*(layer_bot==11)'
 + res_type_g   = '1*(layer_bot==1) + 2*(layer_bot==2) + 2*(layer_bot==3) + 2*(layer_bot==4) + 3*(layer_bot==7) + 3*(layer_bot==8) + 4*(layer_bot==9) + 5*(layer_bot==10) + 6*(layer_bot==11)'
 + wlim        = '2*(layer_sig==1) + 2*(layer_sig==2) + 2*(layer_sig==3) + 2*(layer_sig==4) + 2*(layer_sig==7) + 2*(layer_sig==8) + 2*(layer_sig==9) + 2*(layer_sig==10) + 4*(layer_sig==11)'
 + rsquare     = 'm1rs*(layer_sig==1) + m2rs*(layer_sig==2) + m3rs*(layer_sig==3) + m4rs*(layer_sig==4) + mqrs*(layer_sig==7) + mgrs*(layer_sig==8) + lyrs*(layer_sig==9) + e1rs*(layer_sig==10) + mars*(layer_sig==11)'
 + tcr         = 'tm1rs*(layer_sig==1) + tm2rs*(layer_sig==2) + tm3rs*(layer_sig==3) + tm4rs*(layer_sig==4) + tmqrs*(layer_sig==7) + tmgrs*(layer_sig==8) + tlyrs*(layer_sig==9) + te1rs*(layer_sig==10) + tmars*(layer_sig==11)'
 + wmin        = '0.16*(layer_sig==1) + 0.2*(layer_sig==2) + 0.2*(layer_sig==3) + 0.2*(layer_sig==4) + 0.4*(layer_sig==7) + 0.4*(layer_sig==8) + 0.6*(layer_sig==9) + 1.5*(layer_sig==10) + 4*(layer_sig==11)'
 + ws = 'wmin + dlw*1e6'
 *
 + delta_wel_g   = '0.0115*(layer_bot==1) + 0*(layer_bot==2) + 0*(layer_bot==3) + 0*(layer_bot==4) + 0.022*(layer_bot==7) + 0.022*(layer_bot==8) + 0*(layer_bot==9) + 0*(layer_bot==10) + 0*(layer_bot==11)'
 + delta_wphys_g = '0*(layer_bot==1) + -0.01*(layer_bot==2) + -0.01*(layer_bot==3) + -0.01*(layer_bot==4) + -0.01*(layer_bot==7) + -0.01*(layer_bot==8) + 0.01*(layer_bot==9) + 0*(layer_bot==10) + -0.08*(layer_bot==11)'
 + wo_g          = '2*(layer_bot==1) + 2*(layer_bot==2) + 2*(layer_bot==3) + 2*(layer_bot==4) + 2*(layer_bot==7) + 2*(layer_bot==8) + 2*(layer_bot==9) + 2*(layer_bot==10) + 4*(layer_bot==11)'
 + wlim_g        = '2*(layer_bot==1) + 2*(layer_bot==2) + 2*(layer_bot==3) + 2*(layer_bot==4) + 2*(layer_bot==7) + 2*(layer_bot==8) + 2*(layer_bot==9) + 2*(layer_bot==10) + 4*(layer_bot==11)'
 + rsquare_g     = 'm1rs*(layer_bot==1) + m2rs*(layer_bot==2) + m3rs*(layer_bot==3) + m4rs*(layer_bot==4) + mqrs*(layer_bot==7) + mgrs*(layer_bot==8) + lyrs*(layer_bot==9) + e1rs*(layer_bot==10) + mars*(layer_bot==11)'
 + tcr_g         = 'tm1rs*(layer_bot==1) + tm2rs*(layer_bot==2) + tm3rs*(layer_bot==3) + tm4rs*(layer_bot==4) + tmqrs*(layer_bot==7) + tmgrs*(layer_bot==8) + tlyrs*(layer_bot==9) + te1rs*(layer_bot==10) + tmars*(layer_bot==11)'
 + wmin_g        = '0.16*(layer_bot==1) + 0.2*(layer_bot==2) + 0.2*(layer_bot==3) + 0.2*(layer_bot==4) + 0.4*(layer_bot==7) + 0.4*(layer_bot==8) + 0.6*(layer_bot==9) + 1.5*(layer_bot==10) + 4*(layer_bot==11)'
 *
 ************************************************************************
 * assign needed variable names for equations to come:
 *
 + h_microns    = '(layer_botf - over_topf)*1e+6'
 + th_microns   = '(layer_topf - layer_botf)*1e+6'
 + th_g_microns = '(over_topf  - over_botf)*1e+6'
 *
 + h_microns_n    = '(layer_botf_n - over_topf_n)*1e+6'
 + th_microns_n   = '(layer_topf_n - layer_botf_n)*1e+6'
 + th_g_microns_n = '(over_topf_n - over_botf_n)*1e+6'
 *
 + w_microns        = 'w_l*1e6'
 + s_mic            = 's_l*1e6'
 + s_microns        = 's_mic*(s_mic>0) + (s_mic==0)*6'
 + d_microns        = 'd_l*1e6'
 + l_microns        = 'l*1e6'
 + w_microns_g      = '(shieldsads==0)*(2*w_microns + 2*h_microns + 2*th_microns + d_microns + dlw_g*1e6) + (shieldsads==1)*(2*w_microns + 2*s_microns + d_microns + 2*wmin + dlw_g*1e6)'
 + wg_microns       = 'w_microns_g'
 *
 + layerads_bot_4eps = 'layer_bot_4eps'
 + overads_top_4eps  = 'under_top_4eps'
 *
 + h_by_eps = '(layerads_bot_4eps - overads_top_4eps)*1e+6'
 *
 + epsilon_r           = 'h_microns_n/h_by_eps'
 + eps_side            = 'layer_eps_side'
 + eps_side_over       = 'layer_eps_side_over'
 + epsilon_r_side      = 'eps_side'
 + epsilon_r_side_over = 'eps_side_over'
 *
 + layerads_bot_fill   = 'signal_bot_fill'
 + overads_top_fill    = 'crossunder_top_fill'
 *
 + h_fill = '(layerads_bot_fill - overads_top_fill)*1e+6'
 *
 + wfill    = 'w_fill'
 + sfill    = 's_fill'
 *
 + s_microns_yo = '(shieldsads==0)*10 + (shieldsads==1)*s_microns'
 *
 + wo_1          = 1.8
 + slot_r_1      = 0.7
 + wc_1          = '(w_microns > wo_1)*( 1.4+slot_r_1*(w_microns-1.4) )+(w_microns<=wo_1)*(w_microns)'
 + w_eff_1       = 'wc_1-2*delta_wphys-2*delta_wel'
 + wo_2          = 1.8
 + slot_r_2      = 0.7
 + wc_2          = '(w_microns > wo_2)*( 1.4+slot_r_2*(w_microns-1.4) )+(w_microns<=wo_2)*(w_microns)'
 + w_eff_2       = 'wc_2-2*delta_wphys-2*delta_wel'
 + wo_3          = 2.4
 + slot_r_3      = 0.7
 + wc_3          = '(w_microns > wo_3)*( 2.4+slot_r_3*(w_microns-2.4) )+(w_microns<=wo_3)*(w_microns)'
 + w_eff_3       = 'wc_3-2*delta_wphys-2*delta_wel'
 + wc_4          = 'w_microns-2*delta_wphys-2*delta_wel'
 + w_eff_4       = 'wc_4'
 + wc_5          = 'w_microns-2*delta_wphys-2*delta_wel'
 + w_eff_5       = 'wc_5'
 + wc_6          = 'w_microns-2*delta_wphys-2*delta_wel'
 + w_eff_6       = 'wc_6'
 *
 + wo_1_g        = 1.8
 + slot_r_1_g    = 0.7
 + w_c_1_g       = '(w_microns_g > wo_1_g)*( 1.4+slot_r_1_g*(w_microns_g-1.4) )+(w_microns_g<=wo_1_g)*(w_microns_g)'
 + w_eff_1_g     = 'w_c_1_g-2*delta_wphys_g-2*delta_wel_g'
 + wo_2_g        = 1.8
 + slot_r_2_g    = 0.7
 + w_c_2_g       = '(w_microns_g > wo_2_g)*( 1.4+slot_r_2_g*(w_microns_g-1.4) )+(w_microns_g<=wo_2_g)*(w_microns_g)'
 + w_eff_2_g     = 'w_c_2_g-2*delta_wphys_g-2*delta_wel_g'
 + wo_3_g        = 2.4
 + slot_r_3_g    = 0.7
 + w_c_3_g       = '(w_microns_g > wo_3_g)*( 2.4+slot_r_3_g*(w_microns_g-2.4) )+(w_microns_g<=wo_3_g)*(w_microns_g)'
 + w_eff_3_g     = 'w_c_3_g-2*delta_wphys_g-2*delta_wel_g'
 + wc_4_g        = 'w_microns_g-2*delta_wphys_g-2*delta_wel_g'
 + w_eff_4_g     = 'wc_4_g'
 + wc_5_g        = 'w_microns_g-2*delta_wphys_g-2*delta_wel_g'
 + w_eff_5_g     = 'wc_5_g'
 + wc_6_g        = 'w_microns_g-2*delta_wphys_g-2*delta_wel_g'
 + w_eff_6_g     = 'wc_6_g'
 *
 *
 + w_eff         = '(res_type==1)*w_eff_1+(res_type==2)*w_eff_2+(res_type==3)*w_eff_3+(res_type==4)*w_eff_4+(res_type==5)*w_eff_5+(res_type==6)*w_eff_6'
 + r_sh          = '(1e15)*(shieldsads == 0) +(l*1e6*(rsquare/ws)*(1+tcr*(temper + dtemp -tref)))*(shieldsads == 1)'
 + rpath         = '(l*1e6*(rsquare/w_eff)*(1+tcr*(temper + dtemp -tref)))'
 *
 + w_eff_g       = '(res_type_g==1)*w_eff_1_g+(res_type_g==2)*w_eff_2_g+(res_type_g==3)*w_eff_3_g+(res_type_g==4)*w_eff_4_g+(res_type_g==5)*w_eff_5_g+(res_type_g==6)*w_eff_6_g'
 + r_g           = 'l_microns*(rsquare_g/w_eff_g)*(1 + tcr_g*(temper + dtemp - tref))'
 + rret          = 'r_g/(1 + 2*r_g/r_sh)'
 *
 *
 ***************************************************************************************
 * <<< resistance equation using for testing (comparing to z2d field solver data) >>>
 * <<< if dc resistance is desired...use extraction or design manual equations    >>>
 * <<< to determine the resistance. this model includes ground return paths in    >>>
 * <<< calculation of resistance.                                                 >>>
 *
 + rtot = 'rpath + rret'
 ***************************************************************************************
 *
 * ===============================================
 * end common
 * ===============================================
 * ===============================================
 * custom capacitance for coupled wires
 *
 + ctot_cust = 'c_cust*l'
 + cctot_cust = 'cc_cust*l'
 * ===============================================
 * ===============================================
 * capacitance calculation for coupled wires without side shielding
 *
 + epsilon_r_ratio_noshield = '0.5*(epsilon_r + epsilon_r_side_over)/epsilon_r_side'
 + x21_noshield = 1.0467
 + x22_noshield = 0.9446
 + x23_noshield = 1.2070
 + x24_noshield = 0.8498
 *
 + y21_noshield = 1.0610
 + y22_noshield = 0.4780
 + y23_noshield = 0.8668
 + y24_noshield = 0.8802
 *
 + y25_noshield = '1.2121*epsilon_r_ratio_noshield'
 + y26_noshield = 1.4308
 + y27_noshield = 1.0293
 + y28_noshield = 0.9771
 *
 + alfa_noshield = '2*atan(0.5*d_microns/h_microns)'
 + beta_noshield = 'pi/2 - alfa_noshield'
 *
 + cpl_right_noshield_nofill_1 = 'e0*(x21_noshield*0.5*w_microns/h_microns + x22_noshield*(2/(pi - 2))*log(0.5*pi) + x23_noshield*(2/pi)*log(1 + th_microns/h_microns))'
 + cpl_right_noshield_nofill_2 = 'e0*(x21_noshield*0.5*w_microns/h_microns + x22_noshield*(2/(pi - 2))*log(0.5*pi) + x23_noshield*(2/pi)*log(0.5*d_microns/h_microns))'
 + cpl_right_noshield_nofill_3 = 'e0*(x21_noshield*0.5*w_microns/h_microns + x22_noshield*(1-cos(alfa_noshield))/(alfa_noshield-sin(alfa_noshield))*log(alfa_noshield/sin(alfa_noshield)))'
 + cpl_right_noshield_nofill = 'cpl_right_noshield_nofill_1*(d_microns >= 2*(h_microns + th_microns)) + cpl_right_noshield_nofill_2*(d_microns >= 2*h_microns && d_microns < 2*(h_microns + th_microns)) + cpl_right_noshield_nofill_3*(d_microns < 2*h_microns)'
 *
 + c1_left_noshield_nofill = 'e0*(x21_noshield*0.5*w_microns/h_microns + x22_noshield*(2/(pi - 2))*log(0.5*pi) + x23_noshield*(2/pi)*log(1 + th_microns/h_microns))'
 + ht_microns = 'h_microns + th_microns'
 + c2_left_noshield_nofill_1 = 'e0*x24_noshield*(2/(3*pi))*log(1 + 1.5*w_microns/ht_microns)'
 + c2_left_noshield_nofill_2 = 'e0*x24_noshield*((2/(3*pi))*log(1 + 3*th_g_microns/ht_microns) + (0.5/pi)*log(1 + (w_microns - 2*th_g_microns)/(0.5*ht_microns + 1.5*th_g_microns)))'
 + c2_left_noshield_nofill = 'c2_left_noshield_nofill_1*(w_microns < 2*th_g_microns) + c2_left_noshield_nofill_2*(w_microns >= 2*th_g_microns)'
 *
 + cpl_left_noshield_nofill =  'c1_left_noshield_nofill + c2_left_noshield_nofill'
 *
 + cpl_noshield_nofill = '(cpl_right_noshield_nofill + cpl_left_noshield_nofill)*epsilon_r'
 *
 + co_right_noshield_nofill_1 = 'e0*(y21_noshield*0.5*w_microns/h_microns + y22_noshield*(2/(pi - 2))*log(0.5*pi) + y23_noshield*(2/pi)*log(1 + th_microns/h_microns))'
 + co_right_noshield_nofill_2 = 'e0*(y21_noshield*0.5*w_microns/h_microns + y22_noshield*(2/(pi - 2))*log(0.5*pi) + y23_noshield*(2/pi)*log(0.5*d_microns/h_microns))'
 + co_right_noshield_nofill_3 = 'e0*(y21_noshield*0.5*w_microns/h_microns + y22_noshield*(1 - cos(alfa_noshield))/(alfa_noshield - sin(alfa_noshield))*log(alfa_noshield/sin(alfa_noshield)))'
 + co_right_noshield_nofill = 'co_right_noshield_nofill_1*(d_microns >= 2*(h_microns + th_microns)) + co_right_noshield_nofill_2*(d_microns >= 2*h_microns && d_microns < 2*(h_microns + th_microns)) + co_right_noshield_nofill_3*(d_microns < 2*h_microns)'
 *
 + c1o_left_noshield_nofill = 'e0*(y21_noshield*0.5*w_microns/h_microns + y22_noshield*(2/(pi - 2))*log(0.5*pi) + y23_noshield*(2/pi)*log(1 + th_microns/h_microns))'
 + c2o_left_noshield_nofill_1 = 'e0*y24_noshield*(2/(3*pi))*log(1 + 1.5*w_microns/ht_microns)'
 + c2o_left_noshield_nofill_2 = 'e0*y24_noshield*((2/(3*pi))*log(1 + 3*th_g_microns/ht_microns) + (0.5/pi)*log(1 + (w_microns - 2*th_g_microns)/(0.5*ht_microns + 1.5*th_g_microns)))'
 + c2o_left_noshield_nofill = 'c2o_left_noshield_nofill_1*(w_microns < 2*th_g_microns) + c2o_left_noshield_nofill_2*(w_microns >= 2*th_g_microns)'
 *
 + co_left_noshield_nofill = 'c1o_left_noshield_nofill + c2o_left_noshield_nofill'
 *
 + cc_noshield_nofill_1 = 'e0*(y25_noshield*(1/pi)*log(1 + w_microns/d_microns) + y26_noshield*(1/(pi - 2))*log(0.5*pi))'
 + cc_noshield_nofill_2 = 'e0*(y25_noshield*(1/pi)*log(1 + w_microns/d_microns) + y26_noshield*(1/(pi - 2))*log(0.5*pi) + y27_noshield*(th_microns + h_microns - 0.5*d_microns )/d_microns)'
 + cc_noshield_nofill_3 = 'e0*(y25_noshield*(1/pi)*log(1 + w_microns/d_microns) + y26_noshield*(1/(pi - 2))*log(0.5*pi) + y27_noshield*th_microns/d_microns + y28_noshield*0.5*(1 - cos(beta_noshield))/(beta_noshield - sin(beta_noshield))*log(beta_noshield/sin(beta_noshield)))'
 + cc_noshield_nofill_temp1 = 'cc_noshield_nofill_1*(d_microns >= 2*(h_microns + th_microns)) + cc_noshield_nofill_2*(d_microns >= 2*h_microns && d_microns < 2*(h_microns + th_microns)) + cc_noshield_nofill_3*(d_microns < 2*h_microns)'
 *
 + co_noshield_nofill = '(co_right_noshield_nofill + co_left_noshield_nofill)*epsilon_r + 2*cc_noshield_nofill_temp1*epsilon_r_side'
 *
 + cc0_noshield_nofill = 'cc_noshield_nofill_temp1'
 + cc_noshield_nofill_temp2 = '0.5*(co_noshield_nofill - cpl_noshield_nofill)'
 + cc_noshield_nofill = 'cc_noshield_nofill_temp1*(cc_noshield_nofill_temp2 < 0) + cc_noshield_nofill_temp2*(cc_noshield_nofill_temp2 >= 0)'
 *
 + ctot_noshield_nofill = 'cpl_noshield_nofill*l'
 + cctot_noshield_nofill = 'cc_noshield_nofill*l'
 + ctot_nofill_noshield = 'ctot_noshield_nofill'
 + cctot_nofill_noshield = 'cctot_noshield_nofill'
 *
 * capacitance update due to pattern fill
 + coefill1 = '(1 - denfill) + denfill*h_microns/(h_microns - h_fill)'
 + coefill2 = '(1 - denfill) + denfill*h_microns/(h_microns - h_fill - denfill*th_microns)'
 + c1_noshield_fill = 'c1_left_noshield_nofill*coefill1'
 + c2_noshield_fill = 'c2_left_noshield_nofill*coefill2'
 + cpl_left_noshield_fill = 'c1_noshield_fill + c2_noshield_fill'
 + cpl_right_noshield_fill = 'cpl_right_noshield_nofill*coefill1'
 + cpl_noshield_fill = '(cpl_left_noshield_fill + cpl_right_noshield_fill)*epsilon_r'
 + ctot_noshield_fill = 'cpl_noshield_fill*l'
 *
 + ctot_noshield = 'ctot_noshield_nofill*(patternfill == 0) + ctot_noshield_fill*(patternfill == 1)'
 *
 + delta_noshield = 1.e-10
 + num_side_fill_noshield = '(d_microns - 2*sf2sh - sfill)/(wfill - sfill)'
 + num_fill_noshield = 'int(num_side_fill_noshield + delta_noshield)'
 + coefill_side_noshield = 'd_microns/(d_microns - num_fill_noshield*wfill*denfillc)'
 + cctot_noshield_fill = 'cctot_noshield_nofill*coefill_side_noshield'
 *
 + cctot_noshield = 'cctot_noshield_nofill*(patternfill == 0 || patternfill == 1 && (wfill <= 0 || num_fill_noshield < 1)) + cctot_noshield_fill*(patternfill == 1 && (wfill > 0 && num_fill_noshield >= 1))'
 * ===============================================
 * ===============================================
 * capacitance calculation for coupled wires with side shielding
 *
 + epsilon_r_ratio_shield = '0.5*(epsilon_r + epsilon_r_side_over)/epsilon_r_side'
 + x41_shield = 1.0448
 + x42_shield = 0.8582
 + x43_shield = 1.2263
 + x44_shield = '0.7376*epsilon_r_ratio_shield'
 + x45_shield = 0.8764
 + x46_shield = 1.4370
 + x47_shield = 0.9079
 *
 + y41_shield = 1.0764
 + y42_shield = 0.4692
 + y43_shield = 1.0765
 + y44_shield = '1.0228*epsilon_r_ratio_shield'
 + y45_shield = 0.9244
 + y46_shield = 0.7134
 + y47_shield = 1.2565
 + y48_shield = '1.1456*epsilon_r_ratio_shield'
 + y49_shield = 0.9380
 + y410_shield = 1.1374
 + y411_shield = 1.0307
 *
 + alfa_s_shield = '2*atan(0.5*s_microns/h_microns)'
 + beta_s_shield = 'pi/2 - alfa_s_shield'
 *
 + alfa_d_shield = '2*atan(0.5*d_microns/h_microns)'
 + beta_d_shield = 'pi/2 - alfa_d_shield'
 *
 + cpl_right_shield_nofill_1 = 'e0*(x41_shield*0.5*w_microns/h_microns + x42_shield*(2/(pi-2))*log(0.5*pi) + x43_shield*(2/pi)*log(1 + th_microns/h_microns))'
 + cpl_right_shield_nofill_2 = 'e0*(x41_shield*0.5*w_microns/h_microns + x42_shield*(2/(pi-2))*log(0.5*pi) + x43_shield*(2/pi)*log(0.5*d_microns/h_microns))'
 + cpl_right_shield_nofill_3 = 'e0*(x41_shield*0.5*w_microns/h_microns + x42_shield*(1 - cos(alfa_d_shield))/(alfa_d_shield - sin(alfa_d_shield))*log(alfa_d_shield/sin(alfa_d_shield)))'
 + cpl_right_shield_nofill = 'cpl_right_shield_nofill_1*(d_microns >= 2*(h_microns + th_microns)) + cpl_right_shield_nofill_2*(d_microns >= 2*h_microns && d_microns < 2*(h_microns + th_microns)) + cpl_right_shield_nofill_3*(d_microns < 2*h_microns)'
 *
 + cpl_left_shield_nofill_1 = 'e0*(x41_shield*0.5*w_microns/h_microns + x42_shield*(2/(pi-2))*log(0.5*pi) + x43_shield*(2/pi)*log(1 + th_microns/h_microns))'
 + cpl_left_shield_nofill_2 = 'e0*(x41_shield*0.5*w_microns/h_microns + x42_shield*(2/(pi-2))*log(0.5*pi) + x43_shield*(2/pi)*log(0.5*s_microns/h_microns))'
 + cpl_left_shield_nofill_3 = 'e0*(x41_shield*0.5*w_microns/h_microns + x42_shield*(1-cos(alfa_s_shield))/(alfa_s_shield-sin(alfa_s_shield))*log(alfa_s_shield/sin(alfa_s_shield)))'
 + cpl_left_shield_nofill = 'cpl_left_shield_nofill_1*(s_microns >= 2*(h_microns + th_microns)) + cpl_left_shield_nofill_2*(s_microns >= 2*h_microns && s_microns < 2*(h_microns + th_microns)) + cpl_left_shield_nofill_3*(s_microns < 2*h_microns)'
 *
 + cs_shield_nofill_1 = 'e0*(x44_shield*(1/pi)*log(1 + w_microns/s_microns) + x45_shield*(1/(pi-2))*log(0.5*pi))'
 + cs_shield_nofill_2 = 'e0*(x44_shield*(1/pi)*log(1 + w_microns/s_microns) + x45_shield*(1/(pi-2))*log(0.5*pi) + x46_shield*(th_microns + h_microns - 0.5*s_microns)/s_microns)'
 + cs_shield_nofill_3 = 'e0*(x44_shield*(1/pi)*log(1 + w_microns/s_microns) + x45_shield*(1/(pi-2))*log(0.5*pi) + x46_shield*th_microns/s_microns + x47_shield*0.5*(1 - cos(beta_s_shield))/(beta_s_shield - sin(beta_s_shield))*log(beta_s_shield/sin(beta_s_shield)))'
 + cs_shield_nofill = 'cs_shield_nofill_1*(s_microns >= 2*(h_microns + th_microns)) + cs_shield_nofill_2*(s_microns >= 2*h_microns && s_microns < 2*(h_microns + th_microns)) + cs_shield_nofill_3*(s_microns < 2*h_microns)'
 *
 + cpl_shield_nofill = '(cpl_right_shield_nofill + cpl_left_shield_nofill)*epsilon_r + cs_shield_nofill*epsilon_r_side'
 *
 + co_right_shield_nofill_1 = 'e0*(y41_shield*0.5*w_microns/h_microns + y42_shield*(2/(pi-2))*log(0.5*pi) + y43_shield*(2/pi)*log(1 + th_microns/h_microns))'
 + co_right_shield_nofill_2 = 'e0*(y41_shield*0.5*w_microns/h_microns + y42_shield*(2/(pi-2))*log(0.5*pi) + y43_shield*(2/pi)*log(0.5*d_microns/h_microns))'
 + co_right_shield_nofill_3 = 'e0*(y41_shield*0.5*w_microns/h_microns + y42_shield*(1 - cos(alfa_d_shield))/(alfa_d_shield - sin(alfa_d_shield))*log(alfa_d_shield/sin(alfa_d_shield)))'
 + co_right_shield_nofill = 'co_right_shield_nofill_1*(d_microns >= 2*(h_microns + th_microns)) + co_right_shield_nofill_2*(d_microns >= 2*h_microns && d_microns < 2*(h_microns + th_microns)) + co_right_shield_nofill_3*(d_microns < 2*h_microns)'
 *
 + co_left_shield_nofill_1 = 'e0*(y41_shield*0.5*w_microns/h_microns + y42_shield*(2/(pi-2))*log(0.5*pi) + y43_shield*(2/pi)*log(1 + th_microns/h_microns))'
 + co_left_shield_nofill_2 = 'e0*(y41_shield*0.5*w_microns/h_microns + y42_shield*(2/(pi-2))*log(0.5*pi) + y43_shield*(2/pi)*log(0.5*s_microns/h_microns))'
 + co_left_shield_nofill_3 = 'e0*(y41_shield*0.5*w_microns/h_microns + y42_shield*(1 - cos(alfa_s_shield))/(alfa_s_shield - sin(alfa_s_shield))*log(alfa_s_shield/sin(alfa_s_shield)))'
 + co_left_shield_nofill = 'co_left_shield_nofill_1*(s_microns >= 2*(h_microns + th_microns)) + co_left_shield_nofill_2*(s_microns >= 2*h_microns && s_microns < 2*(h_microns + th_microns)) + co_left_shield_nofill_3*(s_microns < 2*h_microns)'
 *
 + cso_shield_nofill_1 = 'e0*(y44_shield*(1/pi)*log(1 + w_microns/s_microns) + y45_shield*(1/(pi-2))*log(0.5*pi))'
 + cso_shield_nofill_2 = 'e0*(y44_shield*(1/pi)*log(1 + w_microns/s_microns) + y45_shield*(1/(pi-2))*log(0.5*pi) + y46_shield*(th_microns + h_microns - 0.5*s_microns)/s_microns)'
 + cso_shield_nofill_3 = 'e0*(y44_shield*(1/pi)*log(1 + w_microns/s_microns) + y45_shield*(1/(pi-2))*log(0.5*pi) + y46_shield*th_microns/s_microns + y47_shield*0.5*(1 - cos(beta_s_shield))/(beta_s_shield - sin(beta_s_shield))*log(beta_s_shield/sin(beta_s_shield)))'
 + cso_shield_nofill = 'cso_shield_nofill_1*(s_microns >= 2*(h_microns + th_microns)) + cso_shield_nofill_2*(s_microns >= 2*h_microns && s_microns < 2*(h_microns + th_microns)) + cso_shield_nofill_3*(s_microns < 2*h_microns)'
 *
 + cc_shield_nofill_1 = 'e0*(y48_shield*(1/pi)*log(1 + w_microns/d_microns) + y49_shield*(1/(pi-2))*log(0.5*pi))'
 + cc_shield_nofill_2 = 'e0*(y48_shield*(1/pi)*log(1 + w_microns/d_microns) + y49_shield*(1/(pi-2))*log(0.5*pi) + y410_shield*(th_microns + h_microns - 0.5*d_microns)/d_microns)'
 + cc_shield_nofill_3 = 'e0*(y48_shield*(1/pi)*log(1 + w_microns/d_microns) + y49_shield*(1/(pi-2))*log(0.5*pi) + y410_shield*th_microns/d_microns + y411_shield*0.5*(1 - cos(beta_d_shield))/(beta_d_shield - sin(beta_d_shield))*log(beta_d_shield/sin(beta_d_shield)))'
 + cc_shield_nofill_temp1 = 'cc_shield_nofill_1*(d_microns >= 2*(h_microns + th_microns)) + cc_shield_nofill_2*(d_microns >= 2*h_microns && d_microns < 2*(h_microns + th_microns)) + cc_shield_nofill_3*(d_microns < 2*h_microns)'
 *
 + co_shield_nofill = '(co_right_shield_nofill + co_left_shield_nofill)*epsilon_r + (cso_shield_nofill + 2*cc_shield_nofill_temp1)*epsilon_r_side'
 *
 + cc0_shield_nofill = 'cc_shield_nofill_temp1'
 + cc_shield_nofill_temp2 = '0.5*(co_shield_nofill - cpl_shield_nofill)'
 + cc_shield_nofill = 'cc_shield_nofill_temp1*(cc_shield_nofill_temp2 < 0) + cc_shield_nofill_temp2*(cc_shield_nofill_temp2 >= 0)'
 *
 + ctot_shield_nofill = 'cpl_shield_nofill*l'
 + cctot_shield_nofill = 'cc_shield_nofill*l'
 + ctot_nofill_shield = 'ctot_shield_nofill'
 + cctot_nofill_shield = 'cctot_shield_nofill'
 *
 + ctot_nofill = 'ctot_nofill_noshield*(shieldsads == 0 && customcap == 0) + ctot_nofill_shield*(shieldsads == 1 && customcap == 0) + ctot_cust*(customcap == 1)'
 + cctot_nofill = 'cctot_nofill_noshield*(shieldsads == 0 && customcap == 0) + cctot_nofill_shield*(shieldsads == 1 && customcap == 0) + cctot_cust*(customcap == 1)'
 *
 * capacitance update due to pattern fill
 + coefill_shield =  '(1 - denfill) + denfill*h_microns/(h_microns - h_fill)'
 + cpl_right_shield_fill = 'cpl_right_shield_nofill*coefill_shield'
 + cpl_left_shield_fill = 'cpl_left_shield_nofill*coefill_shield'
 *
 + delta_shield = 1.e-10
 + num_side_fill_shield_1 = '(s_microns - 2*sf2sh - sfill)/(wfill - sfill)'
 + num_fill_shield_1 = 'int(num_side_fill_shield_1 + delta_shield)'
 *
 + coefill_side_shield_1 = 's_microns/(s_microns - num_fill_shield_1*wfill*denfillc)'
 + cs_shield_fill = 'cs_shield_nofill*coefill_side_shield_1'
 *
 + num_side_fill_shield_2 = '(d_microns - 2*sf2sh - sfill)/(wfill - sfill)'
 + num_fill_shield_2 = 'int(num_side_fill_shield_2 + delta_shield)'
 + coefill_side_shield_2 = 'd_microns/(d_microns - num_fill_shield_2*wfill*denfillc)'
 + cc_shield_fill = 'cc_shield_nofill*coefill_side_shield_2'
 *
 + cctot_shield_fill = '(cc_shield_nofill*(patternfill == 0 || (patternfill == 1 && (wfill <= 0 || num_fill_shield_2 < 1))) + cc_shield_fill*(patternfill == 1 && (wfill > 0 && num_fill_shield_2 >= 1)))*l'
 *
 + cpl_shield_fill = '(cpl_right_shield_fill + cpl_left_shield_fill)*epsilon_r + (cs_shield_nofill*(patternfill == 0 || (patternfill == 1 && (wfill <= 0 || num_fill_shield_1 < 1))) + cs_shield_fill*(patternfill == 1 && wfill > 0 && num_fill_shield_1 >= 1))*epsilon_r_side'
 *
 + ctot_shield_fill = 'cpl_shield_fill*l'
 *
 + ctot_shield = 'ctot_shield_nofill*(patternfill == 0) + ctot_shield_fill*(patternfill == 1)'
 + cctot_shield = 'cctot_shield_nofill*(patternfill == 0) + cctot_shield_fill*(patternfill == 1)'
 *
 + ctot = 'ctot_noshield*(shieldsads == 0 && customcap == 0) + ctot_shield*(shieldsads == 1 && customcap == 0) + ctot_cust*(customcap == 1)'
 + cctot = 'cctot_noshield*(shieldsads == 0 && customcap == 0) + cctot_shield*(shieldsads == 1 && customcap == 0) + cctot_cust*(customcap == 1)'
 * ===============================================
 * ===============================================
 * calculation of feedback parameters for the microstrip t-lines
 *
 + fi = 'rsquare/(pi*mu0*th_microns*1e-6)'
 + tof = 'l*(sqrt((epsilon_r))/3e8)'
 + ltot_temp = '(tof*tof)/ctot_nofill'
 + z0_temp = 'sqrt((ltot_temp)/ctot_nofill)'
 + ratio_1 = 'cctot_nofill/ctot_nofill'
 + ltot = 'ltot_temp*(1 + ratio_1)/(1 + 2.0*ratio_1)'
 + k = 'ratio_1/(1 + ratio_1)'
 * ===============================================
 * ===============================================
 * capacitance derivatives calculation for coupled wires without side shielding
 *
 + x21_d_noshield = 1.0467
 + x22_d_noshield = 0.9446
 + x23_d_noshield = 1.2070
 + x24_d_noshield = 0.8498
 *
 + alfa_d_noshield = '2*atan(0.5*d_microns/h_microns)'
 + dalfa_d_noshield = '2.0/(1.0 + (0.5*d_microns/h_microns)*(0.5*d_microns/h_microns))'
 + sna_d_noshield = 'sin(alfa_d_noshield)'
 + csa_d_noshield = 'cos(alfa_d_noshield)'
 + diffa_d_noshield = 'alfa_d_noshield - sna_d_noshield'
 + diffa2_d_noshield = 'diffa_d_noshield*diffa_d_noshield'
 + dfa_d_noshield = '(((sna_d_noshield*diffa_d_noshield - (1.0 - csa_d_noshield)*(1.0 - csa_d_noshield))/diffa2_d_noshield)*log(alfa_d_noshield/sna_d_noshield) + (1.0 - csa_d_noshield)*(sna_d_noshield - alfa_d_noshield*csa_d_noshield)/(diffa_d_noshield*alfa_d_noshield*sna_d_noshield))*dalfa_d_noshield'
 + ht_d_noshield = 'h_microns + th_microns'
 + hh_d_noshield = 'h_microns*h_microns'
 + hht_d_noshield = 'h_microns*(h_microns + th_microns)'
 + dfadd_d_noshield = 'dfa_d_noshield*0.5/h_microns'
 + dfadh_d_noshield = 'dfa_d_noshield*(-0.5*d_microns/hh_d_noshield)'
 *
 + dcplrdw_d_noshield = 'e0*x21_d_noshield*0.5/h_microns'
 + dcplrdth_d_noshield = '(e0*x23_d_noshield*(2.0/pi)/ht_d_noshield)*(d_microns >= 2*(h_microns + th_microns)) + (0.0)*(d_microns < 2*(h_microns + th_microns))'
 + dcplrdh_d_noshield_1 = 'e0*x21_d_noshield*0.5*(-w_microns/hh_d_noshield)'
 + dcplrdh_d_noshield_2 = 'dcplrdh_d_noshield_1 + e0*(2.0/pi)*x23_d_noshield*(-th_microns/hht_d_noshield)'
 + dcplrdh_d_noshield_3 = 'dcplrdh_d_noshield_1 - e0*x23_d_noshield*(2.0/pi)/h_microns'
 + dcplrdh_d_noshield_4 = 'dcplrdh_d_noshield_1 + e0*x22_d_noshield*dfadh_d_noshield'
 + dcplrdh_d_noshield = 'dcplrdh_d_noshield_2*(d_microns >= 2*(h_microns + th_microns)) + dcplrdh_d_noshield_3*(d_microns < 2*(h_microns + th_microns) && d_microns >= 2*h_microns) + dcplrdh_d_noshield_4*(d_microns < 2*h_microns)'
 *
 + dcplrdd_d_noshield_1 = 0.0
 + dcplrdd_d_noshield_2 = 'e0*x23_d_noshield*(2.0/pi)/d_microns'
 + dcplrdd_d_noshield_3 = 'e0*x22_d_noshield*dfadd_d_noshield'
 + dcplrdd_d_noshield = 'dcplrdd_d_noshield_1*(d_microns >= 2*(h_microns + th_microns)) + dcplrdd_d_noshield_2*(d_microns < 2*(h_microns + th_microns) && d_microns >= 2*h_microns) + dcplrdd_d_noshield_3*(d_microns < 2*h_microns)'
 *
 + wht1_d_noshield = '1.5/(ht_microns + 1.5*w_microns)'
 + wht2_d_noshield = '-w_microns*wht1_d_noshield/ht_d_noshield'
 + wht3_d_noshield = '1.0/(0.5*ht_d_noshield - 0.5*th_g_microns + w_microns)'
 + wht4_d_noshield = '3.0/(ht_d_noshield + 3.0*th_g_microns)'
 + wht5_d_noshield = 'wht3_d_noshield/(0.5*ht_d_noshield + 1.5*th_g_microns)'
 + wht6_d_noshield = '-th_g_microns*wht4_d_noshield/ht_d_noshield'
 + wht7_d_noshield = '-0.5*(w_microns - 2.0*th_g_microns)*wht5_d_noshield'
 *
 + dc1dw_d_noshield = 'e0*x21_d_noshield*0.5/h_microns'
 + dc1dth_d_noshield = 'e0*x23_d_noshield*(2.0/pi)/ht_d_noshield'
 + dc1dh_d_noshield = 'e0*(x21_d_noshield*0.5*(-w_microns/hh_d_noshield) + x23_d_noshield*(2.0/pi)*(-th_microns/hht_d_noshield))'
 *
 + dc2dw_d_noshield = '(e0*x24_d_noshield*(2.0/(3.0*pi))*wht1_d_noshield)*(w_microns <= 2*th_g_microns) + (e0*x24_d_noshield*(0.5/pi)*wht3_d_noshield)*(w_microns > 2*th_g_microns)'
 + dc2dth_d_noshield = '(e0*x24_d_noshield*(2.0/(3.0*pi))*wht2_d_noshield)*(w_microns <= 2*th_g_microns) + e0*x24_d_noshield*((2.0/(3.0*pi))*wht6_d_noshield + (0.5/pi)*wht7_d_noshield)*(w_microns > 2*th_g_microns)'
 *
 + dc2dh_d_noshield = 'dc2dth_d_noshield'
 *
 + dc2dthg_d_noshield = '(0.0)*(w_microns <= 2*th_g_microns) + (e0*x24_d_noshield*((2.0/(3.0*pi))*wht4_d_noshield - (0.5/pi)*(ht_d_noshield + 1.5*w_microns)*wht5_d_noshield))*(w_microns > 2*th_g_microns)'
 *
 + dcpldw_d_noshield = 'dcplrdw_d_noshield + dc1dw_d_noshield + dc2dw_d_noshield'
 + dcpldth_d_noshield = 'dcplrdth_d_noshield + dc1dth_d_noshield + dc2dth_d_noshield'
 + dcpldh_d_noshield = 'dcplrdh_d_noshield + dc1dh_d_noshield + dc2dh_d_noshield'
 + dcpldthg_d_noshield = 'dc2dthg_d_noshield'
 + dcpldd_d_noshield = 'dcplrdd_d_noshield'
 *
 + dcapcs_temp_noshield = '(dcpldh_d_noshield - 2.0*dcpldw_d_noshield - 2.0*dcpldth_d_noshield + dcpldd_d_noshield)*2.0'
 + dcapcg_temp_noshield = '(dcpldh_d_noshield - 2.0*dcpldthg_d_noshield)*2.0'
 *
 + dcapcs_noshield = 'dcapcs_temp_noshield*1e6'
 + dcapcg_noshield = 'dcapcg_temp_noshield*1e6'
 * ===============================================
 * ===============================================
 * capacitance derivatives calculation for coupled wires with side shielding
 *
 + x41_d_shield = 1.0448
 + x42_d_shield = 0.8582
 + x43_d_shield = 1.2263
 + x44_d_shield = 0.7376
 + x45_d_shield = 0.8764
 + x46_d_shield = 1.4370
 + x47_d_shield = 0.9079
 *
 + alfa_d_shield_1 = '2*atan(0.5*d_microns/h_microns)'
 + dalfa_d_shield_1 = '2.0 /(1.0 + (0.5*d_microns/h_microns)*(0.5*d_microns/h_microns))'
 + sna_d_shield_1 = 'sin(alfa_d_shield_1)'
 + csa_d_shield_1 = 'cos(alfa_d_shield_1)'
 + diffa_d_shield_1 = 'alfa_d_shield_1 - sna_d_shield_1'
 + diffa2_d_shield_1 = 'diffa_d_shield_1*diffa_d_shield_1'
 + dfa_d_shield_1 = '(((sna_d_shield_1*diffa_d_shield_1 - (1.0 - csa_d_shield_1)*(1.0 - csa_d_shield_1))/diffa2_d_shield_1)*log(alfa_d_shield_1/sna_d_shield_1) + (1.0 - csa_d_shield_1)*(sna_d_shield_1 - alfa_d_shield_1*csa_d_shield_1)/(diffa_d_shield_1*alfa_d_shield_1*sna_d_shield_1))*dalfa_d_shield_1'
 + ht_d_shield_1 = 'h_microns + th_microns'
 + hh_d_shield_1 = 'h_microns*h_microns'
 + hht_d_shield_1 = 'h_microns*(h_microns + th_microns)'
 + dfadd_d_shield_1 = 'dfa_d_shield_1*0.5/h_microns'
 + dfadh_d_shield_1 = 'dfa_d_shield_1*(-0.5*d_microns/hh_d_shield_1)'
 *
 + dcplrdw_d_shield = 'e0*x41_d_shield*0.5/h_microns'
 *
 + dcplrdth_d_shield = '(e0*x43_d_shield*(2.0/pi)/ht_d_shield_1)*(d_microns >= 2*(h_microns + th_microns)) + (0.0)*(d_microns < 2*(h_microns + th_microns))'
 *
 + dcplrdh_d_shield_1 = 'e0*x41_d_shield*0.5*(-w_microns/hh_d_shield_1)'
 + dcplrdh_d_shield_2 = 'dcplrdh_d_shield_1 + e0*x43_d_shield*(-th_microns/hht_d_shield_1)'
 + dcplrdh_d_shield_3 = 'dcplrdh_d_shield_1 - e0*x43_d_shield*(2.0/pi)/h_microns'
 + dcplrdh_d_shield_4 = 'dcplrdh_d_shield_1 + e0*x42_d_shield*dfadh_d_shield_1'
 + dcplrdh_d_shield = 'dcplrdh_d_shield_2*(d_microns >= 2*(h_microns + th_microns)) + dcplrdh_d_shield_3*(d_microns < 2*(h_microns + th_microns) && d_microns >= 2*h_microns) + dcplrdh_d_shield_4*(d_microns < 2*h_microns)'
 *
 + dcplrdd_d_shield_1 = 0.0
 + dcplrdd_d_shield_2 = 'e0*x43_d_shield*(2.0/pi)/d_microns'
 + dcplrdd_d_shield_3 = 'e0*x42_d_shield*dfadd_d_shield_1'
 + dcplrdd_d_shield = 'dcplrdd_d_shield_1*(d_microns >= 2*(h_microns + th_microns)) + dcplrdd_d_shield_2*(d_microns < 2*(h_microns + th_microns) && d_microns >= 2*h_microns) + dcplrdd_d_shield_3*(d_microns < 2*h_microns)'
 *
 + alfa_d_shield_2 = '2*atan(0.5*s_microns/h_microns)'
 + dalfa_d_shield_2 = '2.0 /(1.0 + (0.5*d_microns/h_microns)*(0.5*s_microns/h_microns))'
 + sna_d_shield_2 = 'sin(alfa_d_shield_2)'
 + csa_d_shield_2 = 'cos(alfa_d_shield_2)'
 + diffa_d_shield_2 = 'alfa_d_shield_2 - sna_d_shield_2'
 + diffa2_d_shield_2 = 'diffa_d_shield_2*diffa_d_shield_2'
 + dfa_d_shield_2 = '(((sna_d_shield_2*diffa_d_shield_2 - (1.0 - csa_d_shield_2)*(1.0 - csa_d_shield_2))/diffa2_d_shield_2)*log(alfa_d_shield_2/sna_d_shield_2) + (1.0 - csa_d_shield_2)*(sna_d_shield_2 - alfa_d_shield_2*csa_d_shield_2)/(diffa_d_shield_2*alfa_d_shield_2*sna_d_shield_2))*dalfa_d_shield_2'
 + dfads_d_shield_2 = 'dfa_d_shield_2 * 0.5/h_microns'
 + dfadh_d_shield_2 = 'dfa_d_shield_2 *(-0.5*s_microns/hh_d_shield_1)'
 *
 + dcplldw_d_shield = 'e0*x41_d_shield*0.5/h_microns'
 *
 + dcplldth_d_shield = 'e0*x43_d_shield*(2.0/pi)/ht_d_shield_1*(s_microns >= 2*(h_microns + th_microns)) + (0.0)*(s_microns < 2*(h_microns + th_microns))'
 *
 + dcplldh_d_shield_1 = 'e0*x41_d_shield*0.5*(-w_microns/hh_d_shield_1)'
 + dcplldh_d_shield_2 = 'dcplldh_d_shield_1 + e0*x43_d_shield*(-th_microns/hht_d_shield_1)'
 + dcplldh_d_shield_3 = 'dcplldh_d_shield_1 - e0*x43_d_shield*(2.0/pi)/h_microns'
 + dcplldh_d_shield_4 = 'dcplldh_d_shield_1 + e0*x42_d_shield*dfadh_d_shield_2'
 + dcplldh_d_shield = 'dcplldh_d_shield_2*(s_microns >= 2*(h_microns + th_microns)) + dcplldh_d_shield_3*(s_microns < 2*(h_microns + th_microns) && s_microns >= 2*h_microns) + dcplldh_d_shield_4*(s_microns < 2*h_microns)'
 *
 + dcpllds_d_shield_1 = 0.0
 + dcpllds_d_shield_2 = 'e0*x43_d_shield*(2.0/pi)/s_microns'
 + dcpllds_d_shield_3 = 'e0*x42_d_shield*dfads_d_shield_2'
 + dcpllds_d_shield = 'dcpllds_d_shield_1*(s_microns >= 2*(h_microns + th_microns)) + dcpllds_d_shield_2*(s_microns < 2*(h_microns + th_microns) && s_microns >= 2*h_microns) + dcpllds_d_shield_3*(s_microns < 2*h_microns)'
 *
 + beta_d_shield_yo = 'pi/2 - alfa_d_shield_2'
 + dbeta_d_shield = '-dalfa_d_shield_2'
 + snb_d_shield = 'sin(beta_d_shield_yo)'
 + csb_d_shield = 'cos(beta_d_shield_yo)'
 + diffb_d_shield = 'beta_d_shield_yo - snb_d_shield'
 + diffb2_d_shield = 'diffb_d_shield*diffb_d_shield'
 + dfb_d_shield = '0.5*(((snb_d_shield*diffb_d_shield - (1.0 - csb_d_shield)*(1.0 - csb_d_shield))/diffb2_d_shield)*log(beta_d_shield_yo/snb_d_shield) + (1.0 - csb_d_shield)*(snb_d_shield - beta_d_shield_yo*csb_d_shield)/(diffb_d_shield*beta_d_shield_yo*snb_d_shield))*dbeta_d_shield'
 + dfbds_d_shield = 'dfb_d_shield * 0.5/h_microns'
 + dfbdh_d_shield = 'dfb_d_shield *(-0.5*s_microns/hh_d_shield_1)'
 + ss_d_shield = 's_microns*s_microns'
 + sw_d_shield = 's_microns + w_microns'
 + ssw_d_shield = '(s_microns + w_microns)*s_microns'
 *
 + dcsdw_d_shield = 'e0*x44_d_shield*(1.0/pi)/sw_d_shield'
 *
 + dcsdh_d_shield_1 = 0.0
 + dcsdh_d_shield_2 = 'e0*x46_d_shield/(s*(s>0)+(s==0)*6e-6)'
 + dcsdh_d_shield_3 = 'e0*x47_d_shield*dfbdh_d_shield'
 + dcsdh_d_shield = 'dcsdh_d_shield_1*(s_microns >= 2*(h_microns + th_microns)) + dcsdh_d_shield_2*(s_microns < 2*(h_microns + th_microns) && s_microns >= 2*h_microns) + dcsdh_d_shield_3*(s_microns < 2*h_microns)'
 *
 + dcsdth_d_shield = '(0.0)*(s_microns >= 2*(h_microns + th_microns)) + (e0*x46_d_shield/s_microns)*(s_microns < 2*(h_microns + th_microns))'
 *
 + dcsds_d_shield_1 = 'e0*x44_d_shield*(1.0/pi)*(-w_microns/ssw_d_shield)'
 + dcsds_d_shield_2 = 'dcsds_d_shield_1'
 + dcsds_d_shield_3 = 'dcsds_d_shield_1 + e0*x46_d_shield*(-ht_d_shield_1/ss_d_shield)'
 + dcsds_d_shield_4 = 'dcsds_d_shield_1 + e0*(x46_d_shield*(-th_microns/ss_d_shield) + x47_d_shield*dfbds_d_shield)'
 + dcsds_d_shield = 'dcsds_d_shield_2*(s_microns >= 2*(h_microns + th_microns)) + dcsds_d_shield_3*(s_microns < 2*(h_microns + th_microns) && s_microns >= 2*h_microns) + dcsds_d_shield_4*(s_microns < 2*h_microns)'
 *
 + dcpldw_d_shield = 'dcplrdw_d_shield + dcplldw_d_shield + dcsdw_d_shield'
 + dcpldth_d_shield = 'dcplrdth_d_shield + dcplldth_d_shield + dcsdth_d_shield'
 + dcpldh_d_shield = 'dcplrdh_d_shield + dcplldh_d_shield + dcsdh_d_shield'
 + dcpldd_d_shield = 'dcplrdd_d_shield'
 + dcplds_d_shield = 'dcpllds_d_shield + dcsds_d_shield'
 *
 + dcapcs_temp_shield = '(dcpldh_d_shield - 2.0*dcpldw_d_shield - 2.0*dcpldth_d_shield + dcpldd_d_shield + 2.0*dcplds_d_shield)*2.0'
 + dcapcg_temp_shield = 'dcpldh_d_shield*2.0'
 *
 + dcapcs_shield = 'dcapcs_temp_shield*1.e6'
 + dcapcg_shield = 'dcapcg_temp_shield*1.e6'
 *
 + dcapcs = 'dcapcs_noshield*(shieldsads == 0) + dcapcs_shield*(shieldsads == 1)'
 + dcapcg = 'dcapcg_noshield*(shieldsads == 0) + dcapcg_shield*(shieldsads == 1)'
 * ===============================================
 * ===============================================
 * capacitance calculation for coupled wires without side shielding, non-symmeteric case
 *
 + x11_ns_noshield = 0.9905
 + x12_ns_noshield = 0.9210
 + x13_ns_noshield = 1.1851
 + x14_ns_noshield = 0.9477
 *
 + c1_ns_noshield = '2*e0*(x11_ns_noshield*0.5*w_microns/h_microns + x12_ns_noshield*(2/(pi-2))*log(0.5*pi) + x13_ns_noshield*(2/pi)*log(1 + th_microns/h_microns))'
 + ht_ns_noshield = 'h_microns + th_microns'
 *
 + c2_ns_noshield = '(2*e0*x14_ns_noshield*(2/(3*pi))*log(1 + 1.5*w_microns/ht_ns_noshield))*(w_microns < 2*th_g_microns) + (2*e0*x14_ns_noshield*((2/(3*pi))*log(1 + 3*th_g_microns/ht_ns_noshield) + (0.5/pi)*log(1 + (w_microns - 2*th_g_microns)/(0.5*ht_ns_noshield + 1.5*th_g_microns))))*(w_microns >= 2*th_g_microns)'
 *
 + cns_ns_noshield = 'c1_ns_noshield + c2_ns_noshield'
 * ===============================================
 * ===============================================
 * capacitance calculation for coupled wires with side shielding, non-symmeteric case
 *
 + x31_ns_shield = 1.0544
 + x32_ns_shield = 0.6172
 + x33_ns_shield = 1.2419
 + x34_ns_shield = 0.8353
 + x35_ns_shield = 1.0279
 + x36_ns_shield = 1.0536
 + x37_ns_shield = 1.1063
 *
 + alfa_ns_shield_1 = '2*atan(0.5*s_microns/h_microns)'
 + beta_ns_shield_1 = 'pi/2 - alfa_ns_shield_1'
 *
 + cpl_ns_shield_1_1 = 'e0*(x31_ns_shield*0.5*w_microns/h_microns + x32_ns_shield*(2/(pi-2))*log(0.5*pi) + x33_ns_shield*(2/pi)*log(1 + th_microns/h_microns))'
 + cpl_ns_shield_2_1 = 'e0*(x31_ns_shield*0.5*w_microns/h_microns + x32_ns_shield*(2/(pi-2))*log(0.5*pi) + x33_ns_shield*(2/pi)*log(0.5*s_microns/h_microns))'
 + cpl_ns_shield_3_1 = 'e0*(x31_ns_shield*0.5*w_microns/h_microns + x32_ns_shield*(1 - cos(alfa_ns_shield_1))/(alfa_ns_shield_1 - sin(alfa_ns_shield_1))*log(alfa_ns_shield_1/sin(alfa_ns_shield_1)))'
 + cpl_ns_shield1 = 'cpl_ns_shield_1_1*(s_microns >= 2*(h_microns + th_microns)) + cpl_ns_shield_2_1*(s_microns < 2*(h_microns + th_microns) && s_microns >= 2*h_microns) + cpl_ns_shield_3_1*(s_microns < 2*h_microns)'
 *
 + cc_ns_shield_1_1 = 'e0*(x34_ns_shield*(1/pi)*log(1 + w_microns/s_microns) + x35_ns_shield*(1/(pi-2))*log(0.5*pi))'
 + cc_ns_shield_2_1 = 'e0*(x34_ns_shield*(1/pi)*log(1 + w_microns/s_microns) + x35_ns_shield*(1/(pi-2))*log(0.5*pi) + x36_ns_shield*(th_microns + h_microns - 0.5*s_microns)/s_microns)'
 + cc_ns_shield_3_1 = 'e0*(x34_ns_shield*(1/pi)*log(1 + w_microns/s_microns) + x35_ns_shield*(1/(pi-2))*log(0.5*pi) + x36_ns_shield*th_microns/s_microns + x37_ns_shield*0.5*(1 - cos(beta_ns_shield_1))/(beta_ns_shield_1 - sin(beta_ns_shield_1))*log(beta_ns_shield_1/sin(beta_ns_shield_1)))'
 + cc_ns_shield1 = 'cc_ns_shield_1_1*(s_microns >= 2*(h_microns + th_microns)) + cc_ns_shield_2_1*(s_microns < 2*(h_microns + th_microns) && s_microns >= 2*h_microns) + cc_ns_shield_3_1*(s_microns < 2*h_microns)'
 *
 + cns_ns_shield_1 = '2*cpl_ns_shield1 + 2*cc_ns_shield1'
 *
 + capns1 = '0.5*cns_ns_shield_1'
 *
 + alfa_ns_shield_2 = '2*atan(0.5*(d_microns + w_microns + s_microns)/h_microns)'
 + beta_ns_shield_2 = 'pi/2 - alfa_ns_shield_2'
 *
 + cpl_ns_shield_1_2 = 'e0*(x31_ns_shield*0.5*w_microns/h_microns + x32_ns_shield*(2/(pi-2))*log(0.5*pi) + x33_ns_shield*(2/pi)*log(1 + th_microns/h_microns))'
 + cpl_ns_shield_2_2 = 'e0*(x31_ns_shield*0.5*w_microns/h_microns + x32_ns_shield*(2/(pi-2))*log(0.5*pi) + x33_ns_shield*(2/pi)*log(0.5*(d_microns + w_microns + s_microns)/h_microns))'
 + cpl_ns_shield_3_2 = 'e0*(x31_ns_shield*0.5*w_microns/h_microns + x32_ns_shield*(1 - cos(alfa_ns_shield_1))/(alfa_ns_shield_1 - sin(alfa_ns_shield_2))*log(alfa_ns_shield_2/sin(alfa_ns_shield_2)))'
 + cpl_ns_shield2 = 'cpl_ns_shield_1_2*((d_microns + w_microns + s_microns) >= 2*(h_microns + th_microns)) + cpl_ns_shield_2_2*((d_microns + w_microns + s_microns) < 2*(h_microns + th_microns) && (d_microns + w_microns + s_microns) >= 2*h_microns) + cpl_ns_shield_3_2*((d_microns + w_microns + s_microns) < 2*h_microns)'
 *
 + cc_ns_shield_1_2 = 'e0*(x34_ns_shield*(1/pi)*log(1 + w_microns/(d_microns + w_microns + s_microns)) + x35_ns_shield*(1/(pi-2))*log(0.5*pi))'
 + cc_ns_shield_2_2 = 'e0*(x34_ns_shield*(1/pi)*log(1 + w_microns/(d_microns + w_microns + s_microns)) + x35_ns_shield*(1/(pi-2))*log(0.5*pi) + x36_ns_shield*(th_microns + h_microns - 0.5*(d_microns + w_microns + s_microns))/(d_microns + w_microns + s_microns))'
 + cc_ns_shield_3_2 = 'e0*(x34_ns_shield*(1/pi)*log(1 + w_microns/(d_microns + w_microns + s_microns)) + x35_ns_shield*(1/(pi-2))*log(0.5*pi) + x36_ns_shield*th_microns/(d_microns + w_microns + s_microns) + x37_ns_shield*0.5*(1 - cos(beta_ns_shield_2))/(beta_ns_shield_2 - sin(beta_ns_shield_2))*log(beta_ns_shield_2/sin(beta_ns_shield_2)))'
 + cc_ns_shield2 = 'cc_ns_shield_1_2*((d_microns + w_microns + s_microns) >= 2*(h_microns + th_microns)) + cc_ns_shield_2_2*((d_microns + w_microns + s_microns) < 2*(h_microns + th_microns) && (d_microns + w_microns + s_microns) >= 2*h_microns) + cc_ns_shield_3_2*((d_microns + w_microns + s_microns) < 2*h_microns)'
 *
 + cns_ns_shield_2 = '2*cpl_ns_shield2 + 2*cc_ns_shield2'
 *
 + capns2 = 'capns1 + 0.5*cns_ns_shield_2'
 *
 + cns_ns_shield = 'capns2'
 *
 + cns = 'cns_ns_noshield*(shieldsads == 0) + cns_ns_shield*(shieldsads == 1)'
 * ===============================================
 * ===============================================
 * capacitance derivatives calculation for coupled wires without side shielding, non-symmteric case
 *
 + x11_ns_d_noshield = 0.9905
 + x12_ns_d_noshield = 0.9210
 + x13_ns_d_noshield = 1.1851
 + x14_ns_d_noshield = 0.9477
 *
 + hh_ns_d_noshield = 'h_microns*h_microns'
 + dc1dw_ns_d_noshield = 'e0/h_microns'
 + dc1dh_ns_d_noshield = 'e0*(-w_microns)/hh_ns_d_noshield'
 + dc3dt_ns_d_noshield = '2.0*e0*(2.0/pi)/(h_microns + th_microns)'
 + dc3dh_ns_d_noshield = '-2.0*e0*(2.0/pi)*th_microns/(hh_ns_d_noshield + h_microns*th_microns)'
 *
 + dv1_ns_d_noshield = '2*(h_microns + th_microns) + 3*w_microns'
 + dv2_ns_d_noshield = 'dv1_ns_d_noshield*(h_microns + th_microns)'
 + dv3_ns_d_noshield = '0.5*(h_microns + th_microns - th_g_microns) + w_microns'
 + dv4_ns_d_noshield = 'dv3_ns_d_noshield*(0.5*(h_microns + th_microns) + 1.5*th_g_microns)'
 + dv5_ns_d_noshield = '(h_microns + th_microns) + 3*th_g_microns'
 + dv6_ns_d_noshield = 'dv5_ns_d_noshield*(h_microns + th_microns)'
 *
 + dc4dw_ns_d_noshield = '((2.0*e0)*(2.0/pi)/dv1_ns_d_noshield)*(w_microns <= 2*th_g_microns) + ((2.0*e0)*(0.5/pi)/dv3_ns_d_noshield)*(w_microns > 2*th_g_microns)'
 *
 + dc4dt_ns_d_noshield = '((2.0*e0)*(-2.0/pi)*(3*w/dv2_ns_d_noshield))*(w_microns <= 2*th_g_microns) + ((2.0*e0)*((-2/pi)*th_g_microns/dv6_ns_d_noshield - (0.5/pi)*0.5*(w_microns - 2*th_g_microns)/dv4_ns_d_noshield))*(w_microns > 2*th_g_microns)'
 *
 + dc4dh_ns_d_noshield = 'dc4dt_ns_d_noshield'
 *
 + dc4dtg_ns_d_noshield = '(0.0)*(w_microns <= 2*th_g_microns) + ((2.0*e0)*((2/pi)/dv5_ns_d_noshield - (0.5/pi)*(h_microns + th_microns + 1.5*w_microns)/dv4_ns_d_noshield))*(w_microns > 2*th_g_microns)'
 *
 + dcdw_ns_d_noshield = 'x11_ns_d_noshield*dc1dw_ns_d_noshield + x14_ns_d_noshield*dc4dw_ns_d_noshield'
 + dcdt_ns_d_noshield = 'x13_ns_d_noshield*dc3dt_ns_d_noshield + x14_ns_d_noshield*dc4dt_ns_d_noshield'
 + dcdh_ns_d_noshield = 'x11_ns_d_noshield*dc1dh_ns_d_noshield + x13_ns_d_noshield*dc3dh_ns_d_noshield + x14_ns_d_noshield*dc4dh_ns_d_noshield'
 + dcdtg_ns_d_noshield = 'x14_ns_d_noshield*dc4dtg_ns_d_noshield'
 *
 + dcaps_ns_d_noshield =  '-2.0*dcdw_ns_d_noshield - 2.0*dcdt_ns_d_noshield + dcdh_ns_d_noshield'
 + dcapg_ns_d_noshield = 'dcdh_ns_d_noshield - dcdtg_ns_d_noshield'
 *
 + dcapnss_ns_d_noshield = 'dcaps_ns_d_noshield*1e6'
 + dcapnsg_ns_d_noshield = 'dcapg_ns_d_noshield*1e6'
 * ===============================================
 * ===============================================
 * capacitance derivatives calculation for coupled wires with side shielding, non-symmeteric case
 *
 + x31_ns_d_shield = 1.0544
 + x32_ns_d_shield = 0.6172
 + x33_ns_d_shield = 1.2419
 + x34_ns_d_shield = 0.8353
 + x35_ns_d_shield = 1.0279
 + x36_ns_d_shield = 1.0536
 + x37_ns_d_shield = 1.1063
 *
 * begin first call ...
 + alfa_ns_d_shield_1 = '2*atan(0.5*s_microns/h_microns)'
 + beta_ns_d_shield_1 = 'pi/2 - alfa_ns_d_shield_1'
 *
 + sna_ns_d_shield_1 = 'sin(alfa_ns_d_shield_1)'
 + csa_ns_d_shield_1 = 'cos(alfa_ns_d_shield_1)'
 + diffa_ns_d_shield_1 = 'alfa_ns_d_shield_1 - sna_ns_d_shield_1'
 + diffa2_ns_d_shield_1 = 'diffa_ns_d_shield_1*diffa_ns_d_shield_1'
 *
 + dcplda_ns_d_shield_1 = 'x32_ns_d_shield*(((sna_ns_d_shield_1*diffa_ns_d_shield_1 - (1.0 - csa_ns_d_shield_1)*(1.0 - csa_ns_d_shield_1))/diffa2_ns_d_shield_1)*log(alfa_ns_d_shield_1/sna_ns_d_shield_1) + (1.0 - csa_ns_d_shield_1)*(sna_ns_d_shield_1 - alfa_ns_d_shield_1*csa_ns_d_shield_1)/(diffa_ns_d_shield_1*alfa_ns_d_shield_1*sna_ns_d_shield_1))'
 + dcpldw_ns_d_shield_1 = 'x31_ns_d_shield*e0*0.5/h_microns'
 *
 + dcpldt_ns_d_shield_1 = '(x33_ns_d_shield*e0*(2/pi)/(h_microns + th_microns))*(s_microns >= 2*(h_microns + th_microns)) + (0.0)*(s_microns < 2*(h_microns + th_microns))'
 *
 + hh_ns_d_shield_1 = 'h_microns*h_microns'
 + h2_ns_d_shield_1 = '2*h_microns'
 + h2s_ns_d_shield_1 = 'h2_ns_d_shield_1*h2_ns_d_shield_1 + s_microns*s_microns'
 *
 + dcpldh_ns_d_shield_1_1 = 'e0*(- x31_ns_d_shield*0.5*w_microns/hh_ns_d_shield_1 + x33_ns_d_shield*(2/pi)*(-th_microns)/(hh_ns_d_shield_1 + h_microns*th_microns))'
 + dcpldh_ns_d_shield_2_1 = 'e0*(- x31_ns_d_shield*0.5*w_microns/hh_ns_d_shield_1 - x33_ns_d_shield*(2/pi)/h_microns)'
 + dcpldh_ns_d_shield_3_1 = 'e0*(- x31_ns_d_shield*0.5*w_microns/hh_ns_d_shield_1 + dcplda_ns_d_shield_1*(-4*s_microns/h2s_ns_d_shield_1))'
 + dcpldh_ns_d_shield_1 = 'dcpldh_ns_d_shield_1_1*(s_microns >= 2*(h_microns + th_microns)) + dcpldh_ns_d_shield_2_1*(s_microns < 2*(h_microns + th_microns) && s_microns >= 2*h_microns) + dcpldh_ns_d_shield_3_1*(s_microns < 2*h_microns)'
 *
 + dcplds_ns_d_shield_1_1 = 0.0
 + dcplds_ns_d_shield_2_1 = 'x33_ns_d_shield*e0*(2/pi)/s_microns'
 + dcplds_ns_d_shield_3_1 = 'e0*dcplda_ns_d_shield_1*4*h_microns/h2s_ns_d_shield_1'
 + dcplds_ns_d_shield_1 = 'dcplds_ns_d_shield_1_1*(s_microns >= 2*(h_microns + th_microns)) + dcplds_ns_d_shield_2_1*(s_microns < 2*(h_microns + th_microns) && s_microns >= 2*h_microns) + dcplds_ns_d_shield_3_1*(s_microns < 2*h_microns)'
 *
 + snb_ns_d_shield_1 = 'sin(beta_ns_d_shield_1)'
 + csb_ns_d_shield_1 = 'cos(beta_ns_d_shield_1)'
 + diffb_ns_d_shield_1 = 'beta_ns_d_shield_1 - snb_ns_d_shield_1'
 + diffb2_ns_d_shield_1 = 'diffb_ns_d_shield_1*diffb_ns_d_shield_1'
 + ss_ns_d_shield_1 = 's_microns*s_microns'
 *
 + dccdb_ns_d_shield_1 = 'x37_ns_d_shield*0.5*(((snb_ns_d_shield_1*diffb_ns_d_shield_1 - (1.0 - csb_ns_d_shield_1)*(1.0 - csb_ns_d_shield_1))/diffb2_ns_d_shield_1)*log(beta_ns_d_shield_1/snb_ns_d_shield_1) + (1.0 - csb_ns_d_shield_1)*(snb_ns_d_shield_1 - beta_ns_d_shield_1*csb_ns_d_shield_1)/(diffb_ns_d_shield_1*beta_ns_d_shield_1*snb_ns_d_shield_1))'
 + dccdw_ns_d_shield_1 = 'x34_ns_d_shield*e0*(1/pi)/(s_microns + w_microns)'
 *
 + dccdt_ns_d_shield_1 = '(0.0)*(s_microns >= 2*(h_microns + th_microns)) + (x36_ns_d_shield*e0/s_microns)*(s_microns < 2*(h_microns + th_microns))'
 *
 + dccdh_ns_d_shield_1_1 = 0.0
 + dccdh_ns_d_shield_2_1 = 'x36_ns_d_shield*e0/s_microns'
 + dccdh_ns_d_shield_3_1 = 'e0*dccdb_ns_d_shield_1*4*s_microns/h2s_ns_d_shield_1'
 + dccdh_ns_d_shield_1 = 'dccdh_ns_d_shield_1_1*(s_microns >= 2*(h_microns + th_microns)) + dccdh_ns_d_shield_2_1*(s_microns < 2*(h_microns + th_microns) && s_microns >= 2*h_microns) + dccdh_ns_d_shield_3_1*(s_microns < 2*h_microns)'
 *
 + dccds_ns_d_shield_1_1 = 'x34_ns_d_shield*e0*(1/pi)*(-w_microns/(ss_ns_d_shield_1 + s_microns*w_microns))'
 + dccds_ns_d_shield_2_1 = 'e0*(x34_ns_d_shield*(1/pi)*(-w_microns/(ss_ns_d_shield_1 + s_microns*w_microns)) - x36_ns_d_shield*(th_microns + h_microns)/ss_ns_d_shield_1)'
 + dccds_ns_d_shield_3_1 = 'e0*(x34_ns_d_shield*(1/pi)*(-w_microns/(ss_ns_d_shield_1 + s_microns*w_microns)) - x36_ns_d_shield*th_microns/ss_ns_d_shield_1 + dccdb_ns_d_shield_1*(-4*h_microns/h2s_ns_d_shield_1))'
 + dccds_ns_d_shield_1 = 'dccds_ns_d_shield_1_1*(s_microns >= 2*(h_microns + th_microns)) + dccds_ns_d_shield_2_1*(s_microns < 2*(h_microns + th_microns) && s_microns >= 2*h_microns) + dccds_ns_d_shield_3_1*(s_microns < 2*h_microns)'
 *
 + dcdw_ns_d_shield_1 = 'dcpldw_ns_d_shield_1 + dccdw_ns_d_shield_1'
 + dcdt_ns_d_shield_1 = 'dcpldt_ns_d_shield_1 + dccdt_ns_d_shield_1'
 + dcdh_ns_d_shield_1 = 'dcpldh_ns_d_shield_1 + dccdh_ns_d_shield_1'
 + dcds_ns_d_shield_1 = 'dcplds_ns_d_shield_1 + dccds_ns_d_shield_1'
 *
 + dcap_ns_d_shield_1 = '2*(-2.0*dcdw_ns_d_shield_1 - 2.0*dcdt_ns_d_shield_1 + 2.0*dcdh_ns_d_shield_1 + 2.0*dcds_ns_d_shield_1)'
 + dcaps_ns_d_shield_1 = '2*(-2.0*dcdw_ns_d_shield_1 - 2.0*dcdt_ns_d_shield_1 + dcdh_ns_d_shield_1 + 2.0*dcds_ns_d_shield_1)'
 + dcapg_ns_d_shield_1 = 'dcap_ns_d_shield_1 - dcaps_ns_d_shield_1'
 *
 + dcapnss_ns_d_shield_1 = 'dcaps_ns_d_shield_1*1.e6'
 + dcapnsg_ns_d_shield_1 = 'dcapg_ns_d_shield_1*1.e6'
 * end of first call ...
 + dcapsns_temp = '0.5*dcapnss_ns_d_shield_1'
 + dcapgns_temp = '0.5*dcapnsg_ns_d_shield_1'
 *
 * begin second call ...
 + alfa_ns_d_shield_2 = '2*atan(0.5*(s_microns + w_microns + d_microns)/h_microns)'
 + beta_ns_d_shield_2 = 'pi/2 - alfa_ns_d_shield_2'
 *
 + sna_ns_d_shield_2 = 'sin(alfa_ns_d_shield_2)'
 + csa_ns_d_shield_2 = 'cos(alfa_ns_d_shield_2)'
 + diffa_ns_d_shield_2 = 'alfa_ns_d_shield_2 - sna_ns_d_shield_2'
 + diffa2_ns_d_shield_2 = 'diffa_ns_d_shield_2*diffa_ns_d_shield_2'
 *
 + dcplda_ns_d_shield_2 = 'x32_ns_d_shield*(((sna_ns_d_shield_2*diffa_ns_d_shield_2 - (1.0 - csa_ns_d_shield_2)*(1.0 - csa_ns_d_shield_2))/diffa2_ns_d_shield_2)*log(alfa_ns_d_shield_2/sna_ns_d_shield_2) + (1.0 - csa_ns_d_shield_2)*(sna_ns_d_shield_2 - alfa_ns_d_shield_2*csa_ns_d_shield_2)/(diffa_ns_d_shield_2*alfa_ns_d_shield_2*sna_ns_d_shield_2))'
 + dcpldw_ns_d_shield_2 = 'x31_ns_d_shield*e0*0.5/h_microns'
 *
 + dcpldt_ns_d_shield_2 = '(x33_ns_d_shield*e0*(2/pi)/(h_microns + th_microns))*((s_microns + w_microns + d_microns) >= 2*(h_microns + th_microns)) + (0.0)*((s_microns + w_microns + d_microns) < 2*(h_microns + th_microns))'
 *
 + hh_ns_d_shield_2 = 'h_microns*h_microns'
 + h2_ns_d_shield_2 = '2*h_microns'
 + h2s_ns_d_shield_2 = 'h2_ns_d_shield_2*h2_ns_d_shield_2 + (s_microns + w_microns + d_microns)*(s_microns + w_microns + d_microns)'
 *
 + dcpldh_ns_d_shield_1_2 = 'e0*(-x31_ns_d_shield*0.5*w_microns/hh_ns_d_shield_2 + x33_ns_d_shield*(2/pi)*(-th_microns)/(hh_ns_d_shield_2 + h_microns*th_microns))'
 + dcpldh_ns_d_shield_2_2 = 'e0*(-x31_ns_d_shield*0.5*w_microns/hh_ns_d_shield_2 - x33_ns_d_shield*(2/pi)/h_microns)'
 + dcpldh_ns_d_shield_3_2 = 'e0*(-x31_ns_d_shield*0.5*w_microns/hh_ns_d_shield_2 + dcplda_ns_d_shield_2*(-4*(s_microns +w_microns + d_microns)/h2s_ns_d_shield_2))'
 + dcpldh_ns_d_shield_2 = 'dcpldh_ns_d_shield_1_2*((s_microns + w_microns + d_microns) >= 2*(h_microns + th_microns)) + dcpldh_ns_d_shield_2_2*((s_microns + w_microns + d_microns) < 2*(h_microns + th_microns) && (s_microns + w_microns + d_microns) >= 2*h_microns) + dcpldh_ns_d_shield_3_2*((s_microns + w_microns + d_microns) < 2*h_microns)'
 *
 + dcplds_ns_d_shield_1_2 = 0.0
 + dcplds_ns_d_shield_2_2 = 'x33_ns_d_shield*e0*(2/pi)/(s_microns +w_microns + d_microns)'
 + dcplds_ns_d_shield_3_2 = 'e0*dcplda_ns_d_shield_2*4*h_microns/h2s_ns_d_shield_2'
 + dcplds_ns_d_shield_2 = 'dcplds_ns_d_shield_1_2*((s_microns + w_microns + d_microns) >= 2*(h_microns + th_microns)) + dcplds_ns_d_shield_2_2*((s_microns + w_microns + d_microns) < 2*(h_microns + th_microns) && (s_microns + w_microns + d_microns) >= 2*h_microns) + dcplds_ns_d_shield_3_2*((s_microns + w_microns + d_microns) < 2*h_microns)'
 *
 + snb_ns_d_shield_2 = 'sin(beta_ns_d_shield_2)'
 + csb_ns_d_shield_2 = 'cos(beta_ns_d_shield_2)'
 + diffb_ns_d_shield_2 = 'beta_ns_d_shield_2 - snb_ns_d_shield_2'
 + diffb2_ns_d_shield_2 = 'diffb_ns_d_shield_2*diffb_ns_d_shield_2'
 + ss_ns_d_shield_2 = '(s_microns + w_microns + d_microns)*(s_microns + w_microns + d_microns)'
 *
 + dccdb_ns_d_shield_2 = 'x37_ns_d_shield*0.5*(((snb_ns_d_shield_2*diffb_ns_d_shield_2 - (1.0 - csb_ns_d_shield_2)*(1.0 - csb_ns_d_shield_2))/diffb2_ns_d_shield_2)*log(beta_ns_d_shield_2/snb_ns_d_shield_2) + (1.0 - csb_ns_d_shield_2)*(snb_ns_d_shield_2 - beta_ns_d_shield_2*csb_ns_d_shield_2)/(diffb_ns_d_shield_2*beta_ns_d_shield_2*snb_ns_d_shield_2))'
 + dccdw_ns_d_shield_2 = 'x34_ns_d_shield*e0*(1/pi)/((s_microns + w_microns + d_microns) + w_microns)'
 *
 + dccdt_ns_d_shield_2 = '(0.0)*((s_microns + w_microns + d_microns) >= 2*(h_microns + th_microns)) + (x36_ns_d_shield*e0/(s_microns + w_microns + d_microns))*((s_microns + w_microns + d_microns) < 2*(h_microns + th_microns))'
 *
 + dccdh_ns_d_shield_1_2 = 0.0
 + dccdh_ns_d_shield_2_2 = 'x36_ns_d_shield*e0/(s_microns + w_microns + d_microns)'
 + dccdh_ns_d_shield_3_2 = 'e0*dccdb_ns_d_shield_2*4*(s_microns + w_microns + d_microns)/h2s_ns_d_shield_2'
 + dccdh_ns_d_shield_2 = 'dccdh_ns_d_shield_1_2*((s_microns + w_microns + d_microns) >= 2*(h_microns + th_microns)) + dccdh_ns_d_shield_2_2*((s_microns + w_microns + d_microns) < 2*(h_microns + th_microns) && (s_microns + w_microns + d_microns) >= 2*h_microns) + dccdh_ns_d_shield_3_2*((s_microns + w_microns + d_microns) < 2*h_microns)'
 *
 + dccds_ns_d_shield_1_2 = 'x34_ns_d_shield*e0*(1/pi)*(-w_microns/(ss_ns_d_shield_2 + (s_microns + w_microns + d_microns)*w_microns))'
 + dccds_ns_d_shield_2_2 = 'e0*(x34_ns_d_shield*(1/pi)*(-w_microns/(ss_ns_d_shield_2 + (s_microns + w_microns + d_microns)*w_microns)) - x36_ns_d_shield*(th_microns + h_microns)/ss_ns_d_shield_2)'
 + dccds_ns_d_shield_3_2 = 'e0*(x34_ns_d_shield*(1/pi)*(-w_microns/(ss_ns_d_shield_2 + (s_microns + w_microns + d_microns)*w_microns)) - x36_ns_d_shield*th_microns/ss_ns_d_shield_2 + dccdb_ns_d_shield_2*(-4*h_microns/h2s_ns_d_shield_2))'
 + dccds_ns_d_shield_2 = 'dccds_ns_d_shield_1_2*((s_microns +w_microns + d_microns) >= 2*(h_microns + th_microns)) + dccds_ns_d_shield_2_2*((s_microns + w_microns + d_microns) < 2*(h_microns + th_microns) && (s_microns + w_microns + d_microns) >= 2*h_microns) + dccds_ns_d_shield_3_2*((s_microns + w_microns + d_microns) < 2*h_microns)'
 *
 + dcdw_ns_d_shield_2 = 'dcpldw_ns_d_shield_2 + dccdw_ns_d_shield_2'
 + dcdt_ns_d_shield_2 = 'dcpldt_ns_d_shield_2 + dccdt_ns_d_shield_2'
 + dcdh_ns_d_shield_2 = 'dcpldh_ns_d_shield_2 + dccdh_ns_d_shield_2'
 + dcds_ns_d_shield_2 = 'dcplds_ns_d_shield_2 + dccds_ns_d_shield_2'
 *
 + dcap_ns_d_shield_2 = '2*(-2.0*dcdw_ns_d_shield_2 - 2.0*dcdt_ns_d_shield_2 + 2.0*dcdh_ns_d_shield_2 + 2.0*dcds_ns_d_shield_2)'
 + dcaps_ns_d_shield_2 = '2*(-2.0*dcdw_ns_d_shield_2 - 2.0*dcdt_ns_d_shield_2 + dcdh_ns_d_shield_2 + 2.0*dcds_ns_d_shield_2)'
 + dcapg_ns_d_shield_2 = 'dcap_ns_d_shield_2 - dcaps_ns_d_shield_2'
 *
 + dcapnss_ns_d_shield_2 = 'dcaps_ns_d_shield_2*1.e6'
 + dcapnsg_ns_d_shield_2 = 'dcapg_ns_d_shield_2*1.e6'
 * end of second call ...
 + dcapsns = 'dcapsns_temp + 0.5*dcapnss_ns_d_shield_2'
 + dcapgns = 'dcapgns_temp + 0.5*dcapnsg_ns_d_shield_2'
 *
 + dcapnss_ns_d_shield = 'dcapsns'
 + dcapnsg_ns_d_shield = 'dcapgns'
 *
 + dcapnss = 'dcapnss_ns_d_noshield*(shieldsads == 0) + dcapnss_ns_d_shield*(shieldsads == 1)'
 + dcapnsg = 'dcapnsg_ns_d_noshield*(shieldsads == 0) + dcapnsg_ns_d_shield*(shieldsads == 1)'
 * ===============================================
 * ===============================================
 * da1-3, delta_r1-3, delta_l1-3, m1-3, and dk1-3 calculations for coupled wires model
 *
 * mm is equal to mu0/(2*pi)
 + mm = 2e-07
 + thl = 'th_microns'
 + th_gl = 'th_g_microns'
 + wl = 'w_microns'
 + wgl = 'wg_microns'
 + hl = 'h_microns'
 + wsl = 'ws'
 + sl = 's_microns'
 + ml = 'mm'
 + dl = 'd_microns'
 *
 * no shield ...
 + aa_1 = 'wl'
 + bb_1 = 'wl'
 + cc_1 = 'dl'
 + dd_1 = 'thl'
 + abc_d_1 = '(aa_1 + bb_1 + cc_1)*(aa_1 + bb_1 + cc_1)*log(aa_1 + bb_1 + cc_1 + dd_1)'
 + ac_d_1 = '(aa_1 + cc_1)*(aa_1 + cc_1)*log(aa_1 + cc_1 + dd_1)'
 + bc_d_1 = '(bb_1 + cc_1)*(bb_1 + cc_1)*log(bb_1 + cc_1 + dd_1)'
 + c_d_1 = 'cc_1*cc_1*log(cc_1 + dd_1)'
 + f_c_o1 = 'dd_1*dd_1*(abc_d_1 - ac_d_1 - bc_d_1 + c_d_1 - 3*aa_1*bb_1)*0.5/(thl*wl)/(thl*wl)'
 *
 + lo_odd_noshield = 'ml*(f_c_o1 + 1.5 - log(thl + wl))'
 *
 + hf_1 = 'thl + hl'
 + wfd_1 = '(wgl - dl)*0.5'
 + wt_1 = '2*wl + dl'
 *
 + aa_2 = 'thl'
 + bb_2 = 'th_gl'
 + cc_2 = 'hl'
 + dd_2 = 'wt_1 + hf_1'
 + abc_d_2 = '(aa_2 + bb_2 + cc_2)*(aa_2 + bb_2 + cc_2)*log(aa_2 + bb_2 + cc_2 + dd_2)'
 + ac_d_2 = '(aa_2 + cc_2)*(aa_2 + cc_2)*log(aa_2 + cc_2 + dd_2)'
 + bc_d_2 = '(bb_2 + cc_2)*(bb_2 + cc_2)*log(bb_2 + cc_2 + dd_2)'
 + c_d_2 = 'cc_2*cc_2*log(cc_2 + dd_2)'
 + f_c_e11 = 'dd_2*dd_2*(abc_d_2 - ac_d_2 - bc_d_2 + c_d_2 - 3*aa_2*bb_2)'
 + dd_3 = 'hf_1'
 + abc_d_3 = '(aa_2 + bb_2 + cc_2)*(aa_2 + bb_2 + cc_2)*log(aa_2 + bb_2 + cc_2 + dd_3)'
 + ac_d_3 = '(aa_2 + cc_2)*(aa_2 + cc_2)*log(aa_2 + cc_2 + dd_3)'
 + bc_d_3 = '(bb_2 + cc_2)*(bb_2 + cc_2)*log(bb_2 + cc_2 + dd_3)'
 + c_d_3 = 'cc_2*cc_2*log(cc_2 + dd_3)'
 + f_c_e12 = 'dd_3*dd_3*(abc_d_3 - ac_d_3 - bc_d_3 + c_d_3 - 3*aa_2*bb_2)'
 + f_c_e1 = 'f_c_e11 - f_c_e12'
 *
 + dd_4 = 'dl + wfd_1'
 + abc_d_4 = '(aa_2 + bb_2 + cc_2)*(aa_2 + bb_2 + cc_2)*log(aa_2 + bb_2 + cc_2 + dd_4)'
 + ac_d_4 = '(aa_2 + cc_2)*(aa_2 + cc_2)*log(aa_2 + cc_2 + dd_4)'
 + bc_d_4 = '(bb_2 + cc_2)*(bb_2 + cc_2)*log(bb_2 + cc_2 + dd_4)'
 + c_d_4 = 'cc_2*cc_2*log(cc_2 + dd_4)'
 + f_c_e21 = 'dd_4*dd_4*(abc_d_4 - ac_d_4 - bc_d_4 + c_d_4 - 3*aa_2*bb_2)'
 + dd_5 = 'wfd_1'
 + abc_d_5 = '(aa_2 + bb_2 + cc_2)*(aa_2 + bb_2 + cc_2)*log(aa_2 + bb_2 + cc_2 + dd_5)'
 + ac_d_5 = '(aa_2 + cc_2)*(aa_2 + cc_2)*log(aa_2 + cc_2 + dd_5)'
 + bc_d_5 = '(bb_2 + cc_2)*(bb_2 + cc_2)*log(bb_2 + cc_2 + dd_5)'
 + c_d_5 = 'cc_2*cc_2*log(cc_2 + dd_5)'
 + f_c_e22 = 'dd_5*dd_5*(abc_d_5 - ac_d_5 - bc_d_5 + c_d_5 - 3*aa_2*bb_2)'
 + f_c_e2 = 'f_c_e21 - f_c_e22'
 + f_c_e3='(f_c_e1 - f_c_e2)/(wl*thl*wgl*th_gl)'
 *
 + aa_3 = 'wl'
 + bb_3 = 'wl'
 + cc_3 = 'dl'
 + dd_6 = 'thl'
 + abc_d_6 = '(aa_3 + bb_3 + cc_3)*(aa_3 + bb_3 + cc_3)*log(aa_3 + bb_3 + cc_3 + dd_6)'
 + ac_d_6 = '(aa_3 + cc_3)*(aa_3 + cc_3)*log(aa_3 + cc_3 + dd_6)'
 + bc_d_6 = '(bb_3 + cc_3)*(bb_3 + cc_3)*log(bb_3 + cc_3 + dd_6)'
 + c_d_6 = 'cc_3*cc_3*log(cc_3 + dd_6)'
 + f_2gap = 'dd_6*dd_6*(abc_d_6 - ac_d_6 - bc_d_6 + c_d_6 - 3*aa_3*bb_3)*0.5'
 + f_c_e4 = 'f_2gap/(wl*thl*wl*thl) + log(wl + thl) - 1.5'
 + f_c_e5 = '2*log(wgl + th_gl) - 3.0'
 *
 + l0_even_noshield = 'ml*(-f_c_e4 + f_c_e3 - f_c_e5)'
 *
 + l0_noshield = 'l*(l0_even_noshield + lo_odd_noshield)/2'
 + m0_noshield = 'l*(l0_even_noshield - lo_odd_noshield)/2'
 *
 * shield ...
 + cond_g = '1.0/(r_g*wgl*th_gl)'
 + cond_sh = '1.0/(r_sh*wsl*thl)'
 + kappa = 'cond_g/cond_sh'
 *
 + aa_4 = 'wl'
 + bb_4 = 'wl'
 + cc_4 = 'dl'
 + dd_7 = 'thl'
 + abc_d_7 = '(aa_4 + bb_4 + cc_4)*(aa_4 + bb_4 + cc_4)*log(aa_4 + bb_4 + cc_4 + dd_7)'
 + ac_d_7 = '(aa_4 + cc_4)*(aa_4 + cc_4)*log(aa_4 + cc_4 + dd_7)'
 + bc_d_7 = '(bb_4 + cc_4)*(bb_4 + cc_4)*log(bb_4 + cc_4 + dd_7)'
 + c_d_7 = 'cc_4*cc_4*log(cc_4 + dd_7)'
 + f_cs_o1 = 'dd_7*dd_7*(abc_d_7 - ac_d_7 - bc_d_7 + c_d_7 - 3*aa_4*bb_4)*0.5/(thl*wl)/(thl*wl)'
 + l0_odd_shield = 'ml*(f_cs_o1 + 1.5 - log(thl + wl))'
 *
 + wt_2 = '2*wl + dl'
 + wf_2 = 'wsl + sl'
 + wfd_2 = '(wgl - dl)*0.5'
 *
 + f_cs_e1 = '(f_cs_o1 - 1.5 + log(thl + wl))*0.5'
 *
 + aa_5 = 'thl'
 + bb_5 = 'th_gl'
 + cc_5 = 'hl'
 + dd_8 = 'wsl'
 + abc_d_8 = '(aa_5 + bb_5 + cc_5)*(aa_5 + bb_5 + cc_5)*log(aa_5 + bb_5 + cc_5 + dd_8)'
 + ac_d_8 = '(aa_5 + cc_5)*(aa_5 + cc_5)*log(aa_5 + cc_5 + dd_8)'
 + bc_d_8 = '(bb_5 + cc_5)*(bb_5 + cc_5)*log(bb_5 + cc_5 + dd_8)'
 + c_d_8 = 'cc_5*cc_5*log(cc_5 + dd_8)'
 + f_cs_e21 = 'dd_8*dd_8*(abc_d_8 - ac_d_8 - bc_d_8 + c_d_8 - 3*aa_5*bb_5)'
 + dd_9 = 'wgl'
 + abc_d_9 = '(aa_5 + bb_5 + cc_5)*(aa_5 + bb_5 + cc_5)*log(aa_5 + bb_5 + cc_5 + dd_9)'
 + ac_d_9 = '(aa_5 + cc_5)*(aa_5 + cc_5)*log(aa_5 + cc_5 + dd_9)'
 + bc_d_9 = '(bb_5 + cc_5)*(bb_5 + cc_5)*log(bb_5 + cc_5 + dd_9)'
 + c_d_9 = 'cc_5*cc_5*log(cc_5 + dd_9)'
 + f_cs_e22 = 'dd_9*dd_9*(abc_d_9 - ac_d_9 - bc_d_9 + c_d_9 - 3*aa_5*bb_5)'
 + dd_10 = 'wgl - wsl'
 + abc_d_10 = '(aa_5 + bb_5 + cc_5)*(aa_5 + bb_5 + cc_5)*log(aa_5 + bb_5 + cc_5 + dd_10)'
 + ac_d_10 = '(aa_5 + cc_5)*(aa_5 + cc_5)*log(aa_5 + cc_5 + dd_10)'
 + bc_d_10 = '(bb_5 + cc_5)*(bb_5 + cc_5)*log(bb_5 + cc_5 + dd_10)'
 + c_d_10 = 'cc_5*cc_5*log(cc_5 + dd_10)'
 + f_cs_e23 = 'dd_10*dd_10*(abc_d_10 - ac_d_10 - bc_d_10 + c_d_10 - 3*aa_5*bb_5)'
 + f_cs_e2 = 'f_cs_e21 + f_cs_e22 - f_cs_e23'
 *
 + s_eq = 'wgl*th_gl*kappa + 2*wsl*thl'
 *
 + f_cs_e31 = '(log(wgl + th_gl) - 1.5)*wgl*th_gl*wgl*th_gl'
 + f_cs_e32 = '2*(log(wsl + thl) - 1.5)*wsl*thl*wsl*thl'
 + aa_6 = 'wsl'
 + bb_6 = 'wsl'
 + cc_6 = 'wt_2 + 2*sl'
 + dd_11 = 'thl'
 + abc_d_11 = '(aa_6 + bb_6 + cc_6)*(aa_6 + bb_6 + cc_6)*log(aa_6 + bb_6 + cc_6 + dd_11)'
 + ac_d_11 = '(aa_6 + cc_6)*(aa_6 + cc_6)*log(aa_6 + cc_6 + dd_11)'
 + bc_d_11 = '(bb_6 + cc_6)*(bb_6 + cc_6)*log(bb_6 + cc_6 + dd_11)'
 + c_d_11 = 'cc_6*cc_6*log(cc_6 + dd_11)'
 + f_cs_e33 = 'dd_11*dd_11*(abc_d_11 - ac_d_11 - bc_d_11 + c_d_11 - 3*aa_6*bb_6)'
 + f_cs_e3 = '(f_cs_e31*kappa*kappa + f_cs_e32+f_cs_e33 + f_cs_e2*kappa)/s_eq/s_eq'
 *
 + aa_7 = 'wt_2'
 + cc_7 = 'sl'
 + abc_d_12 = '(aa_7 + bb_6 + cc_7)*(aa_7 + bb_6 + cc_7)*log(aa_7 + bb_6 + cc_7 + dd_11)'
 + ac_d_12 = '(aa_7 + cc_7)*(aa_7 + cc_7)*log(aa_7 + cc_7 + dd_11)'
 + bc_d_12 = '(bb_6 + cc_7)*(bb_6 + cc_7)*log(bb_6 + cc_7 + dd_11)'
 + c_d_12 = 'cc_7*cc_7*log(cc_7 + dd_11)'
 + f_2gap_1 = 'dd_11*dd_11*(abc_d_12 - ac_d_12 - bc_d_12 + c_d_12 - 3*aa_7*bb_6)*0.5'
 + aa_8 = 'dl'
 + cc_8 = 'sl + wl'
 + abc_d_13 = '(aa_8 + bb_6 + cc_8)*(aa_8 + bb_6 + cc_8)*log(aa_8 + bb_6 + cc_8 + dd_11)'
 + ac_d_13 = '(aa_8 + cc_8)*(aa_8 + cc_8)*log(aa_8 + cc_8 + dd_11)'
 + bc_d_13 = '(bb_6 + cc_8)*(bb_6 + cc_8)*log(bb_6 + cc_8 + dd_11)'
 + c_d_13 = 'cc_8*cc_8*log(cc_8 + dd_11)'
 + f_2gap_2 = 'dd_11*dd_11*(abc_d_13 - ac_d_13 - bc_d_13 + c_d_13 - 3*aa_8*bb_6)*0.5'
 + f_cs_e4 = 'f_2gap_1 - f_2gap_2'
 *
 + aa_9 = 'thl'
 + bb_9 = 'th_gl'
 + cc_9 = 'hl'
 + dd_12 = 'wt_2 + wf_2'
 + abc_d_14 = '(aa_9 + bb_9 + cc_9)*(aa_9 + bb_9 + cc_9)*log(aa_9 + bb_9 + cc_9 + dd_12)'
 + ac_d_14 = '(aa_9 + cc_9)*(aa_9 + cc_9)*log(aa_9 + cc_9 + dd_12)'
 + bc_d_14 = '(bb_9 + cc_9)*(bb_9 + cc_9)*log(bb_9 + cc_9 + dd_12)'
 + c_d_14 = 'cc_9*cc_9*log(cc_9 + dd_12)'
 + f_2gap_1a = 'dd_12*dd_12*(abc_d_14 - ac_d_14 - bc_d_14 + c_d_14-3*aa_9*bb_9)*0.5'
 + dd_13 = 'wf_2'
 + abc_d_15 = '(aa_9 + bb_9 + cc_9)*(aa_9 + bb_9 + cc_9)*log(aa_9 + bb_9 + cc_9 + dd_13)'
 + ac_d_15 = '(aa_9 + cc_9)*(aa_9 + cc_9)*log(aa_9 + cc_9 + dd_13)'
 + bc_d_15 = '(bb_9 + cc_9)*(bb_9 + cc_9)*log(bb_9 + cc_9 + dd_13)'
 + c_d_15 = 'cc_9*cc_9*log(cc_9 + dd_13)'
 + f_2gap_2a = 'dd_13*dd_13*(abc_d_15 - ac_d_15 - bc_d_15 + c_d_15 - 3*aa_9*bb_9)*0.5'
 + f_cs_e5 = 'f_2gap_1a - f_2gap_2a'
 *
 + dd_14 = 'dl + wfd_2'
 + abc_d_16 = '(aa_9 + bb_9 + cc_9)*(aa_9 + bb_9 + cc_9)*log(aa_9 + bb_9 + cc_9 + dd_14)'
 + ac_d_16 = '(aa_9 + cc_9)*(aa_9 + cc_9)*log(aa_9 + cc_9 + dd_14)'
 + bc_d_16 = '(bb_9 + cc_9)*(bb_9 + cc_9)*log(bb_9 + cc_9 + dd_14)'
 + c_d_16 = 'cc_9*cc_9*log(cc_9 + dd_14)'
 + f_2gap_3 = 'dd_14*dd_14*(abc_d_16 - ac_d_16 - bc_d_16 + c_d_16 - 3*aa_9*bb_9)*0.5'
 + dd_15 = 'wfd_2'
 + abc_d_17 = '(aa_9 + bb_9 + cc_9)*(aa_9 + bb_9 + cc_9)*log(aa_9 + bb_9 + cc_9 + dd_15)'
 + ac_d_17 = '(aa_9 + cc_9)*(aa_9 + cc_9)*log(aa_9 + cc_9 + dd_15)'
 + bc_d_17 = '(bb_9 + cc_9)*(bb_9 + cc_9)*log(bb_9 + cc_9 + dd_15)'
 + c_d_17 = 'cc_9*cc_9*log(cc_9 + dd_15)'
 + f_2gap_4 = 'dd_15*dd_15*(abc_d_17 - ac_d_17 - bc_d_17 + c_d_17 - 3*aa_9*bb_9)*0.5'
 + f_cs_e6 = 'f_2gap_3 - f_2gap_4'
 + f_cs_e7 = '(2*f_cs_e4 + kappa*(f_cs_e5 - f_cs_e6))/(2*wl*thl*s_eq)'
 + l0_even_shield = 'ml*(-f_cs_e1 + 2*f_cs_e7 - f_cs_e3)*2'
 *
 + l0_shield = 'l*(l0_even_shield + l0_odd_shield)/2'
 + m0_shield = 'l*(l0_even_shield - l0_odd_shield)/2'
 *
 + lo = 'l0_noshield*(shieldsads == 0) + l0_shield*(shieldsads == 1)'
 + mo = 'm0_noshield*(shieldsads == 0) + m0_shield*(shieldsads == 1)'
 *
 + mtot = 'k*ltot'
 *
 + sigmas = '1e6/(rsquare*th_microns)'
 + sigmag = '1e6/(rsquare_g*th_g_microns)'
 *
 + dcs_1 = 'dcapcs*epsilon_r*l'
 + dcg_1 = 'dcapcg*epsilon_r*l'
 + rcmtot = '0.5*rpath + rret'
 *
 + ccmtot = '2*ctot_nofill'
 + k_inf_cm_temp = '-((tof/ccmtot)**2)*(sqrt(pi/(mu0*sigmas))*dcs_1 + sqrt(pi/(mu0*sigmag))*dcg_1)'
 *
 + dcs_2 = 'dcapnss*epsilon_r*l'
 + dcg_2 = 'dcapnsg*epsilon_r*l'
 + rsmtot = 'rpath + rret'
 *
 + cnstot = 'cns*epsilon_r*l'
 + k_inf_ns_temp = '-((tof/cnstot)**2)*(sqrt(pi/(mu0*sigmas))*dcs_2 + sqrt(pi/(mu0*sigmag))*dcg_2)'
 *
 + k_inf_rel = 'k_inf_cm_temp/k_inf_ns_temp'
 + r_rel = 'sqrt(rcmtot/rsmtot)'
 + alpha = 'sqrt(k_inf_rel/r_rel)'
 *
 + k_inf_cm = 'k_inf_cm_temp*(alpha <= 1) + (k_inf_cm_temp/alpha)*(alpha > 1)'
 + k_inf_ns = 'k_inf_ns_temp*(alpha <= 1) + (k_inf_ns_temp*alpha)*(alpha > 1)'
 *
 + k_infinite_1 = 'k_inf_cm'
 *
 + k_yo = 'ratio'
 + sk = 'sqrt(k_yo)'
 + k2 = 'k_yo*k_yo'
 + k3 = 'k2*k_yo'
 + k4 = 'k3*k_yo'
 + k5 = 'k4*k_yo'
 + k2sk = 'k2 - 2.0*sk + 1.0'
 *
 + fi_1 = '(((k3 - 2.0*k_yo + 1.0)/k2sk)*(rcmtot/(k_yo*k_infinite_1)))**2'
 *
 + delta_rcm3 = '2.0*sk*rcmtot*(k4 - 2.0*k3 + k2*sk - 2.0*k2 + 3.0*k_yo + sk - 2.0)/k2sk'
 + delta_lcm3 = 'delta_rcm3/(2.0*pi*fi_1*k5)'
 + delta_rcm2 = '2.0*sk*rcmtot*(k3 - k2*sk - sk + 1.0)/k2sk'
 + delta_lcm2 = 'delta_rcm2/(2.0*pi*fi_1*k3)'
 *
 + lcm0 = '0.5*(lo + mo)'
 + lcmtot = '0.5*(ltot + mtot)'
 + delta_rcm1 = '(k_yo - 1)*rcmtot'
 + delta_lcm1 = 'lcm0 - lcmtot - delta_lcm2 - delta_lcm3'
 *
 + k_infinite_2 = 'k_inf_ns'
 *
 + fi_2 = '(((k3 - 2.0*k_yo + 1.0)/k2sk)*(rsmtot/(k_yo*k_infinite_2)))**2'
 *
 + delta_rns3 = '2.0*sk*rsmtot*(k4 - 2.0*k3 + k2*sk - 2.0*k2 + 3.0*k_yo + sk - 2.0)/k2sk'
 + delta_lns3 = 'delta_rns3/(2.0*pi*fi_2*k5)'
 + delta_rns2 = '2.0*sk*rsmtot*(k3 - k2*sk - sk + 1.0)/k2sk'
 + delta_lns2 = 'delta_rns2/(2.0*pi*fi_2*k3)'
 *
 + lns0 = 'lo'
 + lnstot = 'ltot'
 + delta_rns1 = '(k_yo - 1)*rsmtot'
 + delta_lns1 = 'lns0 - lnstot - delta_lns2 - delta_lns3'
 *
 + da1 = '(2.0*delta_rcm1/delta_rns1 - 1.0)'
 + da2 = '(2.0*delta_rcm2/delta_rns2 - 1.0)'
 + da3 = '(2.0*delta_rcm3/delta_rns3 - 1.0)'
 + delta_r1 = 'delta_rns1'
 + delta_r2 = 'delta_rns2'
 + delta_r3 = 'delta_rns3'
 + delta_l1 = 'delta_lns1'
 + delta_l2 = 'delta_lns2'
 + delta_l3 = 'delta_lns3'
 + delta_m1 = '2.0*delta_lcm1 - delta_lns1'
 + delta_m2 = '2.0*delta_lcm2 - delta_lns2'
 + delta_m3 = '2.0*delta_lcm3 - delta_lns3'
 + dk1_temp = 'delta_m1/delta_l1'
 + dk1 = 'dk1_temp*(dk1_temp <= 1) + 1*(dk1_temp > 1)'
 + dk2 = 'delta_m2/delta_l2'
 + dk3 = 'delta_m3/delta_l3'
 *
 * coupledwires netlist follows ...
 *
 e4 net01353 net059 net01029 net057 da2
 e5 net057 net094 net059 net092 da2
 e6 net045 net0206 net047 net0160 da3
 e7 net092 net047 net094 net045 da3
 e14 net077 net0243 net065 net0244 da1
 e11 net0152 net083 net0154 net081 da3
 e10 net081 net0148 net083 net0150 da3
 e13 net0244 net0142 net0243 net0140 da1
 e20 net0236 net0129 net0234 net0127 da3
 e2 net069 net01029 net071 net01353 da1
 e3 net01297 net071 net01471 net069 da1
 e21 net0127 vb1 net0129 vb2 da3
 e23 net0248 net0117 net0246 net0115 da2
 e17 net0145 net0141 net0143 net0139 da1
 e18 net0139 net0246 net0141 net0248 da1
 e22 net0115 net0234 net0117 net0236 da2
 e9 net093 net0154 net095 net0152 da2
 e8 net0140 net095 net0142 net093 da2
 c139 net0148 net0150 c='cctot/3'
 c141 vshield net0148 c='ctot/3'
 c142 vshield vb1 c='ctot/6'
 c140 vshield net0150 c='ctot/3'
 c143 vshield vb2 c='ctot/6'
 c144 vb1 vb2 c='cctot/6'
 c145 va1 va2 c='cctot/6'
 c138 net0206 net0160 c='cctot/3'
 c137 vshield net0160 c='ctot/3'
 c136 vshield net0206 c='ctot/3'
 c108 vshield va1 c='ctot/6'
 c107 vshield va2 c='ctot/6'
 l250 net01029 net094 l='delta_l2/3'
 l251 net01353 net092 l='delta_l2/3'
 l252 net092 net0160 l='delta_l3/3'
 l253 net094 net0206 l='delta_l3/3'
 l261 net077 net0140 l='delta_l1/3'
 l256 net0152 net0150 l='delta_l3/3'
 l254 net0142 net0154 l='delta_l2/3'
 l255 net0140 net0152 l='delta_l2/3'
 l258 net0206 net079 l='ltot/3'
 l257 net0154 net0148 l='delta_l3/3'
 l259 net0160 net0144 l='ltot/3'
 l260 net065 net0142 l='delta_l1/3'
 l262 net0145 net0248 l='delta_l1/3'
 l264 net0150 net0383 l='ltot/3'
 l263 net0143 net0246 l='delta_l1/3'
 l268 net0248 net0236 l='delta_l2/3'
 l269 net0246 net0234 l='delta_l2/3'
 l265 net0148 net0242 l='ltot/3'
 l266 net0234 vb1 l='delta_l3/3'
 l267 net0236 vb2 l='delta_l3/3'
 l174 va1 net0977 l='ltot/3'
 l170 va2 net01027 l='ltot/3'
 l172 net01471 net01029 l='delta_l1/3'
 l175 net01297 net01353 l='delta_l1/3'
 k100 l250 l251 k='dk2'
 k101 l252 l253 k='dk3'
 k103 l256 l257 k='dk3'
 k105 l260 l261 k='dk1'
 k104 l258 l259 k='k'
 k102 l254 l255 k='dk2'
 k109 l268 l269 k='dk2'
 k106 l262 l263 k='dk1'
 k107 l264 l265 k='k'
 k108 l266 l267 k='dk3'
 k60 l174 l170 k='k'
 k61 l172 l175 k='dk1'
 r250 net059 net092 r='delta_r2/3'
 r251 net01029 net057 r='delta_r2/3'
 r252 net094 net045 r='delta_r3/3'
 r253 net047 net0160 r='delta_r3/3'
 r256 net0154 net081 r='delta_r3/3'
 r260 net0243 net0140 r='delta_r1/3'
 r258 net0144 net077 r='rtot/3'
 r259 net065 net0244 r='delta_r1/3'
 r255 net0142 net093 r='delta_r2/3'
 r254 net095 net0152 r='delta_r2/3'
 r266 net0129 vb2 r='delta_r3/3'
 r257 net083 net0150 r='delta_r3/3'
 r261 net079 net065 r='rtot/3'
 r269 net0117 net0236 r='delta_r2/3'
 r268 net0246 net0115 r='delta_r2/3'
 r267 net0234 net0127 r='delta_r3/3'
 r262 net0242 net0143 r='rtot/3'
 r264 net0143 net0139 r='delta_r1/3'
 r263 net0141 net0248 r='delta_r1/3'
 r265 net0383 net0145 r='rtot/3'
 r177 net01027 net01297 r='rtot/3'
 r172 net01471 net069 r='delta_r1/3'
 r176 net071 net01353 r='delta_r1/3'
 r173 net0977 net01471 r='rtot/3'
 *
 .ends coupledwires
 .include './dgncap.inc'
 * path, component, release: cmos8base/rel/hspice/models/dgncap.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.3 09/07/24 10:48:17
 *
 *>  ibm cmrf8sf/bicmos8wl dgncap nmos varactor
 *
 *******************************************************************************
 *
 *  syntax:  xxx (gx sx xx dx) dgncap
 *           +      l = 2u    <- length (m)
 *           +      w = 2u    <- width  (m)
 *           +  pcrep = 1     <- number of gates per individual rx diffusion
 *           + prxrep = 1     <- number of individual rx diffusion shapes
 *           +  dtemp = 0     <- temp rise from ambient (deg c)
 *           +    rsx = 50    <- substrate resistance
 *
 *                            .--------------------.
 *                            |                    |
 *                            |<-------- l-------->|
 *                            |                    |
 *                       .----|--------------------|-----.
 *                       |    |          ^         |     | rx
 *                       |  s |          |         |  d  |
 *                       |    |          w         |     |
 *                       |    |          |         |     |
 *                       |    |          v         |     |
 *                        ----|--------------------|-----
 *                            |                    |
 *                            |          pc        |
 *                            |                    |
 *                             --------------------
 *
 * notes:
 *
 *  1. model assumes source and drain are shorted and dual side pc
 *     contacts are shorted.
 *
 * 
 *                   (gx)           rtop          
 *                     o-----------/\/\/\----(g1)
 *                                             |
 *                                             /
 *                                        rpc  \
 *                                             /
 *                                             |
 *                                      +-----(1)
 *                                      |      |
 *                                      |      |
 *                                      |  ca  = 
 *                                      |      |
 *                                      |      |
 *                                      |    (11)
 *                                      |      |
 *                                  cf  =      |
 *                                      |      |
 *                                      |      /
 *                                      | rrx  \
 *                                      |      /
 *                                      |      |
 *                                      |      |
 *                                      +----(s1)--/\/\/\------------o (sx)
 *                                             |    rbots
 *                                             |
 *                                             +---/\/\/\------------o (dx)
 *                                             |    rbotd
 *                                             |
 *                                           - - -
 *                                            / \
 *                                        dcx - -
 *                                             |
 *                                             |
 *                                        (xx) o (substrate)
 *
 *
 *  these models were developed using the spectre (tm) circuit simulator.
 *
 * ibm confidential
 * (c) 2009 ibm corporation
 *
 ********************************************************************************
 *
 .subckt dgncap (gx sx xx dx)  l=2u w=2u pcrep=1 prxrep=1 dtemp=0 rsx=50 
 *
 *---- drawn geometry ----------------------------------------------
 + pl = 'max(l,0.24u)'
 + pw = 'max(w,1.0u)'
 *
 *---- drawn geometry + mask bias ----------------------------------
 + plf  = 'pl + lwbpcdg'
 + pwf  = 'pw + delrx'
 *
 *---- area/perimeter calculations ---------------------------------
 *  device values
 + ngdiff   = 'max(1,pcrep)'
 + ndiff    = 'max(1,prxrep)'
 + par      = 'ngdiff*ndiff'
 + pareac   = '(plf-0.1u) * pwf * par'
 + pedgec   = '0.1u * pwf * par'
 *  nwell values
 + lnw      = '(2 * 0.90u) + ((ngdiff-1) * 0.44u) + (ngdiff * pl)'
 + wnw      = '(2 * 0.40u) + ((ndiff-1) * (0.68u+emw)) + (ndiff * pw)'
 + areanw   = 'lnw * wnw'
 + perimnw  = '2 * (lnw + wnw)'
 *---- rx and pc fringe cap ----------------------------------------
 + prxfrng = 0.095n
 + pcapof  = 0.152n
 + pmetf   = 0.129f
 + pcof    = 'par * (2 * pwf * pcapof + 2 * plf * prxfrng + pmetf)'
 *---- main area capacitance ---------------------------------------
 *   see equations at top of file
 * pcehck = 'cox*pareac'
 *---- nw resistance -----------------------------------------------
 + prnw   = '(0.9*nwrs) * (0.5 * plf + 0.44u) / (6 * pwf) + (0.5 * nrnw) / (2 * 0.44u * pwf)'
 *---- gate resistance ---------------------------------------------
 + prgate = '(pcrsi * pwf) / (12 * plf) + (oppcrenf * 1.0p) / (pwf * plf)'
 *
 *---- metal line resistances ----------------------
 *     value below is m1 sheet resistance and thickness
 + prtop = '(m1rsi * (plf + .44u) * ngdiff) / (3*(.20u + emw))'
 *     source/drain 
 + prbot = '(m1rs * (plf + 0.44u) * ngdiff) / (3*(min(8u,pwf/2)))' 
 *
 *  subcircuit
 rtop  gx  g1  r='prtop/(ndiff+1)'  dtemp=dtemp tc1=tm1rs 
 rpc   g1   1  r='prgate / par'  dtemp=dtemp tc1=tpcrsi 
 xca    1  11  mosvarcap
 +   pl_va = 'plf-0.1u'
 +   pw_va = pwf
 +  pnf_va = par
 +   co_va = co_mvdg
 +  cot_va = 0.10m
 +   qs_va = qs_mvdg
 +   qp_va = qp_mvdg 
 +  pon_va = pon_mvdg
 + pont_va = 15m 
 +  vbi_va = vbi_mvdg
 + vbit_va = 'vbi_mvdg*15m'
 +  lk1_va = 0u
 +  lk2_va = 1.0
 +  lk3_va = 1.0
 + lk1t_va = 0m
 + deltemp = 'temper+dtemp-25'
 xcaed  1  11  mosvarcap
 +   pl_va = 0.1u
 +   pw_va = pwf
 +  pnf_va = par
 +   co_va = '0.99*co_mvdg'
 +  cot_va = 0.15m
 +   qs_va = '1.05*qs_mvdg' 
 +   qp_va = 7.7m 
 +  pon_va = 10m 
 + pont_va = 10m 
 +  vbi_va = 0.04
 + vbit_va = 350u
 +  lk1_va = 0u
 +  lk2_va = 1.0
 +  lk3_va = 1.0
 + lk1t_va = 0m
 + deltemp = 'temper+dtemp-25'
 rrx   11  s1  r='prnw / par'  dtemp=dtemp tc1=tnwrs 
 rbots s1  sx  r='2*prbot/ndiff'  dtemp=dtemp tc1=tm1rs 
 rbotd s1  dx  r='2*prbot/ndiff'  dtemp=dtemp tc1=tm1rs 
 cfr    1  s1  c=pcof
 dsx   xx  s1  sxd  area='areanw' pj='perimnw' dtemp=dtemp

 *
 *---- nwell-to-sub diode ---------------------------------------
 .model sxd d
 + level = 1
 +  tlev = 2
 + tlevc = 1
 +  tref = 25
 +    eg = 1.11
 +   xti = 3.0
 +    rs = 'rsx*areanw'
 +     n = n_nw
 +    js = js_nw
 +   jsw = jsw_nw
 +    cj = cj_nw
 +   cta = cta_nw
 +    pb = pb_nw
 +   tpb = pta_nw
 +     m = mj_nw
 +   cjp = cjsw_nw
 +   ctp = ctp_nw
 +   php = pbsw_nw
 +  tphp = ptp_nw
 +  mjsw = mjsw_nw
 +    vb = bd_nw
 * 
 .ends dgncap
 .include './dgnfet.inc'
 * path, component, release: cmos8base/rel/hspice/models/dgnfet.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.2.1.6 08/08/28 20:56:47
 *
 *>  ibm cmrf8sf/bicmos8wl  dgnfet  2.5v dg nfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) dgnfet l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.24u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 0    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 1    <- gate connection switch (1->single-ended,
 *                                                       2->double-ended)
 *          + rbodymod = 0    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +  rf_rsub = 1    <- body resistance multiplier
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---
 *            gate     | |     (bsim4.4     )    bulk
 *              o------| |-----(internal    )-----o
 *                     | |     (rsub network)
 *                     | |---
 *                          |
 *                          |
 *                          |
 *                          o
 *                        source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2008 ibm corporation
 *
 ***************************************************************************
 *
 .subckt dgnfet d g s b w=1.0u l=0.24u nf=1 par=1 dtemp=0
 +                      as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                      lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                      panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                      panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                      plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                      rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1
 +                      rbps=100 rbpd=100 rbsb=1e9 rbpb=50 rbdb=1e9
 .param
 *
 * if monte carlo and "pl*" instance parameter = zero, use values from skew/process file
 +   a_plnest     = limit(-0.5,0.5)
 +   sel_plnest   = '((plnest == 1) || ((a_plnest*plnest) == 1))'
 +   a_plorient   = limit(-0.5,0.5)
 +   sel_plorient = '((plorient == 1) || ((a_plorient*plorient) == 1))'
 +   a_pld200     = limit(-0.5,0.5)
 +   sel_pld200   = '((pld200 == 1) || ((a_pld200*pld200) == 1))'
 +   a_pwd100     = limit(-0.5,0.5)
 +   sel_pwd100   = '((pwd100 == 1) || ((a_pwd100*pwd100) == 1))'
 *
 * calculate aclv/acwv and final lint/wint params
 +   aclv_ni_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_nest == 2))/aclv_dgfactor + cnr_dgn*(1-mc_fet_mm_f)*(pc_nest != 2))'
 +   aclv_or_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_orient == 2))/aclv_dgfactor + cnr_dgn*(1-mc_fet_mm_f)*(pc_orient != 2))'
 +   aclv_dist_sws = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_dist == 2))/aclv_dgfactor + cnr_dgn*(1-mc_fet_mm_f)*(pc_dist != 2))'
 +   aclv_ni       = '((dgfet_aclv_nest*sel_plnest) + (dgfet_aclv_iso*(1-sel_plnest)))*aclv_ni_sws'
 +   aclv_or       = '((dgfet_aclv_v*sel_plorient) + (dgfet_aclv_h*(1-sel_plorient)))*aclv_or_sws'
 +   aclv_dist     = '((dgfet_aclv_out*sel_pld200) + (dgfet_aclv_in*(1-sel_pld200)))*aclv_dist_sws'
 +   aclv_ran      = agauss(cnr_dgn,mc_sw,3)
 *
 +   acwv_dist_sws = '(-mc_sw + ((mc_fet_mm_f != 1) && (rx_dist == 2))/acwv_dgfactor + cnr_dgn*(1-mc_fet_mm_f)*(rx_dist != 2))'
 +   acwv_dist     = '((dgfet_acwv_out*sel_pwd100) + (dgfet_acwv_in*(1-sel_pwd100)))*acwv_dist_sws'
 +   acwv_ran      = agauss('-cnr_dgn',mc_sw,3)
 *
 .param
 +   xc_lint_1 = '(aclv_ni*aclv_dgfet_ni + aclv_or*aclv_dgfet_or)'
 +   xc_lint_2 = '((aclv_dist*aclv_dgfet_dist) + (aclv_ran + (mc_global == 2))*aclv_dgfet_ran)'
 +   xx_lint_3 = '(mc_fet_mm_f + (aclv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_lint_4 = '((mc_global == 2)*(-xlint_dgn) + (mc_global != 2))'
 +   xc_lint_t = '((xc_lint_1 + xc_lint_2)*xx_lint_3)*xx_lint_4'
 *
 +   xc_wint_1 = '((acwv_dist*acwv_dgfet_dist) + (acwv_ran + (mc_global == 2))*acwv_dgfet_ran)'
 +   xx_wint_2 = '(mc_fet_mm_f + (acwv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_wint_3 = '((mc_global == 2)*(xwint_dgn) + (mc_global != 2))'
 +   xc_wint_t = '((xc_wint_1)*xx_wint_2)*xx_wint_3'
 *
 *     final =  nominal      +      acv * dist(-1,1)      +        global * dist(-1,1)
 + lint_dgnfet = 'lint_dgn + 1.5*total_aclv_dgfet*xc_lint_t*fet_geo_mm + ltol_dgn*xlint_dgn'
 + wint_dgnfet = 'wint_dgn + 1.5*total_acwv_dgfet*xc_wint_t*fet_geo_mm + wtol_dgn*xwint_dgn'
 *
 .param
 * switch to turn on or off the sti stress effects
 +  isti = '((gstis==1)&&(lstis==1))||(gstis==2)'
 *
 * switch to turn on or off the nwell proximity effects
 +  inw  = '((gwells==1)&&(lnws==1))||(gwells==2)'
 *
 * nwell proximity effect calculations
 +  proxpre  =  0.07e-06             $ [v-m]
 +  proxlen  = -0.35e-06             $ [m]
 +  proxk1   =  0.375                $ [unitless]
 +  rxwparm1 = -0.28                 $ [unitless]
 +  rxwparm2 =  0.56e-06             $ [unitless]
 +  rxwparm3 =  0.0e-6               $ [m]
 +  nw1b1   = 'panw1 /(band1 -proxlen)'
 +  nw2b2   = 'panw2 /(band2 -proxlen)'
 +  nw3b3   = 'panw3 /(band3 -proxlen)'
 +  nw4b4   = 'panw4 /(band4 -proxlen)'
 +  nw5b5   = 'panw5 /(band5 -proxlen)'
 +  nw6b6   = 'panw6 /(band6 -proxlen)'
 +  nw7b7   = 'panw7 /(band7 -proxlen)'
 +  nw8b8   = 'panw8 /(band8 -proxlen)'
 +  nw9b9   = 'panw9 /(band9 -proxlen)'
 +  nw10b10 = 'panw10/(band10-proxlen)'
 +  prox_term = 'inw*(proxpre/(l*w))*(nw1b1+nw2b2+nw3b3+nw4b4+nw5b5+nw6b6+nw7b7+nw8b8+nw9b9+nw10b10)'
 +  k1_dgn_base = 0.54
 +  k1_dgn      = 'k1_dgn_base+proxk1*prox_term'
 *
 * mis-match calculations: include multiplicity (par)
 .param
 +  kvt  =  1.05e-8
 +  kvtl =  1.55e-7
 +  kvtw =  0.0
 +  kmb  =  9.7e-6
 +  kmbl =  0
 +  kmbw = -3.0e-6
 +  sigvth  = 'kvt/sqrt((w-kvtw)*par*(l-kvtl))'
 +  sigbeta = 'kmb/sqrt((w-kmbw)*par*(l-kmbl))'
 *
 +  dvth0 = agauss(0,1,3)               $ local mis-match distributions
 +  dbeta = agauss(0,1,3)
 *                                      $ select local vs global vs corner
 +  d_vth0 = 'dvth0*(mc_global != 2) + xdgnvth0*(mc_global == 2) - cnr_dgn'
 +  d_beta = 'dbeta*(mc_global != 2) + ddgnu0*(mc_global == 2) - cnr_dgn'
 *
 +  mmvth0 = 'sigvth * d_vth0 * fet_dop_mm'    $ vth0 mis-match
 +  mmbeta = 'sigbeta * d_beta * fet_dop_mm'   $ beta mis-match
 *
 +  pvt_var = 'mmvth0 + prox_term'      $ local vth0 variation
 *
 .param
 * flicker noise calculations: statistics are function of w and l and par
 +  noideva = '10u * 0.24u * 10'        $ device area for extracted variation
 +  noistd  = 1.0173                    $ worst case variation value
 *
 +  noi_scale = 'noistd-min(log(sqrt(w*l*par/noideva)),0)'   $ area scaling
 +  noiamult  = 'exp(dnoi_dgn*noi_scale)'                $ gate bias scaliing
 +  noibmult  = 'exp(dnoi_dgn*noi_scale/1.650)'
 +  noicmult  = 'exp(dnoi_dgn*noi_scale/2.723)'
 *
 * thermal noise scaling equation
 +  tnoitanha = 0.16
 +  tnoitanhb = 3.9e6
 +  tnoitanhc = 2.0e11
 +  ntnoi_dgnfet = '1.1/tanh(tnoitanha + tnoitanhb*l + tnoitanhc*l*l)'
 *
 * gate resistance scaling equations
 +  rg11 = '0.1e6*l + 14'
 +  rg12 = '18e6*l - 3.08'
 +  xrg1 = 'max(0.1,(rg11*rg12/(rg11+rg12)))'
 +  xrg2 = 'max(0.0,((1.5585e-6/l + 1.0291)*(1.56e4*w + 7.2)/7.54))'
 *
 m0 d g s b  dgnch  w=w l=l nf=nf dtemp=dtemp
 +                  as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                  sa='isti*sa' sb='isti*sb' sd='isti*sd'
 +                  rgatemod=rgatemod rbodymod=rbodymod
 *
 ***************************************************************************
 * dg nfet bsim4v4 model
 ***************************************************************************
 .model dgnch  nmos  (                              level   = 54
 +version = 4.4            binunit = 1              paramchk= 1
 +mobmod  = 0              rdsmod  = 1              permod  = 1
 +epsrox  = 3.9            toxe    = toxe_dgn       toxp    = toxp_dgn
 +toxm    = 6e-9           xj      = 1.5e-7         ndep    = 6.2e17
 +ngate   = 3e20           nsd     = 1e20
 +rsh     = rsh_dgn        rshg    = rsh_dgn        phin    = 0.112
 +vth0    = 'vth0_dgn+pvt_var'                      vfb     = -0.17
 +pvth0   = pvth0_dgn
 +k1      = k1_dgn         k2      = -0.03          k3      = 4
 +k3b     = 15             w0      = 1.28e-6        lpe0    = 8.92e-8
 +lpeb    = -8e-8          vbm     = -3       
 +dvt0    = 8              dvt1    = 0.425156       dvt2    = -0.0110109
 +dvtp0   = 4e-7           dvtp1   = 1.2e-6
 +dvt0w   = -2e4           dvt1w   = 5.3e6          dvt2w   = -0.032
 +u0    = 'u0_dgn+mmbeta'  ua      = -3.8e-10       ub      = 2.24e-18
 +uc      = 1.2e-10        lu0     = 24.9           lua     = -1.2e-11
 +lub     = 4.2e-19        luc     = 1.25e-11       wu0     = -6
 +wua     = 3.6e-10        wub     = 8e-20          wuc     = -3.2e-11
 +pu0     = 20             pua     = 3e-10          pub     = -9.8e-20
 +puc     = -1.2e-11       eu      = 0
 +vsat    = vsat_dgn       a0      = 1.585          la0     = -0.92
 +pa0     = 0.42           ags     = 0.54           lags    = -0.06
 +pags    = -0.06          b0      = 1.6e-7         b1      = 8e-8
 +keta    = -0.0235        lketa   = 8e-3           wketa   = -0.012
 +pketa   = 0.01           a1      = 3.75169e-4     a2      = 0.902855
 +wint    = 0              lint    = 0              dwg     = -1.8e-8
 +dwb     = -1.4e-8        voff    = -0.1           voffl   = -8.1e-9
 +minv    = -0.5           nfactor = 0.62           eta0    = 0.049
 +etab    = -0.04          dsub    = 0.199          cit     = 3.51e-4
 +cdsc    = 0              cdscb   = 1.6e-3         cdscd   = 1e-5
 +pclm    = 0.5            pdiblc1 = 0.39           pdiblc2 = 3.2e-3
 +ppdiblc2= -4.4e-3        pdiblcb = 0              
 +drout   = 0.38           pscbe1  = 4.24e8         pscbe2  = 1e-5
 +pvag    = 0.3            delta   = 0.0109         fprout  = 0
 +pdits   = 0              pditsl  = 0              pditsd  = 0
 +lc      = 0
 +xn      = 3              rdw     = rdsw_dgn       rdwmin  = 0
 +rsw     = rdsw_dgn       rswmin  = 0              prwg    = 1
 +prwb    = 0              wr      = 1
 +alpha0  = 2.6e-7         alpha1  = 0.96           beta0   = 15
 ***************************************************************************
 * jds/vt temperature parameters
 ***************************************************************************
 +tnom    = 25             ute     = -1.83          kt1     = -0.2755
 +kt1l    = -4e-9          kt2     = -0.052         ua1     = 4e-10
 +ub1     = -1.4e-18       uc1     = -4.46684e-11   at      = 1.981e4
 +prt     = -180           tempmod = 0
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 +igcmod  = 0              igbmod  = 0              agidl   = 4e-7
 +bgidl   = 2.3e9          cgidl   = 5              egidl   = 0.6
 +aigbacc = 0.43           bigbacc = 0.054          cigbacc = 0.075
 +nigbacc = 1              aigbinv = 0.35           bigbinv = 0.03
 +cigbinv = 6e-3           eigbinv = 1.1            nigbinv = 3
 +aigc    = 0.054          bigc    = 0.054          cigc    = 0.075
 +aigsd   = 0.43           bigsd   = 0.054          cigsd   = 0.075
 +dlcig   = 1.4e-8         nigc    = 1              poxedge = 1
 +pigcd   = 1              ntox    = 1              toxref  = 'toxe_dgn-2.9e-9'
 ***************************************************************************
 * sti stress model parameters
 ***************************************************************************
 +saref   = 3e-6           sbref   = 3e-6           wlod    = 0
 +ku0     = -2.8e-8        kvsat   = 0              tku0    = 0
 +lku0    = -6e-8          wku0    = 0              llodku0 = 1
 +wlodku0 = 0              kvth0   = 1e-8           lkvth0  = 1.66e-6
 +wkvth0  = 0              pkvth0  = 0              llodvth = 0
 +wlodvth = 0              stk2    = 2.8e-9         lodk2   = 1
 +steta0  = 5e-9           lodeta0 = 1
 ***************************************************************************
 * source/drain to body junction diode parameters
 ***************************************************************************
 +diomod  = 1             ijthdfwd= 0.1            ijthsfwd= 0.1
 +jss     = js_dgn        jsd     = js_dgn         jsws    = jsw_dgn
 +jswd    = jsw_dgn       jswgs   = jsw_dgn        jswgd   = jsw_dgn
 +cjs     = cj_dgn        cjd     = cj_dgn         cjsws   = cjsw_dgn
 +cjswd   = cjsw_dgn      cjswgs  = cjsg_dgn       cjswgd  = cjsg_dgn
 +mjs     = mj_dgn        mjd     = mj_dgn         mjsws   = mjsw_dgn
 +mjswd   = mjsw_dgn      mjswgs  = mjsg_dgn       mjswgd  = mjsg_dgn
 +pbs     = pb_dgn        pbd     = pb_dgn         pbsws   = pbsw_dgn
 +pbswd   = pbsw_dgn      pbswgs  = pbsg_dgn       pbswgd  = pbsg_dgn
 +njs     = n_dgn         njd     = n_dgn          xjbvd   = 1
 +bvd     = bd_n          xjbvs   = 1              bvs     = bd_n
 ***************************************************************************
 * junction diode temperature parameters
 ***************************************************************************
 +tcj     = cta_n         tcjsw   = ctp_n          tcjswg  = ctp_n
 +tpb     = pta_n         tpbsw   = ptp_n          tpbswg  = ptp_n
 +xtis    = 3             xtid    = 3
 ***************************************************************************
 * capacitance-voltage (cv) parameters
 ***************************************************************************
 +capmod  = 2             xpart   = 0              dlc     = 28n
 +dwc     = 0             cgdo    = cgdo_dgn       cgso    = cgso_dgn
 +cgsl    = cgsl_dgn      cgdl    = cgdl_dgn       ckappas = 5.0
 +ckappad = 5.0           cf      = 0              cgbo    = 1.706e-11
 +acde    = 0.45          moin    = 10             noff    = 1.5
 +voffcv  = -0.08
 ***************************************************************************
 * layout dependence parameters
 ***************************************************************************
 +geomod  = '(1 - int((nf+1)/2) + int(nf/2))'       rgeomod = 1
 +xgl     = lwbpc          xgw     = 0.43e-6        xl    = '-2*lint_dgnfet'
 +xw  = '-2*wint_dgnfet'   dmcg    = 0.23e-6        dmci    = 0.32e-6
 +dwj     = 0              ngcon   = ngcon
 ***************************************************************************
 * rf model parameters
 ***************************************************************************
 +rgatemod= rgatemod       trnqsmod= 0              rbodymod= rbodymod
 +acnqsmod= 0              xrcrg1  = xrg1           xrcrg2  = xrg2
 +rbps    = 'rbps*rf_rsub' rbpd    = 'rbpd*rf_rsub'
 +rbsb    = 'rbsb*rf_rsub' rbpb    = 'rbpb*rf_rsub' rbdb    = 'rbdb*rf_rsub'
 ***************************************************************************
 * flicker noise parameters
 ***************************************************************************
 +fnoimod = 1            noia = '4.5e41*noiamult'   noib = '7e23*noibmult'
 +noic = '1.25e8*noicmult' em      = 4.10e7         af      = 1
 +ef      = 0.87           kf      = 0
 ***************************************************************************
 * channel thermal noise parameters
 ***************************************************************************
 +tnoimod = 0              ntnoi   = ntnoi_dgnfet   )
 *
 .ends dgnfet
 .include './dgnfet_psp.inc'
 * path, component, release: cmos8base/rel/hspice/models/dgnfet_psp.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.1 10/10/12 14:46:49
 *
 *>  ibm cmrf8sf/bicmos8wl  dgnfetpsp  2.5v dg nfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) dgnfetpsp l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.24u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---
 *            gate     | |         bulk
 *              o------| |----------o
 *                     | |
 *                     | |---
 *                          |
 *                          |
 *                          |
 *                          o
 *                        source
 *
 *         note: the ldd resistance is accounted for within the psp model.
 *
 * ibm confidential
 * (c) 2010 ibm corporation
 *
 ***************************************************************************
 .subckt dgnfetpsp d g s b
 +                      w=1.0u l=0.24u nf=1 par=1 dtemp=0
 +                      as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                      lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                      panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                      panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                      plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                      rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1       $ unused parameters
 +                      rbps=100 rbpd=100 rbsb=1e9 rbpb=50 rbdb=1e9   $ unused parameters
 .param
 *
 * if monte carlo and "pl*" instance parameter = zero, use values from skew/process file
 +   a_plnest     = limit(-0.5,0.5)
 +   sel_plnest   = '((plnest == 1) || ((a_plnest*plnest) == 1))'
 +   a_plorient   = limit(-0.5,0.5)
 +   sel_plorient = '((plorient == 1) || ((a_plorient*plorient) == 1))' 
 +   a_pld200     = limit(-0.5,0.5)
 +   sel_pld200   = '((pld200 == 1) || ((a_pld200*pld200) == 1))' 
 +   a_pwd100     = limit(-0.5,0.5)
 +   sel_pwd100   = '((pwd100 == 1) || ((a_pwd100*pwd100) == 1))'
 *
 * calculate aclv/acwv and final lint/wint params
 +   aclv_ni_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_nest == 2))/aclv_dgfactor + cnr_dgn*(1-mc_fet_mm_f)*(pc_nest != 2))'
 +   aclv_or_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_orient == 2))/aclv_dgfactor + cnr_dgn*(1-mc_fet_mm_f)*(pc_orient != 2))'
 +   aclv_dist_sws = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_dist == 2))/aclv_dgfactor + cnr_dgn*(1-mc_fet_mm_f)*(pc_dist != 2))'
 +   aclv_ni       = '((dgfet_aclv_nest*sel_plnest) + (dgfet_aclv_iso*(1-sel_plnest)))*aclv_ni_sws'
 +   aclv_or       = '((dgfet_aclv_v*sel_plorient) + (dgfet_aclv_h*(1-sel_plorient)))*aclv_or_sws'
 +   aclv_dist     = '((dgfet_aclv_out*sel_pld200) + (dgfet_aclv_in*(1-sel_pld200)))*aclv_dist_sws'
 +   aclv_ran      = agauss(cnr_dgn,mc_sw,3)
 *
 +   acwv_dist_sws = '(-mc_sw + ((mc_fet_mm_f != 1) && (rx_dist == 2))/acwv_dgfactor + cnr_dgn*(1-mc_fet_mm_f)*(rx_dist != 2))'
 +   acwv_dist     = '((dgfet_acwv_out*sel_pwd100) + (dgfet_acwv_in*(1-sel_pwd100)))*acwv_dist_sws'
 +   acwv_ran      = agauss('-cnr_dgn',mc_sw,3)
 *
 .param
 +   xc_lint_1 = '(aclv_ni*aclv_dgfet_ni + aclv_or*aclv_dgfet_or)'
 +   xc_lint_2 = '((aclv_dist*aclv_dgfet_dist) + (aclv_ran + (mc_global == 2))*aclv_dgfet_ran)'
 +   xx_lint_3 = '(mc_fet_mm_f + (aclv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_lint_4 = '((mc_global == 2)*(-xlint_dgn) + (mc_global != 2))'
 +   xc_lint_t = '((xc_lint_1 + xc_lint_2)*xx_lint_3)*xx_lint_4'
 *
 +   xc_wint_1 = '((acwv_dist*acwv_dgfet_dist) + (acwv_ran + (mc_global == 2))*acwv_dgfet_ran)'
 +   xx_wint_2 = '(mc_fet_mm_f + (acwv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_wint_3 = '((mc_global == 2)*(xwint_dgn) + (mc_global != 2))'
 +   xc_wint_t = '((xc_wint_1)*xx_wint_2)*xx_wint_3'
 *
 *     final =  nominal      +      acv * dist(-1,1)      +        global * dist(-1,1)
 + lint_psp_dgnfet = 'lint_psp_dgn + 1.5*total_aclv_dgfet*xc_lint_t*fet_geo_mm + ltol_dgn*xlint_dgn'
 + wint_psp_dgnfet = 'wint_psp_dgn + 1.5*total_acwv_dgfet*xc_wint_t*fet_geo_mm + wtol_dgn*xwint_dgn'
 *
 .param
 * switch to turn on or off the sti stress effects
 +  isti = '((gstis==1)&&(lstis==1))||(gstis==2)'
 *
 * switch to turn on or off the nwell proximity effects
 +  inw  = '((gwells==1)&&(lnws==1))||(gwells==2)'
 *
 * nwell proximity effect calculations
 +  proxpre  =  0.07e-06             $ [v-m]
 +  proxlen  = -0.35e-06             $ [m]
 +  proxk1   =  0.375                $ [unitless]
 +  rxwparm1 = -0.28                 $ [unitless]
 +  rxwparm2 =  0.56e-06             $ [unitless]
 +  rxwparm3 =  0.0e-6               $ [m]
 +  nw1b1   = 'panw1 /(band1 -proxlen)'
 +  nw2b2   = 'panw2 /(band2 -proxlen)'
 +  nw3b3   = 'panw3 /(band3 -proxlen)'
 +  nw4b4   = 'panw4 /(band4 -proxlen)'
 +  nw5b5   = 'panw5 /(band5 -proxlen)'
 +  nw6b6   = 'panw6 /(band6 -proxlen)'
 +  nw7b7   = 'panw7 /(band7 -proxlen)'
 +  nw8b8   = 'panw8 /(band8 -proxlen)'
 +  nw9b9   = 'panw9 /(band9 -proxlen)'
 +  nw10b10 = 'panw10/(band10-proxlen)'
 +  prox_term = 'inw*(proxpre/(l*w))*(nw1b1+nw2b2+nw3b3+nw4b4+nw5b5+nw6b6+nw7b7+nw8b8+nw9b9+nw10b10)'
 +  nsubo_base = 1.554e23
 +  nsubo_nwpr = 'nsubo_base*(1+1.5*proxk1*prox_term)'
 *
 * mis-match calculations: include multiplicity (par)
 .param
 +  kvt  =  1.05e-8
 +  kvtl =  1.3e-7
 +  kvtw =  1.4e-7
 +  kmb  =  1.0e-9
 +  kmbl =  -5.0e-7
 +  kmbw =  0.0
 +  sigvth  = 'kvt/sqrt((w-kvtw)*par*(l-kvtl))'
 +  sigbeta = 'kmb/sqrt((w-kmbw)*par*(l-kmbl))'
 *
 +  dvth0 = agauss(0,1,3)               $ local mis-match distributions
 +  dbeta = agauss(0,1,3)
 *                                      $ select local vs global vs corner
 +  d_vth0 = 'dvth0*(mc_global != 2) + xdgnvth0*(mc_global == 2) - cnr_dgn'
 +  d_beta = 'dbeta*(mc_global != 2) + ddgnu0*(mc_global == 2) - cnr_dgn'
 *
 +  mmvth0 = 'sigvth * d_vth0 * fet_dop_mm'    $ vth0 mis-match
 +  mmbeta = 'sigbeta * d_beta * fet_dop_mm'   $ beta mis-match
 *
 +  pvt_var = 'mmvth0 + 0.9*prox_term'         $ local vth0 variation
 *
 .param
 * flicker noise calculations: statistics are function of w and l and par
 +  noideva = '10u * 0.24u * 10'        $ device area for extracted variation
 +  noistd  = 1.0173                    $ worst case variation value
 *
 +  noi_scale = 'noistd-min(log(sqrt(w*l*par/noideva)),0)'   $ area scaling
 +  noiamult  = 'exp(dnoi_dgn*noi_scale)'                $ gate bias scaliing
 +  noibmult  = 'exp(dnoi_dgn*noi_scale/1.650)'
 +  noicmult  = 'exp(dnoi_dgn*noi_scale/2.723)'
 *
 * thermal noise scaling equation
 +  tnoitanha = 0.16
 +  tnoitanhb = 2.5e6
 +  tnoitanhc = 2.0e11
 +  ntnoi_dgnfet = '1.05/tanh(tnoitanha + tnoitanhb*l + tnoitanhc*l*l)'
 *
 * multi-finger sti scaling equation
 +  ratio_a = 'min(3.0, max(0.3,(sd+l)/(sa+0.5*l)))'
 +  delta_a = '5e-3*pow(ratio_a,3)'
 +  sec1a   = '1-0.37*log(nf)*sqrt(ratio_a)'
 +  sec2a   = '5.0/(nf+7)/pow(ratio_a,0.4)'
 +  sa_eff1 = '(sa+0.5*l)/(0.5*(sec1a+sec2a+sqrt((sec1a-sec2a)*(sec1a-sec2a)+delta_a)))-0.5*l' 
 +  sa_eff  = '(sa != 0)*sa_eff1'
 +  ratio_b = 'min(3.0, max(0.3,(sd+l)/(sb+0.5*l)))'
 +  delta_b = '5e-3*pow(ratio_b,3)'
 +  sec1b   = '1-0.37*log(nf)*sqrt(ratio_b)'
 +  sec2b   = '5.0/(nf+7)/pow(ratio_b,0.4)'
 +  sb_eff1 = '(sb+0.5*l)/(0.5*(sec1b+sec2b+sqrt((sec1b-sec2b)*(sec1b-sec2b)+delta_b)))-0.5*l' 
 +  sb_eff  = '(sb != 0)*sb_eff1'
 *
 m0 d g s b dgnch w='w/nf' l=l as='as/nf' ad='ad/nf' ps='ps/nf' pd='pd/nf' 
 +                mult=nf sa='isti*sa_eff' sb='isti*sb_eff'
 *
 ***************************************************************************
 * psp fet model
 ***************************************************************************
 .model dgnch nmos
 + level     = 69         version   = 102.3      tr        = 25
 ***************************************************************************
 * switch settings
 ***************************************************************************
 + swgidl    = 1          swigate   = 0          swimpact  = 1
 + swjuncap  = 3
 ***************************************************************************
 * parameters with process variation
 ***************************************************************************
 + lvaro     = '-2*lint_psp_dgnfet'
 + wvaro     = '-2*wint_psp_dgnfet'
 + toxo      = tox_psp_dgn
 + toxovo    = tox_psp_dgn
 + uo        = 'uo_psp_dgn+mmbeta'
 + rsw1      = rsw_psp_dgn
 + nsubo     = nsubo_nwpr
 + vfbo      = 'vfb_psp_dgn+pvt_var'
 + fol1      = fol1_psp_dgn
 + fol2      = fol2_psp_dgn
 + lov       = 'lint_psp_dgn+dl_psp_dgn'
 ***************************************************************************
 * core parameters
 ***************************************************************************
 + a1l       = 10.00e-3   a1o       = 5.669      a1w       = 0
 + a2o       = 18.64      a3l       = -90.97e-3  a3o       = 1.150
 + a3w       = 0          a4l       = 3          a4o       = 0.0015
 + a4w       = 0          alp1l1    = 14.05e-3   alp1l2    = 765.3e-3
 + alp1lexp  = 601.9e-3   alp1w     = 202.4e-3   alp2l1    = 444.1e-18
 + alp2l2    = 816.4e-3   alp2lexp  = 4.968      alp2w     = -91.50e-3
 + alpl      = 18.05e-3   alplexp   = 937.6e-3   alpw      = 203.5e-3
 + axl       = 766.9e-3   axo       = 23.23      betw1     = 258.3e-3
 + betw2     = -70.43e-3  cfbo      = 452.0e-3   cfl       = 1.320e-3
 + cflexp    = 2.040      cfrw      = 0          cfw       = -130.0e-3
 + cgbovl    = 0          csl       = 21.21e-3   cslexp    = 1.432
 + cslw      = -239.8e-3  cso       = 89.55e-3   csw       = 3
 + ctl       = 5.857e-3   ctlexp    = 1.500      ctlw      = 13.73e-3
 + cto       = 58.55e-3   ctw       = 78.96e-3   dlq       = -58.00e-9
 + dnsubo    = -2.658e-3  dphibl    = 51.70e-3   dphiblexp = 1.132
 + dphiblw   = -23.04e-3  dphibo    = 10.00e-3   dphibw    = 80.42e-3
 + dta       = dtemp      dwq       = 0          fbet1     = -4.165
 + fbet1w    = -1.210     fbet2     = 1.470      fetao     = 1.000
 + lap       = -2.500e-9  lp1       = 7.920e-9  lp1w      = -205.3e-3
 + lp2       = 18.84e-9  lpck      = 100e-12     lpckw     = -776.8e-3
 + lvarl     = 0          lvarw     = 0          mueo      = 830.0e-3
 + muew      = 22.75e-3   novo      = 5.350e24   npck      = 1.524e24
 + npckw     = 576.6e-3   npl       = -105.0e-3  npo       = 7.300e25
 + nslpo     = 50.00e-3   nsubw     = -100.0e-3  qmc       = 1
 + rsbo      = 166.6e-3   rsgo      = -154.1e-3  rsw2      = -500.0e-3
 + sta2o     = 0          stbetl    = -15.43e-3  stbetlw   = -14.00e-3
 + stbeto    = 1.330      stbetw    = -62.44e-3  stcso     = -1.681
 + stmueo    = -6.290e-3  strso     = 112.6e-3   stthemuo  = 1.168
 + stthesatl = -70.84e-3  stthesatlw = 8.000e-3  stthesato = 1.363
 + stthesatw = -150.0e-3  stvfbl    = -20.00e-3  stvfblw   = 50.00e-3
 + stvfbo    = 900.0e-6   stvfbw    = -80.00e-3  stxcoro   = 800.0e-3
 + themuo    = 2.075      thesatbo  = 110.0e-3   thesatgo  = 108.0e-3
 + thesatl   = 610.05e-3  thesatlexp = 934.5e-3  thesatlw  = -3.500e-3
 + thesato   = 75.20e-3   thesatw   = 60.00e-3   vfbl      = 43.92e-3
 + vfblw     = vfblw_dgn  vfbw      = -10.40e-3  vnsubo    = 0
 + vpo       = 47.46e-3   wbet      = 2.934e-9   wot       = -5e-10
 + wseg      = 43.18e-9   wsegp     = 791.7e-9   wvarl     = 0       
 + wvarw     = 0          xcorl     = 267.3e-3   xcorlw    = -19.00e-3
 + xcoro     = 36.67e-3   xcorw     = -57.17e-3
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 + gcoo      = 0          iginvlw   = 0          igovw     = 0
 + gc2o      = 0.375      gc3o      = 0.063      chibo     = 3.1
 + stigo     = 2          agidlw    = 5.061      bgidlo    = 20.11
 + cgidlo    = 0          stbgidlo  = 0
 ***************************************************************************
 * sti stress model parameters
 ***************************************************************************
 + saref     = 3e-6       sbref     = 3e-6       wlod      = 0
 + kuo       = -5.2e-8    kvsat     = 0.5        tkuo      = 0
 + lkuo      = 2.5e-7     wkuo      = 0          llodkuo   = 1
 + wlodkuo   = 1          kvtho     = 1e-8       lkvtho    = 1.6e-7
 + wkvtho    = 0          pkvtho    = 0          llodvth   = 1
 + wlodvth   = 0          stetao    = 0          lodetao   = 1
 ***************************************************************************
 * junction diode parameters
 ***************************************************************************
 + trj       = 25
 ***************************************************************************
 *   capacitance parameters
 ***************************************************************************
 + cjorbot   = cj_dgn       cjorsti   = cjsw_dgn     cjorgat   = cjsg_dgn
 + vbirbot   = pb_dgn       vbirsti   = pbsw_dgn     vbirgat   = pbsg_dgn
 + pbot      = mj_dgn       psti      = mjsw_dgn     pgat      = mjsg_dgn
 ***************************************************************************
 *   ideal current parameters
 ***************************************************************************
 + idsatrbot = js_dgn       idsatrsti = jsw_dgn      idsatrgat = jsw_dgn
 + phigbot   = 1.0334       phigsti   = 1.0334       phiggat   = 1.0334
 + csrhbot   = 0            csrhsti   = 0            csrhgat   = 0
 + xjunsti   = 1e-07        xjungat   = 1e-07
 ***************************************************************************
 *   trap-assisted tunneling parameters
 ***************************************************************************
 + ctatbot   = 0          ctatsti   = 0          ctatgat   = 0
 + mefftatbot= 0.25       mefftatsti= 0.25       mefftatgat= 0.25
 ***************************************************************************
 *   band-to-band tunneling parameters
 ***************************************************************************
 + cbbtbot   = 0          cbbtsti   = 0          cbbtgat   = 0
 + fbbtrbot  = 1e9        fbbtrsti  = 1e9        fbbtrgat  = 1e9
 + stfbbtbot = 0          stfbbtsti = 0          stfbbtgat = 0
 ***************************************************************************
 *   avalanche and breakdown parameters
 ***************************************************************************
 + vbrbot    = 1001       vbrsti    = 1001       vbrgat    = 1001
 + pbrbot    = 4          pbrsti    = 4          pbrgat    = 4
 ***************************************************************************
 * noise parameters
 ***************************************************************************
 + nfalw     = '0.935e25*noiamult'
 + nfblw     = '1.00e7*noibmult'
 + nfclw     = '1.81e-9*noicmult'
 + lintnoi   = 4e-8
 + alpnoi    = 1
 + efo       = 0.87
 + fnto      = ntnoi_dgnfet
 ***************************************************************************
 .ends dgnfetpsp
 .include './dgnfet_rf.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/dgnfet_rf.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.4 06/12/11 16:59:58
 *
 *>  ibm cmrf8sf  dgnfet_rf  2.5v dg nfet rf subcircuit
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) dgnfet_rf l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.24u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.15um of nw edge
 *          +    panw2 = 0    <- active area within 0.15um to 0.325um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.2um to 1.7um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 3    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 2    <- extrinsic gate connection switch (1->single-ended,
 *                                                                 2->double-ended)
 *          +     gtab = 1    <- m1 gate ring tabs flag (1->tabs present,
 *                                                       0->tabs absent)
 *          + rbodymod = 1    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +     ring = 2    <- substrate contact type for rf pcell 
 *          +  rf_rsub = 1    <- body resistance multiplier
 *          +    cwire = 1    <- wiring capacitance multiplier
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                                ||   drain
 *                            o---||-----o------------------o
 *                            |   ||     |                  |
 *                            |  cwgd    |                  |
 *                            |          |                 ---
 *                            |          |                 ---cwds
 *                            |          |                  |
 *                            |     | |---                  |
 *       gate                 | g1  | |     (bsim4.4     )  | bulk
 *         o----/\/\/\--------o-----| |-----(internal    )--)--o
 *                rg          |     | |     (rsub network)  |
 *                            |     | |---                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |  cwgs    |                  |
 *                            |   ||     |                  |
 *                            o---||-----o------------------o
 *                                ||   source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2006 ibm corporation
 *
 ***************************************************************************
 *
 .subckt dgnfet_rf d g s b w=1.0u l=0.24u nf=1 par=1 dtemp=0
 +                         as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                         lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                         panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                         panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                         plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                         rgatemod=3 ngcon=2 gtab=1 rbodymod=1 ring=2
 +                         rf_rsub=1 cwire=1
 *
 .param
 +  legacy = '(ring==99)'                        $ switch for legacy pcell
 +  nfo    = '(int((nf+1)/2) - int(nf/2))'       $ switch for odd,even fingers
 *
 * extrinsic gate resistance calculations (function of w, l, and nf)
 +  wum    = '(w/nf)*1e6'
 +  lum    = 'l*1e6'
 *
 +  rlen_a = 'lum*(1 + ((nf - 3)/2)) + diff_thn*1e6*((nf - 1)/2)'
 +  rlen_b = '0.5*lum + (diff_thn*1e6 + lum)*((nf/2) - 1)'
 +  rlen   = 'nfo*rlen_a + (1-nfo)*rlen_b'
 *
 +  ra_term1 = '0.81*legacy + 0.91*(1-legacy)'
 +  ra_len   = '(ra_term1 + 0.5*lum + (nf==2)*0.5*lum + (nf>2)*(rlen/3))/(0.4)'
 +  ra_wid   = '(2.5*wum + 1.65)*legacy + (1.25*wum + 0.875)*(1-legacy)'
 +  ra       = 'm1rsi * (ra_len + ra_wid)'
 +  rb       = 'm1rsi * (4.3*legacy + 3.3*(1-legacy))'
 +  rcont    = 'cars * (1/nf)'
 *
 +  rgate  = '0.5*(rb*gtab + (1/ngcon)*(ra+0.5*rcont))'
 *
 .param
 * substrate resistance calculations (function of w, l, and nf)
 +  rhorz  = 'max(10,((1.98e8*l + 3.59)*(4.86e-4/w + 26)/50))'
 +  rvert  = 'max(10,((6.2e-5/l + 163)*(8e-3/w + 46)/443))'
 *
 * gate capacitance calculation (function of w, l, and nf)
 +  cgate = '(1.2345e6*l + 7.23e4*w + 0.6)*1e-15'
 *
 * drain-source capacitance calculation (function of w, l, and nf)
 +  cdsw  = '7.376e4*w + 0.123'
 +  cdsl  = '(1.797e-7/l + 0.821)*1e-15/1.5'
 *
 x1 d g1 s b dgnfet w=w l=l nf=nf par=par dtemp=dtemp
 +                  as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                  lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                  panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                  panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                  panw9=panw9 panw10=panw10
 +                  plnest=plnest plorient=plorient
 +                  pld200=pld200 pwd100=pwd100
 +                  rgatemod=rgatemod ngcon=2
 +                  rbodymod=rbodymod rf_rsub=rf_rsub
 +                  rbps=rhorz rbpd=rhorz
 +                  rbsb=rvert rbpb=rvert rbdb=rvert
 *
 rg     g   g1  r=rgate
 cwgd   g1  d   c='1e-18 + cgate*cwire'
 cwgs   g1  s   c='1e-18 + cgate*cwire'
 cwds   d   s   c='1e-18 + (cdsw*cdsl)*cwire'
 *
 .ends dgnfet_rf
 .include './dgnfet_rf_psp.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/dgnfet_rf_psp.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.1 10/10/12 14:44:54
 *
 *>  ibm cmrf8sf  dgnfetpsp_rf  2.5v dg nfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) dgnfetpsp_rf l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.24u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          +    ngcon = 2    <- extrinsic gate connection switch (1->single-ended,
 *                                                                 2->double-ended)
 *          +     gtab = 1    <- m1 gate ring tabs flag (1->tabs present,
 *                                                       0->tabs absent)
 *          +     ring = 2    <- substrate contact type for rf pcell 
 *          +    cwire = 1    <- wiring capacitance multiplier
 *
 * subcircuit schematic:
 *
 *                                ||   drain
 *                            o---||-----o------------------o
 *                            |   ||     |                  |
 *                            |  cwgd    |                  |
 *                            |          |                  |
 *                            |          |                 ---
 *                            |          |                 ---cwds
 *                            |          |                  |
 *                            |     | |---                  |
 *       gate                 | g1  | |     (psp         )  | bulk
 *         o----/\/\/\--------o-----| |-----(internal    )--)--o
 *                rg          |     | |     (rsub network)  |
 *                            |     | |---                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |  cwgs    |                  |
 *                            |   ||     |                  |
 *                            o---||-----o------------------o
 *                                ||   source
 *
 *
 *         note: the ldd resistance is accounted for within the psp model.
 *
 * ibm confidential
 * (c) 2010 ibm corporation
 *
 ***************************************************************************
 .subckt dgnfetpsp_rf d g s b
 +                      w=1.0u l=0.24u nf=1 par=1 dtemp=0
 +                      as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                      lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                      panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                      panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                      plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                      ngcon=2 gtab=1 ring=2 cwire=1
 +                      rgatemod=3 rbodymod=1 rf_rsub=1   $ unused parameters
 .param
 *
 * if monte carlo and "pl*" instance parameter = zero, use values from skew/process file
 +   a_plnest     = limit(-0.5,0.5)
 +   sel_plnest   = '((plnest == 1) || ((a_plnest*plnest) == 1))'
 +   a_plorient   = limit(-0.5,0.5)
 +   sel_plorient = '((plorient == 1) || ((a_plorient*plorient) == 1))' 
 +   a_pld200     = limit(-0.5,0.5)
 +   sel_pld200   = '((pld200 == 1) || ((a_pld200*pld200) == 1))' 
 +   a_pwd100     = limit(-0.5,0.5)
 +   sel_pwd100   = '((pwd100 == 1) || ((a_pwd100*pwd100) == 1))'
 *
 * calculate aclv/acwv and final lint/wint params
 +   aclv_ni_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_nest == 2))/aclv_dgfactor + cnr_dgn*(1-mc_fet_mm_f)*(pc_nest != 2))'
 +   aclv_or_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_orient == 2))/aclv_dgfactor + cnr_dgn*(1-mc_fet_mm_f)*(pc_orient != 2))'
 +   aclv_dist_sws = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_dist == 2))/aclv_dgfactor + cnr_dgn*(1-mc_fet_mm_f)*(pc_dist != 2))'
 +   aclv_ni       = '((dgfet_aclv_nest*sel_plnest) + (dgfet_aclv_iso*(1-sel_plnest)))*aclv_ni_sws'
 +   aclv_or       = '((dgfet_aclv_v*sel_plorient) + (dgfet_aclv_h*(1-sel_plorient)))*aclv_or_sws'
 +   aclv_dist     = '((dgfet_aclv_out*sel_pld200) + (dgfet_aclv_in*(1-sel_pld200)))*aclv_dist_sws'
 +   aclv_ran      = agauss(cnr_dgn,mc_sw,3)
 *
 +   acwv_dist_sws = '(-mc_sw + ((mc_fet_mm_f != 1) && (rx_dist == 2))/acwv_dgfactor + cnr_dgn*(1-mc_fet_mm_f)*(rx_dist != 2))'
 +   acwv_dist     = '((dgfet_acwv_out*sel_pwd100) + (dgfet_acwv_in*(1-sel_pwd100)))*acwv_dist_sws'
 +   acwv_ran      = agauss('-cnr_dgn',mc_sw,3)
 *
 .param
 +   xc_lint_1 = '(aclv_ni*aclv_dgfet_ni + aclv_or*aclv_dgfet_or)'
 +   xc_lint_2 = '((aclv_dist*aclv_dgfet_dist) + (aclv_ran + (mc_global == 2))*aclv_dgfet_ran)'
 +   xx_lint_3 = '(mc_fet_mm_f + (aclv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_lint_4 = '((mc_global == 2)*(-xlint_dgn) + (mc_global != 2))'
 +   xc_lint_t = '((xc_lint_1 + xc_lint_2)*xx_lint_3)*xx_lint_4'
 *
 +   xc_wint_1 = '((acwv_dist*acwv_dgfet_dist) + (acwv_ran + (mc_global == 2))*acwv_dgfet_ran)'
 +   xx_wint_2 = '(mc_fet_mm_f + (acwv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_wint_3 = '((mc_global == 2)*(xwint_dgn) + (mc_global != 2))'
 +   xc_wint_t = '((xc_wint_1)*xx_wint_2)*xx_wint_3'
 *
 *     final =  nominal      +      acv * dist(-1,1)      +        global * dist(-1,1)
 + lint_psp_dgnfet = 'lint_psp_dgn + 1.5*total_aclv_dgfet*xc_lint_t*fet_geo_mm + ltol_dgn*xlint_dgn'
 + wint_psp_dgnfet = 'wint_psp_dgn + 1.5*total_acwv_dgfet*xc_wint_t*fet_geo_mm + wtol_dgn*xwint_dgn'
 *
 .param
 * switch to turn on or off the sti stress effects
 +  isti = '((gstis==1)&&(lstis==1))||(gstis==2)'
 *
 * switch to turn on or off the nwell proximity effects
 +  inw  = '((gwells==1)&&(lnws==1))||(gwells==2)'
 *
 * nwell proximity effect calculations
 +  proxpre  =  0.07e-06             $ [v-m]
 +  proxlen  = -0.35e-06             $ [m]
 +  proxk1   =  0.375                $ [unitless]
 +  rxwparm1 = -0.28                 $ [unitless]
 +  rxwparm2 =  0.56e-06             $ [unitless]
 +  rxwparm3 =  0.0e-6               $ [m]
 +  nw1b1   = 'panw1 /(band1 -proxlen)'
 +  nw2b2   = 'panw2 /(band2 -proxlen)'
 +  nw3b3   = 'panw3 /(band3 -proxlen)'
 +  nw4b4   = 'panw4 /(band4 -proxlen)'
 +  nw5b5   = 'panw5 /(band5 -proxlen)'
 +  nw6b6   = 'panw6 /(band6 -proxlen)'
 +  nw7b7   = 'panw7 /(band7 -proxlen)'
 +  nw8b8   = 'panw8 /(band8 -proxlen)'
 +  nw9b9   = 'panw9 /(band9 -proxlen)'
 +  nw10b10 = 'panw10/(band10-proxlen)'
 +  prox_term = 'inw*(proxpre/(l*w))*(nw1b1+nw2b2+nw3b3+nw4b4+nw5b5+nw6b6+nw7b7+nw8b8+nw9b9+nw10b10)'
 +  nsubo_base = 1.554e23
 +  nsubo_nwpr = 'nsubo_base*(1+1.5*proxk1*prox_term)'
 *
 * mis-match calculations: include multiplicity (par)
 .param
 +  kvt  =  1.05e-8
 +  kvtl =  1.3e-7
 +  kvtw =  1.4e-7
 +  kmb  =  1.0e-9
 +  kmbl =  -5.0e-7
 +  kmbw =  0.0
 +  sigvth  = 'kvt/sqrt((w-kvtw)*par*(l-kvtl))'
 +  sigbeta = 'kmb/sqrt((w-kmbw)*par*(l-kmbl))'
 *
 +  dvth0 = agauss(0,1,3)               $ local mis-match distributions
 +  dbeta = agauss(0,1,3)
 *                                      $ select local vs global vs corner
 +  d_vth0 = 'dvth0*(mc_global != 2) + xdgnvth0*(mc_global == 2) - cnr_dgn'
 +  d_beta = 'dbeta*(mc_global != 2) + ddgnu0*(mc_global == 2) - cnr_dgn'
 *
 +  mmvth0 = 'sigvth * d_vth0 * fet_dop_mm'    $ vth0 mis-match
 +  mmbeta = 'sigbeta * d_beta * fet_dop_mm'   $ beta mis-match
 *
 +  pvt_var = 'mmvth0 + 0.9*prox_term'        $ local vth0 variation
 *
 .param
 * flicker noise calculations: statistics are function of w and l and par
 +  noideva = '10u * 0.24u * 10'        $ device area for extracted variation
 +  noistd  = 1.0173                    $ worst case variation value
 *
 +  noi_scale = 'noistd-min(log(sqrt(w*l*par/noideva)),0)'   $ area scaling
 +  noiamult  = 'exp(dnoi_dgn*noi_scale)'                $ gate bias scaliing
 +  noibmult  = 'exp(dnoi_dgn*noi_scale/1.650)'
 +  noicmult  = 'exp(dnoi_dgn*noi_scale/2.723)'
 *
 * thermal noise scaling equation
 +  tnoitanha = 0.16
 +  tnoitanhb = 3.7e6
 +  tnoitanhc = 2.0e11
 +  ntnoi_dgnfet = '1.1/tanh(tnoitanha + tnoitanhb*l + tnoitanhc*l*l)'
 *
 * multi-finger sti scaling equation
 +  ratio_a = 'min(3.0, max(0.3,(sd+l)/(sa+0.5*l)))'
 +  delta_a = '5e-3*pow(ratio_a,3)'
 +  sec1a   = '1-0.37*log(nf)*sqrt(ratio_a)'
 +  sec2a   = '5.0/(nf+7)/pow(ratio_a,0.4)'
 +  sa_eff1 = '(sa+0.5*l)/(0.5*(sec1a+sec2a+sqrt((sec1a-sec2a)*(sec1a-sec2a)+delta_a)))-0.5*l' 
 +  sa_eff  = '(sa != 0)*sa_eff1'
 +  ratio_b = 'min(3.0, max(0.3,(sd+l)/(sb+0.5*l)))'
 +  delta_b = '5e-3*pow(ratio_b,3)'
 +  sec1b   = '1-0.37*log(nf)*sqrt(ratio_b)'
 +  sec2b   = '5.0/(nf+7)/pow(ratio_b,0.4)'
 +  sb_eff1 = '(sb+0.5*l)/(0.5*(sec1b+sec2b+sqrt((sec1b-sec2b)*(sec1b-sec2b)+delta_b)))-0.5*l' 
 +  sb_eff  = '(sb != 0)*sb_eff1'
 *
 +  legacy = '(ring==99)'                        $ switch for legacy pcell
 +  nfo    = '(int((nf+1)/2) - int(nf/2))'       $ switch for odd,even fingers
 *
 * extrinsic gate resistance calculations (function of w, l, and nf)
 +  wum    = '(w/nf)*1e6'
 +  lum    = 'l*1e6'
 *
 +  rlen_a = 'lum*(1 + ((nf - 3)/2)) + diff_thn*1e6*((nf - 1)/2)'
 +  rlen_b = '0.5*lum + (diff_thn*1e6 + lum)*((nf/2) - 1)'
 +  rlen   = 'nfo*rlen_a + (1-nfo)*rlen_b'
 *
 +  ra_term1 = '0.81*legacy + 0.91*(1-legacy)'
 +  ra_len   = '(ra_term1 + 0.5*lum + (nf==2)*0.5*lum + (nf>2)*(rlen/3))/(0.4)'
 +  ra_wid   = '(2.5*wum + 1.65)*legacy + (1.25*wum + 0.875)*(1-legacy)'
 +  ra       = 'm1rsi * (ra_len + ra_wid)'
 +  rb       = 'm1rsi * (4.3*legacy + 3.3*(1-legacy))'
 +  rcont    = 'cars * (1/nf)'
 *
 +  rgate  = '0.5*(rb*gtab + (1/ngcon)*(ra+0.5*rcont))'
 *
 +  rgintl = '20*log(l)+405.06'
 +  rgintw = '135.42*exp(-150592*w/nf)/100.2'
 +  rgint  = 'pcrsi*(0.35e-6+(w/nf)/(3*ngcon))/ngcon/l + rgintl*rgintw' 
 *
 * substrate resistance calculations (function of w, l, and nf)
 +  rbulk = '27073*exp(-99767*w/nf)*16524*(l)**(-0.0194)/22176'
 +  rw = '300*((nf-1)*0.36e-6+nf*l+3.3e-6)/(w/nf+2.2e-6)'
 +  rl = '50*(w/nf+2.2e-6)/(l+0.01e-6)'
 +  rwell = '6*rw*rl/(rw+rl)'
 +  rjuns = '600*(l+0.5e-6)/(w/nf+1.0e-6)'
 +  rjund = rjuns
 *
 * gate capacitance calculation (function of w, l, and nf)
 +  cgate = '(4.845e4*l + 6.345e4*w + 0.09)*1e-15'
 *
 * drain-source capacitance calculation (function of w, l, and nf)
 +  cds  = '0.6*(1e5*w + 0.123) * (1.797e-7/l + 0.821)*0.67e-15'
 *
 m0 d g1 s b dgnch w='w/nf' l=l as='as/nf' ad='ad/nf' ps='ps/nf' pd='pd/nf' 
 +                 mult=nf sa='isti*sa_eff' sb='isti*sb_eff'
 *
 rg     g   g1  r=rgate
 cwgd   g1  d   c='1e-18 + cgate*cwire'
 cwgs   g1  s   c='1e-18 + cgate*cwire'
 cwds   d   s   c='1e-18 + cds*cwire'
 *
 ***************************************************************************
 * psp fet model
 ***************************************************************************
 .model dgnch nmos    
 ***************************************************************************
 * rf/nqs parameters
 ***************************************************************************
 + swnqs	    = 1		 munqso	   = 1      	rgo	  = rgint	
 + rbulko    = rbulk	 rwello	   = rwell	rjunso	  = rjuns	
 + rjundo    = rjund	
 ***************************************************************************
 * dc parameters
 ***************************************************************************
 + level     = 69         version   = 102.3      tr        = 25
 ***************************************************************************
 * switch settings
 ***************************************************************************
 + swgidl    = 1          swigate   = 0          swimpact  = 1
 + swjuncap  = 3
 ***************************************************************************
 * parameters with process variation
 ***************************************************************************
 + lvaro     = '-2*lint_psp_dgnfet'
 + wvaro     = '-2*wint_psp_dgnfet'
 + toxo      = tox_psp_dgn
 + toxovo    = tox_psp_dgn
 + uo        = 'uo_psp_dgn+mmbeta'
 + rsw1      = rsw_psp_dgn
 + nsubo     = nsubo_nwpr
 + vfbo      = 'vfb_psp_dgn+pvt_var'
 + fol1      = fol1_psp_dgn
 + fol2      = fol2_psp_dgn
 + lov       = 'lint_psp_dgn+dl_psp_dgn'
 ***************************************************************************
 * core parameters
 ***************************************************************************
 + a1l       = 10.00e-3   a1o       = 5.669      a1w       = 0
 + a2o       = 18.64      a3l       = -90.97e-3  a3o       = 1.150
 + a3w       = 0          a4l       = 3          a4o       = 0.0015
 + a4w       = 0          alp1l1    = 14.05e-3   alp1l2    = 765.3e-3
 + alp1lexp  = 601.9e-3   alp1w     = 202.4e-3   alp2l1    = 444.1e-18
 + alp2l2    = 816.4e-3   alp2lexp  = 4.968      alp2w     = -91.50e-3
 + alpl      = 18.05e-3   alplexp   = 937.6e-3   alpw      = 203.5e-3
 + axl       = 766.9e-3   axo       = 23.23      betw1     = 258.3e-3
 + betw2     = -70.43e-3  cfbo      = 452.0e-3   cfl       = 1.320e-3
 + cflexp    = 2.040      cfrw      = 0          cfw       = -130.0e-3
 + cgbovl    = 0          csl       = 21.21e-3   cslexp    = 1.432
 + cslw      = -239.8e-3  cso       = 89.55e-3   csw       = 3
 + ctl       = 5.857e-3   ctlexp    = 1.500      ctlw      = 13.73e-3
 + cto       = 58.55e-3   ctw       = 78.96e-3   dlq       = -58.00e-9
 + dnsubo    = -2.658e-3  dphibl    = 51.70e-3   dphiblexp = 1.132
 + dphiblw   = -23.04e-3  dphibo    = 10.00e-3   dphibw    = 80.42e-3
 + dta       = dtemp      dwq       = 0          fbet1     = -4.165
 + fbet1w    = -1.210     fbet2     = 1.470      fetao     = 1.000
 + lap       = -2.500e-9  lp1       = 7.920e-9  lp1w      = -205.3e-3
 + lp2       = 18.84e-9  lpck      = 100e-12     lpckw     = -776.8e-3
 + lvarl     = 0          lvarw     = 0          mueo      = 830.0e-3
 + muew      = 22.75e-3   novo      = 5.350e24   npck      = 1.524e24
 + npckw     = 576.6e-3   npl       = -105.0e-3  npo       = 7.300e25
 + nslpo     = 50.00e-3   nsubw     = -100.0e-3  qmc       = 1
 + rsbo      = 166.6e-3   rsgo      = -154.1e-3  rsw2      = -500.0e-3
 + sta2o     = 0          stbetl    = -15.43e-3  stbetlw   = -14.00e-3
 + stbeto    = 1.330      stbetw    = -62.44e-3  stcso     = -1.681
 + stmueo    = -6.290e-3  strso     = 112.6e-3   stthemuo  = 1.168
 + stthesatl = -70.84e-3  stthesatlw = 8.000e-3  stthesato = 1.363
 + stthesatw = -150.0e-3  stvfbl    = -20.00e-3  stvfblw   = 50.00e-3
 + stvfbo    = 900.0e-6   stvfbw    = -80.00e-3  stxcoro   = 800.0e-3
 + themuo    = 2.075      thesatbo  = 110.0e-3   thesatgo  = 108.0e-3
 + thesatl   = 610.05e-3  thesatlexp = 934.5e-3  thesatlw  = -3.500e-3
 + thesato   = 75.20e-3   thesatw   = 60.00e-3   vfbl      = 43.92e-3
 + vfblw     = vfblw_dgn  vfbw      = -10.40e-3  vnsubo    = 0
 + vpo       = 47.46e-3   wbet      = 2.934e-9   wot       = -5e-10
 + wseg      = 43.18e-9   wsegp     = 791.7e-9   wvarl     = 0       
 + wvarw     = 0          xcorl     = 267.3e-3   xcorlw    = -19.00e-3
 + xcoro     = 36.67e-3   xcorw     = -57.17e-3
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 + gcoo      = 0          iginvlw   = 0          igovw     = 0
 + gc2o      = 0.375      gc3o      = 0.063      chibo     = 3.1
 + stigo     = 2          agidlw    = 5.061      bgidlo    = 20.11
 + cgidlo    = 0          stbgidlo  = 0
 ***************************************************************************
 * sti stress model parameters
 ***************************************************************************
 + saref     = 3e-6       sbref     = 3e-6       wlod      = 0
 + kuo       = -5.2e-8    kvsat     = 0.5        tkuo      = 0
 + lkuo      = 2.5e-7     wkuo      = 0          llodkuo   = 1
 + wlodkuo   = 1          kvtho     = 1e-8       lkvtho    = 1.6e-7
 + wkvtho    = 0          pkvtho    = 0          llodvth   = 1
 + wlodvth   = 0          stetao    = 0          lodetao   = 1
 ***************************************************************************
 * junction diode parameters
 ***************************************************************************
 + trj       = 25
 ***************************************************************************
 *   capacitance parameters
 ***************************************************************************
 + cjorbot   = cj_dgn       cjorsti   = cjsw_dgn     cjorgat   = cjsg_dgn
 + vbirbot   = pb_dgn       vbirsti   = pbsw_dgn     vbirgat   = pbsg_dgn
 + pbot      = mj_dgn       psti      = mjsw_dgn     pgat      = mjsg_dgn
 ***************************************************************************
 *   ideal current parameters
 ***************************************************************************
 + idsatrbot = js_dgn       idsatrsti = jsw_dgn      idsatrgat = jsw_dgn
 + phigbot   = 1.0334       phigsti   = 1.0334       phiggat   = 1.0334
 + csrhbot   = 0            csrhsti   = 0            csrhgat   = 0
 + xjunsti   = 1e-07        xjungat   = 1e-07
 ***************************************************************************
 *   trap-assisted tunneling parameters
 ***************************************************************************
 + ctatbot   = 0          ctatsti   = 0          ctatgat   = 0
 + mefftatbot= 0.25       mefftatsti= 0.25       mefftatgat= 0.25
 ***************************************************************************
 *   band-to-band tunneling parameters
 ***************************************************************************
 + cbbtbot   = 0          cbbtsti   = 0          cbbtgat   = 0
 + fbbtrbot  = 1e9        fbbtrsti  = 1e9        fbbtrgat  = 1e9
 + stfbbtbot = 0          stfbbtsti = 0          stfbbtgat = 0
 ***************************************************************************
 *   avalanche and breakdown parameters
 ***************************************************************************
 + vbrbot    = 1001       vbrsti    = 1001       vbrgat    = 1001
 + pbrbot    = 4          pbrsti    = 4          pbrgat    = 4
 ***************************************************************************
 * noise parameters
 ***************************************************************************
 + nfalw     = '0.935e25*noiamult'
 + nfblw     = '1.00e7*noibmult'
 + nfclw     = '1.81e-9*noicmult'
 + lintnoi   = 4e-8
 + alpnoi    = 1
 + efo       = 0.87
 + fnto      = ntnoi_dgnfet
 ***************************************************************************
 .ends dgnfetpsp_rf
 .include './dgnfettw.inc'
 * path, component, release: cmos8base/rel/hspice/models/dgnfettw.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.5 08/03/17 07:41:52
 *
 *>  ibm cmrf8sf/bicmos8wl  dgnfettw  2.5v triple well nfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b tw sx ) dgnfettw l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.24u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 0    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 1    <- gate connection switch (1->single-ended,
 *                                                       2->double-ended)
 *          + rbodymod = 0    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +  rf_rsub = 1    <- body resistance multiplier
 *
 *          +   t3well = 0    <- well isolation flag
 *                                  (0-> pi isolation, default
 *                                   1-> t3 isolation, true triple well)
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---         d1           d2
 *            gate     | |   bulk   |\     tw    /|
 *              o------| |-----o----| >|---o---|< |----o sx
 *                     | |          |/           \|
 *                     | |---
 *                          |     area and perimeter for both pi diodes
 *                          |     are calculated based on inside n-well
 *                          o     edge of the isolation ring.
 *                        source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2008 ibm corporation
 *
 ***************************************************************************
 *
 .subckt dgnfettw d g s b tw sx w=1.0u l=0.24u nf=1 par=1 dtemp=0
 +                              as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                              lstis=1 sa=0 sb=0 sd=0 lnws=0 t3well=0
 +                              panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                              panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                              plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                              rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1
 .param
 *
 * pc to pc spacing based on gr207,207b,207c
 +  pc2pc = '(0.36 + 0.04*(l > 0.125e-06) + 0.04*(l > 0.175e-06))*1.0e-06'
 +  pc2rx = 0.60e-06                          $ pc to outside rx distance
 +  iwlength  = '(nf*l+(nf-1)*pc2pc+2*pc2rx+2.34u)'
 +  iwwidth = 'w/nf+2.34u'
 +  iwarea  = 'iwlength*iwwidth'
 +  iwperim = '2 * (iwlength+iwwidth)'
 +  owarea  = '(iwlength+3u) * (iwwidth+3u)'
 +  owperim = '2 * (iwlength+iwwidth+6u)'
 *
 x1 d g s b dgnfet w=w l=l nf=nf par=par dtemp=dtemp
 +                 as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                 lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                 panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                 panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                 panw9=panw9 panw10=panw10 plnest=plnest
 +                 plorient=plorient pld200=pld200 pwd100=pwd100
 +                 rgatemod=rgatemod ngcon=ngcon rbodymod=rbodymod
 +                 rf_rsub=rf_rsub
 *
 x2   b  tw diodepwpi area=iwarea perim=iwperim dtemp=dtemp t3well=t3well
 x3   sx tw diodepisx area=owarea perim=owperim dtemp=dtemp t3well=t3well
 x4   sx tw diodenwx  area=0      perim=owperim dtemp=dtemp t3well=t3well
 *
 .ends dgnfettw
 .include './dgnfettw_psp.inc'
 * path, component, release: cmos8base/rel/hspice/models/dgnfettw_psp.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.1 10/10/12 12:17:08
 *
 *>  ibm cmrf8sf/bicmos8wl  dgnfettwpsp  2.5v triple well nfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b tw sx ) dgnfettwpsp l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.24u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *
 *          +   t3well = 0    <- well isolation flag
 *                                  (0-> pi isolation, default
 *                                   1-> t3 isolation, true triple well)
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---         d1           d2
 *            gate     | |   bulk   |\     tw    /|
 *              o------| |-----o----| >|---o---|< |----o sx
 *                     | |          |/           \|
 *                     | |---
 *                          |     area and perimeter for both pi diodes
 *                          |     are calculated based on inside n-well
 *                          o     edge of the isolation ring.
 *                        source
 *
 *         note: the ldd resistance is accounted for within the psp model.
 *
 * ibm confidential
 * (c) 2010 ibm corporation
 *
 ***************************************************************************
 .subckt dgnfettwpsp  d g s b tw sx
 +                            w=1.0u l=0.24u nf=1 par=1 dtemp=0
 +                            as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                            lstis=1 sa=0 sb=0 sd=0 lnws=0 t3well=0
 +                            panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                            panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                            plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                            rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1      $ unused parameters
 .param
 *
 * pc to pc spacing based on gr207,207b,207c
 +  pc2pc = '(0.36 + 0.04*(l > 0.125e-06) + 0.04*(l > 0.175e-06))*1.0e-06'
 +  pc2rx = 0.60e-06                        $ pc to outside rx distance
 +  iwlength  = '(nf*l+(nf-1)*pc2pc+2*pc2rx+2.34u)'
 +  iwwidth = 'w/nf+2.34u'
 +  iwarea  = 'iwlength*iwwidth'
 +  iwperim = '2 * (iwlength+iwwidth)'
 +  owarea  = '(iwlength+3u) * (iwwidth+3u)'
 +  owperim = '2 * (iwlength+iwwidth+6u)'
 *
 x1 d g s b dgnfetpsp w=w l=l nf=nf par=par dtemp=dtemp
 +                    as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                    lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                    panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                    panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                    panw9=panw9 panw10=panw10 plnest=plnest
 +                    plorient=plorient pld200=pld200 pwd100=pwd100
 +                    rgatemod=rgatemod ngcon=ngcon rbodymod=rbodymod
 +                    rf_rsub=rf_rsub
 *
 x2   b  tw diodepwpi area=iwarea perim=iwperim dtemp=dtemp t3well=t3well
 x3   sx tw diodepisx area=owarea perim=owperim dtemp=dtemp t3well=t3well
 x4   sx tw diodenwx  area=1e-15  perim=owperim dtemp=dtemp t3well=t3well
 *
 .ends dgnfettwpsp
 .include './dgnfettw_rf.inc'
 * path, component, release: cmos8base/rel/hspice/models/dgnfettw_rf.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.5 08/03/17 07:41:51
 *
 *>  ibm cmrf8sf  dgnfettw_rf  2.5v triple well nfet rf subcircuit
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b tw sx ) dgnfettw_rf l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.24u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 3    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 2    <- extrinsic gate connection switch (1->single-ended,
 *                                                                 2->double-ended)
 *          +     gtab = 1    <- m1 gate ring tabs flag (1->tabs present,
 *                                                       0->tabs absent)
 *          + rbodymod = 1    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +     ring = 2    <- substrate contact type for rf pcell 
 *          +  rf_rsub = 1    <- body resistance multiplier
 *          +    cwire = 1    <- wiring capacitance multiplier
 *
 *          +   t3well = 0    <- well isolation flag
 *                                  (0-> pi isolation, default
 *                                   1-> t3 isolation, true triple well)
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---         d1           d2
 *            gate     | |   bulk   |\     tw    /|
 *              o------| |-----o----| >|---o---|< |----o sx
 *                     | |          |/           \|
 *                     | |---
 *                          |     area and perimeter for both pi diodes
 *                          |     are calculated based on inside n-well
 *                          o     edge of the isolation ring.
 *                        source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2008 ibm corporation
 *
 ***************************************************************************
 *
 .subckt dgnfettw_rf d g s b tw sx w=1.0u l=0.24u nf=1 par=1 dtemp=0
 +                                 as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                                 lstis=1 sa=0 sb=0 sd=0 lnws=0 t3well=0
 +                                 panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                                 panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                                 plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                                 rgatemod=3 ngcon=2 gtab=1 rbodymod=1 ring=2
 +                                 rf_rsub=1 cwire=1
 .param
 *
 * pc to pc spacing based on gr207,207b,207c
 +  pc2pc = '(0.36 + 0.04*(l > 0.125e-06) + 0.04*(l > 0.175e-06))*1.0e-06'
 +  pc2rx = 0.60e-06                          $ pc to outside rx distance
 +  iwlength  = '(nf*l+(nf-1)*pc2pc+2*pc2rx+2.9u)'
 +  iwwidth = 'w/nf+2.74u'
 +  iwarea  = 'iwlength*iwwidth'
 +  iwperim = '2 * (iwlength+iwwidth)'
 +  owarea  = '(iwlength+3u) * (iwwidth+3u)'
 +  owperim = '2 * (iwlength+iwwidth+6u)'
 *
 x1 d g s b dgnfet_rf w=w l=l nf=nf par=par dtemp=dtemp
 +                    as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                    lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                    panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                    panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                    panw9=panw9 panw10=panw10 plnest=plnest
 +                    plorient=plorient pld200=pld200 pwd100=pwd100
 +                    rgatemod=rgatemod ngcon=ngcon gtab=gtab
 +                    rbodymod=rbodymod ring=ring
 +                    rf_rsub=rf_rsub cwire=cwire
 *
 x2   b  tw diodepwpi area=iwarea perim=iwperim dtemp=dtemp t3well=t3well
 x3   sx tw diodepisx area=owarea perim=owperim dtemp=dtemp t3well=t3well
 x4   sx tw diodenwx  area=0      perim=owperim dtemp=dtemp t3well=t3well
 *
 .ends dgnfettw_rf
 .include './dgnfettw_rf_psp.inc'
 * path, component, release: cmos8base/rel/hspice/models/dgnfettw_rf_psp.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.1 10/10/12 12:17:15
 *
 *>  ibm cmrf8sf/bicmos8wl  dgnfettwpsp_rf  2.5v triple well nfet rf subcircuit
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b tw sx ) dgnfettwpsp_rf l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.24u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          +    ngcon = 2    <- extrinsic gate connection switch (1->single-ended,
 *                                                                 2->double-ended)
 *          +     gtab = 1    <- m1 gate ring tabs flag (1->tabs present,
 *                                                       0->tabs absent)
 *          +     ring = 2    <- substrate contact type for rf pcell 
 *          +    cwire = 1    <- wiring capacitance multiplier
 *
 *          +   t3well = 0    <- well isolation flag
 *                                  (0-> pi isolation, default
 *                                   1-> t3 isolation, true triple well)
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---         d1           d2
 *            gate     | |   bulk   |\     tw    /|
 *              o------| |-----o----| >|---o---|< |----o sx
 *                     | |          |/           \|
 *                     | |---
 *                          |     area and perimeter for both pi diodes
 *                          |     are calculated based on inside n-well
 *                          o     edge of the isolation ring.
 *                        source
 *
 *         note: the ldd resistance is accounted for within the psp model.
 *
 * ibm confidential
 * (c) 2010 ibm corporation
 *
 ***************************************************************************
 .subckt dgnfettwpsp_rf d g s b tw sx
 +                                 w=1.0u l=0.24u nf=1 par=1 dtemp=0
 +                                 as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                                 lstis=1 sa=0 sb=0 sd=0 lnws=0 t3well=0
 +                                 panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                                 panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                                 plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                                 ngcon=2 gtab=1 ring=2 cwire=1
 +                                 rgatemod=3 rbodymod=1 rf_rsub=1   $ unused parameters
 .param
 *
 * pc to pc spacing based on gr207,207b,207c
 +  pc2pc = '(0.36 + 0.04*(l > 0.125e-06) + 0.04*(l > 0.175e-06))*1.0e-06'
 +  pc2rx = 0.60e-06                         $ pc to outside rx distance
 +  iwlength  = '(nf*l+(nf-1)*pc2pc+2*pc2rx+2.9u)'
 +  iwwidth = 'w/nf+2.74u'
 +  iwarea  = 'iwlength*iwwidth'
 +  iwperim = '2 * (iwlength+iwwidth)'
 +  owarea  = '(iwlength+3u) * (iwwidth+3u)'
 +  owperim = '2 * (iwlength+iwwidth+6u)'
 *
 x1 d g s b dgnfetpsp_rf w=w l=l nf=nf par=par dtemp=dtemp
 +                       as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                       lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                       panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                       panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                       panw9=panw9 panw10=panw10 plnest=plnest
 +                       plorient=plorient pld200=pld200 pwd100=pwd100
 +                       rgatemod=rgatemod ngcon=ngcon gtab=gtab
 +                       rbodymod=rbodymod ring=ring
 +                       rf_rsub=rf_rsub cwire=cwire
 *
 x2   b  tw diodepwpi area=iwarea perim=iwperim dtemp=dtemp t3well=t3well
 x3   sx tw diodepisx area=owarea perim=owperim dtemp=dtemp t3well=t3well
 x4   sx tw diodenwx  area=1e-15  perim=owperim dtemp=dtemp t3well=t3well
 *
 .ends dgnfettwpsp_rf
 .include './dgpfet.inc'
 * path, component, release: cmos8base/rel/hspice/models/dgpfet.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.7 08/08/28 20:56:54
 *
 *>  ibm cmrf8sf/bicmos8wl  dgpfet  2.5v dg pfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) dgpfet l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.24u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 0    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 1    <- gate connection switch (1->single-ended,
 *                                                       2->double-ended)
 *          + rbodymod = 0    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +  rf_rsub = 1    <- body resistance multiplier
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---
 *            gate     | |     (bsim4.4     )    bulk
 *              o------| |-----(internal    )-----o
 *                     | |     (rsub network)
 *                     | |---
 *                          |
 *                          |
 *                          |
 *                          o
 *                        source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2008 ibm corporation
 *
 ***************************************************************************
 *
 .subckt dgpfet d g s b w=1.0u l=0.24u nf=1 par=1 dtemp=0
 +                      as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                      lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                      panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                      panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                      plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                      rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1
 +                      rbps=100 rbpd=100 rbsb=1e9 rbpb=50 rbdb=1e9
 .param
 *
 * if monte carlo and "pl*" instance parameter = zero, use values from skew/process file
 +   a_plnest     = limit(-0.5,0.5)
 +   sel_plnest   = '((plnest == 1) || ((a_plnest*plnest) == 1))'
 +   a_plorient   = limit(-0.5,0.5)
 +   sel_plorient = '((plorient == 1) || ((a_plorient*plorient) == 1))'
 +   a_pld200     = limit(-0.5,0.5)
 +   sel_pld200   = '((pld200 == 1) || ((a_pld200*pld200) == 1))'
 +   a_pwd100     = limit(-0.5,0.5)
 +   sel_pwd100   = '((pwd100 == 1) || ((a_pwd100*pwd100) == 1))'
 *
 * calculate aclv/acwv and final lint/wint params
 +   aclv_ni_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_nest == 2))/aclv_dgfactor + cnr_dgp*(1-mc_fet_mm_f)*(pc_nest != 2))'
 +   aclv_or_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_orient == 2))/aclv_dgfactor + cnr_dgp*(1-mc_fet_mm_f)*(pc_orient != 2))'
 +   aclv_dist_sws = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_dist == 2))/aclv_dgfactor + cnr_dgp*(1-mc_fet_mm_f)*(pc_dist != 2))'
 +   aclv_ni       = '((dgfet_aclv_nest*sel_plnest) + (dgfet_aclv_iso*(1-sel_plnest)))*aclv_ni_sws'
 +   aclv_or       = '((dgfet_aclv_v*sel_plorient) + (dgfet_aclv_h*(1-sel_plorient)))*aclv_or_sws'
 +   aclv_dist     = '((dgfet_aclv_out*sel_pld200) + (dgfet_aclv_in*(1-sel_pld200)))*aclv_dist_sws'
 +   aclv_ran      = agauss(cnr_dgp,mc_sw,3)
 *
 +   acwv_dist_sws = '(-mc_sw + ((mc_fet_mm_f != 1) && (rx_dist == 2))/acwv_dgfactor + cnr_dgp*(1-mc_fet_mm_f)*(rx_dist != 2))'
 +   acwv_dist     = '((dgfet_acwv_out*sel_pwd100) + (dgfet_acwv_in*(1-sel_pwd100)))*acwv_dist_sws'
 +   acwv_ran      = agauss('-cnr_dgp',mc_sw,3)
 *
 .param
 +   xc_lint_1 = '(aclv_ni*aclv_dgfet_ni + aclv_or*aclv_dgfet_or)'
 +   xc_lint_2 = '((aclv_dist*aclv_dgfet_dist) + (aclv_ran + (mc_global == 2))*aclv_dgfet_ran)'
 +   xx_lint_3 = '(mc_fet_mm_f + (aclv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_lint_4 = '((mc_global == 2)*(-xlint_dgp) + (mc_global != 2))'
 +   xc_lint_t = '((xc_lint_1 + xc_lint_2)*xx_lint_3)*xx_lint_4'
 *
 +   xc_wint_1 = '((acwv_dist*acwv_dgfet_dist) + (acwv_ran + (mc_global == 2))*acwv_dgfet_ran)'
 +   xx_wint_2 = '(mc_fet_mm_f + (acwv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_wint_3 = '((mc_global == 2)*(xwint_dgp) + (mc_global != 2))'
 +   xc_wint_t = '((xc_wint_1)*xx_wint_2)*xx_wint_3'
 *
 *     final =  nominal      +      acv * dist(-1,1)      +        global * dist(-1,1)
 + lint_dgpfet = 'lint_dgp + 1.5*total_aclv_dgfet*xc_lint_t*fet_geo_mm + ltol_dgp*xlint_dgp'
 + wint_dgpfet = 'wint_dgp + 1.5*total_acwv_dgfet*xc_wint_t*fet_geo_mm + wtol_dgp*xwint_dgp'
 *
 .param
 * switch to turn on or off the sti stress effects
 +  isti = '((gstis==1)&&(lstis==1))||(gstis==2)'
 *
 * switch to turn on or off the nwell proximity effects
 +  inw  = '((gwells==1)&&(lnws==1))||(gwells==2)'
 *
 * nwell proximity effect calculations
 +  proxpre  =  0.07e-06             $ [v-m]
 +  proxlen  = -0.35e-06             $ [m]
 +  proxk1   =  0.375                $ [unitless]
 +  rxwparm1 = -0.28                 $ [unitless]
 +  rxwparm2 =  0.56e-06             $ [unitless]
 +  rxwparm3 =  0.0e-6               $ [m]
 +  nw1b1   = 'panw1 /(band1 -proxlen)'
 +  nw2b2   = 'panw2 /(band2 -proxlen)'
 +  nw3b3   = 'panw3 /(band3 -proxlen)'
 +  nw4b4   = 'panw4 /(band4 -proxlen)'
 +  nw5b5   = 'panw5 /(band5 -proxlen)'
 +  nw6b6   = 'panw6 /(band6 -proxlen)'
 +  nw7b7   = 'panw7 /(band7 -proxlen)'
 +  nw8b8   = 'panw8 /(band8 -proxlen)'
 +  nw9b9   = 'panw9 /(band9 -proxlen)'
 +  nw10b10 = 'panw10/(band10-proxlen)'
 +  prox_term = 'inw*(proxpre/(l*w))*(nw1b1+nw2b2+nw3b3+nw4b4+nw5b5+nw6b6+nw7b7+nw8b8+nw9b9+nw10b10)'
 +  k1_dgp_base = 0.62
 +  k1_dgp      = 'k1_dgp_base+proxk1*prox_term'
 *
 * mis-match calculations: include multiplicity (par)
 .param
 +  kvt  =  1.0e-8
 +  kvtl =  8.0e-8
 +  kvtw = -2.0e-7
 +  kmb  =  1.0e-5
 +  kmbl = -2.0e-6
 +  kmbw = -1.0e-5
 +  sigvth  = 'kvt/sqrt((w-kvtw)*par*(l-kvtl))'
 +  sigbeta = 'kmb/sqrt((w-kmbw)*par*(l-kmbl))'
 *
 +  dvth0 = agauss(0,1,3)               $ local mis-match distributions
 +  dbeta = agauss(0,1,3)
 *                                      $ select local vs global vs corner
 +  d_vth0 = 'dvth0*(mc_global != 2) + xdgpvth0*(mc_global == 2) - cnr_dgp'
 +  d_beta = 'dbeta*(mc_global != 2) + ddgpu0*(mc_global == 2) - cnr_dgp'
 *
 +  mmvth0 = 'sigvth * d_vth0 * fet_dop_mm'    $ vth0 mis-match
 +  mmbeta = 'sigbeta * d_beta * fet_dop_mm'   $ beta mis-match
 *
 +  pvt_var = 'mmvth0 - prox_term'      $ local vth0 variation
 *
 .param
 * flicker noise calculations: statistics are function of w and l and par
 +  noideva = '10u * 0.24u * 10'        $ device area for extracted variation
 +  noistd  = 1.6927                    $ worst case variation value
 *
 +  noi_scale = 'noistd-min(log(sqrt(w*l*par/noideva)),0)'   $ area scaling
 +  noiamult  = 'exp(dnoi_dgp*noi_scale)'                $ gate bias scaliing
 +  noibmult  = 'exp(dnoi_dgp*noi_scale/1.2)'
 +  noicmult  = 'exp(dnoi_dgp*noi_scale/1.44)'
 *
 * thermal noise scaling equation
 +  tnoitanha = 0.1
 +  tnoitanhb = 3.14e6
 +  tnoitanhc = 2.5e11
 +  ntnoi_dgpfet = '1.05/tanh(tnoitanha + tnoitanhb*l + tnoitanhc*l*l)'
 *
 * gate resistance scaling equations
 +  rg11 = '0.1e6*l + 11'
 +  rg12 = '60e6*l - 11.5'
 +  xrg1 = 'max(0.1,(rg11*rg12/(rg11+rg12)))'
 +  xrg2 = 'max(0.0,((5.6712e-6/l - 2.6)*(6.06e4*w + 19)/21))'
 *
 m0 d g s b  dgpch  w=w l=l nf=nf dtemp=dtemp
 +                  as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                  sa='isti*sa' sb='isti*sb' sd='isti*sd'
 +                  rgatemod=rgatemod rbodymod=rbodymod
 *
 ***************************************************************************
 * dg pfet bsim4v4 model
 ***************************************************************************
 .model dgpch  pmos  (                              level   = 54
 +version = 4.4            binunit = 1              paramchk= 1
 +mobmod  = 0              rdsmod  = 1              permod  = 1
 +epsrox  = 3.9            toxe    = toxe_dgp       toxp    = toxp_dgp
 +toxm    = 6.15e-9        xj      = 1.54e-7        ndep    = 4e17
 +ngate   = 1.2e20         nsd     = 1e20
 +rsh     = rsh_dgp        rshg    = rsh_dgp        phin    = 0.061
 +vth0    = 'vth0_dgp+pvt_var'                      vfb     = -1
 +pvth0   = pvth0_dgp
 +k1      = k1_dgp         k2      = -0.038         k3      = 10
 +k3b     = 10             w0      = 6e-6           lpe0    = 4.84e-8
 +lpeb    = 6.8e-8         vbm     = -3       
 +dvt0    = 2.2            dvt1    = 0.406          dvt2    = -0.032
 +dvtp0   = 2e-7           dvtp1   = 1e-6
 +dvt0w   = 0              dvt1w   = 5.3e6          dvt2w   = -0.032
 +u0    = 'u0_dgp+mmbeta'  ua      = 3.168e-9       ub      = -1.8e-19
 +uc      = 4.3e-11        lu0     = -2             lua     = 0
 +lub     = 3e-19          luc     = 2e-11          wu0     = 0
 +wua     = 4.8e-10        wub     = 2e-20          wuc     = -3.8e-10
 +pu0     = 0.792          pua     = 1.2e-10        pub     = 8.7e-20
 +puc     = -2.4e-11       eu      = 0.7849
 +vsat    = 1.61e5         a0      = 1.506          pa0     = 0.03
 +ags     = 0.29           lags    = 0.26           pags    = -0.042
 +b0      = -4.6e-7        b1      = 2.04e-6        keta    = -0.0565
 +a1      = 0.05           a2      = 0.06
 +wint    = 0              lint    = 0              dwg     = -2e-8
 +dwb     = -1e-7          voff    = -0.1155        voffl   = -4e-9
 +minv    = -0.44          nfactor = 1.1            eta0    = 0.08
 +etab    = -0.07          dsub    = 1.2            cit     = 1.64e-4
 +cdsc    = 3.8e-3         cdscb   = 2e-4           cdscd   = 0
 +pclm    = 1.25           pdiblc1 = 0.88           pdiblc2 = 1e-3
 +pdiblcb = -1.6
 +drout   = 0.766          pscbe1  = 4.71e8         pscbe2  = 2.294e-5
 +pvag    = 0              delta   = 0.02193        fprout  = 0.013
 +pdits   = 0.01           pditsl  = 0              pditsd  = 0.12
 +lc      = 0
 +xn      = 3              rdw     = rdsw_dgp       rdwmin  = 0
 +rsw     = rdsw_dgp       rswmin  = 0              prwg    = 1
 +prwb    = 0              wr      = 1              alpha0  = -2.2e-5
 +alpha1  = 136            beta0   = 28.4
 ***************************************************************************
 * jds/vt temperature parameters
 ***************************************************************************
 +tnom    = 25             ute     = -1.16          kt1     = -0.1605
 +kt1l    = -1.6e-8        kt2     = -0.052         ua1     = 4e-10
 +ub1     = -4.8e-18       uc1     = -4.46684e-11   at      = 1.981e4
 +prt     = -180           tempmod = 0
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 +igcmod  = 0              igbmod  = 0              agidl   = 2e-9
 +bgidl   = 1.3e9          cgidl   = 0.5            egidl   = 0.8
 +aigbacc = 0.43           bigbacc = 0.054          cigbacc = 0.075
 +nigbacc = 1              aigbinv = 0.35
 ***************************************************************************
 * sti stress model parameters
 ***************************************************************************
 +saref   = 3e-6           sbref   = 3e-6           wlod    = 0
 +ku0     = 4e-8           kvsat   = -0.2           tku0    = 0
 +lku0    = 0              wku0    = 0              llodku0 = 0
 +wlodku0 = 0              kvth0   = 0              lkvth0  = 0
 +wkvth0  = 0              pkvth0  = 0              llodvth = 0
 +wlodvth = 0              stk2    = 0              lodk2   = 1
 +steta0  = 0              lodeta0 = 1
 ***************************************************************************
 * source/drain to body junction diode parameters
 ***************************************************************************
 +diomod  = 1             ijthdfwd= 0.1            ijthsfwd= 0.1
 +jss     = js_dgp        jsd     = js_dgp         jsws    = jsw_dgp
 +jswd    = jsw_dgp       jswgs   = jsw_dgp        jswgd   = jsw_dgp
 +cjs     = cj_dgp        cjd     = cj_dgp         cjsws   = cjsw_dgp
 +cjswd   = cjsw_dgp      cjswgs  = cjsg_dgp       cjswgd  = cjsg_dgp
 +mjs     = mj_dgp        mjd     = mj_dgp         mjsws   = mjsw_dgp
 +mjswd   = mjsw_dgp      mjswgs  = mjsg_dgp       mjswgd  = mjsg_dgp
 +pbs     = pb_dgp        pbd     = pb_dgp         pbsws   = pbsw_dgp
 +pbswd   = pbsw_dgp      pbswgs  = pbsg_dgp       pbswgd  = pbsg_dgp
 +njs     = n_dgp         njd     = n_dgp          xjbvd   = 1
 +bvd     = bd_p          xjbvs   = 1              bvs     = bd_p
 ***************************************************************************
 * junction diode temperature parameters
 ***************************************************************************
 +tcj     = cta_p         tcjsw   = ctp_p          tcjswg  = ctp_p
 +tpb     = pta_p         tpbsw   = ptp_p          tpbswg  = ptp_p
 +xtis    = 3             xtid    = 3
 ***************************************************************************
 * capacitance-voltage (cv) parameters
 ***************************************************************************
 +capmod  = 2             xpart   = 0              dlc     = 26n
 +dwc     = 0             cgdo    = cgdo_dgp       cgso    = cgso_dgp
 +cgsl    = cgsl_dgp      cgdl    = cgdl_dgp       ckappas = 8.0
 +ckappad = 8.0           cf      = 0              cgbo    = 1.706e-11
 +acde    = 0.5           moin    = 5              noff    = 1.5
 +voffcv  = -0.08
 ***************************************************************************
 * layout dependence parameters
 ***************************************************************************
 +geomod  = '(1 - int((nf+1)/2) + int(nf/2))'       rgeomod = 1
 +xgl     = lwbpc          xgw     = 0.43e-6        xl    = '-2*lint_dgpfet'
 +xw  = '-2*wint_dgpfet'   dmcg    = 0.23e-6        dmci    = 0.32e-6
 +dwj     = 0              ngcon   = ngcon
 ***************************************************************************
 * rf model parameters
 ***************************************************************************
 +rgatemod= rgatemod       trnqsmod= 0              rbodymod= rbodymod
 +acnqsmod= 0              xrcrg1  = xrg1           xrcrg2  = xrg2
 +rbps    = 'rbps*rf_rsub' rbpd    = 'rbpd*rf_rsub'
 +rbsb    = 'rbsb*rf_rsub' rbpb    = 'rbpb*rf_rsub' rbdb    = 'rbdb*rf_rsub'
 ***************************************************************************
 * flicker noise parameters
 ***************************************************************************
 +fnoimod = 1              noia = '9e41*noiamult'   noib = '2e26*noibmult'
 +noic = '3.75e9*noicmult' em      = 4.10e7         af      = 1
 +ef      = 1.15           kf      = 0
 ***************************************************************************
 * channel thermal noise parameters
 ***************************************************************************
 +tnoimod = 0              ntnoi   = ntnoi_dgpfet   )
 *
 .ends dgpfet
 .include './dgpfet_psp.inc'
 * path, component, release: cmos8base/rel/hspice/models/dgpfet_psp.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.1 10/10/12 14:47:04
 *
 *>  ibm cmrf8sf/bicmos8wl  dgpfetpsp  2.5v dg pfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) dgpfetpsp l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.24u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---
 *            gate     | |         bulk
 *              o------| |----------o
 *                     | |
 *                     | |---
 *                          |
 *                          |
 *                          |
 *                          o
 *                        source
 *
 *         note: the ldd resistance is accounted for within the psp model.
 *
 * ibm confidential
 * (c) 2010 ibm corporation
 *
 ***************************************************************************
 .subckt dgpfetpsp d g s b
 +                      w=1.0u l=0.24u nf=1 par=1 dtemp=0
 +                      as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                      lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                      panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                      panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                      plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                      rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1       $ unused parameters
 +                      rbps=100 rbpd=100 rbsb=1e9 rbpb=50 rbdb=1e9   $ unused parameters
 .param
 *
 * if monte carlo and "pl*" instance parameter = zero, use values from skew/process file
 +   a_plnest     = limit(-0.5,0.5)
 +   sel_plnest   = '((plnest == 1) || ((a_plnest*plnest) == 1))'
 +   a_plorient   = limit(-0.5,0.5)
 +   sel_plorient = '((plorient == 1) || ((a_plorient*plorient) == 1))' 
 +   a_pld200     = limit(-0.5,0.5)
 +   sel_pld200   = '((pld200 == 1) || ((a_pld200*pld200) == 1))' 
 +   a_pwd100     = limit(-0.5,0.5)
 +   sel_pwd100   = '((pwd100 == 1) || ((a_pwd100*pwd100) == 1))'
 *
 * calculate aclv/acwv and final lint/wint params
 +   aclv_ni_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_nest == 2))/aclv_dgfactor + cnr_dgp*(1-mc_fet_mm_f)*(pc_nest != 2))'
 +   aclv_or_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_orient == 2))/aclv_dgfactor + cnr_dgp*(1-mc_fet_mm_f)*(pc_orient != 2))'
 +   aclv_dist_sws = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_dist == 2))/aclv_dgfactor + cnr_dgp*(1-mc_fet_mm_f)*(pc_dist != 2))'
 +   aclv_ni       = '((dgfet_aclv_nest*sel_plnest) + (dgfet_aclv_iso*(1-sel_plnest)))*aclv_ni_sws'
 +   aclv_or       = '((dgfet_aclv_v*sel_plorient) + (dgfet_aclv_h*(1-sel_plorient)))*aclv_or_sws'
 +   aclv_dist     = '((dgfet_aclv_out*sel_pld200) + (dgfet_aclv_in*(1-sel_pld200)))*aclv_dist_sws'
 +   aclv_ran      = agauss(cnr_dgp,mc_sw,3)
 *
 +   acwv_dist_sws = '(-mc_sw + ((mc_fet_mm_f != 1) && (rx_dist == 2))/acwv_dgfactor + cnr_dgp*(1-mc_fet_mm_f)*(rx_dist != 2))'
 +   acwv_dist     = '((dgfet_acwv_out*sel_pwd100) + (dgfet_acwv_in*(1-sel_pwd100)))*acwv_dist_sws'
 +   acwv_ran      = agauss('-cnr_dgp',mc_sw,3)
 *
 .param
 +   xc_lint_1 = '(aclv_ni*aclv_dgfet_ni + aclv_or*aclv_dgfet_or)'
 +   xc_lint_2 = '((aclv_dist*aclv_dgfet_dist) + (aclv_ran + (mc_global == 2))*aclv_dgfet_ran)'
 +   xx_lint_3 = '(mc_fet_mm_f + (aclv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_lint_4 = '((mc_global == 2)*(-xlint_dgp) + (mc_global != 2))'
 +   xc_lint_t = '((xc_lint_1 + xc_lint_2)*xx_lint_3)*xx_lint_4'
 *
 +   xc_wint_1 = '((acwv_dist*acwv_dgfet_dist) + (acwv_ran + (mc_global == 2))*acwv_dgfet_ran)'
 +   xx_wint_2 = '(mc_fet_mm_f + (acwv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_wint_3 = '((mc_global == 2)*(xwint_dgp) + (mc_global != 2))'
 +   xc_wint_t = '((xc_wint_1)*xx_wint_2)*xx_wint_3'
 *
 *     final =  nominal      +      acv * dist(-1,1)      +        global * dist(-1,1)
 + lint_psp_dgpfet = 'lint_psp_dgp + 1.5*total_aclv_dgfet*xc_lint_t*fet_geo_mm + ltol_dgp*xlint_dgp'
 + wint_psp_dgpfet = 'wint_psp_dgp + 1.5*total_acwv_dgfet*xc_wint_t*fet_geo_mm + wtol_dgp*xwint_dgp'
 *
 .param
 * switch to turn on or off the sti stress effects
 +  isti = '((gstis==1)&&(lstis==1))||(gstis==2)'
 *
 * switch to turn on or off the nwell proximity effects
 +  inw  = '((gwells==1)&&(lnws==1))||(gwells==2)'
 *
 * nwell proximity effect calculations
 +  proxpre  =  0.07e-06             $ [v-m]
 +  proxlen  = -0.35e-06             $ [m]
 +  proxk1   =  0.375                $ [unitless]
 +  rxwparm1 = -0.28                 $ [unitless]
 +  rxwparm2 =  0.56e-06             $ [unitless]
 +  rxwparm3 =  0.0e-6               $ [m]
 +  nw1b1   = 'panw1 /(band1 -proxlen)'
 +  nw2b2   = 'panw2 /(band2 -proxlen)'
 +  nw3b3   = 'panw3 /(band3 -proxlen)'
 +  nw4b4   = 'panw4 /(band4 -proxlen)'
 +  nw5b5   = 'panw5 /(band5 -proxlen)'
 +  nw6b6   = 'panw6 /(band6 -proxlen)'
 +  nw7b7   = 'panw7 /(band7 -proxlen)'
 +  nw8b8   = 'panw8 /(band8 -proxlen)'
 +  nw9b9   = 'panw9 /(band9 -proxlen)'
 +  nw10b10 = 'panw10/(band10-proxlen)'
 +  prox_term = 'inw*(proxpre/(l*w))*(nw1b1+nw2b2+nw3b3+nw4b4+nw5b5+nw6b6+nw7b7+nw8b8+nw9b9+nw10b10)'
 +  nsubo_base = 1.636e23
 +  nsubo_nwpr = 'nsubo_base*(1+1.5*proxk1*prox_term)'
 *
 * mis-match calculations: include multiplicity (par)
 .param
 +  kvt  =  1.0e-8
 +  kvtl =  0.8e-7
 +  kvtw = -3.6e-7
 +  kmb  =  7.5e-10
 +  kmbl = -8.5e-7
 +  kmbw = -1.0e-6
 +  sigvth  = 'kvt/sqrt((w-kvtw)*par*(l-kvtl))'
 +  sigbeta = 'kmb/sqrt((w-kmbw)*par*(l-kmbl))'
 *
 +  dvth0 = agauss(0,1,3)               $ local mis-match distributions
 +  dbeta = agauss(0,1,3)
 *                                      $ select local vs global vs corner
 +  d_vth0 = 'dvth0*(mc_global != 2) + xdgpvth0*(mc_global == 2) - cnr_dgp'
 +  d_beta = 'dbeta*(mc_global != 2) + ddgpu0*(mc_global == 2) - cnr_dgp'
 *
 +  mmvth0 = 'sigvth * d_vth0 * fet_dop_mm'    $ vth0 mis-match
 +  mmbeta = 'sigbeta * d_beta * fet_dop_mm'   $ beta mis-match
 *
 +  pvt_var = 'mmvth0 + 0.9*prox_term'        $ local vth0 variation
 *
 .param
 * flicker noise calculations: statistics are function of w and l and par
 +  noideva = '10u * 0.24u * 10'        $ device area for extracted variation
 +  noistd  = 1.6927                    $ worst case variation value
 *
 +  noi_scale = 'noistd-min(log(sqrt(w*l*par/noideva)),0)'   $ area scaling
 +  noiamult  = 'exp(dnoi_dgp*noi_scale)'                $ gate bias scaliing
 +  noibmult  = 'exp(dnoi_dgp*noi_scale/1.2)'
 +  noicmult  = 'exp(dnoi_dgp*noi_scale/1.44)'
 *
 * thermal noise scaling equation
 +  tnoitanha = 0.1
 +  tnoitanhb = 6.94e6
 +  tnoitanhc = 2.5e11
 +  ntnoi_dgpfet = '0.90/tanh(tnoitanha + tnoitanhb*l + tnoitanhc*l*l)'
 *
 * multi-finger sti scaling equation
 +  ratio_a = 'min(3.0, max(0.3,(sd+l)/(sa+0.5*l)))'
 +  delta_a = '5e-3*pow(ratio_a,3)'
 +  sec1a   = '1-0.37*log(nf)*sqrt(ratio_a)'
 +  sec2a   = '5.0/(nf+7)/pow(ratio_a,0.4)'
 +  sa_eff1 = '(sa+0.5*l)/(0.5*(sec1a+sec2a+sqrt((sec1a-sec2a)*(sec1a-sec2a)+delta_a)))-0.5*l' 
 +  sa_eff  = '(sa != 0)*sa_eff1'
 +  ratio_b = 'min(3.0, max(0.3,(sd+l)/(sb+0.5*l)))'
 +  delta_b = '5e-3*pow(ratio_b,3)'
 +  sec1b   = '1-0.37*log(nf)*sqrt(ratio_b)'
 +  sec2b   = '5.0/(nf+7)/pow(ratio_b,0.4)'
 +  sb_eff1 = '(sb+0.5*l)/(0.5*(sec1b+sec2b+sqrt((sec1b-sec2b)*(sec1b-sec2b)+delta_b)))-0.5*l' 
 +  sb_eff  = '(sb != 0)*sb_eff1'
 *
 m0 d g s b dgpch w='w/nf' l=l as='as/nf' ad='ad/nf' ps='ps/nf' pd='pd/nf' 
 +                mult=nf sa='isti*sa_eff' sb='isti*sb_eff'
 *
 ***************************************************************************
 * psp fet model
 ***************************************************************************
 .model dgpch pmos
 + level     = 69         version   = 102.3      tr        = 25
 ***************************************************************************
 * switch settings
 ***************************************************************************
 + swgidl    = 1          swigate   = 0          swimpact  = 1
 + swjuncap  = 3
 ***************************************************************************
 * parameters with process variation
 ***************************************************************************
 + lvaro     = '-2*lint_psp_dgpfet'
 + wvaro     = '-2*wint_psp_dgpfet'
 + toxo      = tox_psp_dgp
 + toxovo    = tox_psp_dgp
 + uo        = 'uo_psp_dgp+mmbeta'
 + rsw1      = rsw_psp_dgp
 + nsubo     = nsubo_nwpr
 + vfbo      = 'vfb_psp_dgp+pvt_var'
 + fol1      = fol1_psp_dgp
 + fol2      = fol2_psp_dgp
 + lov       = 'lint_psp_dgp+dl_psp_dgp'
 ***************************************************************************
 * core parameters
 ***************************************************************************
 + a1l       = -114.6e-3  a1o       = 10.73      a1w       = 0
 + a2o       = 23.36      a3l       = -80.80e-3  a3o       = 1.295
 + a3w       = 0          a4l       = 0          a4o       = 0
 + a4w       = 0          alp1l1    = 444.1e-18  alp1l2    = 1.628e-15
 + alp1lexp  = 8.138e-15  alp1w     = 0          alp2l1    = 5.307e-6
 + alp2l2    = 8.828e-15  alp2lexp  = 8.830e-15  alp2w     = 0
 + alpl      = 48.85e-3   alplexp   = 554.6e-3   alpw      = 50.30e-3
 + axl       = 0.8        axo       = 21.90      betw1     = 170.1e-3 
 + betw2     = -75.93e-3  cfbo      = 416.2e-3   cfl       = 5.194e-3
 + cflexp    = 765.0e-3   cfrw      = 0          cfw       = 0
 + cgbovl    = 0          csl       = 0          cslexp    = 1
 + cslw      = 0          cso       = 0          csw       = -2.924e-3
 + ctl       = 15.18e-3   ctlexp    = 1.236      ctlw      = -1.205e-3
 + cto       = 54.62e-3   ctw       = 142.3e-3   dlq       = -56.28e-9
 + dnsubo    = 0          dphibl    = 9.449e-3   dphiblexp = 1.355
 + dphiblw   = 52.34e-3   dphibo    = -29.40e-3  dphibw    = 186.6e-3
 + dta       = dtemp      dwq       = 0          fbet1     = 555.9e-3
 + fbet1w    = 150.0e-3   fbet2     = 481.9e-3   fetao     = 1.250
 + lap       = 0          lp1       = 16.91e-9   lp1w      = 1.000
 + lp2       = 16.87e-9   lpck      = 2.703e-9   lpckw     = 134.5e-3
 + lvarl     = 0          lvarw     = 0          mueo      = 3.231
 + muew      = -392.4e-6  novo      = 9.010e24   npck      = 8.866e23
 + npckw     = 1.902e-3   npl       = -76.76e-3  npo       = 7.610e+25
 + nslpo     = 50.00e-3   nsubw     = -9.945e-3  qmc       = 1
 + rsbo      = 60.69e-3   rsgo      = -729.2e-3  rsw2      = 0
 + sta2o     = 0          stbetl    = -1.810e-3  stbetlw   = -2.000e-3
 + stbeto    = 1.881      stbetw    = 10.00e-3   stcso     = 0
 + stmueo    = 1.942      strso     = 681.7e-3   stthemuo  = -28.77e-3
 + stthesatl = 216.9e-3   stthesatlw = 0         stthesato = 1.128
 + stthesatw = 0          stvfbl    = -14.77e-3  stvfblw   = 0
 + stvfbo    = 921.9e-6   stvfbw    = -26.05e-3  stxcoro   = 0
 + themuo    = 878.2e-3   thesatbo  = 0          thesatgo  = 139.0e-3
 + thesatl   = 859.53e-3  thesatlexp = 704.2e-3  thesatlw  = 20.00e-3
 + thesato   = 190.0e-3   thesatw   = 29.59e-3   vfbl      = 22.53e-3
 + vfblw     = vfblw_dgp  vfbw      = -12.10e-3  vnsubo    = 0
 + vpo       = 90.14e-3   wbet      = 22.61e-9   wot       = 0
 + wseg      = 1.000e-10  wsegp     = 3.724e-9   wvarl     = 0       
 + wvarw     = 0          xcorl     = 0          xcorlw    = 23.11e-3
 + xcoro     = 44.41e-18  xcorw     = 0
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 + gcoo      = 0          iginvlw   = 0          igovw     = 0
 + gc2o      = 0.375      gc3o      = 0.063      chibo     = 3.1
 + stigo     = 2          agidlw    = 1.562e-3   bgidlo    = 15
 + cgidlo    = 0          stbgidlo  = 0
 ***************************************************************************
 * sti stress model parameters
 ***************************************************************************
 + saref     = 3e-6       sbref     = 3e-6       wlod      = 0
 + kuo       = 4e-8       kvsat     = -0.2       tkuo      = 0
 + lkuo      = 0          wkuo      = 0          llodkuo   = 0
 + wlodkuo   = 0          kvtho     = 0          lkvtho    = 0
 + wkvtho    = 0          pkvtho    = 0          llodvth   = 0
 + wlodvth   = 0          stetao    = 0          lodetao   = 1
 ***************************************************************************
 * junction diode parameters
 ***************************************************************************
 + trj       = 25
 ***************************************************************************
 *   capacitance parameters
 ***************************************************************************
 + cjorbot   = cj_dgp       cjorsti   = cjsw_dgp     cjorgat   = cjsg_dgp
 + vbirbot   = pb_dgp       vbirsti   = pbsw_dgp     vbirgat   = pbsg_dgp
 + pbot      = mj_dgp       psti      = mjsw_dgp     pgat      = mjsg_dgp
 ***************************************************************************
 *   ideal current parameters
 ***************************************************************************
 + idsatrbot = js_dgp       idsatrsti = jsw_dgp      idsatrgat = jsw_dgp
 + phigbot   = 1.048        phigsti   = 1.048        phiggat   = 1.048
 + csrhbot   = 0            csrhsti   = 0            csrhgat   = 0
 + xjunsti   = 1e-07        xjungat   = 1e-07
 ***************************************************************************
 *   trap-assisted tunneling parameters
 ***************************************************************************
 + ctatbot   = 0          ctatsti   = 0          ctatgat   = 0
 + mefftatbot= 0.25       mefftatsti= 0.25       mefftatgat= 0.25
 ***************************************************************************
 *   band-to-band tunneling parameters
 ***************************************************************************
 + cbbtbot   = 0          cbbtsti   = 0          cbbtgat   = 0
 + fbbtrbot  = 1e9        fbbtrsti  = 1e9        fbbtrgat  = 1e9
 + stfbbtbot = 0          stfbbtsti = 0          stfbbtgat = 0
 ***************************************************************************
 *   avalanche and breakdown parameters
 ***************************************************************************
 + vbrbot    = 1001       vbrsti    = 1001       vbrgat    = 1001
 + pbrbot    = 4          pbrsti    = 4          pbrgat    = 4
 ***************************************************************************
 * noise parameters
 ***************************************************************************
 + nfalw     = '2.45e25*noiamult'
 + nfblw     = '3.15e9*noibmult'
 + nfclw     = '6.5e-8*noicmult'
 + lintnoi   = -3.5e-8
 + alpnoi    = 2
 + efo       = 1.15
 + fnto      = ntnoi_dgpfet
 ***************************************************************************
 .ends dgpfetpsp
 .include './dgpfet_rf.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/dgpfet_rf.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.4 06/12/11 17:00:00
 *
 *>  ibm cmrf8sf  dgpfet_rf  2.5v dg pfet rf subcircuit
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) dgpfet_rf l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.24u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.15um of nw edge
 *          +    panw2 = 0    <- active area within 0.15um to 0.325um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.2um to 1.7um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 3    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 2    <- extrinsic gate connection switch (1->single-ended,
 *                                                                 2->double-ended)
 *          +     gtab = 1    <- m1 gate ring tabs flag (1->tabs present,
 *                                                       0->tabs absent)
 *          + rbodymod = 1    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +     ring = 2    <- substrate contact type for rf pcell 
 *          +  rf_rsub = 1    <- body resistance multiplier
 *          +    cwire = 1    <- wiring capacitance multiplier
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                                ||   drain
 *                            o---||-----o------------------o
 *                            |   ||     |                  |
 *                            |  cwgd    |                  |
 *                            |          |                 ---
 *                            |          |                 ---cwds
 *                            |          |                  |
 *                            |     | |---                  |
 *       gate                 | g1  | |     (bsim4.4     )  | bulk
 *         o----/\/\/\--------o-----| |-----(internal    )--)--o
 *                rg          |     | |     (rsub network)  |
 *                            |     | |---                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |  cwgs    |                  |
 *                            |   ||     |                  |
 *                            o---||-----o------------------o
 *                                ||   source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2006 ibm corporation
 *
 ***************************************************************************
 *
 .subckt dgpfet_rf d g s b w=1.0u l=0.24u nf=1 par=1 dtemp=0
 +                         as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                         lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                         panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                         panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                         plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                         rgatemod=3 ngcon=2 gtab=1 rbodymod=1 ring=2
 +                         rf_rsub=1 cwire=1
 *
 .param
 +  legacy = '(ring==99)'                        $ switch for legacy pcell
 +  nfo    = '(int((nf+1)/2) - int(nf/2))'       $ switch for odd,even fingers
 *
 * extrinsic gate resistance calculations (function of w, l, and nf)
 +  wum    = '(w/nf)*1e6'
 +  lum    = 'l*1e6'
 *
 +  rlen_a = 'lum*(1 + ((nf - 3)/2)) + diff_thn*1e6*((nf - 1)/2)'
 +  rlen_b = '0.5*lum + (diff_thn*1e6 + lum)*((nf/2) - 1)'
 +  rlen   = 'nfo*rlen_a + (1-nfo)*rlen_b'
 *
 +  ra_term1 = '0.81*legacy + 0.91*(1-legacy)'
 +  ra_len   = '(ra_term1 + 0.5*lum + (nf==2)*0.5*lum + (nf>2)*(rlen/3))/(0.4)'
 +  ra_wid   = '(2.5*wum + 1.65)*legacy + (1.25*wum + 0.875)*(1-legacy)'
 +  ra       = 'm1rsi * (ra_len + ra_wid)'
 +  rb       = 'm1rsi * (4.3*legacy + 3.3*(1-legacy))'
 +  rcont    = 'cars * (1/nf)'
 *
 +  rgate  = '0.5*(rb*gtab + (1/ngcon)*(ra+0.5*rcont))'
 *
 .param
 * substrate resistance calculations (function of w, l, and nf)
 +  rhorz  = 'max(10,((5e7*l + 3.59)*(4e-4/w + 26)/50))'
 +  rvert  = 'max(10,((1e-5/l + 200)*(2e-3/w + 10)/150))'
 *
 * gate capacitance calculation (function of w, l, and nf)
 +  cgate = '(1.4865e6*l + 7.76e4*w + 0.2)*1e-15'
 *
 * drain-source capacitance calculation (function of w, l, and nf)
 +  cdsw  = '5.32e4*w + 0.7135'
 +  cdsl  = '(4.226e-7/l + 0.0367)*1e-15/1.75'
 *
 x1 d g1 s b dgpfet w=w l=l nf=nf par=par dtemp=dtemp
 +                  as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                  lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                  panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                  panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                  panw9=panw9 panw10=panw10
 +                  plnest=plnest plorient=plorient
 +                  pld200=pld200 pwd100=pwd100
 +                  rgatemod=rgatemod ngcon=2
 +                  rbodymod=rbodymod rf_rsub=rf_rsub
 +                  rbps=rhorz rbpd=rhorz
 +                  rbsb=rvert rbpb=rvert rbdb=rvert
 *
 rg     g   g1  r=rgate
 cwgd   g1  d   c='1e-18 + cgate*cwire'
 cwgs   g1  s   c='1e-18 + cgate*cwire'
 cwds   d   s   c='1e-18 + (cdsw*cdsl)*cwire'
 *
 .ends dgpfet_rf
 .include './dgpfet_rf_psp.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/dgpfet_rf_psp.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.1 10/10/12 14:45:11
 *
 *>  ibm cmrf8sf  dgpfetpsp_rf  2.5v dg pfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) dgpfetpsp_rf l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.24u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          +    ngcon = 2    <- extrinsic gate connection switch (1->single-ended,
 *                                                                 2->double-ended)
 *          +     gtab = 1    <- m1 gate ring tabs flag (1->tabs present,
 *                                                       0->tabs absent)
 *          +     ring = 2    <- substrate contact type for rf pcell 
 *          +    cwire = 1    <- wiring capacitance multiplier
 *
 * subcircuit schematic:
 *
 *                                ||   drain
 *                            o---||-----o------------------o
 *                            |   ||     |                  |
 *                            |  cwgd    |                  |
 *                            |          |                  |
 *                            |          |                 ---
 *                            |          |                 ---cwds
 *                            |          |                  |
 *                            |     | |---                  |
 *       gate                 | g1  | |     (psp         )  | bulk
 *         o----/\/\/\--------o-----| |-----(internal    )--)--o
 *                rg          |     | |     (rsub network)  |
 *                            |     | |---                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |  cwgs    |                  |
 *                            |   ||     |                  |
 *                            o---||-----o------------------o
 *                                ||   source
 *
 *
 *         note: the ldd resistance is accounted for within the psp model.
 *
 * ibm confidential
 * (c) 2010 ibm corporation
 *
 ***************************************************************************
 .subckt dgpfetpsp_rf d g s b
 +                      w=1.0u l=0.24u nf=1 par=1 dtemp=0
 +                      as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                      lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                      panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                      panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                      plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                      ngcon=2 gtab=1 ring=2 cwire=1
 +                      rgatemod=3 rbodymod=1 rf_rsub=1       $ unused parameters
 .param
 *
 * if monte carlo and "pl*" instance parameter = zero, use values from skew/process file
 +   a_plnest     = limit(-0.5,0.5)
 +   sel_plnest   = '((plnest == 1) || ((a_plnest*plnest) == 1))'
 +   a_plorient   = limit(-0.5,0.5)
 +   sel_plorient = '((plorient == 1) || ((a_plorient*plorient) == 1))' 
 +   a_pld200     = limit(-0.5,0.5)
 +   sel_pld200   = '((pld200 == 1) || ((a_pld200*pld200) == 1))' 
 +   a_pwd100     = limit(-0.5,0.5)
 +   sel_pwd100   = '((pwd100 == 1) || ((a_pwd100*pwd100) == 1))'
 *
 * calculate aclv/acwv and final lint/wint params
 +   aclv_ni_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_nest == 2))/aclv_dgfactor + cnr_dgp*(1-mc_fet_mm_f)*(pc_nest != 2))'
 +   aclv_or_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_orient == 2))/aclv_dgfactor + cnr_dgp*(1-mc_fet_mm_f)*(pc_orient != 2))'
 +   aclv_dist_sws = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_dist == 2))/aclv_dgfactor + cnr_dgp*(1-mc_fet_mm_f)*(pc_dist != 2))'
 +   aclv_ni       = '((dgfet_aclv_nest*sel_plnest) + (dgfet_aclv_iso*(1-sel_plnest)))*aclv_ni_sws'
 +   aclv_or       = '((dgfet_aclv_v*sel_plorient) + (dgfet_aclv_h*(1-sel_plorient)))*aclv_or_sws'
 +   aclv_dist     = '((dgfet_aclv_out*sel_pld200) + (dgfet_aclv_in*(1-sel_pld200)))*aclv_dist_sws'
 +   aclv_ran      = agauss(cnr_dgp,mc_sw,3)
 *
 +   acwv_dist_sws = '(-mc_sw + ((mc_fet_mm_f != 1) && (rx_dist == 2))/acwv_dgfactor + cnr_dgp*(1-mc_fet_mm_f)*(rx_dist != 2))'
 +   acwv_dist     = '((dgfet_acwv_out*sel_pwd100) + (dgfet_acwv_in*(1-sel_pwd100)))*acwv_dist_sws'
 +   acwv_ran      = agauss('-cnr_dgp',mc_sw,3)
 *
 .param
 +   xc_lint_1 = '(aclv_ni*aclv_dgfet_ni + aclv_or*aclv_dgfet_or)'
 +   xc_lint_2 = '((aclv_dist*aclv_dgfet_dist) + (aclv_ran + (mc_global == 2))*aclv_dgfet_ran)'
 +   xx_lint_3 = '(mc_fet_mm_f + (aclv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_lint_4 = '((mc_global == 2)*(-xlint_dgp) + (mc_global != 2))'
 +   xc_lint_t = '((xc_lint_1 + xc_lint_2)*xx_lint_3)*xx_lint_4'
 *
 +   xc_wint_1 = '((acwv_dist*acwv_dgfet_dist) + (acwv_ran + (mc_global == 2))*acwv_dgfet_ran)'
 +   xx_wint_2 = '(mc_fet_mm_f + (acwv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_wint_3 = '((mc_global == 2)*(xwint_dgp) + (mc_global != 2))'
 +   xc_wint_t = '((xc_wint_1)*xx_wint_2)*xx_wint_3'
 *
 *     final =  nominal      +      acv * dist(-1,1)      +        global * dist(-1,1)
 + lint_psp_dgpfet = 'lint_psp_dgp + 1.5*total_aclv_dgfet*xc_lint_t*fet_geo_mm + ltol_dgp*xlint_dgp'
 + wint_psp_dgpfet = 'wint_psp_dgp + 1.5*total_acwv_dgfet*xc_wint_t*fet_geo_mm + wtol_dgp*xwint_dgp'
 *
 .param
 * switch to turn on or off the sti stress effects
 +  isti = '((gstis==1)&&(lstis==1))||(gstis==2)'
 *
 * switch to turn on or off the nwell proximity effects
 +  inw  = '((gwells==1)&&(lnws==1))||(gwells==2)'
 *
 * nwell proximity effect calculations
 +  proxpre  =  0.07e-06             $ [v-m]
 +  proxlen  = -0.35e-06             $ [m]
 +  proxk1   =  0.375                $ [unitless]
 +  rxwparm1 = -0.28                 $ [unitless]
 +  rxwparm2 =  0.56e-06             $ [unitless]
 +  rxwparm3 =  0.0e-6               $ [m]
 +  nw1b1   = 'panw1 /(band1 -proxlen)'
 +  nw2b2   = 'panw2 /(band2 -proxlen)'
 +  nw3b3   = 'panw3 /(band3 -proxlen)'
 +  nw4b4   = 'panw4 /(band4 -proxlen)'
 +  nw5b5   = 'panw5 /(band5 -proxlen)'
 +  nw6b6   = 'panw6 /(band6 -proxlen)'
 +  nw7b7   = 'panw7 /(band7 -proxlen)'
 +  nw8b8   = 'panw8 /(band8 -proxlen)'
 +  nw9b9   = 'panw9 /(band9 -proxlen)'
 +  nw10b10 = 'panw10/(band10-proxlen)'
 +  prox_term = 'inw*(proxpre/(l*w))*(nw1b1+nw2b2+nw3b3+nw4b4+nw5b5+nw6b6+nw7b7+nw8b8+nw9b9+nw10b10)'
 +  nsubo_base = 1.636e23
 +  nsubo_nwpr = 'nsubo_base*(1+1.5*proxk1*prox_term)'
 *
 * mis-match calculations: include multiplicity (par)
 .param
 +  kvt  =  1.0e-8
 +  kvtl =  0.8e-7
 +  kvtw = -3.6e-7
 +  kmb  =  7.5e-10
 +  kmbl = -8.5e-7
 +  kmbw = -1.0e-6
 +  sigvth  = 'kvt/sqrt((w-kvtw)*par*(l-kvtl))'
 +  sigbeta = 'kmb/sqrt((w-kmbw)*par*(l-kmbl))'
 *
 +  dvth0 = agauss(0,1,3)               $ local mis-match distributions
 +  dbeta = agauss(0,1,3)
 *                                      $ select local vs global vs corner
 +  d_vth0 = 'dvth0*(mc_global != 2) + xdgpvth0*(mc_global == 2) - cnr_dgp'
 +  d_beta = 'dbeta*(mc_global != 2) + ddgpu0*(mc_global == 2) - cnr_dgp'
 *
 +  mmvth0 = 'sigvth * d_vth0 * fet_dop_mm'    $ vth0 mis-match
 +  mmbeta = 'sigbeta * d_beta * fet_dop_mm'   $ beta mis-match
 *
 +  pvt_var = 'mmvth0 + 0.9*prox_term'        $ local vth0 variation
 *
 .param
 * flicker noise calculations: statistics are function of w and l and par
 +  noideva = '10u * 0.24u * 10'        $ device area for extracted variation
 +  noistd  = 1.6927                    $ worst case variation value
 *
 +  noi_scale = 'noistd-min(log(sqrt(w*l*par/noideva)),0)'   $ area scaling
 +  noiamult  = 'exp(dnoi_dgp*noi_scale)'                $ gate bias scaliing
 +  noibmult  = 'exp(dnoi_dgp*noi_scale/1.2)'
 +  noicmult  = 'exp(dnoi_dgp*noi_scale/1.44)'
 *
 * thermal noise scaling equation
 +  tnoitanha = 0.1
 +  tnoitanhb = 6.14e7
 +  tnoitanhc = 2.5e11
 +  ntnoi_dgpfet = '0.85/tanh(tnoitanha + tnoitanhb*l + tnoitanhc*l*l)'
 *
 * multi-finger sti scaling equation
 +  ratio_a = 'min(3.0, max(0.3,(sd+l)/(sa+0.5*l)))'
 +  delta_a = '5e-3*pow(ratio_a,3)'
 +  sec1a   = '1-0.37*log(nf)*sqrt(ratio_a)'
 +  sec2a   = '5.0/(nf+7)/pow(ratio_a,0.4)'
 +  sa_eff1 = '(sa+0.5*l)/(0.5*(sec1a+sec2a+sqrt((sec1a-sec2a)*(sec1a-sec2a)+delta_a)))-0.5*l' 
 +  sa_eff  = '(sa != 0)*sa_eff1'
 +  ratio_b = 'min(3.0, max(0.3,(sd+l)/(sb+0.5*l)))'
 +  delta_b = '5e-3*pow(ratio_b,3)'
 +  sec1b   = '1-0.37*log(nf)*sqrt(ratio_b)'
 +  sec2b   = '5.0/(nf+7)/pow(ratio_b,0.4)'
 +  sb_eff1 = '(sb+0.5*l)/(0.5*(sec1b+sec2b+sqrt((sec1b-sec2b)*(sec1b-sec2b)+delta_b)))-0.5*l' 
 +  sb_eff  = '(sb != 0)*sb_eff1'
 *
 +  legacy = '(ring==99)'                        $ switch for legacy pcell
 +  nfo    = '(int((nf+1)/2) - int(nf/2))'       $ switch for odd,even fingers
 *
 * extrinsic gate resistance calculations (function of w, l, and nf)
 +  wum    = '(w/nf)*1e6'
 +  lum    = 'l*1e6'
 *
 +  rlen_a = 'lum*(1 + ((nf - 3)/2)) + diff_thn*1e6*((nf - 1)/2)'
 +  rlen_b = '0.5*lum + (diff_thn*1e6 + lum)*((nf/2) - 1)'
 +  rlen   = 'nfo*rlen_a + (1-nfo)*rlen_b'
 *
 +  ra_term1 = '0.81*legacy + 0.91*(1-legacy)'
 +  ra_len   = '(ra_term1 + 0.5*lum + (nf==2)*0.5*lum + (nf>2)*(rlen/3))/(0.4)'
 +  ra_wid   = '(2.5*wum + 1.65)*legacy + (1.25*wum + 0.875)*(1-legacy)'
 +  ra       = 'm1rsi * (ra_len + ra_wid)'
 +  rb       = 'm1rsi * (4.3*legacy + 3.3*(1-legacy))'
 +  rcont    = 'cars * (1/nf)'
 *
 +  rgate  = '0.5*(rb*gtab + (1/ngcon)*(ra+0.5*rcont))'
 *
 +  rgintl = '20*log(l)+405.06'
 +  rgintw = '135.42*exp(-150592*w/nf)/100.2'
 +  rgint  = 'pcrsi*(0.35e-6+(w/nf)/(3*ngcon))/ngcon/l + rgintl*rgintw'
 *
 * substrate resistance calculations (function of w, l, and nf)
 +  rbulk = '27073*exp(-99767*w/nf)*16524*(l)**(-0.0194)/22176'
 +  rw = '300*((nf-1)*0.36e-6+nf*l+3.3e-6)/(w/nf+2.2e-6)'
 +  rl = '50*(w/nf+2.2e-6)/(l+0.01e-6)'
 +  rwell = '6*rw*rl/(rw+rl)'
 +  rjuns = '6000*(l/nf+0.5e-6)/(w/nf+1.0e-6)'
 +  rjund = rjuns
 *
 * gate capacitance calculation (function of w, l, and nf)
 +  cgate = '1.2*(4.845e4*l + 6.345e4*w + 0.09)*1e-15'
 *
 * drain-source capacitance calculation (function of w, l, and nf)
 +  cds  = '1.5*(1e5*w + 0.123) * (1.797e-7/l + 0.821)*0.67e-15'
 *
 m0 d g1 s b dgpch w='w/nf' l=l as='as/nf' ad='ad/nf' ps='ps/nf' pd='pd/nf'
 +                 mult=nf sa='isti*sa_eff' sb='isti*sb_eff'
 *
 rg     g   g1  r=rgate
 cwgd   g1  d   c='1e-18 + cgate*cwire'
 cwgs   g1  s   c='1e-18 + cgate*cwire'
 cwds   d   s   c='1e-18 + cds*cwire'
 *
 ***************************************************************************
 * psp fet model
 ***************************************************************************
 .model dgpch pmos
 ***************************************************************************
 * rf/nqs parameters
 ***************************************************************************
 + swnqs     = 1          munqso    = 1          rgo       = rgint
 + rbulko    = rbulk      rwello    = rwell      rjunso    = rjuns
 + rjundo    = rjund
 ***************************************************************************
 * dc parameters
 ***************************************************************************
 + level     = 69         version   = 102.3      tr        = 25
 ***************************************************************************
 * switch settings
 ***************************************************************************
 + swgidl    = 1          swigate   = 0          swimpact  = 1
 + swjuncap  = 3
 ***************************************************************************
 * parameters with process variation
 ***************************************************************************
 + lvaro     = '-2*lint_psp_dgpfet'
 + wvaro     = '-2*wint_psp_dgpfet'
 + toxo      = tox_psp_dgp
 + toxovo    = tox_psp_dgp
 + uo        = 'uo_psp_dgp+mmbeta'
 + rsw1      = rsw_psp_dgp
 + nsubo     = nsubo_nwpr
 + vfbo      = 'vfb_psp_dgp+pvt_var'
 + fol1      = fol1_psp_dgp
 + fol2      = fol2_psp_dgp
 + lov       = 'lint_psp_dgp+dl_psp_dgp'
 ***************************************************************************
 * core parameters
 ***************************************************************************
 + a1l       = -114.6e-3  a1o       = 10.73      a1w       = 0
 + a2o       = 23.36      a3l       = -80.80e-3  a3o       = 1.295
 + a3w       = 0          a4l       = 0          a4o       = 0
 + a4w       = 0          alp1l1    = 444.1e-18  alp1l2    = 1.628e-15
 + alp1lexp  = 8.138e-15  alp1w     = 0          alp2l1    = 5.307e-6
 + alp2l2    = 8.828e-15  alp2lexp  = 8.830e-15  alp2w     = 0
 + alpl      = 48.85e-3   alplexp   = 554.6e-3   alpw      = 50.30e-3
 + axl       = 0.8        axo       = 21.90      betw1     = 170.1e-3 
 + betw2     = -75.93e-3  cfbo      = 416.2e-3   cfl       = 5.194e-3
 + cflexp    = 765.0e-3   cfrw      = 0          cfw       = 0
 + cgbovl    = 0          csl       = 0          cslexp    = 1
 + cslw      = 0          cso       = 0          csw       = -2.924e-3
 + ctl       = 15.18e-3   ctlexp    = 1.236      ctlw      = -1.205e-3
 + cto       = 54.62e-3   ctw       = 142.3e-3   dlq       = -56.28e-9
 + dnsubo    = 0          dphibl    = 9.449e-3   dphiblexp = 1.355
 + dphiblw   = 52.34e-3   dphibo    = -29.40e-3  dphibw    = 186.6e-3
 + dta       = dtemp      dwq       = 0          fbet1     = 555.9e-3
 + fbet1w    = 150.0e-3   fbet2     = 481.9e-3   fetao     = 1.250
 + lap       = 0          lp1       = 16.91e-9   lp1w      = 1.000
 + lp2       = 16.87e-9   lpck      = 2.703e-9   lpckw     = 134.5e-3
 + lvarl     = 0          lvarw     = 0          mueo      = 3.231
 + muew      = -392.4e-6  novo      = 9.010e24   npck      = 8.866e23
 + npckw     = 1.902e-3   npl       = -76.76e-3  npo       = 7.610e+25
 + nslpo     = 50.00e-3   nsubw     = -9.945e-3  qmc       = 1
 + rsbo      = 60.69e-3   rsgo      = -729.2e-3  rsw2      = 0
 + sta2o     = 0          stbetl    = -1.810e-3  stbetlw   = -2.000e-3
 + stbeto    = 1.881      stbetw    = 10.00e-3   stcso     = 0
 + stmueo    = 1.942      strso     = 681.7e-3   stthemuo  = -28.77e-3
 + stthesatl = 216.9e-3   stthesatlw = 0         stthesato = 1.128
 + stthesatw = 0          stvfbl    = -14.77e-3  stvfblw   = 0
 + stvfbo    = 921.9e-6   stvfbw    = -26.05e-3  stxcoro   = 0
 + themuo    = 878.2e-3   thesatbo  = 0          thesatgo  = 139.0e-3
 + thesatl   = 859.53e-3  thesatlexp = 704.2e-3  thesatlw  = 20.00e-3
 + thesato   = 190.0e-3   thesatw   = 29.59e-3   vfbl      = 22.53e-3
 + vfblw     = vfblw_dgp  vfbw      = -12.10e-3  vnsubo    = 0
 + vpo       = 90.14e-3   wbet      = 22.61e-9   wot       = 0
 + wseg      = 1.000e-10  wsegp     = 3.724e-9   wvarl     = 0       
 + wvarw     = 0          xcorl     = 0          xcorlw    = 23.11e-3
 + xcoro     = 44.41e-18  xcorw     = 0
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 + gcoo      = 0          iginvlw   = 0          igovw     = 0
 + gc2o      = 0.375      gc3o      = 0.063      chibo     = 3.1
 + stigo     = 2          agidlw    = 1.562e-3   bgidlo    = 15
 + cgidlo    = 0          stbgidlo  = 0
 ***************************************************************************
 * sti stress model parameters
 ***************************************************************************
 + saref     = 3e-6       sbref     = 3e-6       wlod      = 0
 + kuo       = 4e-8       kvsat     = -0.2       tkuo      = 0
 + lkuo      = 0          wkuo      = 0          llodkuo   = 0
 + wlodkuo   = 0          kvtho     = 0          lkvtho    = 0
 + wkvtho    = 0          pkvtho    = 0          llodvth   = 0
 + wlodvth   = 0          stetao    = 0          lodetao   = 1
 ***************************************************************************
 * junction diode parameters
 ***************************************************************************
 + trj       = 25
 ***************************************************************************
 *   capacitance parameters
 ***************************************************************************
 + cjorbot   = cj_dgp       cjorsti   = cjsw_dgp     cjorgat   = cjsg_dgp
 + vbirbot   = pb_dgp       vbirsti   = pbsw_dgp     vbirgat   = pbsg_dgp
 + pbot      = mj_dgp       psti      = mjsw_dgp     pgat      = mjsg_dgp
 ***************************************************************************
 *   ideal current parameters
 ***************************************************************************
 + idsatrbot = js_dgp       idsatrsti = jsw_dgp      idsatrgat = jsw_dgp
 + phigbot   = 1.048        phigsti   = 1.048        phiggat   = 1.048
 + csrhbot   = 0            csrhsti   = 0            csrhgat   = 0
 + xjunsti   = 1e-07        xjungat   = 1e-07
 ***************************************************************************
 *   trap-assisted tunneling parameters
 ***************************************************************************
 + ctatbot   = 0          ctatsti   = 0          ctatgat   = 0
 + mefftatbot= 0.25       mefftatsti= 0.25       mefftatgat= 0.25
 ***************************************************************************
 *   band-to-band tunneling parameters
 ***************************************************************************
 + cbbtbot   = 0          cbbtsti   = 0          cbbtgat   = 0
 + fbbtrbot  = 1e9        fbbtrsti  = 1e9        fbbtrgat  = 1e9
 + stfbbtbot = 0          stfbbtsti = 0          stfbbtgat = 0
 ***************************************************************************
 *   avalanche and breakdown parameters
 ***************************************************************************
 + vbrbot    = 1001       vbrsti    = 1001       vbrgat    = 1001
 + pbrbot    = 4          pbrsti    = 4          pbrgat    = 4
 ***************************************************************************
 * noise parameters
 ***************************************************************************
 + nfalw     = '2.45e25*noiamult'
 + nfblw     = '3.15e9*noibmult'
 + nfclw     = '6.5e-8*noicmult'
 + lintnoi   = -3.5e-8
 + alpnoi    = 2
 + efo       = 1.15
 + fnto      = ntnoi_dgpfet
 ***************************************************************************
 .ends dgpfetpsp_rf
 *.include './diffhavar.inc'
 .include './diffncap.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/diffncap.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.1 09/10/26 12:17:16
 *
 *>  ibm 8rf diffncap   differential nmos varactor
 *
 ****************************************************************************
 *
 *  syntax:  xxx (ga gb nw sx) diffncap
 *            +     l = 2u    <- length (m)
 *            +     w = 2u    <- width  (m)
 *            +    nf = 2     <- total number of gates
 *            + dtemp = 0     <- temp rise from ambient (deg c)
 *            +   rsx = 50    <- substrate resistance
 *
 *                            .--------------------.
 *                            |                    |
 *                            |<-------- l-------->|
 *                            |                    |
 *                       .----|--------------------|-----.
 *                       |    |          ^         |     | rx
 *                       |  s |          |         |  d  |
 *                       |    |          w         |     |
 *                       |    |          |         |     |
 *                       |    |          v         |     |
 *                        ----|--------------------|-----
 *                            |                    |
 *                            |          pc        |
 *                            |                    |
 *                             --------------------
 * 
 *
 * notes:
 *
 *
 *                        o (ga)            o (gb)
 *                        |                 |
 *                        |        cgg      |
 *                        +--------||-------+
 *                        |                 |
 *                        |                 |
 *                        /                 /
 *                   rg1  \            rg2  \
 *                        /                 /
 *                        |                 |
 *                 +-----(a)         +-----(b)
 *                 |      |          |      |
 *                 |      |          |      |
 *                 | xca1 =          | xca2 =
 *                 |      |          |      |
 *                 |      |          |      |
 *                 |    (aa)         |    (bb)
 *             cf1 =      |      cf2 =      |
 *                 |      |          |      |
 *                 |      /          |      /
 *                 |  rn1 \          |  rn2 \
 *                 |      /          |      /
 *                 |      |          |      |
 *                 |      |          |      |
 *                 +------+----------+-----(c)--/\/\/\--o (nw)
 *                                          |                   
 *                                          |
 *                                        - - -
 *                                         / \
 *                                     dcx - -
 *                                          |
 *                                          |
 *                                     (sx) o substrate
 *
 *
 * ibm confidential
 * (c) 2009 ibm corporation
 *
 ****************************************************************************
 *
 .subckt diffncap (ga gb nw sx)  l=2u w=2u nf=2 dtemp=0 rsx=50
 *
 *---- drawn geometry -------------------------------------------------------
 + pl = 'max(l,0.24u)'
 + pw = 'max(w,1.0u)'
 *
 *---- drawn geometry + mask bias -------------------------------------------
 + plf  = 'pl + lwbpc'
 + pwf  = 'pw + delrx'
 *
 *---- area/perimeter calculations ------------------------------------------
 *  device values
 + pnf  = 'max(2*int(nf/2),2)'
 + cknf = '(pnf==2)'
 + pareac = 'plf * pwf * pnf'
 *  nwell values
 + lnw      = '(2*0.9u) + ((pnf-1)*0.24u) + (pnf*pl)'
 + wnw      = '(2*0.96u) + pw'
 + areanw   = 'lnw * wnw'
 + perimnw  = '2 * (lnw + wnw)'
 *
 *---- rx and pc fringe cap ------------------------------------------------- 
 + prxfrng = 0.174n
 + pcapof  = 0.161n
 + pcof    = '2*pnf*(pwf*pcapof + plf*prxfrng)'
 *
 *---- m1 to m1 paracap -----------------------------------------------------
 + pcmet = '100p*(pw+0.49u)*(pnf-1)'
 *
 *---- nw resistance --------------------------------------------------------
 *  prundr is the resistance under the gates
 *  prbtwn is the resistance between the gates
 *  the nwrs is multiplied by 0.9 since the nw is covered by rx and not sti
 + prundr   = '0.9*nwrs*plf/pwf'
 + prbtwn   = '0.9*nwrs*0.24u/pwf'
 + prend    = '(prundr/2 + prbtwn)/2'
 + prmid    = '(prundr/3 + prbtwn)/max(1,(pnf-3))'
 + prnw     = '(1-cknf)*prend*prmid/(prend+prmid) + cknf*(2*prundr/3 + prbtwn)'
 *  this next bit is the resistance to the nw contacts: horizontal and vertical terms
 *  rnwx is the width of the rx making contact
 *  rnwwi/rnwli is the width/length of the nw region
 *  rundr is the resistance of getting out from under the gates
 *  rtrap is the resistance of the trapizodal region to the contacts
 *  rucon is the resistance under the nw contacts
 + rnwx = 0.28u
 + rnwwi = 'wnw - 2*0.96u'
 + rnwli = 'lnw - 2*0.9u'
 + rundrw = '0.9*(nwrs/16)*rnwli/rnwwi'
 + ruconw = '0.9*nwrs*(0.32u/(6*pwf)+rnwx/(6*rnwwi))'
 + rvertw = '125p/((0.32*pwf + rnwx*rnwwi)*2)'
 + rnwcnw  = 'rundrw + ruconw + rvertw'
 + rundrl = '0.9*(nwrs/16)*rnwwi/rnwli'
 + rtrapl = '(nwrs/4)*log(1.0+0.64u/rnwli)'
 + ruconl = '0.9*nwrs*rnwx/(6*(rnwli+0.64u))'
 + rvertl = '125p/(rnwx*(rnwli+0.64u)*2)'
 + rnwcnl  = 'rundrl + rtrapl + ruconl + rvertl'
 + prnwcon  = 'rnwcnw*rnwcnl/(rnwcnw+rnwcnl)'
 *
 *---- gate resistance ------------------------------------------------------
 *  this consists of three parts: contacts, length of gate,
 *  and a vertical resistance down through the gate and into underlying nw
 + pnca     = 'int((pl-0.2u)/0.40u)+1'
 + prgate   = '9.0/(2*pnca) + pcrsi*pwf/(12*plf) + oppcrenf*1.0u/(pwf*plf)'
 *

 *  subcircuit
 rg1  ga   a  r='max(2*prgate/pnf,0)'  dtemp=dtemp tc1=tpcrsi
 xca1   a  aa  mosvarcap 
 +   pl_va = 'plf-0.05u'
 +   pw_va = pwf
 +  pnf_va = 'pnf/2'
 +   co_va = co_mv
 +  cot_va = 0.21m
 +   qs_va = qs_mv 
 +   qp_va = qp_mv 
 +  pon_va = pon_mv 
 + pont_va = 15m 
 +  vbi_va = vbi_mv
 + vbit_va = 'vbi_mv*8m' 
 +  lk1_va = 150u
 +  lk2_va = 10.7
 +  lk3_va = 6.8
 + lk1t_va = 0m
 + deltemp = 'temper+dtemp-25'
 xced1  a  aa  mosvarcap
 +   pl_va = 0.05u
 +   pw_va = pwf
 +  pnf_va = 'pnf/2'
 +   co_va = '1.04*co_mv'
 +  cot_va = 0.21m
 +   qs_va = '1.09*qs_mv' 
 +   qp_va = 7.5m 
 +  pon_va = 19m 
 + pont_va = 15m 
 +  vbi_va = 0.077
 + vbit_va = 385u 
 +  lk1_va = 150u
 +  lk2_va = 10.7
 +  lk3_va = 6.8
 + lk1t_va = 0m
 + deltemp = 'temper+dtemp-25'
 cf1   a   c  c='pcof/2'
 rn1  aa   c  r='prnw/2' dtemp=dtemp tc1=tnwrs
 rg2  gb   b  r='max(2*prgate/pnf,0)'  dtemp=dtemp tc1=tpcrsi
 xca2   b  bb  mosvarcap 
 +   pl_va = 'plf-0.05u'
 +   pw_va = pwf
 +  pnf_va = 'pnf/2'
 +   co_va = co_mv
 +  cot_va = 0.21m
 +   qs_va = qs_mv 
 +   qp_va = qp_mv 
 +  pon_va = pon_mv 
 + pont_va = 15m 
 +  vbi_va = vbi_mv
 + vbit_va = 'vbi_mv*8m' 
 +  lk1_va = 150u
 +  lk2_va = 10.7
 +  lk3_va = 6.8
 + lk1t_va = 0m
 + deltemp = 'temper+dtemp-25'
 xced2  b  bb  mosvarcap
 +   pl_va = 0.05u
 +   pw_va = pwf
 +  pnf_va = 'pnf/2'
 +   co_va = '1.04*co_mv'
 +  cot_va = 0.21m
 +   qs_va = '1.09*qs_mv' 
 +   qp_va = 7.5m 
 +  pon_va = 19m 
 + pont_va = 15m 
 +  vbi_va = 0.077
 + vbit_va = 385u 
 +  lk1_va = 150u
 +  lk2_va = 10.7
 +  lk3_va = 6.8
 + lk1t_va = 0m
 + deltemp = 'temper+dtemp-25'
 cf2   b   c  c='pcof/2'
 rn2  bb   c  r='prnw/2' dtemp=dtemp tc1=tnwrs
 cgg  ga  gb  c='pcmet'
 rnw  nw   c  r='prnwcon' dtemp=dtemp tc1=tnwrs
 dsx  sx   c  nwsxd  area='areanw' pj='perimnw' dtemp=dtemp
 *
 *---- nwell-to-sub diode ---------------------------------------------------
 .model nwsxd d
 + level = 1
 +  dcap = 2
 +  tlev = 2
 + tlevc = 1
 +  tref = 25
 +    eg = 1.12
 +   xti = 3.0
 +  gap1 = 473u
 +  gap2 = 636
 +    rs = 'rsx*areanw'
 +     n = n_nw
 +    js = js_nw
 +   jsw = jsw_nw
 +    cj = cj_nw
 +   cta = cta_nw
 +    pb = pb_nw
 +   tpb = pta_nw
 +     m = mj_nw
 +   cjp = cjsw_nw
 +   ctp = ctp_nw
 +   php = pbsw_nw
 +  tphp = ptp_nw
 +  mjsw = mjsw_nw
 +    vb = bd_nw
 *
 .ends diffncap
 .include './diodenx.inc'
 * path, component, release: cmos8base/rel/hspice/models/diodenx.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.1 06/02/27 19:32:11
 *
 *>  ibm cmrf8sf/bicmos8wl diodenx    n+ to substrate junction diode
 *
 ***********************************************************************
 *
 *  model can be used in conjunction with the design system extraction
 *  program which calculates/combines junction parasitic capacitance
 *  per node.
 *
 *                  o  n+ (nd)
 *                  |
 *       +----------+
 *       |          |
 *      /\        ----
 *     /  \ gleak  /\   dnsx
 *     \  /       /  \         diode includes junction capacitance
 *      \/        ----         and forward bias current parameters.
 *       |          |
 *       +----------+
 *                  |
 *                  o  substrate (sx)
 *
 ***********************************************************************
 *
 *  syntax:     specify both area and perimeter:
 *              xxx  sx nd  diodenx (area=1p  perim=1u  dtemp=0)
 *
 *
 *  notes:
 *
 *  1. node order must be as specified.
 *
 *  2. units for input parameters are meters**2 (area) and meters (perim).
 *
 *
 * ibm confidential
 * (c) 2005 ibm corporation
 *                                
 ***********************************************************************
 *
 .subckt diodenx  sx nd  area=1p  perim=1u dtemp=0
 + lk1 = 'lk1a_n*area + lk1p_n*perim'
 + lk3 = 'lk3a_n*area + lk3p_n*perim'

 dnsa   sx nd  dnsx  area=area  pj=perim  dtemp=dtemp
 gleak  sx nd  cur='lk1*pwr(v(sx,nd),1) + lk3*pwr(v(sx,nd),3)'

 * n+ to sx diode
 *
 .model dnsx d
 + level = 1
 +  dcap = 2
 +  tlev = 0
 + tlevc = 1
 +  tref = 25
 +    eg = 1.17
 +   xti = 3.0
 +    js = js_n
 +   jsw = jsw_n
 +     n = n_n
 +    cj = cj_n
 +    pb = pb_n
 +    mj = mj_n
 +   cjp = cjsw_n
 +   php = pbsw_n
 +  mjsw = mjsw_n
 +   cta = cta_n
 +   tpb = pta_n
 +   ctp = ctp_n
 +  tphp = ptp_n
 +    vb = bd_n

 .ends diodenx
 .include './diodenwx.inc'
 * path, component, release: cmos8base/rel/hspice/models/diodenwx.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.2 08/03/17 07:41:54
 *
 *>  ibm cmrf8sf/bicmos8wl diodenwx   nwell to substrate junction diode
 *
 ***********************************************************************
 *
 *  model can be used in conjunction with the design system extraction
 *  program which calculates/combines junction parasitic capacitance
 *  per node.
 *
 *                  o  nwell (nw)
 *                  |
 *       +----------+
 *       |          |
 *      /\        ----
 *     /  \ gleak  /\  dnwx 
 *     \  /       /  \         diode includes junction capacitance
 *      \/        ----         and forward bias current parameters.
 *       |          |
 *       +----------+
 *                  |
 *                  o  substrate (sx)
 *
 ***********************************************************************
 *
 *  syntax:     specify both area and perimeter:
 *              xxx  sx nw  diodenwx (area=1p  perim=1u  dtemp=0)
 *
 *
 *  notes:
 *
 *  1. node order must be as specified.
 *
 *  2. units for input parameters are meters**2 (area), meters (perim).
 *
 *
 * ibm confidential
 * (c) 2008 ibm corporation
 *                                
 ***********************************************************************
 *
 .subckt diodenwx  sx nw  area=1p  perim=1u dtemp=0 t3well=0
 + lk1 = 'lk1a_nw*area + lk1p_nw*perim'
 + lk3 = 'lk3a_nw*area + lk3p_nw*perim'
 *
 dnwa   sx nw  dnwx  area=area  pj=perim  dtemp=dtemp
 gleak  sx nw  cur='lk1*pwr(v(sx,nw),1) + lk3*pwr(v(sx,nw),3)'
 *
 * nw to sx diode

 .model dnwx d
 + level = 1
 +  dcap = 2
 +  tlev = 0
 + tlevc = 1
 +  tref = 25
 +    eg = 1.17
 +   xti = 3.0
 +     n = n_nw
 +    js = js_nw
 +   jsw = jsw_nw
 +    cj = cj_nw
 +    pb = pb_nw
 +    mj = mj_nw
 +   cjp = cjsw_nw
 +   php = pbsw_nw
 +  mjsw = mjsw_nw
 +   cta = cta_nw
 +   tpb = pta_nw
 +   ctp = ctp_nw
 +  tphp = ptp_nw
 +    vb = bd_nw

 .ends diodenwx
 .include './diodepisx.inc'
 * path, component, release: cmos8base/rel/hspice/models/diodepisx.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.4 08/12/04 14:02:02
 *
 *> ibm cmrf8sf/bicmos8wl diodepisx n-isolation(pi) to substrate(sx) junction diode
 *
 ***********************************************************************
 *
 *  model can be used in conjunction with the design system extraction
 *  program which calculates/combines junction parasitic capacitance
 *  per node.
 *
 *                  o  n-iso (ni)
 *                  |
 *       +----------+
 *       |          |
 *      /\        ----
 *     /  \ gleak  /\   dpisx
 *     \  /       /  \         diode includes junction capacitance,
 *      \/        ----         resistance and sat current parameters.
 *       |          |
 *       +----------+
 *                  |
 *                  o  substrate (sx)
 *
 ***********************************************************************
 *
 *  syntax:     specify both area and perimeter:
 *              xxx  sx ni  diodepisx (area=1p  perim=1u  dtemp=0)
 *
 *
 *  notes:
 *
 *  1. node order must be as specified.
 *
 *  2. units for input parameters are meters**2 (area) and meters (perim).
 *
 *
 * ibm confidential
 * (c) 2008 ibm corporation
 *
 ***********************************************************************
 *
 .subckt diodepisx  sx ni  area=1p  perim=1u  dtemp=0 t3well=0
 + lk1 = '(lk1a_pix*area + lk1p_pix*perim)*(1-t3well) + (lk1a_t3x*area + lk1p_t3x*perim)*t3well'
 + lk3 = '(lk3a_pix*area + lk3p_pix*perim)*(1-t3well) + (lk3a_t3x*area + lk3p_t3x*perim)*t3well'
 *
 dpn    sx ni  dpisx area=area  pj=perim  dtemp=dtemp
 gleak  sx ni  cur='lk1*pwr(v(sx,ni),1) + lk3*pwr(v(sx,ni),3)'

 * n-isolation to sx diode
 *
 .model dpisx d 
 + level = 1
 +  dcap = 2
 +  tlev = 2
 + tlevc = 1
 +  tref = 25
 +    eg = 1.12
 +   xti = 3.0
 +  gap1 = 473u
 +  gap2 = 636
 +    js = 'js_pix *(1-t3well) + js_t3x*t3well'
 +   jsw = 'jsw_pix *(1-t3well) + jsw_t3x*t3well'
 +     n = 'n_pix *(1-t3well) + n_t3x*t3well'
 +    cj = 'cj_pix*(1-t3well) + cj_t3x*t3well'
 +    pb = 'pb_pix*(1-t3well) + pb_t3x*t3well'
 +    mj = 'mj_pix*(1-t3well) + mj_t3x*t3well'
 +  cjsw = 'cjsw_pix*(1-t3well) + cjsw_t3x*t3well'
 +   php = 'pbsw_pix*(1-t3well) + pbsw_t3x*t3well'
 +  mjsw = 'mjsw_pix*(1-t3well) + mjsw_t3x*t3well'
 +   cta = 'cta_pix *(1-t3well) + cta_t3x*t3well'
 +   tpb = 'pta_pix *(1-t3well) + pta_t3x*t3well'
 +   ctp = 'ctp_pix *(1-t3well) + ctp_t3x*t3well'
 +  tphp = 'ptp_pix *(1-t3well) + ptp_t3x*t3well'
 +    vb = 'bd_pix  *(1-t3well) + bd_t3x*t3well'

 .ends diodepisx
 .include './diodepnw.inc'
 * path, component, release: cmos8base/rel/hspice/models/diodepnw.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.1 06/02/27 19:32:16
 *
 *>  ibm cmrf8sf/bicmos8wl diodepnw   p+ diffusion to nwell junction diode
 *
 ***********************************************************************
 *
 *  model can be used in conjunction with the design system extraction
 *  program which calculates/combines junction parasitic capacitance
 *  per node.
 *
 *                  o  p+ (pd)
 *                  |
 *       +----------+
 *       |          |
 *      /\        ----
 *     /  \ gleak \  /   dpnw
 *     \  /        \/          diode includes junction capacitance
 *      \/        ----         and forward bias current parameters.
 *       |          |
 *       +----------+
 *                  |
 *                  o  n well (nw)
 *
 ***********************************************************************
 *
 *  syntax:     specify both area and perimeter:
 *              xxx  pd nw  diodepnw (area=1p  perim=1u  dtemp=0)
 *
 *
 *  notes:
 *
 *  1. node order must be as specified.
 *
 *  2. units for input parameters are meters**2 (area), meters (perim).
 *
 *
 * ibm confidential
 * (c) 2005 ibm corporation
 *                                
 ***********************************************************************
 *
 .subckt diodepnw  pd nw  area=1p  perim=1u  dtemp=0
 + lk1 = 'lk1a_p*area + lk1p_p*perim'
 + lk3 = 'lk3a_p*area + lk3p_p*perim'

 dpda   pd nw  dpnw  area=area  pj=perim  dtemp=dtemp
 gleak  pd nw  cur='lk1*pwr(v(pd,nw),1) + lk3*pwr(v(pd,nw),3)'

 * p+ to nwell diode
 *
 .model dpnw d
 + level = 1
 +  dcap = 2
 +  tlev = 0
 + tlevc = 1
 +  tref = 25
 +    eg = 1.17
 +   xti = 3.0
 +     n = n_p
 +    js = js_p
 +   jsw = jsw_p
 +    cj = cj_p
 +    pb = pb_p
 +    mj = mj_p
 +   cjp = cjsw_p
 +   php = pbsw_p
 +  mjsw = mjsw_p
 +   cta = cta_p
 +   tpb = pta_p
 +   ctp = ctp_p
 +  tphp = ptp_p
 +    vb = bd_p

 .ends diodepnw
 .include './diodepwpi.inc'
 * path, component, release: cmos8base/rel/hspice/models/diodepwpi.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.3 08/12/04 14:02:09
 *
 *> ibm cmrf8sf/bicmos8wl diodepwpi    pwell to n-isolation(pi) junction diode
 *
 ***********************************************************************
 *
 *  model can be used in conjunction with the design system extraction
 *  program which calculates/combines junction parasitic capacitance
 *  per node.
 *
 *                  o  pwell (pw)
 *                  |
 *       +----------+
 *       |          |
 *      /\        ----
 *     /  \ gleak \  / dpwpi 
 *     \  /        \/          diode includes junction capacitance,
 *      \/        ----         resistance and sat current parameters.
 *       |          |
 *       +----------+
 *                  |
 *                  o   n-iso (ni)
 *
 ***********************************************************************
 *
 *  syntax:     specify both area and perimeter:
 *              xxx  pw ni  diodepwpi (area=1p  perim=1u  dtemp=0)
 *
 *
 *  notes:
 *
 *  1. node order must be as specified.
 *
 *  2. units for input parameters are meters**2 (area) and meters (perim).
 *
 *
 * ibm confidential
 * (c) 2008 ibm corporation
 *
 ***********************************************************************
 * 
 .subckt diodepwpi  pw ni  area=1p  perim=1u  dtemp=0 t3well=0
 + lk1 = '(lk1a_pwi*area + lk1p_pwi*perim)*(1-t3well) + (lk1a_pwt3*area + lk1p_pwt3*perim)*t3well'
 + lk3 = '(lk3a_pwi*area + lk3p_pwi*perim)*(1-t3well) + (lk3a_pwt3*area + lk3p_pwt3*perim)*t3well'
 *
 dpn    pw ni  dpwpi  area=area  pj=perim  dtemp=dtemp
 gleak  pw ni  cur='lk1*pwr(v(pw,ni),1) + lk3*pwr(v(pw,ni),3)'

 * p well to n-isolation diode
 *
 .model dpwpi d 
 + level = 1
 +  dcap = 2
 +  tlev = 2
 + tlevc = 1
 +  tref = 25
 +    eg = 1.12
 +   xti = 3.0
 +  gap1 = 473u
 +  gap2 = 636
 +    js = 'js_pwi *(1-t3well) + js_pwt3*t3well'
 +   jsw = 'jsw_pwi *(1-t3well) + jsw_pwt3*t3well'
 +     n = 'n_pwi *(1-t3well) + n_pwt3*t3well'
 +    cj = 'cj_pwi*(1-t3well) + cj_pwt3*t3well'
 +    pb = 'pb_pwi*(1-t3well) + pb_pwt3*t3well'
 +    mj = 'mj_pwi*(1-t3well) + mj_pwt3*t3well'
 +  cjsw = cjsw_pwi
 +   php = pbsw_pwi
 +  mjsw = mjsw_pwi
 +   cta = 'cta_pwi *(1-t3well) + cta_pwt3*t3well'
 +   tpb = 'pta_pwi *(1-t3well) + pta_pwt3*t3well'
 +   ctp = ctp_pwi
 +  tphp = ptp_pwi
 +    vb = 'bd_pwi  *(1-t3well) + bd_pwt3*t3well'

 .ends diodepwpi
 .include './dipdnw.inc'
 * path, component, release: cmos8base/rel/hspice/models/dipdnw.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.1 06/02/26 14:44:24
 *
 *>  ibm cmrf8sf/bicmos8wl  dipdnw    p+ nwell diode - voltage reference diode
 *
 ***********************************************************************
 *
 *                         anode  o
 *                                |
 *                                |
 *                               ----    
 *                      p+ nwell \  /      
 *                         diode  \/          
 *                               ----    
 *                                |      
 *                                |      
 *                                |            
 *                            sx  o   
 *                                    
 ***********************************************************************
 *
 *  dimensions: w = design width  of rx
 *              l = design length of rx
 *
 *  syntax:     specify both width and length and number of fingers:
 *              xxx  a  sx dipdnw (w=2u  l=5u  nf=1)
 *
 *  optional:   dtemp --> device temperature difference with respect to
 *                        the simulated circuit temperature (deg c).
 *
 *                par --> explicit multiplicity: number of devices wired 
 *                        in parallel
 *  
 *  notes:
 *
 *  1. model supports only rectangular diode with cathode connected to
 *     ground (sx).
 *
 * ibm confidential
 * (c) 2006 ibm corporation
 *                                
 ***********************************************************************
 *
 .subckt dipdnw  a  sx  w=2u  l=5u  nf=1  par=1 dtemp=0 

 .param
 *---- drawn geometry ----------------------------------------------------------
 +     e2nwc = 0.64u                              
 +      wnwc = 0.28u                              
 +     e2nwe = 0.92u                              
 +       wnw = 'w*nf + (nf-1)*(2*e2nwc+wnwc) + 2*e2nwe' 
 +       lnw = 'l+2*e2nwe'                          
 +    nw2sxc = 0.26u                              
 +      wsxc = 0.28u                              
 *
 *---- drawn geometry + mask bias ----------------------------------------------
 * check for minimum/maximum width, calculate effective width
 +       anw = 'max(w,1.0u)'
 +    anodew = 'min(anw,2.0u) + delrx'
 * check for minimum length, calculate effective length
 +    anodel = 'max(l,2.0u) + delrx'
 +      wnwx = 'wnw + delnw'
 +      lnwx = 'lnw + delnw'
 *
 *---- effective area, perimeter dimensions ------------------------------------
 +      tota = 'anodew*anodel*nf'                   
 +      totp = '2*(anodew+anodel)*nf'              
 +    areanw = 'wnwx*lnwx'                          
 +   perimnw = '2*(wnwx+lnwx)'                      
 *
 *
 * ---- calculate the series resistance ----------------------------------------
 +       lbh = 'e2nwc' 
 +       wbh = 'l + 2*e2nwc'
 +      prbh = '(nwrs/(2*nf))*log(wbh/l)/2'         
 +     prbhc = '(nwrs/(6*nf))*(wnwc/(l+2*e2nwc))'   
 +      prbv = 'nrnw/((l+2*e2nwc)*wnwc*(nf+1))'     
 +      bmet = '(m1rs/(nf+1))*(l+2*e2nwe)/(0.42e-6)'
 +       prb = '1.0*(prbh + prbhc + prbv + bmet)'         
 *
 +     fracr = 'jsw_p*totp/(js_p*tota + jsw_p*totp)'
 +     fracp = '2*(anodel+anodew*nf)/totp'
 +     fraca = '(anodel*anodew+(nf-1)*anodew*anodew/2)/tota'
 +     xpout = 0.27
 +      xpin = 0.30
 +        xa = 0.40
 +  iboverie = 'xpout*fracp*fracr + xpin*(1-fracp)*fracr  + xa*(1-fracr)'
 +     rstot = 'iboverie*prb'
 *
 * ---- mis-match calculation ------------------------------------------------
 + dioma   = 'dima * dima / (anodew * anodel * nf * 1e12)'
 + dioml   = 'diml * diml / (anodel * anodel * nf * nf * 1e12)'
 + diomw   = 'dimw * dimw / (anodew * anodew * 1e12)'
 + dio3sig = '0.01 * sqrt(dioma + dioml + diomw)'
 + diomm   = 'dio3sig * 0.7071 / sqrt(par)'
 + mmdio  = agauss(0,1,3)
 + mmatd  = '1 + (diomm * mmdio)'

 *  diode network
 dpri  a  sx   didio  area=tota  pj=totp  dtemp=dtemp

 * p+ to nw diode
 * rs is multiplied by area as rstot is acutal resistance and rs 
 *   gets divided by area of device
 *
 .model didio d
 + level = 1
 +  dcap = 2
 +  tlev = 2
 + tlevc = 1
 +  tref = 25
 +    eg = 1.12
 +   xti = 3.0
 +  gap1 = 473u
 +  gap2 = 636
 +    rs = 'rstot*tota'
 +     n = 1.0025
 +    js = 'js_p*(1 + tdeldi)*mmatd'
 +   jsw = 'jsw_p*(1 + tdeldi)*mmatd'
 +    cj = cj_p
 +    pb = pb_p
 +    mj = mj_p
 +   cjp = cjsw_p
 +   php = pbsw_p
 +  mjsw = mjsw_p
 +    vb = 11.0

 .ends dipdnw
 .include './divpnp.inc'
 * path, component, release: cmos8base/rel/hspice/models/divpnp.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.1 06/02/26 14:45:50
 *
 *>  ibm cmrf8sf/bicmos8wl  divpnp     di diode (band gap reference diode)  bjt model
 *
 *******************************************************************************
 *
 * syntax: xxx (sx nw a) divpnp 
 *         +        w = 2u    <- width of the emitter                        
 *         +        l = 5u    <- length of the emitter             
 *         +       nf = 1       <- number of emitter fingers     
 *         +      par = 0       <- explicit multiplicity
 *         +    dtemp = 0       <- device temp rise from ambient (deg c)
 *
 ***********************************************************************
 *                               
 *                         anode  o                  e  o
 *                                |                     |
 *                                |                     |
 *                               ----                   |
 *                      p+ nwell \  /                   |
 *                         diode  \/                    |
 *                               ----                   /
 *                                |                    /
 *                                |                 |</
 *                                |                 |
 *                         nw/nt  o   ===>   b  o---|
 *                                |                 |
 *                                |                 |\
 *                               ----                 \ 
 *                      nwell/sx  /\                   \
 *                         diode /  \                   |
 *                               ----                   |
 *                                |                     |
 *                                |                     |
 *                                |                     |
 *                            sx  o                  c  o   
 *                                    
 ***********************************************************************
 * ibm confidential
 * (c) 2006 ibm corporation
 *
 *******************************************************************************
 *
 .subckt divpnp sx nw a  w=2u  l=5u  nf=1  par=1  dtemp=0

 .param
 *---- drawn geometry ----------------------------------------------------------
 +     e2nwc = 0.64u                              
 +      wnwc = 0.28u                              
 +     e2nwe = 0.92u                              
 +       wnw = 'w*nf + (nf-1)*(2*e2nwc+wnwc) + 2*e2nwe' 
 +       lnw = 'l+2*e2nwe'                          
 +    nw2sxc = 0.26u                              
 +      wsxc = 0.28u                              
 *
 *---- drawn geometry + mask bias ----------------------------------------------
 * check for minimum/maximum width, calculate effective width
 +       anw = 'max(w,1.0u)'
 +    anodew = 'min(anw,2.0u) + delrx'
 * check for minimum length, calculate effective length
 +    anodel = 'max(l,2.0u) + delrx'
 +      wnwx = 'wnw + delnw'
 +      lnwx = 'lnw + delnw'
 *
 *---- effective area, perimeter dimensions ------------------------------------
 +      tota = 'anodew*anodel*nf'                   
 +      totp = '2*(anodew+anodel)*nf'              
 +    areanw = 'wnwx*lnwx'                          
 +   perimnw = '2*(wnwx+lnwx)'                      
 *
 *---- current gain parameters (gummel poon) -----------------------------------
 *     this divides up the emitter-base current into area and perimeter 
 *     contributions (fracr) and the portions on the exterior and interior 
 *     (fracp and fraca).  the coefficients give the portion of emitter current
 *     from each of these contributions that exits the device through the base
 *     
 +     fracr = 'jsw_p*totp/(js_p*tota + jsw_p*totp)'
 +     fracp = '2*(anodel+anodew*nf)/totp'
 +     fraca = '(anodel*anodew+(nf-1)*anodew*anodew/2)/tota'
 +     xpout = 0.27
 +      xpin = 0.30
 +        xa = 0.40
 +  iboverie = 'xpout*fracp*fracr + xpin*(1-fracp)*fracr  + xa*(1-fracr)'
 +       pbf = '(1.0/iboverie) - 1.0'               
 *     this is a similar thing in dividing up the collector-base junction current
 *     into area and perimter components (fracrc).  the coefficients give the
 *     portion of each of these that flow out the base contact (nearly all).
 +    fracrc = 'jsw_nw*perimnw/(js_nw*areanw + jsw_nw*perimnw)'
 +        yp = 1.00                              
 +        ya = 0.99
 +  iboveric = 'yp*fracrc +ya*(1-fracrc)'
 +       pbr = '(1.0/iboveric) - 1.0'               
 *
 *---- emission coefficients ---------------------------------------------------
 +       pnf = 1.0025                              
 +       pnr = 1.02
 +      pnen = 1.55
 +      pncn = 2.0
 *
 *---- vpnp saturation currents ------------------------------------------------
 +      pibe = '(js_p*tota + jsw_p*totp)*(1-iboverie)' 
 +      pibc = '(js_nw*areanw + jsw_nw*perimnw)*(1-iboveric)' 
 +      pise = '6e-6*tota'                      
 +      pisc = 0                                  
 *
 *---- knee currents -----------------------------------------------------------
 *      pikf = 0
 *      pikr = 0              
 *
 *---- emitter resistance ------------------------------------------------------
 +      emet = '(m1rs/nf)*(l+e2nwe+nw2sxc)/w'
 +       pre = 'emet + 0p/tota'
 *
 *---- collector resistance ----------------------------------------------------
 +      weff = 'min(wnw,lnw)'
 +      leff = 'max(wnw,lnw)'
 +      wcon = 'weff+2*nw2sxc'
 +      lcon = 'leff+2*nw2sxc'
 *      the resistance is divided up into four parts:
 *      (1) rundr a parallel combination for under the anode 
 *      (2) rtrap for the combination of trapezoids from nwell to sx
 *      (3) rucon for under the contact itself, and
 *      (4) rvert for the vertical resistance up through contact
 +      rundr = 'pwrs*weff/(12*leff + 20*weff)'
 +      rtrap = '(pwrs/4)*log(wcon/weff)*log(lcon/leff)/(log(wcon/weff)+log(lcon/leff))'
 +      rucon = 'pwrs*wsxc/(6*(wcon+lcon))'
 +      rvert = 'rsubc/((wcon+lcon)*wsxc)'                   
 +        prc = 'rundr + rtrap + rucon + rvert'                         
 *
 *---- base resistance ---------------------------------------------------------
 +       lbh = 'e2nwc' 
 +       wbh = 'l + 2*e2nwc'
 +      prbh = '(nwrs/(2*nf))*log(wbh/l)/2'         
 +     prbhc = '(nwrs/(6*nf))*(wnwc/(l+2*e2nwc))'   
 +      prbv = 'nrnw/((l+2*e2nwc)*wnwc*(nf+1))'     
 +      bmet = '(m1rs/(nf+1))*(l+2*e2nwe)/(0.42e-6)'
 +       prb = '1.0*(prbh + prbhc + prbv + bmet)'         
 *
 *---- base-emitter capacitance ------------------------------------------------
 +      pcje = 'cj_p*tota + cjsw_p*totp'        
 +      pvje = 0.7                                
 +      pmje = 0.33                               
 *
 *---- base-coll capacitance ---------------------------------------------------
 +      pcjc = 'cj_nw*areanw + cjsw_nw*perimnw'     
 +      pvjc = 0.7                               
 +      pmjc = 0.33                               
 *
 *---- current limits ----------------------------------------------------------
 *     pimax = '1e6*iboverie*tota'                 
 *
 *---- mis-match calculation ----------------------------------------------------
 +   dioma   = 'dima * dima / (anodew * anodel * nf * 1e12)'
 +   dioml   = 'diml * diml / (anodel * anodel * nf * nf * 1e12)'
 +   diomw   = 'dimw * dimw / (anodew * anodew * 1e12)'
 +   dio3sig = '0.01 * sqrt(dioma + dioml + diomw)'
 +   diomm   = 'dio3sig * 0.7071 / sqrt(par)'
 +    mmdio  = agauss(0,1,3)
 +    mmatd  = '1 + (diomm * mmdio)'


 *---- vpnp model --------------------------------------------------------------
 q     sx nw a  qdipdnw area=1 areab=1 areac=1 dtemp=dtemp

 .model qdipdnw pnp
 + level=1
 + subs=1
 + dcap=2
 + tlev=2          
 + tlevc=1
 + tref=25
 + eg=1.13
 + xti=3.0
 + gap1=473u
 + gap2=636
 + xtb=0        
 + ibe='pibe*mmatd*(1+tdeldi)'
 + ibc=pibc
 + ise=pise       
 + isc=pisc       
 + iss=0           
 + nf=pnf
 + nr=pnr 
 + ne=pnen
 + nc=pncn
 + ns=1            
 + bf=pbf
 + br=pbr
 + re=pre
 + rc=prc
 + rb=prb
 + cje=pcje
 + vje=pvje
 + mje=pmje
 + cjc=pcjc
 + vjc=pvjc
 + mjc=pmjc
 + cjs=0           
 + xcjc=1
 + expli = 10

 .ends divpnp
 .include './dualmimcap.inc'
 * path, component, release: cmrf8sf/reldm/hspice/models/dualmimcap.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.3 08/11/21 11:42:36
 *
 *>  ibm cmrf8sf  dualmimcap      dual mim capacitor
 *
 ***********************************************************************
 *
 * the model is comprised of capacitors with series resistance and inductance.
 * the input (lower plate) has losses to substrate characterized by a capacitor
 * and series resistor.
 *
 *                    
 *                 
 *              
 *                 
 *       r1                      xc1       r2     
 *              |----|           | |            
 *  o--/\  /\---| l1 |-----|-----| |-----/\  /\---o out
 *  in   \/     |----|     |     | |       \/     
 *                         |                             
 *                       -----                           
 *                       -----  c3                       
 *                         |                             
 *                         |                             
 *                         \                             
 *                         /  r3                         
 *                         \  
 *                         |
 *                         |  reference plane
 *  o----------------------|----------------------o
 *
 ***********************************************************************
 *
 *  dimensions: w, l = design length of hy
 *
 *  syntax:     specify both length and width:
 *              xxx  in out ref  dualmimcap (l=100u w=100u)
 *
 *       or     specify length and capacitance (of lower qx):
 *              xxx  in out ref  dualmimcap (l=100u c=5p)
 *
 *  optional:   rsx   --> specifies the substrate resistance
 *
 *              est   --> include estimated bottom plate to substrate 
 *                        (or n-well) capacitance (default, est=1). turn
 *                        switch off (est=0) for extracted layout.
 *
 *              tlev1  --> indicates the number of thin metal levels present.
 *                         possible values are 2,3,and 4.  
 *
 *              tlev2 --> indicates the number of double thick metal levels
 *                        present.  tlev2 has a value of 1 when only mq is 
 *                        present, and 2 when mq and mg are present.
 *
 *              setind --> user determined value for the parasitic inductance.
 *                        the default value of -2, which is used as a switch,
 *
 *	       par  --> explicit multiplicity parameter
 *
 *              dtemp --> device temperature difference with respect to
 *                        the simulated circuit temperature (deg c).
 *
 *  notes:
 *
 *  1. node assignment  - node "in"  = hy and ly plates
 *                      - node "out" = qy plate
 *
 *  2. model assumes the following design/process targets:
 *
 *     - mim area capacitance = 4.10 mf/meter**2
 *     - mim dielectric thickness between qy, hy and ly = 330 angstroms
 *
 *  3. estimated bottom plate parasitic capacitance calculation assumes
 *     no devices placed under the mim. accurate parasitic capacitance
 *     value for cases with devices under mim can only be obtained from
 *     extracted layout.
 *
 *  4. the parasitic inductance included in this model is for the mim only,
 *     it does not include any connections to the mim.
 *     the inducance assumes the wiring is into the mim on one side
 *     and out of the mim on the opposite side. these two sides are assumed
 *     to be sides defined by the parameter w. for any other connection
 *     the inductance would be different than the model indicates.
 *
 * ibm confidential
 * (c) 2003 ibm corporation
 *                                
 ***********************************************************************
 .subckt dualmimcap in out ref l=100u w=-0.5 c=-0.5 rsx=50 est=1 tlev1=2 tlev2=1 setind=-2 dtemp=0 par=1 bp=3
 *
 * q level switch settings
 +  qlev   = 'tlev1+tlev2+1'
 +  q4     = '(qlev==4)'
 +  q5     = '(qlev==5)'
 +  q6     = '(qlev==6)'
 *
 * thick metal level switch
 +  twothk = 'tlev2 - 1'
 *
 * flag set to 1 if an invalid q level was selected by user
 +  q_error = '1 - (q4 + q5 + q6)'
 *
 * calculate width of device
 +  phl  = 'l + delhy '                            $ length of h level
 +  npql = 'l + 11.48u'
 +  pql  = 'npql + delqy'                          $ length of q level	
 *
 * calculate w
 +  whx  = '(c-ncmima*4u*npql-2*ncmimhp*(l+15.48u))/(ncmimha*l+ncmima*npql+2*ncmimhp)'
 *
 +  nphw = 'max(w,0) + abs(w-abs(w))*whx'
 +  npqw = 'nphw + 4u'
 +  phw  = 'nphw + delhy'                          $ width of h level
 +  pqw  = 'npqw + delqy'                          $ width of q level
 +  lyw = 'nphw + 8.0u + delly'
 +  lyl = 'l + 20.96u + delly'
 *
 * mis-match calculation
 +  mma   = '(4.0) / (nphw*l * 1e12)'
 +  mmw   = '(0.5) / (nphw*nphw * 1e12)'
 +  mml   = '(0.1) / (l*l * 1e12)'
 +  m3sig = '0.01 * sqrt(mma+mmw+mml) * 0.7071 / sqrt(par)'
 +  mmcap = agauss(0,1,3)
 +  mmatc = '1 + (m3sig * mmcap)'
 *
 * calculate total capacitance
 * the q plate's dimensions are used for the perimeter of the device
 +  pctot = '(cmimha*phw*phl+cmima*pqw*pql+2*cmimhp*(pql+pqw)) * mmatc * (1-q_error)'
 +  ptcc  = '1 + 15.3e-6 * (temper + dtemp - 25)'
 *
 * calculate number of ft vias present
 +  nftlh  = 'int((l+0.49u)/5.74u)'          $ e1 to h level
 +  nftwh  = 'int((nphw-2.00u)/3.24u)'       $ e1 to h level
 +  nftwq  = '2*int((nphw+2.00u)/3.24u)'     $ e1 to q level
 +  nftlyt = '2*int((nphw+8.00u)/3.24u)'     $ e1 to ly level
 +  he1w   = '(nftlh*3.24u) + dele1'       $ total width of e1 above h
 +  he1l   = 'nphw - 2.00u + dele1'
 +  qe1l   = 'nphw + 2.00u + dele1'
 +  qe1w   = '3.24u + dele1'
 +  e1lyl  = 'nphw + 8.00u + dele1'
 +  e1lyw  = '3.24u + dele1'
 *
 * via and wiring resistance calculations
 +  reshv  = 'prvft/(nftlh*nftwh)'                      $ h ft
 * resistance through h plate vertically, scaled by area, fitted coefficient
 +  reshth = '20.0e-11/(phw*phl)'
 +  reshp  = '(1/3)*e1rs*he1l/he1w'                     $ h e1 plate
 * resistance through q plate vertically, scaled by area, fitted coefficient
 +  resqth = '20.0e-11/(pql*pqw)'
 +  resqv  = 'prvft/nftwq + (1/2)*(1/3)*e1rs*qe1l/qe1w'    $ q ft and e1
 +  resqp  = '(1/12)*qyrs*pql/pqw'                           $ q plate 
 +  reslyv = 'prvft/nftlyt + (1/2)*e1rs*lyl/e1lyw + (1/2)*(1/3)*e1rs*e1lyl/e1lyw'  $ ly ft and e1 
 +  reslyp = '(1/12)*lyrs*lyl/lyw'                           $ ly plate
 *
 * add up the resistances in the appropriate manner
 +  resmid = 'resqv+resqp+resqth'  $ middle plate resistance
 +  restop = 'reshv+reshp+reshth'  $ top plate resistance
 +  resbot = 'reslyv+reslyp'	  $ bottom plate resistance
 +  resbtp = '(restop*resbot)/(restop+resbot)'	$ parallel sum for top and bot plate res 
 *
 * wiring inductance calculations
 * due to opposing current flows, inductance of the ly and qt plates
 * are assumed to cancel each other out and provide no net contribution to
 * the inductance of the device.
 *
 * inductance for the stripes of e1 that contact the ly plate
 +  inde1ly  = '(1/2)*0.2u*(2/3*e1lyl)*(log(2*(e1lyl)/(e1lyw+e1t))+0.5+(e1lyw+e1t)/(3*(e1lyl)))'   
 * inductance of the line that connects the 2 e1 to ly stripes
 +  inde1wr  = '(1/2)*0.2u*(2/3*lyl)*(log(2*(lyl)/(e1lyw+e1t))+0.5+(e1lyw+e1t)/(3*(lyl)))'   
 * inductance of the e1 lattice that contacts the ht plate
 +  inde1h   = '0.2u*(2/3*he1l)*(log(2*(he1l)/(he1w+e1t))+0.5+(he1w+e1t)/(3*(he1l)))'
 * inductance of the e1 stripes that contact the qt plate
 +  inde1q   = '(1/2)*0.2u*(2/3*qe1l)*(log(2*(qe1l)/(qe1w+e1t))+0.5+(qe1w+e1t)/(3*(qe1l)))'   
 * total inductance calculated or user provided value used
 +  indly    = 'inde1ly + inde1wr'             $ ly plate inductance
 +  indtop   = '(indly*inde1h)/(indly+inde1h)' $ indutance ly and h in parallel
 +  indtot   = 'indtop + inde1q'               $ total calculated inductance
 +  indval   = '(setind!=-2)*setind + (setind==-2)*indtot'
 *
 * calculate the stack height to groundplane from mim bottom plate
 * for 1 thick metal option
 + honethk1      = 'oppcstif+oppcthkf+capct+m1t+m1m2t+m2t'
 + honethk2      = '(qlev>4)*(m2m3t+m3t)+(qlev>5)*(m3m4t+m4t)'
 + honethk3      = 'mxmqt+mqt+mglyt'
 + honethk       = 'honethk1+honethk2+honethk3'
 *
 * calculate the stack height to groundplane from mim bottom plate
 * for 2 thick metal option
 + htwothk1      = 'oppcstif+oppcthkf+capct+m1t+m1m2t+m2t'
 + htwothk2      = '(qlev>5)*(m2m3t+m3t)'
 + htwothk3      = 'mxmqt+mqt+mqmgt+mgt+mglyt'
 + htwothk       = 'htwothk1+htwothk2+htwothk3'
 *
 * select proper thickness depending on thick levels present
 + h          = 'honethk*(1-twothk)+htwothk*twothk'
 *
 * calculate effective stack height reduction due to m1,m2,m3,m4,mq and mg fill
 + mflfrac    = '0.45'
 + mtldtone   = '-2*mflfrac*(m1t+m2t+m3t*(qlev>4)+m4t*(qlev>5)+mqt)'
 + mtldttwo   = '-2*mflfrac*(m1t+m2t+m3t*(qlev>5)+mqt+mgt)'
 + mtldt      = 'mtldtone*(1-twothk)+mtldttwo*twothk'
 *
 * calculate effective stack height reduction due to rx fill 
 + rxflfrac = '0.45'
 + rxdt     = '-2*rxflfrac*oppcstif'
 * calculate effective stack height reduction due to pc fill 
 + pcflfrac = '0.25'
 + pcdt     = '-2*pcflfrac*oppcthkf'
 *
 * calculate total effective stack height delta
 + totdt    = 'mtldt+pcdt+rxdt'
 *
 * calculate effective stack height
 + heffec   = 'h+totdt'
 *
 * calculate area and perimeter capacitance
 + cmbot  = 'e0*eoxdepo/heffec'
 + cmfbot = 'e0*eoxdepo*(2/(pi-2)*log(pi/2)+2/pi*log(1+lyt/heffec))'
 + pcref  = 'lyl*lyw*cmbot + 2*(lyl+lyw)*cmfbot'
 *
 *
 r1  in   1  r='max(0.001,resbtp)'  tc1=0.0033  dtemp=dtemp
 c1  1    2  c='pctot*ptcc*(1-(7.57e-6*(v(1,2)))+(2.80e-5*(abs((v(1,2)))**2)))'
 l1  2    3  l='indval'                         dtemp=dtemp
 r2  3  out  r='max(0.001,resmid)'  tc1=0.0033  dtemp=dtemp
 c3  1    4  c='max(0.01f,pcref*est)'           dtemp=dtemp
 r3  4  ref  r='rsx'                            dtemp=dtemp

 .ends dualmimcap



 .include './efuse.inc'
 * path, component, release: cmos8base/rel/hspice/models/efuse.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.1 06/06/27 15:10:40
 *
 ********************************************************************************
 *>  ibm bicmos8wl/cmrf8sf     polysilicide electrically programmable fuse      *
 ********************************************************************************
 *  syntax:                                                                     *
 *                                                                              *
 *    xxx  hi lo  efuse (blown=0)                                               *
 *                                                                              *
 *    specify fuse as intact (default, blown=0) or programmed (blown=1).        *
 *                                                                              *
 *  notes:                                                                      *
 *                                                                              *
 *  1. model values based on pcell layout as provided in the design kit. no     *
 *     other geometries or layouts are supported.                               *
 *                                                                              *
 *  2. resistance toggles between maximum spec value for intact fuse (130 ohm)  *
 *     and minimum spec value for programmed fuse (5 kohm).                     *
 *                                                                              *
 *  subcircuit schematic:                                                       *
 *                                                                              *
 *                                  rfuse                                       *
 *                          hi  o--/\/\/\/--o  lo                               *
 *                                                                              *
 ********************************************************************************
 *                              ibm confidential                                *
 *                          (c) 2006 ibm corporation                            *
 ********************************************************************************
 .subckt efuse hi lo  blown=0

 rfuse  hi lo  r='130*(1-blown) + 5000*blown'

 .ends efuse
 .include './esdndsx.inc'
 * path, component, release: cmos8base/rel/hspice/models/esdndsx.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.1.1.2 10/03/10 09:22:28
 *
 *>  ibm cmrf8sf/bicmos8wl  esdndsx   n+ or nwell to substrate junction diode for esd
 *
 ***********************************************************************
 *
 *  model can be used in conjunction with the design system extraction
 *  program which calculates/combines junction parasitic capacitance
 *  per node.
 *
 *                  o  nwell (c)
 *                  |  or n diffusion
 *       +----------+
 *       |          |
 *      /\        ----
 *     /  \ gleak  /\   dnwx
 *     \  /       /  \         diode includes junction capacitance,
 *      \/        ----         resistance and sat current parameters.
 *       |          |
 *       +----------+
 *                  |
 *                  \
 *                  /  rseries
 *                  \
 *                  |
 *                 / \
 *                 \ /  grtlp 
 *                  | 
 *                 / \  
 *                 \ /  xesdmonitor
 *                  |
 *                  o  substrate (a)
 *
 ***********************************************************************
 *
 *  syntax:     specify both total area and perimeter and 'number of cathodes'
 *              as well as whether or not n-well is used
 *              xxx  (a c)  esdndsx (areac=1p  pjc=1u  nf=1  bp=3  dtemp=0 rwire=0)
 *
 *  notes:
 *
 *  1. node order must be as specified.
 *
 *  2. input parameters are 
 *
 *             areac  -->  total area of cathode (rx or nw shape)
 *
 *               pjc  -->  total perimeter of cathode (rx or nw shape)
 *
 *                nf  -->  number of cathode fingers
 *
 *                bp  -->  n+/sx (bp=3) or nw/sx (bp=1)
 *                         nw/sx option supported only in bicmos8wl
 *                         default is bp=3 n+/sx diode
 *
 *             dtemp  -->  device temperature difference with respect to
 *                         the simulated circuit temperature (deg c).
 *
 *             rwire -->  wiring resistance (use for pre-layout
 *                         simulations)  [ohm]
 *
 * ibm confidential
 * (c) 2010 ibm corporation
 *                                
 ***********************************************************************
 *
 .subckt esdndsx  (a c)  areac=1p  pjc=1u  nf=1  bp=3  dtemp=0 rwire=0
 *
 *  with or without n-well option
 + nw = '(bp==1)'
 *  here we calculate the length and width of a cathode strip
 + chpfr = 'nw*0.00 + (1-nw)*0.12u'
 + alpha = 'areac/nf +2*chpfr*chpfr'
 + beta  = '(2-sqrt(2))*chpfr+pjc/(4*nf)'
 + lcathn = 'beta + sqrt(abs(beta*beta - alpha))'
 + wcathn = 'alpha/lcathn'
 + wcath = 'wcathn + delrx'
 + lcath = 'lcathn + delrx'
 *  we then determine the total area and perimeter of anode region
 + acath = '(lcath*wcath - 2*chpfr*chpfr)*nf'
 + pcath = '(lcath + wcath + 2*sqrt(2)*chpfr - 4*chpfr)*nf*2'
 *
 *  calculate leakage
 + tlk = 20.37
 + lk1 = '((nw*lk1a_nw + (1-nw)*lk1a_n)*acath + (nw*lk1p_nw + (1-nw)*lk1p_n)*pcath)*pwr((temper+273)/298,tlk)'
 + lk3 = '((nw*lk3a_nw + (1-nw)*lk3a_n)*acath + (nw*lk3p_nw + (1-nw)*lk3p_n)*pcath)*pwr((temper+273)/298,tlk)'
 *
 * esd parameters
  + rwire_int =  '(esd_extr==1)?1e-4:25m'
  + rsp       =  2550p
  + p_rs      =  10p
  + cwire     =  '(esd_extr==1)?1e-18:(56.66p+234.1p*nf)*lcathn'
  + esdvsat   =  '1000*(esd_event==0)+1.45*(esd_event==1)+2.5*(esd_event==2)+15*(esd_event==3)'
  + esdnsat   =  '1*(esd_event==0)+0.85*(esd_event==1)+1*(esd_event==2)+1*(esd_event==3)'
  + it2       =  '1000*(esd_event==0)+25e-3*(esd_event==1)+38e-3*(esd_event==2)+100e-3*(esd_event==3)'
  + it_valid  =  '1000*(esd_event==0)+5*(esd_event==1)+5*(esd_event==2)+20*(esd_event==3)'
 *
 *  subcircuit
 dnwa        1  c   dnsx  area=acath  pj=pcath  dtemp=dtemp
 gleak       1  c   cur='lk1*pwr(v(1,c),1) + lk3*pwr(v(1,c),3)'
 cwire       1  c   c='cwire'
 grtlp       2  1   cur='v(2,1)/((rwire + rwire_int) + (((rsp+p_rs)*0.5-(rsp-p_rs)*0.5*tanh(100*v(2,1))) /(acath))*pwr((1+pwr(abs(v(2,1))/esdvsat,esdnsat)),1.0/esdnsat))'
 xesdmonitor a  2   it2_monitor keyp=pcath it2=it2 esd_exit=esd_exit it_valid=it_valid
 *
 *  n/nw to sx diode
 *
 .model dnsx d
 + level = 1
 +  dcap = 2
 +  tlev = 2
 + tlevc = 1
 +  tref = 25
 +    eg = 1.163
 +   xti = 3.0
 +  gap1 = 473u
 +  gap2 = 636
 +    ik = 111e6
 +     n = 'nw*n_nw + 1.03'
 +    js = 'nw*js_nw + (1-nw)*js_n'
 +   jsw = 'nw*jsw_nw + (1-nw)*jsw_n'
 +    cj = 'nw*cj_nw + (1-nw)*cj_n'
 +    pb = 'nw*pb_nw + (1-nw)*pb_n'
 +    mj = 'nw*mj_nw + (1-nw)*mj_n'
 +   cjp = 'nw*cjsw_nw + (1-nw)*cjsw_n'
 +   php = 'nw*pbsw_nw + (1-nw)*pbsw_n'
 +  mjsw = 'nw*mjsw_nw + (1-nw)*mjsw_n'
 +   cta = 'nw*cta_nw + (1-nw)*cta_n'
 +   tpb = 'nw*pta_nw + (1-nw)*pta_n'
 +   ctp = 'nw*ctp_nw + (1-nw)*ctp_n'
 +  tphp = 'nw*ptp_nw + (1-nw)*ptp_n'
 +    vb = 'nw*bd_nw + (1-nw)*bd_n'

 .ends esdndsx
 .include './esdnsh_base.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/esdnsh_base.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.1 10/03/10 10:03:30
 ************************************************************************************
 *
 *   licensed materials - property of ibm
 *
 *   ibm confidential
 *   (c) 2010 ibm corporation 
 *
 *   us government users restricted rights - use, duplication
 *   or disclosure restricted by gsa adp schedule contract with
 *   ibm corporation.
 ************************************************************************************
 * esd nmosfets calling model (including all flavors of thin/thick oxide)

 .subckt esdnsh_base (d g s b)  wesd=1u lesd=1u esdoxide=1 nf=1 ldop=2.0u lsop=0.44u gns=0 

  xesdnsh_spe   (d g s b)  esdnsh_spe wesd=wesd lesd=lesd nf=nf ldop=ldop lsop=lsop esdoxide=esdoxide gns=gns esd_event=esd_event esd_exit=esd_exit

 .ends esdnsh_base
 .include './esdscr.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/esdscr.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.2 10/03/12 11:24:19
 *
 *> ibm cmrf8sf  esd scr   intended to be used as a part of the scr clamp. 
 *                         not to be used independently 
 ************************************************************************************
 *
 * schematic:
 *
 *		o a
 *		|
 *		|
 *	o-/\/\--o---------------o	
 *	|	|		|
 *	|	|		|
 *	|     -----		|
 *	|     \   /		|
 *	|      \ /		|
 *	|     -----		|
 *	|	|               |
 *	o-------o             -----
 *		|	      | g |
 *	      -----	      | s |
 *	       / \	      | n |
 *	      /   \           | a |
 *	      -----           | p |
 *		|             |   |
 *               |             -----
 *     	o-/\/\- o----o pd      |
 *       |       | 	       |
 *       |     -----	       |
 *       |     \	  /	       |
 *       |      \ /	       |
 *       |       | 	       |
 *       o       |--------------o
 *       sx      o
 *               k
 *     
 ************************************************************************************
 *
 * syntax:
 * xxx (a      k        pd               sx)  esdscr nfscr=5 rsx=50 dtemp=0
 *      anode  cathode  gate_of_the_scr  substrate
 *
 * instance parameters:
 * 	nfscr 	--> number of fingers of scr (fixed)
 *
 *	rsx   	--> substrate resistance
 *		    dependent on layout and lcation of substrate contact 
 *                   with respect to device
 * 
 *	dtemp	--> device temperature difference with respect to circuit ambient
 *		
 *  ibm confidential
 *  (c) 2010 ibm corporation
 *		 
 ************************************************************************************
 .subckt esdscr (a k pd sx) nfscr=5 rsx=50 dtemp=0
 *
 + wscr='10u'
 + eoro  	= 'nfscr-2*int(nfscr/2)'
 + lcat 		= '0.72u'
 + lano 		= '0.72u'
 + wnw  		= 'wscr+2*0.98u'
 + lnw_e  	= '2*0.3u+2*lano+lcat+2*0.26u'
 + lnw_o  	= '2*0.3u+  lano+lcat+  0.26u'
 + areaevpnp   	= 'nfscr*wscr*lano'
 + pjerxvpnp   	= '2*(wscr+lano)*nfscr'
 + areabvpnp_e 	= 'nfscr*lnw_e*wnw/2'
 + areabvpnp_o 	= '((nfscr-1)/2)*lnw_e*wnw+lnw_o*wnw'
 + pjbvpnp_e   	= '(lnw_e+wnw)*nfscr'
 + pjbvpnp_o   	= '(lnw_e+wnw)*(nfscr-1)+2*(lnw_o+wnw)'
 + areabvpnp   	= 'areabvpnp_e*(eoro==0)+areabvpnp_o*(eoro==1)'
 + pjbvpnp     	= 'pjbvpnp_e*(eoro==0)+pjbvpnp_o*(eoro==1)'
 *  ndsx calculations
 + nfndsx	= 'nfscr*2'
 + length_ndsx	= 'wscr'
 + area_emitter_ndsx	= 'nfndsx*(length_ndsx*0.72e-6 - 4*0.5*0.12e-6*0.12e-6)'
 + peri_emitter_ndsx	= 'nfndsx*(2*(length_ndsx+0.72e-6)-4*(0.12e-6+0.12e-6)+4*sqrt(0.12e-6^2+0.12e-6^2))'
 + cwire 		= '(esd_extr==1)?1e-18:(0.276e-9*wscr*nfscr+10.967e-15)'
 *  esd parameters
 * dc
 + sn_mag_dc	= '100'
 + sn_pdr_dc	= '1e9'
 + sn_ndr_dc	= '1e4'
 + sn_vhold_dc	= '100'
 + sn_ihold_dc	= '100'
 *  hbm
 + sn_mag_hbm	= '2.0'
 + sn_pdr_hbm	= '3e2'
 + sn_ndr_hbm	= '2e4'
 + sn_vhold_hbm	= '1.76'
 + sn_ihold_hbm	= '3e-2'
 *  cdm
 + sn_mag_cdm	= '2.3'
 + sn_pdr_cdm	= '80'
 + sn_ndr_cdm	= '2e4'
 + sn_vhold_cdm	= '2.1'
 + sn_ihold_cdm	= '5e-2'
 *  mm
 + sn_mag_mm	= '2.1'
 + sn_pdr_mm	= '1e3'
 + sn_ndr_mm	= '1e4'
 + sn_vhold_mm	= '1.7'
 + sn_ihold_mm	= '2e-2'
 *  esd paramteter assignment according to esd_event switch
 + sn_mag	= 'sn_mag_dc*(esd_event==0)+sn_mag_hbm*(esd_event==1)+sn_mag_mm*(esd_event==2)+sn_mag_cdm*(esd_event==3)'
 + sn_pdr	= 'sn_pdr_dc*(esd_event==0)+sn_pdr_hbm*(esd_event==1)+sn_pdr_mm*(esd_event==2)+sn_pdr_cdm*(esd_event==3)'
 + sn_ndr	= 'sn_ndr_dc*(esd_event==0)+sn_ndr_hbm*(esd_event==1)+sn_ndr_mm*(esd_event==2)+sn_ndr_cdm*(esd_event==3)'
 + sn_vhold	= 'sn_vhold_dc*(esd_event==0)+sn_vhold_hbm*(esd_event==1)+sn_vhold_mm*(esd_event==2)+sn_vhold_cdm*(esd_event==3)'
 + sn_ihold	= 'sn_ihold_dc*(esd_event==0)+sn_ihold_hbm*(esd_event==1)+sn_ihold_mm*(esd_event==2)+sn_ihold_cdm*(esd_event==3)'
 *  esd resistance parameters
 + resd ='0.3'
 + rs_esdscr='10p'
 + esdvsat = '1000*(esd_event==0)+ 2.5*(esd_event==1)+ 5*(esd_event==2)+ 10*(esd_event==3)'
 + esdnsat =   '1*(esd_event==0)+ 0.5*(esd_event==1)+ 0.5*(esd_event==2)+   0.6*(esd_event==3)'
 *  failure parameters. note: current in ma/um
 + keyp		= 'wscr*nfscr'
 + it2		= '100*(esd_event==0)+ 40e-3*(esd_event==1)+ 65e-3*(esd_event==2)+200e-3*(esd_event==3)'
 + it_valid	= '100'
 + resis         = '10m'
 *  scr netlist
 xvpnp 	pw nw a esdvpnp nf='nfscr' areae='areaevpnp' pjerx='pjerxvpnp' areab='areabvpnp' pjb='pjbvpnp' rsx='0' dtemp='dtemp'
 rnw 	nw a r='10m'
 xndsx 	pw ki esdndsx areac='area_emitter_ndsx' pjc='peri_emitter_ndsx' dtemp='dtemp'
 rpw    	pw pd r='1e-4'
 cwire   a  ki c='cwire'
 xmnitor ki k it2_monitor keyp='keyp' it2='it2' esd_exit='esd_exit' it_valid='it_valid'	
 xgsnap  a  k1 gsnap sn_mag='sn_mag' sn_pdr='sn_pdr' sn_ndr='sn_ndr' resis='resis' sn_vhold='sn_vhold' sn_ihold='sn_ihold'
 gres    k1 ki cur='v(k1,ki)/((resd)*pwr((1+pwr(abs(v(k1,ki))/esdvsat,esdnsat)),1/esdnsat))'
 rsx	pd sx r='rsx'
 .ends esdscr
 .include './esdvpnp.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/esdvpnp.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.2 10/03/10 09:30:13
 *
 *>  ibm cmrf8sf  esdvpnp    esd diode - p+ nwell 
 *
 ***********************************************************************
 *                                    (rx)
 *                                    e o
 *                                      |
 *                                     / \
 *                                     \ /  xesdmonitor
 *                                      | e1
 *                                     / \  
 *                                     \ /  grtlp 
 *                                      |
 *                                      |
 *                                   e2 o----------+
 *                                      |          |
 *                                     ----       /\ gleakp
 *                            p+ nwell \  /      /  \
 *                               diode  \/       \  /
 *                                     ----       \/
 *                                      |          | 
 *                                   ab o----------+ 
 *                                      |            
 *                                    -----          
 *                            vsens=0v ---           
 *                                    -----          
 *                                     ---           
 *                                      |            
 *             b                        |            
 *        (nw) o------------------------+--------------+ 
 *                                      |              |
 *                                      |              |
 *                                      |            + |
 *                                     ----        fsx /\ gleakn
 *                                nw/sx /\            /  \
 *                                diode/  \           \  /
 *                                     ----          - \/
 *                                      |              |
 *                                      |              |
 *             c       + rsx -        ac|              |
 * (substrate) o--------\/\/\-----------o--------------+
 *
 ***********************************************************************
 *
 *  syntax:     specify both area and perimeter and 'number of anodes'
 *              as well as whether or not ns is used
 *              xxx (c b e) esdvpnp areae=1p pjerx=1u areab=1p pjb=1u nf=1 rsx=50 dtemp=0 rwire=1e-3
 *
 *             areae  -->  total area of emitter (defined by rx shape)
 *
 *             pjerx  -->  total perimeter of emitter (defined by rx shape)
 *
 *             areab  -->  total area of base (defined by nw shape)
 *
 *               pjb  -->  total perimeter of base (defined by nw shape)
 *
 *                nf  -->  number of anode fingers
 *
 *               rsx  -->  substrate resistance, dependent upon layout
 *                         and location of substrate contact relative to device
 *
 *             dtemp  -->  device temperature difference with respect to
 *                         the simulated circuit temperature (deg c).
 *
 *             rwire  --> wiring resistance for pre-extraction simulation
 *
 *  notes:
 *
 *  1. node order must be as specified.
 *
 *  ibm confidential
 *  (c) 2010 ibm corporation
 *
 ***********************************************************************
 *
 .subckt esdvpnp  (c b e)  areae=1p  pjerx=1u  areab=1p  pjb=1u  nf=1  rsx=50  dtemp=0 rwire=1e-3
 *
 *  we start by calculating the length and width of rx
 + c = '0.12u'
 + alpha = 'areae/nf +2*c*c'
 + beta  = '(2-sqrt(2))*c+pjerx/(4*nf)'
 + lanodn = 'beta + sqrt(abs(beta*beta - alpha))'
 + wanoden = 'alpha/lanodn'
 + lanod = 'lanodn + delrx'
 + wanod = 'wanoden + delrx'
 *  we then determine the total area and perimeter of anode region
 + aanod = '(lanod*wanod - 2*c*c)*nf'
 + panod = '(lanod + wanod + 2*sqrt(2)*c - 4*c)*nf*2' 
 *  set the gain on the current flowing through the cathode
 + cgain = '0.60'
 *  we then calculate the leakage parameters
 + tgs1 = '10'
 + plk1 = '(lk1a_p*aanod + lk1p_p*panod)*pwr((temper+273)/298,tgs1)'
 + plk3 = '(lk3a_p*aanod + lk3p_p*panod)*pwr((temper+273)/298,tgs1)'
 + nlk1 = 'lk1a_nw*areab + lk1p_nw*pjb'
 + nlk3 = 'lk3a_nw*areab + lk3p_nw*pjb'
 *  wiring components
 + cwire2='(esd_extr==1)?1e-18:(89p*lanod+219p*lanod*nf)'
 + rwire_int = '(esd_extr==1)?1e-4:26.55m'
 *  esd parameters
 + p_rs_esdpnb_wf = '9.985p'
 + rsp = '1500p'
 + esdvsat = '1000*(esd_event==0)+0.9515*(esd_event==1)+ 6.216*(esd_event==2)+ 1000*(esd_event==3)'
 + esdnsat =    '1*(esd_event==0)+1.952*(esd_event==1)+ 0.8419*(esd_event==2)+    1*(esd_event==3)'
 + it2   = '1000*(esd_event==0)+26m*(esd_event==1)+ 38m*(esd_event==2)+ 100m*(esd_event==3)'
 + it_valid   = '1000*(esd_event==0)+5.0*(esd_event==1)+ 5*(esd_event==2)+ 20*(esd_event==3)'

 *  internal wiring and sx resistors
 xesdmonitor e e1 it2_monitor keyp='panod' it2='it2' it_valid='it_valid' esd_exit='esd_exit'
 grtlp e1  e2 cur='v(e1,e2)/((rwire + rwire_int) + (((rsp+p_rs_esdpnb_wf)*0.5-(rsp-p_rs_esdpnb_wf)*0.5*tanh(100*v(e1,e2)))/(aanod))*pwr((1+pwr(abs(v(e1,e2))/esdvsat,esdnsat)),1.0/esdnsat))'
 dpri   e2  ab   diopnws   area='aanod'  pj='panod' dtemp='dtemp'
 gleakp e2  ab   cur='plk1*pwr(v(e2,ab),1) + plk3*pwr(v(e2,ab),3)'
 cwire e b c='cwire2'
 vsens  ab  b    0v
 fsx    b   ac   vsens cgain
 dnwsx  ac  b    dionwsx  area='areab'  pj='pjb'  dtemp='dtemp'
 gleakn ac  b    cur='nlk1*pwr(v(ac,b),1) + nlk3*pwr(v(ac,b),3)'
 rrsx   c   ac   r=rsx

 .model diopnws d
 + level = 1
 +  dcap = 2
 +  tlev = 2
 + tlevc = 1
 +  tref = 25
 +    eg = 1.16
 +  gap1 = 473u
 +  gap2 = 636
 +   xti = 3.0
 +     n = 1.036
 +    js = js_p
 +   jsw = jsw_p
 +    cj = cj_p
 +    pb = 432.5m
 +    mj = 304.1m
 +   cjp = cjsw_p
 +   php = pbsw_p
 +  mjsw = mjsw_p
 +   cta = cta_p 
 +   tpb = pta_p 
 +   ctp = ctp_p 
 +  tphp = ptp_p 
 +    vb = bd_p
 +    ik = 200e6

 .model dionwsx d
 + level = 1
 +  dcap = 2
 +  tlev = 0
 + tlevc = 1
 +  tref = 25
 +    eg = 1.17
 +   xti = 3.0
 +     n = n_nw
 +    js = js_nw
 +   jsw = jsw_nw
 +    cj = cj_nw
 +    pb = pb_nw
 +    mj = mj_nw
 +   cjp = cjsw_nw
 +   php = pbsw_nw
 +  mjsw = mjsw_nw
 +   cta = cta_nw 
 +   tpb = pta_nw
 +   ctp = ctp_nw
 +  tphp = ptp_nw
 +    vb = bd_nw

 .ends esdvpnp
 *.include './havar.inc'
 .include './hvtnfet33.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/hvtnfet33.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.3 10/11/16 11:36:13 
 *
 *>  ibm cmrf8sf  hvtnfet33  3.3v hvt nfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) hvtnfet33 l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.40u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---
 *            gate     | |         bulk
 *              o------| |----------o
 *                     | |     
 *                     | |---
 *                          |
 *                          |
 *                          |
 *                          o
 *                        source
 *
 *         note: the ldd resistance is accounted for within the psp model.
 *
 * ibm confidential
 * (c) 2010 ibm corporation
 *
 ***************************************************************************
 *
 .subckt hvtnfet33 (d g s b)
 +                      w=1.0u l=0.40u nf=1 par=1 dtemp=0
 +                      as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                      lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                      panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                      panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                      plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                      rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1      $ unused parameters
 +                      rbps=100 rbpd=100 rbsb=1e9 rbpb=50 rbdb=1e9  $ unused parameters
 .param
 *
 * if monte carlo and "pl*" instance parameter = zero, use values from skew/process file
 +   a_plnest     = limit(-0.5,0.5)
 +   sel_plnest   = '((plnest == 1) || ((a_plnest*plnest) == 1))'
 +   a_plorient   = limit(-0.5,0.5)
 +   sel_plorient = '((plorient == 1) || ((a_plorient*plorient) == 1))' 
 +   a_pld200     = limit(-0.5,0.5)
 +   sel_pld200   = '((pld200 == 1) || ((a_pld200*pld200) == 1))' 
 +   a_pwd100     = limit(-0.5,0.5)
 +   sel_pwd100   = '((pwd100 == 1) || ((a_pwd100*pwd100) == 1))'
 *
 * calculate aclv/acwv and final lint/wint params
 +   aclv_ni_sws   = '(mc_sw + ((mc_fet_mm_f !=  1) && (pc_nest == 2))/aclv_dgfactor + cnr_nhv33*(1-mc_fet_mm_f)*(pc_nest !=  2))'
 +   aclv_or_sws   = '(mc_sw + ((mc_fet_mm_f !=  1) && (pc_orient == 2))/aclv_dgfactor + cnr_nhv33*(1-mc_fet_mm_f)*(pc_orient !=  2))'
 +   aclv_dist_sws = '(mc_sw + ((mc_fet_mm_f !=  1) && (pc_dist == 2))/aclv_dgfactor + cnr_nhv33*(1-mc_fet_mm_f)*(pc_dist !=  2))'
 +   aclv_ni       = '((dgfet_aclv_nest*sel_plnest) + (dgfet_aclv_iso*(1-sel_plnest)))*aclv_ni_sws'
 +   aclv_or       = '((dgfet_aclv_v*sel_plorient) + (dgfet_aclv_h*(1-sel_plorient)))*aclv_or_sws'
 +   aclv_dist     = '((dgfet_aclv_out*sel_pld200) + (dgfet_aclv_in*(1-sel_pld200)))*aclv_dist_sws'
 +   aclv_ran      = agauss(cnr_nhv33,mc_sw,3)
 *
 +   acwv_dist_sws = '(-mc_sw + ((mc_fet_mm_f !=  1) && (rx_dist == 2))/acwv_dgfactor + cnr_nhv33*(1-mc_fet_mm_f)*(rx_dist !=  2))'
 +   acwv_dist     = '((dgfet_acwv_out*sel_pwd100) + (dgfet_acwv_in*(1-sel_pwd100)))*acwv_dist_sws'
 +   acwv_ran      = agauss('-cnr_nhv33',mc_sw,3)
 *
 .param
 +   xc_lint_1 = '(aclv_ni*aclv_dgfet_ni + aclv_or*aclv_dgfet_or)'
 +   xc_lint_2 = '((aclv_dist*aclv_dgfet_dist) + (aclv_ran + (mc_global == 2))*aclv_dgfet_ran)'
 +   xx_lint_3 = '(mc_fet_mm_f + (aclv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_lint_4 = '((mc_global == 2)*(-xlint_nhv33) + (mc_global !=  2))'
 +   xc_lint_t = '((xc_lint_1 + xc_lint_2)*xx_lint_3)*xx_lint_4'
 *
 +   xc_wint_1 = '((acwv_dist*acwv_dgfet_dist) + (acwv_ran + (mc_global == 2))*acwv_dgfet_ran)'
 +   xx_wint_2 = '(mc_fet_mm_f + (acwv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_wint_3 = '((mc_global == 2)*(xwint_nhv33) + (mc_global !=  2))'
 +   xc_wint_t = '((xc_wint_1)*xx_wint_2)*xx_wint_3'
 *
 *     final =  nominal      +      acv * dist(-1,1)      +        global * dist(-1,1)
 + lint_hvtnfet33 = 'lint_nhv33 + 1.5*total_aclv_dgfet*xc_lint_t*fet_geo_mm + ltol_nhv33*xlint_nhv33'
 + wint_hvtnfet33 = 'wint_nhv33 + 1.5*total_acwv_dgfet*xc_wint_t*fet_geo_mm + wtol_nhv33*xwint_nhv33'
 *
 .param
 * switch to turn on or off the sti stress effects
 +  isti = '((gstis==1)&&(lstis==1))||(gstis==2)'
 *
 * switch to turn on or off the nwell proximity effects
 +  inw  = '((gwells==1)&&(lnws==1))||(gwells==2)'
 *
 * nwell proximity effect calculations
 +  proxpre  =  0.07e-06             $ [v-m]
 +  proxlen  = -0.35e-06             $ [m]
 +  proxk1   =  0.375                $ [unitless]
 +  rxwparm1 = -0.28                 $ [unitless]
 +  rxwparm2 =  0.56e-06             $ [unitless]
 +  rxwparm3 =  0.0e-6               $ [m]
 +  nw1b1   = 'panw1 /(band1 -proxlen)'
 +  nw2b2   = 'panw2 /(band2 -proxlen)'
 +  nw3b3   = 'panw3 /(band3 -proxlen)'
 +  nw4b4   = 'panw4 /(band4 -proxlen)'
 +  nw5b5   = 'panw5 /(band5 -proxlen)'
 +  nw6b6   = 'panw6 /(band6 -proxlen)'
 +  nw7b7   = 'panw7 /(band7 -proxlen)'
 +  nw8b8   = 'panw8 /(band8 -proxlen)'
 +  nw9b9   = 'panw9 /(band9 -proxlen)'
 +  nw10b10 = 'panw10/(band10-proxlen)'
 +  prox_term = 'inw*(proxpre/(l*w))*(nw1b1+nw2b2+nw3b3+nw4b4+nw5b5+nw6b6+nw7b7+nw8b8+nw9b9+nw10b10)'
 +  nsub_prox = '2.0e23*prox_term'
 *
 * mis-match calculations: include multiplicity (par)
 .param
 +  kvt  =  1.2e-8
 +  kvtl =  2.0e-7
 +  kvtw = -3.0e-7
 +  kmb  =  7.0e-10
 +  kmbl = -3.0e-7
 +  kmbw = -8.0e-7
 +  sigvth  = 'kvt/sqrt((w-kvtw)*par*(l-kvtl))'
 +  sigbeta = 'kmb/sqrt((w-kmbw)*par*(l-kmbl))'
 *
 +  dvth0 = agauss(0,1,3)               $ local mis-match distributions
 +  dbeta = agauss(0,1,3)
 *                                      $ select local vs global vs corner
 +  d_vth0 = 'dvth0*(mc_global !=  2) + xnhv33vth0*(mc_global == 2) - cnr_nhv33'
 +  d_beta = 'dbeta*(mc_global !=  2) + dnhv33u0*(mc_global == 2) - cnr_nhv33'
 *
 +  mmvth0 = 'sigvth * d_vth0 * fet_dop_mm'    $ vth0 mis-match
 +  mmbeta = 'sigbeta * d_beta * fet_dop_mm'   $ beta mis-match
 *
 +  pvt_var = 'mmvth0 + prox_term'        $ local vth0 variation
 *
 .param
 * flicker noise calculations: statistics are function of w and l and par
 +  noideva = '5u * 0.40u * 4'          $ device area for extracted variation
 +  noistd  = 1.740                    $ worst case variation value
 *
 +  noi_scale = 'noistd-min(log(sqrt(w*l*par/noideva)),0)'   $ area scaling
 +  noiamult  = 'exp(dnoi_nhv33*noi_scale)'                  $ gate bias scaliing
 +  noibmult  = 'exp(dnoi_nhv33*noi_scale/2.10)'
 +  noicmult  = 'exp(dnoi_nhv33*noi_scale/2.21)'
 *
 * thermal noise scaling equation
 +  tnoitanha = 0.16
 +  tnoitanhb = 5.0e6
 +  tnoitanhc = 2.0e11
 +  ntnoi_nhv33 = '1.13/tanh(tnoitanha + tnoitanhb*l + tnoitanhc*l*l)'
 *
 m0 d g s b nch33 w=w l=l nf=nf as=as ad=ad ps=ps pd=pd 
 +                sa='isti*sa' sb='isti*sb' sd='isti*sd'
  **warning** (/tools2/courses/ee6321/share/IBM_PDK/cmrf8sf/relDM/HSPICE/models/././hvtnfet33.inc:199) parameter  nf       is ignored
  **warning** (/tools2/courses/ee6321/share/IBM_PDK/cmrf8sf/relDM/HSPICE/models/././hvtnfet33.inc:199) parameter  sd       is ignored
 *
 ***************************************************************************
 * psp fet model
 ***************************************************************************
 *
 .model nch33 nmos level=69 tr=25 version=102.3
 ***************************************************************************
 * switch settings
 ***************************************************************************
 + swgidl    = 1          swigate   = 0          swimpact  = 1         
 + swjuncap  = 3         
 ***************************************************************************
 * parameters with process variation
 ***************************************************************************
 + lvaro     = '-2*lint_hvtnfet33' 
 + wvaro     = '-2*wint_hvtnfet33' 
 + toxo      = tox_nhv33  
 + toxovo    = tox_nhv33 
 + uo        = 'uo_nhv33+mmbeta' 
 + rsw1      = rsw_nhv33  
 + nsubo     = '2.211e23+nsub_prox' 
 + vfbo      = 'vfb_nhv33+pvt_var'
 + vfbl	    = vfbl_nhv33
 + vfblw     = vfblw_nhv33   
 + fol1      = fol1_nhv33 
 + fol2      = fol2_nhv33
 + lov       = lov_nhv33
 ***************************************************************************
 * core parameters
 ***************************************************************************
 + a1l       = 0.01799    a1o       = 5.331      a1w       = 0         
 + a2o       = 21.0       a3l       = -0.07171   a3o       = 1.124     
 + a3w       = 0          a4l       = -0.28      a4o       = 0.18      
 + a4w       = 0          alp1l1    = 0.003425   alp1l2    = 0.0002448 
 + alp1lexp  = 0.6841     alp1w     = 0.002128   alp2l1    = 1.442e-07 
 + alp2l2    = 0.006263   alp2lexp  = 0.2922     alp2w     = 0         
 + alpl      = 0.01079    alplexp   = 0.529      alpw      = 0.225     
 + axl       = 0.9386     axo       = 19.15      betw1     = 0.1726    
 + betw2     = -0.08455   cfbo      = 0.49       cfl       = 0.00143   
 + cflexp    = 1.781      cfrw      = 0          cfw       = 0         
 + cgbovl    = 0          csl       = 0          cslexp    = 0         
 + cslw      = 0          cso       = 0.3649     csw       = 0         
 + ctl       = 0.025      ctlexp    = 1.126      ctlw      = 0         
 + cto       = 9.393e-17  ctw       = 0          dlq       = -5.423e-08
 + dnsubo    = 0          dphibl    = 0.00454    dphiblexp = 2.539     
 + dphiblw   = 0          dphibo    = -0.001657  dphibw    = 0         
 + dta       = dtemp      dwq       = 0          fbet1     = 0.2102    
 + fbet1w    = -1.5       fbet2     = -0.1923    fetao     = 0.9109    
 + lap       = 0          lp1       = 1.198e-08  lp1w      = 0         
 + lp2       = 4.595e-07  lpck      = 6.395e-07  lpckw     = 0         
 + lvarl     = 0          lvarw     = 0          mueo      = 0.8957    
 + muew      = -0.05438   novo      = 1.915e+24  npck      = 5.028e+22 
 + npckw     = 0          npl       = 0          npo       = 1.139e+26 
 + nslpo     = 0          nsubw     = -0.009539  qmc       = 1         
 + rsbo      = 0          rsgo      = 0.05711    rsw2      = -3.002e-12
 + sta2o     = 0          stbetl    = 0          stbetlw   = 0         
 + stbeto    = 1.513      stbetw    = -0.085     stcso     = 0         
 + stmueo    = 0.1912     strso     = -0.2143    stthemuo  = 0.7768    
 + stthesatl = -0.05022   stthesatlw= -0.03267   stthesato = 1.5       
 + stthesatw = 0          stvfbl    = 0.05       stvfblw   = 0.02131   
 + stvfbo    = 0.00075    stvfbw    = 0          stxcoro   = 0         
 + themuo    = 2.531      thesatbo  = 0          thesatgo  = 0.1075    
 + thesatl   = 0.645      thesatlexp= 0.8542     thesatlw  = -0.0095   
 + thesato   = 1e-09      thesatw   = 0          vfbw      = -0.008062 
 + vnsubo    = 0          vpo       = 0.001      wbet      = 2.374e-08 
 + wot       = 0          wseg      = 5.364e-10  wsegp     = 1e-10     
 + wvarl     = 0          wvarw     = 0          xcorl     = -0.185    
 + xcorlw    = 0          xcoro     = 0.08261    xcorw     = -0.15     
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 + gcoo      = 11.83      iginvlw   = 5.115      igovw     = 0.6593    
 + gc2o      = 0.6149     gc3o      = -0.2159    chibo     = 1.67      
 + stigo     = 2          agidlw    = 100.0      bgidlo    = 18.69     
 + cgidlo    = 0.003      stbgidlo  = 0         
 ***************************************************************************
 * sti stress model parameters
 ***************************************************************************
 + saref     = 3e-6       sbref     = 3e-6       wlod      = 0         
 + kuo       = -6.3e-8    kvsat     = 0          tkuo      = 0         
 + lkuo      = 0 	 wkuo      = 0          llodkuo   = 1         
 + wlodkuo   = 1          kvtho     = 0          lkvtho    = 0  
 + wkvtho    = 0          pkvtho    = 0          llodvth   = 0         
 + wlodvth   = 1          stetao    = 0          lodetao   = 1         
 ***************************************************************************
 * junction diode parameters
 ***************************************************************************
 + trj       = 25               
 ***************************************************************************
 * capacitance parameters
 ***************************************************************************
 + cjorbot   = cj_nhv33   cjorsti   = cjsw_nhv33 cjorgat   = cjsg_nhv33    
 + vbirbot   = pb_nhv33   vbirsti   = pbsw_nhv33 vbirgat   = pbsg_nhv33    
 + pbot      = mj_nhv33   psti      = mjsw_nhv33 pgat      = mjsg_nhv33    
 ***************************************************************************
 * ideal current parameters
 ***************************************************************************
 + idsatrbot = js_nhv33   idsatrsti = jsw_nhv33  idsatrgat = jsw_nhv33     
 + phigbot   = 1.135744   phigsti   = 1.135744   phiggat   = 1.135744  
 + csrhbot   = 0          csrhsti   = 0          csrhgat   = 0         
 + xjunsti   = 1e-07      xjungat   = 1e-07     
 ***************************************************************************
 * trap-assisted tunneling parameters
 ***************************************************************************
 + ctatbot   = 0          ctatsti   = 0          ctatgat   = 0         
 + mefftatbot= 0.25       mefftatsti= 0.25       mefftatgat= 0.25      
 ***************************************************************************
 * band-to-band tunneling parameters
 ***************************************************************************
 + cbbtbot   = 0          cbbtsti   = 0          cbbtgat   = 0         
 + fbbtrbot  = 1e+09      fbbtrsti  = 1e+09      fbbtrgat  = 1e+09     
 + stfbbtbot = 0          stfbbtsti = 0          stfbbtgat = 0         
 ***************************************************************************
 * avalanche and breakdown parameters
 ***************************************************************************
 + vbrbot    = 1001       vbrsti    = 1001       vbrgat    = 1001      
 + pbrbot    = 4          pbrsti    = 4          pbrgat    = 4         
 ***************************************************************************
 * noise parameters
 ***************************************************************************
 + nfalw     = '1.6e25*noiamult' 
 + nfblw     = '1.2e6*noibmult' 
 + nfclw     = '0.6e-10*noicmult'
 + efo	    = 0.95
 + lintnoi   = 0.012e-6 
 + alpnoi    = 2
 + fnto      = ntnoi_nhv33 
 *
 .ends hvtnfet33
 .include './hvtnfet33_rf.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/hvtnfet33_rf.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.2 10/11/16 11:40:02
 *
 *>  ibm cmrf8sf  hvtnfet33_rf  3.3v hvt nfet rf
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) hvtnfet33_rf l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.40u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *
 *
 * subcircuit schematic:
 *
 *          
 *                         ||   drain
 *                            o---||-----o------------------o
 *                            |   ||     |                  |
 *                            |  cwgd    |                  |
 *                            |          |                 ---
 *                            |          |                 ---cwds
 *                            |          |                  |
 *                            |     | |---                  |
 *       gate                 | g1  | |     (psp         )  | bulk
 *         o----/\/\/\--------o-----| |-----(internal    )--)--o
 *                rg          |     | |     (rsub network)  |
 *                            |     | |---                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |  cwgs    |                  |
 *                            |   ||     |                  |
 *                            o---||-----o------------------o
 *                                ||   source
 *
 *
 *         note: the ldd resistance is accounted for within the psp model.
 *
 * ibm confidential
 * (c) 2010 ibm corporation
 *
 ***************************************************************************
 *
 .subckt hvtnfet33_rf d g s b
 +                      w=1.0u l=0.40u nf=1 par=1 dtemp=0
 +                      as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                      lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                      panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                      panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                      plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                      rgatemod=3 ngcon=2 rbodymod=1 gtab=1 ring=2 cwire=1 rf_rsub=1      $ unused parameters
 +                      rbps=100 rbpd=100 rbsb=1e9 rbpb=50 rbdb=1e9   $ unused parameters
 *
 .param
 * if monte carlo and "pl*" instance parameter = zero, use values from skew/process file
 +   a_plnest     = limit(-0.5,0.5)
 +   sel_plnest   = '((plnest == 1) || ((a_plnest*plnest) == 1))'
 +   a_plorient   = limit(-0.5,0.5)
 +   sel_plorient = '((plorient == 1) || ((a_plorient*plorient) == 1))' 
 +   a_pld200     = limit(-0.5,0.5)
 +   sel_pld200   = '((pld200 == 1) || ((a_pld200*pld200) == 1))' 
 +   a_pwd100     = limit(-0.5,0.5)
 +   sel_pwd100   = '((pwd100 == 1) || ((a_pwd100*pwd100) == 1))'
 *
 * calculate aclv/acwv and final lint/wint params
 +   aclv_ni_sws   = '(mc_sw + ((mc_fet_mm_f !=  1) && (pc_nest == 2))/aclv_dgfactor + cnr_nhv33*(1-mc_fet_mm_f)*(pc_nest !=  2))'
 +   aclv_or_sws   = '(mc_sw + ((mc_fet_mm_f !=  1) && (pc_orient == 2))/aclv_dgfactor + cnr_nhv33*(1-mc_fet_mm_f)*(pc_orient !=  2))'
 +   aclv_dist_sws = '(mc_sw + ((mc_fet_mm_f !=  1) && (pc_dist == 2))/aclv_dgfactor + cnr_nhv33*(1-mc_fet_mm_f)*(pc_dist !=  2))'
 +   aclv_ni       = '((dgfet_aclv_nest*sel_plnest) + (dgfet_aclv_iso*(1-sel_plnest)))*aclv_ni_sws'
 +   aclv_or       = '((dgfet_aclv_v*sel_plorient) + (dgfet_aclv_h*(1-sel_plorient)))*aclv_or_sws'
 +   aclv_dist     = '((dgfet_aclv_out*sel_pld200) + (dgfet_aclv_in*(1-sel_pld200)))*aclv_dist_sws'
 +   aclv_ran      = agauss(cnr_nhv33,mc_sw,3)
 *
 +   acwv_dist_sws = '(-mc_sw + ((mc_fet_mm_f !=  1) && (rx_dist == 2))/acwv_dgfactor + cnr_nhv33*(1-mc_fet_mm_f)*(rx_dist !=  2))'
 +   acwv_dist     = '((dgfet_acwv_out*sel_pwd100) + (dgfet_acwv_in*(1-sel_pwd100)))*acwv_dist_sws'
 +   acwv_ran      = agauss('-cnr_nhv33',mc_sw,3)
 *
 .param
 +   xc_lint_1 = '(aclv_ni*aclv_dgfet_ni + aclv_or*aclv_dgfet_or)'
 +   xc_lint_2 = '((aclv_dist*aclv_dgfet_dist) + (aclv_ran + (mc_global == 2))*aclv_dgfet_ran)'
 +   xx_lint_3 = '(mc_fet_mm_f + (aclv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_lint_4 = '((mc_global == 2)*(-xlint_nhv33) + (mc_global !=  2))'
 +   xc_lint_t = '((xc_lint_1 + xc_lint_2)*xx_lint_3)*xx_lint_4'
 *
 +   xc_wint_1 = '((acwv_dist*acwv_dgfet_dist) + (acwv_ran + (mc_global == 2))*acwv_dgfet_ran)'
 +   xx_wint_2 = '(mc_fet_mm_f + (acwv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_wint_3 = '((mc_global == 2)*(xwint_nhv33) + (mc_global !=  2))'
 +   xc_wint_t = '((xc_wint_1)*xx_wint_2)*xx_wint_3'
 *
 *     final =  nominal      +      acv * dist(-1,1)      +        global * dist(-1,1)
 + lint_hvtnfet33 = 'lint_nhv33 + 1.5*total_aclv_dgfet*xc_lint_t*fet_geo_mm + ltol_nhv33*xlint_nhv33'
 + wint_hvtnfet33 = 'wint_nhv33 + 1.5*total_acwv_dgfet*xc_wint_t*fet_geo_mm + wtol_nhv33*xwint_nhv33'
 *
 .param
 * switch to turn on or off the sti stress effects
 +  isti = '((gstis==1)&&(lstis==1))||(gstis==2)'
 *
 * switch to turn on or off the nwell proximity effects
 +  inw  = '((gwells==1)&&(lnws==1))||(gwells==2)'
 *
 * nwell proximity effect calculations
 +  proxpre  =  0.07e-06             $ [v-m]
 +  proxlen  = -0.35e-06             $ [m]
 +  proxk1   =  0.375                $ [unitless]
 +  rxwparm1 = -0.28                 $ [unitless]
 +  rxwparm2 =  0.56e-06             $ [unitless]
 +  rxwparm3 =  0.0e-6               $ [m]
 +  nw1b1   = 'panw1 /(band1 -proxlen)'
 +  nw2b2   = 'panw2 /(band2 -proxlen)'
 +  nw3b3   = 'panw3 /(band3 -proxlen)'
 +  nw4b4   = 'panw4 /(band4 -proxlen)'
 +  nw5b5   = 'panw5 /(band5 -proxlen)'
 +  nw6b6   = 'panw6 /(band6 -proxlen)'
 +  nw7b7   = 'panw7 /(band7 -proxlen)'
 +  nw8b8   = 'panw8 /(band8 -proxlen)'
 +  nw9b9   = 'panw9 /(band9 -proxlen)'
 +  nw10b10 = 'panw10/(band10-proxlen)'
 +  prox_term = 'inw*(proxpre/(l*w))*(nw1b1+nw2b2+nw3b3+nw4b4+nw5b5+nw6b6+nw7b7+nw8b8+nw9b9+nw10b10)'
 +  nsub_prox = '2.0e23*prox_term'
 *
 * mis-match calculations: include multiplicity (par)
 .param
 +  kvt  =  1.2e-8
 +  kvtl =  2.0e-7
 +  kvtw = -3.0e-7
 +  kmb  =  7.0e-10
 +  kmbl = -3.0e-7
 +  kmbw = -8.0e-7
 +  sigvth  = 'kvt/sqrt((w-kvtw)*par*(l-kvtl))'
 +  sigbeta = 'kmb/sqrt((w-kmbw)*par*(l-kmbl))'
 *
 +  dvth0 = agauss(0,1,3)               $ local mis-match distributions
 +  dbeta = agauss(0,1,3)
 *                                      $ select local vs global vs corner
 +  d_vth0 = 'dvth0*(mc_global !=  2) + xnhv33vth0*(mc_global == 2) - cnr_nhv33'
 +  d_beta = 'dbeta*(mc_global !=  2) + dnhv33u0*(mc_global == 2) - cnr_nhv33'
 *
 +  mmvth0 = 'sigvth * d_vth0 * fet_dop_mm'    $ vth0 mis-match
 +  mmbeta = 'sigbeta * d_beta * fet_dop_mm'   $ beta mis-match
 *
 +  pvt_var = 'mmvth0 + prox_term'        $ local vth0 variation
 *
 .param
 * flicker noise calculations: statistics are function of w and l and par
 +  noideva = '5u * 0.40u * 4'          $ device area for extracted variation
 +  noistd  = 1.740                    $ worst case variation value
 *
 +  noi_scale = 'noistd-min(log(sqrt(w*l*par/noideva)),0)'   $ area scaling
 +  noiamult  = 'exp(dnoi_nhv33*noi_scale)'                  $ gate bias scaliing
 +  noibmult  = 'exp(dnoi_nhv33*noi_scale/2.10)'
 +  noicmult  = 'exp(dnoi_nhv33*noi_scale/2.21)'
 *
 * thermal noise scaling equation
 +  tnoitanha = 0.16
 +  tnoitanhb = 5.0e6
 +  tnoitanhc = 2.0e11
 +  ntnoi_nhv33 = '1.13/tanh(tnoitanha + tnoitanhb*l + tnoitanhc*l*l)'
 ***********************
 +  legacy = '(ring==99)'                        $    switch for legacy pcell
 +  nfo    = '(int((nf+1)/2) - int(nf/2))'       $    switch for odd,even fingers
 *
 * extrinsic gate resistance calculations (function of w, l, and nf)
 +  wum    = '(w/nf)*1e6'
 +  lum    = 'l*1e6'
 *
 +  rlen_a = 'lum*(1 + ((nf - 3)/2)) + diff_thn*1e6*((nf - 1)/2)'
 +  rlen_b = '0.5*lum + (diff_thn*1e6 + lum)*((nf/2) - 1)'
 +  rlen   = 'nfo*rlen_a + (1-nfo)*rlen_b'
 *
 +  ra_term1 = '1.81*legacy + 2.1*(1-legacy)'
 +  ra_len   = '(ra_term1 + 0.5*lum + (nf==2)*0.5*lum + (nf>2)*(rlen/3))/(0.4)'
 +  ra_wid   = '(2.5*wum + 1.65)*legacy + (1.25*wum + 1.875)*(1-legacy)'
 +  ra       = 'm1rsi * (ra_len + ra_wid)'
 +  rb       = 'm1rsi * (1.3*legacy + 1.3*(1-legacy))'
 +  rcont    = 'cars * (1/nf)'
 *
 +  rgate  = '0.5*(rb*gtab + (1/ngcon)*(ra+0.5*rcont))'
 *
 +  rg	  = '(pcrsi*(2.5e-6+(w/nf)/(3*ngcon))/ngcon/l + 1.5e-11/(w/nf*l))/nf' 
 *
 * substrate resistance calculations (function of w, l, and nf)
 +  rbulk = '1e-9/((w/nf+0.1e-6)*(l+0.1e-6))/nf'
 +  rw = '650*((nf-1)*0.36e-6+nf*l+3.3e-6)/(w/nf+2.2e-6)'
 +  rl = '500*(w/nf+2.2e-6)/(l+0.01e-6)'
 +  rwell = 'rw*rl/(rw+rl)/nf'
 +  rjuns = '6e3*(l+0.5e-6)/(w/nf+1.0e-6)/nf'
 +  rjund = rjuns
 *
 * gate capacitance calculation (function of w, l, and nf)
 +  cgate = '1*((3e4*l + 9)*(5e6*l-0.3)/(8.5e6*l + 8.7)*nf + 2e5*w)*0.65e-16'
 *
 * drain-source capacitance calculation (function of w, l, and nf)
 +  cdsw  = '(3.721e5*w + 0.198)'
 +  cdsl  = '(4.65e-7/l + 0.1058)*5.8e-16'
 *
 m0 d g1 s b nch33 w=w l=l nf=nf as=as ad=ad ps=ps pd=pd
 +                 sa='isti*sa' sb='isti*sb' sd='isti*sd'
  **warning** (/tools2/courses/ee6321/share/IBM_PDK/cmrf8sf/relDM/HSPICE/models/././hvtnfet33_rf.inc:242) parameter  nf       is ignored
  **warning** (/tools2/courses/ee6321/share/IBM_PDK/cmrf8sf/relDM/HSPICE/models/././hvtnfet33_rf.inc:242) parameter  sd       is ignored
 rg     g   g1   r=rgate
 cwgd   g1  d    c='1e-18 + cgate*cwire'
 cwgs   g1  s    c='1e-18 + cgate*cwire'
 cwds   d   s    c='1e-18 + (cdsw*cdsl)*cwire'
 *
 ***************************************************************************
 * psp fet model
 ***************************************************************************
 .model nch33 nmos 
 * rf/nqs parameters
 ***************************************************************************
 + swnqs	    = 3		 munqso	   = 1      	rgo	  = rg	
 + rbulko    = rbulk	 rwello	   = rwell	rjunso	  = rjuns	
 + rjundo    = rjund	
 ******************************************************
 *** base parameters
 + level=69 tr=25 version=102.3
 ***************************************************************************
 * switch settings
 ***************************************************************************
 + swgidl    = 1          swigate   = 0          swimpact  = 1         
 + swjuncap  = 3         
 ***************************************************************************
 * parameters with process variation
 ***************************************************************************
 + lvaro     = '-2*lint_hvtnfet33' 
 + wvaro     = '-2*wint_hvtnfet33' 
 + toxo      = tox_nhv33  
 + toxovo    = tox_nhv33 
 + uo        = 'uo_nhv33+mmbeta' 
 + rsw1      = rsw_nhv33  
 + nsubo     = '2.211e23+nsub_prox' 
 + vfbo      = 'vfb_nhv33+pvt_var'
 + vfbl	    = vfbl_nhv33
 + vfblw     = vfblw_nhv33   
 + fol1      = fol1_nhv33 
 + fol2      = fol2_nhv33
 + lov       = lov_nhv33
 ***************************************************************************
 * core parameters
 ***************************************************************************
 + a1l       = 0.01799    a1o       = 5.331      a1w       = 0         
 + a2o       = 21.0       a3l       = -0.07171   a3o       = 1.124     
 + a3w       = 0          a4l       = -0.28      a4o       = 0.18      
 + a4w       = 0          alp1l1    = 0.003425   alp1l2    = 0.0002448 
 + alp1lexp  = 0.6841     alp1w     = 0.002128   alp2l1    = 1.442e-07 
 + alp2l2    = 0.006263   alp2lexp  = 0.2922     alp2w     = 0         
 + alpl      = 0.01079    alplexp   = 0.529      alpw      = 0.225     
 + axl       = 0.9386     axo       = 19.15      betw1     = 0.1726    
 + betw2     = -0.08455   cfbo      = 0.49       cfl       = 0.00143   
 + cflexp    = 1.781      cfrw      = 0          cfw       = 0         
 + cgbovl    = 0          csl       = 0          cslexp    = 0         
 + cslw      = 0          cso       = 0.3649     csw       = 0         
 + ctl       = 0.025      ctlexp    = 1.126      ctlw      = 0         
 + cto       = 9.393e-17  ctw       = 0          dlq       = -5.423e-08
 + dnsubo    = 0          dphibl    = 0.00454    dphiblexp = 2.539     
 + dphiblw   = 0          dphibo    = -0.001657  dphibw    = 0         
 + dta       = dtemp      dwq       = 0          fbet1     = 0.2102    
 + fbet1w    = -1.5       fbet2     = -0.1923    fetao     = 0.9109    
 + lap       = 0          lp1       = 1.198e-08  lp1w      = 0         
 + lp2       = 4.595e-07  lpck      = 6.395e-07  lpckw     = 0         
 + lvarl     = 0          lvarw     = 0          mueo      = 0.8957    
 + muew      = -0.05438   novo      = 1.915e+24  npck      = 5.028e+22 
 + npckw     = 0          npl       = 0          npo       = 1.139e+26 
 + nslpo     = 0          nsubw     = -0.009539  qmc       = 1         
 + rsbo      = 0          rsgo      = 0.05711    rsw2      = -3.002e-12
 + sta2o     = 0          stbetl    = 0          stbetlw   = 0         
 + stbeto    = 1.513      stbetw    = -0.085     stcso     = 0         
 + stmueo    = 0.1912     strso     = -0.2143    stthemuo  = 0.7768    
 + stthesatl = -0.05022   stthesatlw= -0.03267   stthesato = 1.5       
 + stthesatw = 0          stvfbl    = 0.05       stvfblw   = 0.02131   
 + stvfbo    = 0.00075    stvfbw    = 0          stxcoro   = 0         
 + themuo    = 2.531      thesatbo  = 0          thesatgo  = 0.1075    
 + thesatl   = 0.645      thesatlexp= 0.8542     thesatlw  = -0.0095   
 + thesato   = 1e-09      thesatw   = 0          vfbw      = -0.008062 
 + vnsubo    = 0          vpo       = 0.001      wbet      = 2.374e-08 
 + wot       = 0          wseg      = 5.364e-10  wsegp     = 1e-10     
 + wvarl     = 0          wvarw     = 0          xcorl     = -0.185    
 + xcorlw    = 0          xcoro     = 0.08261    xcorw     = -0.15     
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 + gcoo      = 11.83      iginvlw   = 5.115      igovw     = 0.6593    
 + gc2o      = 0.6149     gc3o      = -0.2159    chibo     = 1.67      
 + stigo     = 2          agidlw    = 100.0      bgidlo    = 18.69     
 + cgidlo    = 0.003      stbgidlo  = 0         
 ***************************************************************************
 * sti stress model parameters
 ***************************************************************************
 + saref     = 3e-6       sbref     = 3e-6       wlod      = 0         
 + kuo       = -6.3e-8    kvsat     = 0          tkuo      = 0         
 + lkuo      = 0 	 wkuo      = 0          llodkuo   = 1         
 + wlodkuo   = 1          kvtho     = 0          lkvtho    = 0  
 + wkvtho    = 0          pkvtho    = 0          llodvth   = 0         
 + wlodvth   = 1          stetao    = 0          lodetao   = 1         
 ***************************************************************************
 * junction diode parameters
 ***************************************************************************
 + trj       = 25               
 ***************************************************************************
 * capacitance parameters
 ***************************************************************************
 + cjorbot   = cj_nhv33   cjorsti   = cjsw_nhv33 cjorgat   = cjsg_nhv33    
 + vbirbot   = pb_nhv33   vbirsti   = pbsw_nhv33 vbirgat   = pbsg_nhv33    
 + pbot      = mj_nhv33   psti      = mjsw_nhv33 pgat      = mjsg_nhv33    
 ***************************************************************************
 * ideal current parameters
 ***************************************************************************
 + idsatrbot = js_nhv33   idsatrsti = jsw_nhv33  idsatrgat = jsw_nhv33     
 + phigbot   = 1.135744   phigsti   = 1.135744   phiggat   = 1.135744  
 + csrhbot   = 0          csrhsti   = 0          csrhgat   = 0         
 + xjunsti   = 1e-07      xjungat   = 1e-07     
 ***************************************************************************
 * trap-assisted tunneling parameters
 ***************************************************************************
 + ctatbot   = 0          ctatsti   = 0          ctatgat   = 0         
 + mefftatbot= 0.25       mefftatsti= 0.25       mefftatgat= 0.25      
 ***************************************************************************
 * band-to-band tunneling parameters
 ***************************************************************************
 + cbbtbot   = 0          cbbtsti   = 0          cbbtgat   = 0         
 + fbbtrbot  = 1e+09      fbbtrsti  = 1e+09      fbbtrgat  = 1e+09     
 + stfbbtbot = 0          stfbbtsti = 0          stfbbtgat = 0         
 ***************************************************************************
 * avalanche and breakdown parameters
 ***************************************************************************
 + vbrbot    = 1001       vbrsti    = 1001       vbrgat    = 1001      
 + pbrbot    = 4          pbrsti    = 4          pbrgat    = 4         
 ***************************************************************************
 * noise parameters
 ***************************************************************************
 + nfalw     = '1.6e25*noiamult' 
 + nfblw     = '1.2e6*noibmult' 
 + nfclw     = '0.6e-10*noicmult'
 + efo	    = 0.95
 + lintnoi   = 0.012e-6 
 + alpnoi    = 2
 + fnto      = ntnoi_nhv33 
 *
 .ends hvtnfet33_rf
 .include './hvtnfet33tw.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/hvtnfet33tw.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.1 10/03/04 09:33:08 
 *
 *>  ibm cmrf8sf hvtnfet33tw  3.3v hvt triple well nfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b tw sx ) hvtnfet33tw l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.40u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          +   t3well = 1    <- well isolation flag
 *                                   1-> t3 isolation, true triple well, default
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---         d1           d2
 *            gate     | |   bulk   |\     tw    /|
 *              o------| |-----o----| >|---o---|< |----o sx
 *                     | |          |/           \|
 *                     | |---
 *                          |     area and perimeter for both pi diodes
 *                          |     are calculated based on inside n-well
 *                          o     edge of the isolation ring.
 *                        source
 *
 *         note: the ldd resistance is accounted for within the psp model.
 *
 * ibm confidential
 * (c) 2010 ibm corporation
 *
 ***************************************************************************
 *
 .subckt hvtnfet33tw  d g s b tw sx  w=1.0u l=0.40u nf=1 par=1 dtemp=0
 +                            	    as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                            	    lstis=1 sa=0 sb=0 sd=0 lnws=0 t3well=1
 +                            	    panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                            	    panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                            	    plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                            	    rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1
 .param
 *
 * pc to pc spacing based on gr207,207b,207c
 +  pc2pc = '(0.36 + 0.04*(l > 0.125e-06) + 0.04*(l > 0.175e-06))*1.0e-06'
 +  pc2rx = 0.60e-06                          $ pc to outside rx distance
 +  iwlength  = '(nf*l+(nf-1)*pc2pc+2*pc2rx+2.34u)'
 +  iwwidth = 'w/nf+2.34u'
 +  iwarea  = 'iwlength*iwwidth'
 +  iwperim = '2 * (iwlength+iwwidth)'
 +  owarea  = '(iwlength+3u) * (iwwidth+3u)'
 +  owperim = '2 * (iwlength+iwwidth+6u)'
 *
 x1 d g s b hvtnfet33 w=w l=l nf=nf par=par dtemp=dtemp
 +                       as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                       lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                       panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                       panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                       panw9=panw9 panw10=panw10 plnest=plnest
 +                       plorient=plorient pld200=pld200 pwd100=pwd100
 +                       rgatemod=rgatemod ngcon=ngcon rbodymod=rbodymod
 +                       rf_rsub=rf_rsub
 *
 x2   b  tw diodepwpi area=iwarea perim=iwperim dtemp=dtemp t3well=t3well
 x3   sx tw diodepisx area=owarea perim=owperim dtemp=dtemp t3well=t3well
 x4   sx tw diodenwx  area=0 	 perim=owperim dtemp=dtemp t3well=t3well
 *
 .ends hvtnfet33tw
 .include './hvtnfet33tw_rf.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/hvtnfet33tw_rf.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.1 10/11/08 16:22:08
 *
 *>  ibm cmrf8sf hvtnfet33tw_rf  3.3v hvt triple well nfet rf subcircuit
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b tw sx ) hvtnfet33tw_rf l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.40u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *
 *
 *          + rgatemod = 3    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 2    <- extrinsic gate connection switch (1->single-ended,
 *                                                                 2->double-ended)
 *          +     gtab = 1    <- m1 gate ring tabs flag (1->tabs present,
 *                                                       0->tabs absent)
 *          + rbodymod = 1    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +     ring = 2    <- substrate contact type for rf pcell 
 *          +  rf_rsub = 1    <- body resistance multiplier
 *          +    cwire = 1    <- wiring capacitance multiplier
 *
 *          +   t3well = 1    <- well isolation flag
 *                                   1-> t3 isolation, true triple well, default
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---         d1           d2
 *            gate     | |   bulk   |\     tw    /|
 *              o------| |-----o----| >|---o---|< |----o sx
 *                     | |          |/           \|
 *                     | |---
 *                          |     area and perimeter for both pi diodes
 *                          |     are calculated based on inside n-well
 *                          o     edge of the isolation ring.
 *                        source
 *
 *         note: the ldd resistance is accounted for within the psp model.
 *
 * ibm confidential
 * (c) 2010 ibm corporation
 *
 ***************************************************************************
 *
 .subckt hvtnfet33tw_rf  d g s b tw sx  w=1.0u l=0.40u nf=1 par=1 dtemp=0
 +                            	    as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                            	    lstis=1 sa=0 sb=0 sd=0 lnws=0 t3well=1
 +                            	    panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                            	    panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                            	    plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                            	    rgatemod=3 ngcon=2 gtab=1 ring=2 cwire=1 rbodymod=1 rf_rsub=1 
 .param
 *
 * pc to pc spacing based on gr207,207b,207c
 +  pc2pc = '(0.36 + 0.04*(l > 0.125e-06) + 0.04*(l > 0.175e-06))*1.0e-06'
 +  pc2rx = 0.60e-06                          $ pc to outside rx distance
 +  iwlength  = '(nf*l+(nf-1)*pc2pc+2*pc2rx+2.9u)'
 +  iwwidth = 'w/nf+2.74u'
 +  iwarea  = 'iwlength*iwwidth'
 +  iwperim = '2 * (iwlength+iwwidth)'
 +  owarea  = '(iwlength+3u) * (iwwidth+3u)'
 +  owperim = '2 * (iwlength+iwwidth+6u)'
 *
 x1 d g s b hvtnfet33_rf w=w l=l nf=nf par=par dtemp=dtemp
 +                       as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                       lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                       panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                       panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                       panw9=panw9 panw10=panw10 plnest=plnest
 +                       plorient=plorient pld200=pld200 pwd100=pwd100
 +                       rgatemod=rgatemod ngcon=ngcon rbodymod=rbodymod
 +                       rf_rsub=rf_rsub gtab=gtab ring=ring cwire=cwire
 *
 x2   b  tw diodepwpi area=iwarea perim=iwperim dtemp=dtemp t3well=t3well
 x3   sx tw diodepisx area=owarea perim=owperim dtemp=dtemp t3well=t3well
 x4   sx tw diodenwx  area=0 	 perim=owperim dtemp=dtemp t3well=t3well
 *
 .ends hvtnfet33tw_rf
 .include './hvtpfet33.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/hvtpfet33.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.3 10/11/16 11:36:20
 *
 *>  ibm cmrf8sf  hvtpfet33  3.3v hvt pfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) hvtpfet33 l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.40u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---
 *            gate     | |         bulk
 *              o------| |----------o
 *                     | |     
 *                     | |---
 *                          |
 *                          |
 *                          |
 *                          o
 *                        source
 *
 *         note: the ldd resistance is accounted for within the psp model.
 *
 * ibm confidential
 * (c) 2010 ibm corporation
 *
 ***************************************************************************
 *
 .subckt hvtpfet33 d g s b w=1.0u l=0.40u nf=1 par=1 dtemp=0
 +                         as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                         lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                         panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                         panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                         plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                         rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1        $ unused parameters
 +                         rbps=100 rbpd=100 rbsb=1e9 rbpb=50 rbdb=1e9    $ unused parameters
 .param
 *
 * if monte carlo and "pl*" instance parameter = zero, use values from skew/process file
 +   a_plnest     = limit(-0.5,0.5)
 +   sel_plnest   = '((plnest == 1) || ((a_plnest*plnest) == 1))'
 +   a_plorient   = limit(-0.5,0.5)
 +   sel_plorient = '((plorient == 1) || ((a_plorient*plorient) == 1))'
 +   a_pld200     = limit(-0.5,0.5)
 +   sel_pld200   = '((pld200 == 1) || ((a_pld200*pld200) == 1))'
 +   a_pwd100     = limit(-0.5,0.5)
 +   sel_pwd100   = '((pwd100 == 1) || ((a_pwd100*pwd100) == 1))'
 *
 * calculate aclv/acwv and final lint/wint params
 +   aclv_ni_sws   = '(mc_sw + ((mc_fet_mm_f !=  1) && (pc_nest == 2))/aclv_dgfactor + cnr_phv33*(1-mc_fet_mm_f)*(pc_nest !=  2))'
 +   aclv_or_sws   = '(mc_sw + ((mc_fet_mm_f !=  1) && (pc_orient == 2))/aclv_dgfactor + cnr_phv33*(1-mc_fet_mm_f)*(pc_orient !=  2))'
 +   aclv_dist_sws = '(mc_sw + ((mc_fet_mm_f !=  1) && (pc_dist == 2))/aclv_dgfactor + cnr_phv33*(1-mc_fet_mm_f)*(pc_dist !=  2))'
 +   aclv_ni       = '((dgfet_aclv_nest*sel_plnest) + (dgfet_aclv_iso*(1-sel_plnest)))*aclv_ni_sws'
 +   aclv_or       = '((dgfet_aclv_v*sel_plorient) + (dgfet_aclv_h*(1-sel_plorient)))*aclv_or_sws'
 +   aclv_dist     = '((dgfet_aclv_out*sel_pld200) + (dgfet_aclv_in*(1-sel_pld200)))*aclv_dist_sws'
 +   aclv_ran      = agauss(cnr_phv33,mc_sw,3)
 *
 +   acwv_dist_sws = '(-mc_sw + ((mc_fet_mm_f !=  1) && (rx_dist == 2))/acwv_dgfactor + cnr_phv33*(1-mc_fet_mm_f)*(rx_dist !=  2))'
 +   acwv_dist     = '((dgfet_acwv_out*sel_pwd100) + (dgfet_acwv_in*(1-sel_pwd100)))*acwv_dist_sws'
 +   acwv_ran      = agauss('-cnr_phv33',mc_sw,3)
 *
 .param
 +   xc_lint_1 = '(aclv_ni*aclv_dgfet_ni + aclv_or*aclv_dgfet_or)'
 +   xc_lint_2 = '((aclv_dist*aclv_dgfet_dist) + (aclv_ran + (mc_global == 2))*aclv_dgfet_ran)'
 +   xx_lint_3 = '(mc_fet_mm_f + (aclv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_lint_4 = '((mc_global == 2)*(-xlint_phv33) + (mc_global !=  2))'
 +   xc_lint_t = '((xc_lint_1 + xc_lint_2)*xx_lint_3)*xx_lint_4'
 *
 +   xc_wint_1 = '((acwv_dist*acwv_dgfet_dist) + (acwv_ran + (mc_global == 2))*acwv_dgfet_ran)'
 +   xx_wint_2 = '(mc_fet_mm_f + (acwv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_wint_3 = '((mc_global == 2)*(xwint_phv33) + (mc_global !=  2))'
 +   xc_wint_t = '((xc_wint_1)*xx_wint_2)*xx_wint_3'
 *
 *     final =  nominal      +      acv * dist(-1,1)      +        global * dist(-1,1)
 + lint_hvtpfet33 = 'lint_phv33 + 1.5*total_aclv_dgfet*xc_lint_t*fet_geo_mm + ltol_phv33*xlint_phv33'
 + wint_hvtpfet33 = 'wint_phv33 + 1.5*total_acwv_dgfet*xc_wint_t*fet_geo_mm + wtol_phv33*xwint_phv33'
 *
 .param
 * switch to turn on or off the sti stress effects
 +  isti = '((gstis==1)&&(lstis==1))||(gstis==2)'
 *
 * switch to turn on or off the nwell proximity effects
 +  inw  = '((gwells==1)&&(lnws==1))||(gwells==2)'
 *
 * nwell proximity effect calculations
 +  proxpre  =  0.07e-06             $ [v-m]
 +  proxlen  = -0.35e-06             $ [m]
 +  proxk1   =  0.375                $ [unitless]
 +  rxwparm1 = -0.28                 $ [unitless]
 +  rxwparm2 =  0.56e-06             $ [unitless]
 +  rxwparm3 =  0.0e-6               $ [m]
 +  nw1b1   = 'panw1 /(band1 -proxlen)'
 +  nw2b2   = 'panw2 /(band2 -proxlen)'
 +  nw3b3   = 'panw3 /(band3 -proxlen)'
 +  nw4b4   = 'panw4 /(band4 -proxlen)'
 +  nw5b5   = 'panw5 /(band5 -proxlen)'
 +  nw6b6   = 'panw6 /(band6 -proxlen)'
 +  nw7b7   = 'panw7 /(band7 -proxlen)'
 +  nw8b8   = 'panw8 /(band8 -proxlen)'
 +  nw9b9   = 'panw9 /(band9 -proxlen)'
 +  nw10b10 = 'panw10/(band10-proxlen)'
 +  prox_term = 'inw*(proxpre/(l*w))*(nw1b1+nw2b2+nw3b3+nw4b4+nw5b5+nw6b6+nw7b7+nw8b8+nw9b9+nw10b10)'
 +  nsub_prox = '5.5e22*prox_term'
 *
 * mis-match calculations: include multiplicity (par)
 .param
 +  kvt  =  8.5e-9
 +  kvtl =  2.5e-7
 +  kvtw = -3.0e-7
 +  kmb  =  7.5e-10
 +  kmbl = -3.6e-6
 +  kmbw = -4.0e-6
 +  sigvth  = 'kvt/sqrt((w-kvtw)*par*(l-kvtl))'
 +  sigbeta = 'kmb/sqrt((w-kmbw)*par*(l-kmbl))'
 *
 +  dvth0 = agauss(0,1,3)               $ local mis-match distributions
 +  dbeta = agauss(0,1,3)
 *                                      $ select local vs global vs corner
 +  d_vth0 = 'dvth0*(mc_global !=  2) + xphv33vth0*(mc_global == 2) - cnr_phv33'
 +  d_beta = 'dbeta*(mc_global !=  2) + dphv33u0*(mc_global == 2) - cnr_phv33'
 *
 +  mmvth0 = 'sigvth * d_vth0 * fet_dop_mm'    $ vth0 mis-match
 +  mmbeta = 'sigbeta * d_beta * fet_dop_mm'   $ beta mis-match
 *
 +  pvt_var = 'mmvth0 + prox_term'      $ local vth0 variation
 *
 .param
 * flicker noise calculations: statistics are function of w and l and par
 +  noideva = '5u * 0.40u * 4'        $ device area for extracted variation
 +  noistd  = 2.16                    $ worst case variation value
 *
 +  noi_scale = 'noistd-min(log(sqrt(w*l*par/noideva)),0)'   $ area scaling
 +  noiamult  = 'exp(dnoi_phv33*noi_scale)'                  $ gate bias scaliing
 +  noibmult  = 'exp(dnoi_phv33*noi_scale*1.2)'
 +  noicmult  = 'exp(dnoi_phv33*noi_scale/1.2)'
 *
 * thermal noise scaling equation
 +  tnoitanha = 0.4
 +  tnoitanhb = 3.2e6
 +  tnoitanhc = 2.5e11
 +  ntnoi_phv33 = '1.0/tanh(tnoitanha + tnoitanhb*l + tnoitanhc*l*l)'
 *
 m0 d g s b pch33 w=w l=l nf=nf as=as ad=ad ps=ps pd=pd 
 +                sa='isti*sa' sb='isti*sb' sd='isti*sd'
  **warning** (/tools2/courses/ee6321/share/IBM_PDK/cmrf8sf/relDM/HSPICE/models/././hvtpfet33.inc:198) parameter  nf       is ignored
  **warning** (/tools2/courses/ee6321/share/IBM_PDK/cmrf8sf/relDM/HSPICE/models/././hvtpfet33.inc:198) parameter  sd       is ignored
 *
 ***************************************************************************
 * psp fet model
 ***************************************************************************
 *
 .model pch33 pmos level=69 tr=25 version=102.3
 ***************************************************************************
 * switch settings
 ***************************************************************************
 + swgidl    = 1          swigate   = 0          swimpact  = 1         
 + swjuncap  = 3         
 ***************************************************************************
 * parameters with process variation
 ***************************************************************************
 + lvaro     = '-2*lint_hvtpfet33' 
 + wvaro     = '-2*wint_hvtpfet33' 
 + toxo      = tox_phv33  
 + toxovo    = tox_phv33 
 + uo        = 'uo_phv33+mmbeta' 
 + rsw1      = rsw_phv33  
 + nsubo     = '2.157e23+nsub_prox' 
 + vfbo      = 'vfb_phv33+pvt_var'
 + vfbl	    = vfbl_phv33
 + vfblw     = vfblw_phv33    
 + fol1      = fol1_phv33 
 + fol2      = fol2_phv33
 + lov       = lov_phv33
 ***************************************************************************
 * core parameters
 ***************************************************************************
 + a1l       = 0.1052     a1o       = 19.6       a1w       = 0         
 + a2o       = 33.87      a3l       = -0.07503   a3o       = 1.287     
 + a3w       = 0          a4l       = -0.1108    a4o       = 0.25      
 + a4w       = 0          alp1l1    = 6.476e-09  alp1l2    = 0.006758  
 + alp1lexp  = 1.114      alp1w     = 0          alp2l1    = 2.397e-08 
 + alp2l2    = 6.196e-07  alp2lexp  = 0.08448    alp2w     = 0         
 + alpl      = 0.02826    alplexp   = 0.9034     alpw      = 0         
 + axl       = 0.0719     axo       = 8.9        betw1     = 0.1128    
 + betw2     = -0.03956   cfbo      = 0.7923     cfl       = 0.0006227 
 + cflexp    = 2.399      cfrw      = 0          cfw       = 0         
 + cgbovl    = 0          csl       = -0.07322   cslexp    = 0.1018    
 + cslw      = 0          cso       = 0.198      csw       = 0         
 + ctl       = 0.03802    ctlexp    = 0.918      ctlw      = 0         
 + cto       = 1e-06      ctw       = 0          dlq       = -3e-08    
 + dnsubo    = 0          dphibl    = 0.001642   dphiblexp = 3.253     
 + dphiblw   = 0          dphibo    = -0.03286   dphibw    = 0         
 + dta       = dtemp      dwq       = 0          fbet1     = 0.0257    
 + fbet1w    = 1.9        fbet2     = -0.05472   fetao     = 1.707     
 + lap       = 0          lp1       = 4.386e-07  lp1w      = 1.901e-07 
 + lp2       = 5.84e-07   lpck      = 1e-10      lpckw     = 0         
 + lvarl     = 0          lvarw     = 0          mueo      = 0.8567    
 + muew      = 0          novo      = 3.5e+24    npck      = 2.56e+21  
 + npckw     = 0          npl       = 0          npo       = 8.593e+25 
 + nslpo     = 0.05       nsubw     = -0.01      qmc       = 1         
 + rsbo      = 0          rsgo      = 0.2319     rsw2      = 0         
 + sta2o     = 0          stbetl    = 0          stbetlw   = 0         
 + stbeto    = 1.196      stbetw    = 0          stcso     = 0         
 + stmueo    = 0.8301     strso     = -0.1177    stthemuo  = 0.09883   
 + stthesatl = -0.05785   stthesatlw= 0          stthesato = 1.674     
 + stthesatw = 0          stvfbl    = 0.04       stvfblw   = 0.02      
 + stvfbo    = 0.0007056  stvfbw    = 0          stxcoro   = 0         
 + themuo    = 1.286      thesatbo  = 0          thesatgo  = 0.1655    
 + thesatl   = 0.27       thesatlexp= 0.95       thesatlw  = 0         
 + thesato   = 0.0001592  thesatw   = 0          vfbw      = 0         
 + vnsubo    = 0          vpo       = 0.1429     wbet      = 3.331e-08 
 + wot       = 0          wseg      = 1e-08      wsegp     = 1e-08     
 + wvarl     = 0          wvarw     = 0          xcorl     = 0         
 + xcorlw    = 0          xcoro     = 1e-05      xcorw     = 0         
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 + gcoo      = 380.2      iginvlw   = 215.6      igovw     = 25        
 + gc2o      = 0.4555     gc3o      = -0.2515    chibo     = 2.314     
 + stigo     = 2          agidlw    = 2.60       bgidlo    = 19.62        
 + cgidlo    = 0.003      stbgidlo  = 0         
 ***************************************************************************
 * sti stress model parameters
 ***************************************************************************
 + saref     = 3e-6       sbref     = 3e-6       wlod      = 0         
 + kuo       = 6.0e-8     kvsat     = 0          tkuo      = 0         
 + lkuo      = 0          wkuo      = 0          llodkuo   = 0         
 + wlodkuo   = 0          kvtho     = 0          lkvtho    = 0   
 + wkvtho    = 0          pkvtho    = 0          llodvth   = 0         
 + wlodvth   = 0          stetao    = 0          lodetao   = 1         
 ***************************************************************************
 * junction diode parameters
 ***************************************************************************
 + trj       = 25               
 ***************************************************************************
 * capacitance parameters
 ***************************************************************************
 + cjorbot   = cj_phv33   cjorsti   = cjsw_phv33 cjorgat   = cjsg_phv33   
 + vbirbot   = pb_phv33   vbirsti   = pbsw_phv33 vbirgat   = pbsg_phv33   
 + pbot      = mj_phv33   psti      = mjsw_phv33 pgat      = mjsg_phv33   
 ***************************************************************************
 * ideal current parameters
 ***************************************************************************
 + idsatrbot = js_phv33   idsatrsti = jsw_phv33  idsatrgat = jsw_phv33    
 + phigbot   = 1.14775    phigsti   = 1.14775    phiggat   = 1.14775   
 + csrhbot   = 0          csrhsti   = 0          csrhgat   = 0         
 + xjunsti   = 1e-07      xjungat   = 1e-07     
 ***************************************************************************
 * trap-assisted tunneling parameters
 ***************************************************************************
 + ctatbot   = 0          ctatsti   = 0          ctatgat   = 0         
 + mefftatbot= 0.25       mefftatsti= 0.25       mefftatgat= 0.25      
 ***************************************************************************
 * band-to-band tunneling parameters
 ***************************************************************************
 + cbbtbot   = 0          cbbtsti   = 0          cbbtgat   = 0         
 + fbbtrbot  = 1e+09      fbbtrsti  = 1e+09      fbbtrgat  = 1e+09     
 + stfbbtbot = 0          stfbbtsti = 0          stfbbtgat = 0         
 ***************************************************************************
 * avalanche and breakdown parameters
 ***************************************************************************
 + vbrbot    = 1001       vbrsti    = 1001       vbrgat    = 1001      
 + pbrbot    = 4          pbrsti    = 4          pbrgat    = 4         
 ***************************************************************************
 * noise parameters
 ***************************************************************************
 + nfalw     = '2.0e25*noiamult' 
 + nfblw     = '16.1e7*noibmult' 
 + nfclw     = '3.0e-8*noicmult'
 + efo       = 1.10
 + lintnoi   = 0
 + alpnoi    = 2
 + fnto      = ntnoi_phv33
 *
 .ends hvtpfet33
 *.include './hvtpfet33_rf.inc'
 .include './indstack.inc'
 * path, component, release: cmos8base/rel/hspice/models/indstack.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.4 09/10/05 10:57:18
 ***************************************************************************
 *
 *   licensed materials - property of ibm
 *
 *   ibm/chartered/infineon/samsung/freescale confidential
 *   (c) 2009 ibm corporation
 *
 *   us government users restricted rights - use, duplication
 *   or disclosure restricted by gsa adp schedule contract with
 *   ibm corporation.
 *
 ***************************************************************************
 *
 *  ibm generic indstack octagonal inductor (two coupled spirals)
 *
 ***************************************************************************
 *
 * generic octagonal inductor model for dual level metal spirals:
 * (single level, parallel, series, and symmetric single and parallel)
 ***************************************************************************
 *
 * the inductor model contains:
 *
 *  1. two r-l-k networks to represent the variation in inductance and
 *     resistance due to skin and proximity effects for the two halves of the
 *     spiral. nine mutual inductances representing the magnetic coupling
 *     between the primary and secondary halves of the spiral.
 *
 *  2. two series inductors (lpra, lsea), representing the extra inductance due
 *     to magnetic coupling between the two halves of the spiral. they are
 *     magnetically coupled with a coupling coefficient (kpsa), if necessary.
 *
 *  3. two additional series resistors (ruppr, rupse) representing the underpass
 *     resistance.
 *
 *  4. three parallel capacitors that represent the capacitance present between
 *     the outermost turn of the primary spiral and the innermost turn of the
 *     secondary spiral (copis), the outermost turn of the secondary spiral
 *     and the innermost turn of the secondary spiral(cosis), and the
 *     outermost turns of the primary and secondary spirals (copos).
 *
 *  5. oxide capacitances [coxout(p,s) and coxin(p,s)] to simulate the
 *     capacitance between the two spirals and the substrate.
 *
 *  6. substrate capacitances [csxout(p,s) and csxin(p,s)] and resistances
 *     [rsxinout(p,s) and rsxin(p,s)] to simulate the effect of the conductive
 *      substrate loss.
 *
 *  7. groundplane center-tap resistance (rpcct) for m1 groundplane.
 *     set to 0 for bf groundplane case.
 *
 *                             || (copos)
 *       +---------------------||----------------------------------------+
 *       |                     ||                                        |
 *       |                                                               |
 *       |                                                               |
 *       |           (copis)                                             |
 *       |               ||                                              |
 *       +---------------||----------------+-o inse                      |
 *       |               ||         inpr   |                             |
 *       |                            o    |                             |
 *       |                 ________   |    |         ||(cosis)           |
 *       |                |        |  |    +---------||------------------+
 *       |     +----------| (kpsa) |- | -- | ----+   ||                  |
 *       |    \|/         |________|  |    |    \|/                      |
 *       |   ______(rup-____________  |    |  ______ (rup- ____________  |
 * outpr |  |      |pr)|skin/proxim-| |    | |      | se) |skin/proxim-| |outse
 * o-----+--|(lpra)|/\/|ity effect  |-+    +-|(lsea)|/\/\/|ity effect  |-+---o
 *       |  |______|   | "primary"  | |    | |______|     |"secondary" | |
 *       |             |____________| |    |              |____________| |
 *       |                 /|\        |    |                    /|\      |
 *       |                  |         |    |  +---------------+  |       |
 *       |                  |         |    |  |prim. to sec.  |  |       |
 *       |                  +-----------------|coupling coeff |- +       |
 *       |                            |    |  |matrix(kxxprse)|          |
 *       |                            |    |  +---------------+          |
 *     -----                         ---  ---                          -----
 *     -----(coxoutp)        (coxinp)---  ---(coxins)         (coxouts)-----
 *       |  3                       4 |    | 5                        6  |
 *       +-----+                  +---+    +---+                   +-----+
 *       |     |                  |   |    |   |                   |     |
 *       |     |            (csx- |   |    |   |                   |     |
 *       \     |             inp) \   |    |   \ (csx-             \     |
 * (rsx- /   -----(csx-     (rsx- /  ---  ---  /  ins)       (rsx- /   -----(csx-
 *  outp)\   ----- outp)     inp) \  ---  ---  \ (rsx-        outs)\   -----outs)
 *       /     |                  /   |    |   /  ins)             /     |
 *       |     |                  |   |    |   |                   |     |
 *       |     |                  |   |    |   |                   |     |
 *       +-----+-----------------+----+-+--+---+-------------------+-----+
 *                                      | gp
 *                                      |
 *                                      \
 *                                      /
 *                                      \  (rm1ct)
 *                                      /
 *                                      \
 *                                      |
 *                                      |
 *                                      o
 *                       gnd (substrate/groundplane)
 *
 ********************************************************************************
 *
 *                 skin/proximity effect network "primary"           primary - secondary coupling matrix
 *                 ---------------------------------------           -----------------------------------
 *
 *         proximity effect                          skin effect
 *       ______________________              ___________________________   __________________
 *      /                      \            /                           \ /                  \
 *                   _______                                  _______
 *         (rprf3)  |       |                   (rpr3a)      |       |
 *      +-/\/\/\/\--|(lprf3)|--+            +---/\/\/\/\-----|(lpr3a)|--+  \      \       \
 *      |           |_______|  |    /       |                |_______|  |k13prse k23prse k33prse
 *      |                      |    |    /  |                           |  |      |       |
 *      |            _______   |    | k23pra|                 _______   |  |      |       |
 *      |  (rprf2)  |       |  |    |    \  |   (rpr2a)      |       |  |  |      |       |
 *      +-/\/\/\/\--|(lprf2)|--+   k13pra   +---/\/\/\/\-----|(lpr2a)|--+  \      \       \
 *      |           |_______|  |    |    /  |                |_______|  |k12prse k22prse k32prse
 *      |                      |    | k12pra|                           |  |      |       |
 *      |            _______   |    |    \  |                 _______   |  |      |       |
 *      |  (rprf1)  |       |  |    \       |   (rpr1a)      |       |  |  |      |       |
 *   o--+-/\/\/\/\--|(lprf1)|--+------------+---/\/\/\/\-----|(lpr1a)|--+--\-o    \       \
 *                  |_______|                                |_______|   k11prse k21prse k31prse
 *                                                                         |      |       |
 *                                                                         |      |       |
 *                skin/proximity efect network "secondary"                 |      |       |
 *                ----------------------------------------                 |      |       |
 *         proximity effect                          skin effect           |      |       |
 *       ______________________              ___________________________   |      |       |
 *      /                      \            /                           \  |      |       |
 *                   _______                                  _______      |      |       |
 *         (rsrf3)  |       |                   (rse3a)      |       |     |      |       |
 *      +-/\/\/\/\--|(lsrf3)|--+            +---/\/\/\/\-----|(lse3a)|--+  |      |       /
 *      |           |_______|  |    /       |                |_______|  |  |      |
 *      |                      |    |    /  |                           |  |      |
 *      |            _______   |    | k23sea|                 _______   |  |      |
 *      |  (rsrf2)  |       |  |    |    \  |   (rse2a)      |       |  |  |      |
 *      +-/\/\/\/\--|(lsrf2)|--+   k13sea   +---/\/\/\/\-----|(lse2a)|--+  |      /
 *      |           |_______|  |    |    /  |                |_______|  |  |
 *      |                      |    | k12sea|                           |  |
 *      |            _______   |    |    \  |                 _______   |  |
 *      |  (rsrf1)  |       |  |    \       |   (rse1a)      |       |  |  /
 *   o--+-/\/\/\/\--|(lsrf1)|--+------------+---/\/\/\/\-----|(lse1a)|--+----o
 *                  |_______|                                |_______|
 ******************************************************************************
 *
 .subckt indstack (outpr inpr outse inse gnd)
 *
 +    xp     =  250u      $ largest outer dimension of primary spiral (m)
 +    xs     =  250u      $ largest outer dimension of secondary spiral (m)
 +    wp     =  10u       $ width of primary spiral turn (m)
 +    ws     =  10u       $ width of secondary spiral turn (m)
 +    sp     =  5u        $ actual primary turn to turn space (m)
 +    ss     =  5u        $ secondary turn to turn space (m)
 +    np     =  4.5       $ primary number of turns
 +    ns     =  4.5       $ secondary number of turns
 +    pgap   =  10u       $ gap between symmetric halves of the symmetric spiral (m)
 +    pwu    =  15u       $ width of underpass (m)
 +    pstack  =  2        $  0 -> single level spiral
 *                        $  1 -> parallel stacked spiral
 *                        $  2 -> series stacked spiral
 *                        $  3 -> symmetric, single level spiral
 *                        $  4 -> symmetric, parallel spiral
 +    pgrnd   = -1        $ indicator for grounding scheme under spiral
 *                        $ -1 = bf moat (default)
 *                        $ -2 = m1 groundplane
 +    gprs   =  3.4       $ groundplane sheet resistance (ohms.sq.) for
 *                        $ case gnrd=-2.
 +    tgprs  =  0.0040    $ temperatute coefficient for groundplane res.
 +    ctrs   =  0.076     $ sheet resistance of m1 groundplane center-tap
 +    tctrs  =  0.0034    $ temperature coefficient of centertap resistance
 +    rsx    =  0.135     $ resistivity of substrate (ohm-m)
 +    trsx   =  0.0085    $ temperature coefficient of of substrate resistance
 +    pdtemp =  0         $ temperature difference between element and
 *                        $ circuit temperature (deg c).
 +    delpr  =  0.32u     $ line width bias for primary spiral (m/width)
 +    prrs   =  0.007     $ sheet resistance of primary spiral (ohms/sq.)
 +    tprrs  =  0.0038    $ temperature coefficient of primary spiral
 +    prt    =  4.0u      $ thickness of primary spiral
 +    delse  =  0.0       $ line width bias of secondary spiral (m/width)
 +    sers   =  0.005     $ sheet resistance ofsecondary spiral (ohms/sq.)
 +    tsers  =  0.0038    $ temperature coefficient of secondary spiral
 +    sect   =  3.0u      $ thickness of secondary spiral
 +    delup  =  0.0       $ linewidth bias of underpass (m/width)
 +    uprs   =  0.005     $ sheet resistance of underpass (ohms/sq.)
 +    tuprs  =  0.0038    $ temprature coefficient of underpass
 +    upt    =  3.0u      $ thickness of underpass metal (m)
 +    cprs   =  0.0019m   $ primary to substrate area capacitance (f/m^2)
 +    cprsf  =  0.0179n   $ primary to substrate fringing capacitance (f/m)
 +    cmprsf =  0.0023n   $ primary to substrate fringing capacitance (f/m)
 *                        $ for embedded lines
 +    cprpr  =  0.0679n   $ primary turn to turn capacitance (f/m)
 +    cpru   =  0.0091m   $ primary to underpass capacitance (f/m^2)
 +    cpruf  =  0.0175n   $ primary to underpass fringing capacitance (f/m)
 +    cmpruf =  0.0067n   $ primary to underpass fringing capacitance (f/m)
 *                        $ for embedded primary lines
 +    cses   =  0.0029m   $ secondary to substrate area capacitance (f/m^2)
 +    csesf  =  0.0001n   $ secondary to substrate fringing capacitance (f/m)
 +    cmsesf =  0.0067n   $ secondary to substrate fringing capacitance (f/m)
 *                        $ for embedded lines
 +    csese  =  0.0363n   $ secondary turn to turn capacitance (f/m)
 +    cprse  =  0.0091m   $ primary to secondary area capacitance (f/m^2)
 +    cprsef =  0.0538n   $ primary to secondary fringing capacitance (f/m)
 +    cmprsef=  0.0182n   $ primary to secondary fringing capacitance (f/m)
 *                        $ for embedded lines
 +    cus    =  0.0029m   $ underpass to substrate area capacitance (f/m^2)
 +    cusf   =  0.0001n   $ underpass to substrate fringing capacitance (f/m)
 +    sxthk  =  737u      $ substrate thickness (um)
 * optimization coefficients
 + prscrfmin = 0.8e-3
 + prscrfmax = 2.0e-3
 +   prscrfa = 0.006
 +   prscrfb = -0.4e-3
 +      prfb = 1e-6
 +     ppowa = 0.0
 +     ppowb = 0.0
 +     pamax = 4600
 +       paa = -13000
 +       pab = 100
 +   condsib = 1
 +    prgptb = 200
 +  rsxcorrb = 1.3
 + csxcormax = 2.1
 +  csxcorra = 1.2e-3
 +  csxcorrb = -0.2891
 +   pcmprsb = 1
 +   pcmsesb = 1
 +  pcofprsb = 1.5
 +  pcofsesb = 1.5
 +  pcoprseb = 1
 +  pcmprseb = 1
 +  posplps  = 0.1875
 +  sosplps  = 0.375
 +  posplx   = 0.15
 +  plscrfmax= 0.2
 +  plscrfa  = 0.3
 +  plscrfb  = 0.05
 +  slscrfa  = -0.429
 +  slscrfb  = 0.486
 +  pcoo     = 1.0
 * spiral turn widths
 .param pwp='wp+delpr'
 .param pws='ws+delse'
 *
 * effective thickness of spiral turns
 .param spt='((pstack<=1)*1+(pstack>2))*prt+(pstack==2)*((prt+sect)/2)'
 *
 * effective temperature coefficient of spiral metal resistivity
 .param tsprs='(pstack==0)*tprrs+(pstack>=1)*((tprrs+tsers)/2)'
 * spiral turn to turn space
 .param psp='(pstack<=1)*(np>1)*(wp+sp-pwp)+(pstack>1)*((np+ns)>1)*(wp+sp-pwp)'
 .param pss='(pstack<=1)*(ns>1)*(ws+ss-pws)+(pstack>1)*((np+ns)>1)*(ws+ss-pws)'
 * symmetric spiral turn to turn space for composite spiral
 .param psx='((np+ns)>1)*(psp-pwp)/2'
 *
 * symmetric spiral number of turns for composite spiral
 .param nx='(np+ns)'
 *
 * underpass turn width (for single and parallel stacks only)
 .param pwup='pwu+delup'
 *
 * calculate the integer number of turns per spiral
 .param pintp='int(np)'
 .param pints='int(ns)'
 .param pintx='int(nx)'
 .param pintsp='(pstack>2)*pintx+(pstack<=2)*pintp'
 *
 * calculate the fraction of turns beyond the integer number of turns
 .param pfractp='np-pintp'
 .param pfracts='ns-pints'
 .param pfractx='nx-pintx'
 *
 * calculate the ceil() of the number of turns for symmetric spirals
 .param pceilx='(pfractx*1e3>0)*(pintx+1)+(pfractx*1e3==0)*pintx'
 *
 * calculate hollowness (inner radius/outer radius)
 .param hp='1-(2*np*(pwp+psp))/(xp-pwp)'
 .param hs='1-(2*ns*(pws+pss))/(xs-pws)'
 .param hx='1-(2*nx*(pwp+psx))/(xp-pwp)'
 .param hgen='(pstack<=2)*hp+(pstack>2)*hx'
 *
 * calculate inner diameter
 .param dinp='xp-2*np*pwp-2*(np-1)*psp'
 .param dins='xs-2*ns*pws-2*(ns-1)*pss'
 .param dinx='xp-2*nx*pwp-2*(nx-1)*psx'
 *
 * calculate average diameter
 .param davgp='(xp+dinp)/2'
 .param davgs='(xs+dins)/2'
 .param davgx='(xp+dinx)/2'
 *
 * calculate rho (o.d.-i.d.)/(o.d.+i.d.)
 .param rhop='max(1e-6,(xp-dinp)/(xp+dinp))'
 .param rhos='max(1e-6,(xs-dins)/(xs+dins))'
 .param rhox='max(1e-6,(xp-dinx)/(xp+dinx))'
 *
 *
 * calculate length of primary, secondary, and composite spirals and underpass
 .param plengthps='((-6.62752*(pwp+psp)*pintp*(pintp-1))/2)+(pintp*((3.31376*(xp-pwp))-(0.4142*(pwp+psp))))+(pfractp/0.125)*(-0.82844*(pwp+psp)*pintp+(0.4142*(xp-pwp)))'
 .param slengthps='((-6.62752*(pws+pss)*pints*(pints-1))/2)+(pints*((3.31376*(xs-pws))-(0.4142*(pws+pss))))+(pfracts/0.125)*(-0.82844*(pws+pss)*pints+(0.4142*(xs-pws)))'
 * sum of perimeters of nested octagons plus additional length due to cross-overs
 .param xoverlen='sqrt(pwr(pgap,2)+pwr(pwp+psx,2))'
 *
 .param xlength='pceilx*(((xp-pwp)/2+(pwp+psx)*(1-(pceilx+1)/2))*6.6275-2*pgap)+2*pgap-pwp-5e-6+2*15e-6'
 .param xsplength='xlength+2*(pceilx-1)*xoverlen'
 *
 .param plength='(pstack<=2)*plengthps+(pstack>2)*xlength/2'
 .param slength='(pstack<=2)*slengthps+(pstack>2)*xlength/2'
 .param splength='(pstack<=2)*plength+(pstack>2)*xsplength'
 *
 .param uplength='max(1e-6,(pstack<=1)*(pintp*((pintp+1)/pintsp*pwp+psp)))'
 *
 * calculate inductance of each level of the spiral
 .param c1_coef='1.07'
 .param c2_coef='2.29'
 .param c3_coef='0.0'
 .param c4_coef='0.19'
 .param prindum='mu0*pwr(np,2)*davgp*c1_coef/2*(log(c2_coef/rhop)+c3_coef*rhop+c4_coef*pwr(rhop,2))'
 .param seindum='mu0*pwr(ns,2)*davgs*c1_coef/2*(log(c2_coef/rhos)+c3_coef*rhos+c4_coef*pwr(rhos,2))'
 .param xindu='mu0*pwr(nx,2)*davgx*c1_coef/2*(log(c2_coef/rhox)+c3_coef*rhox+c4_coef*pwr(rhox,2))'
 *
 * calculate primary and secondary inductances for single turn symmetric spirals
 .param prindus='1e-7*2*splength/2*(log((splength)/(pwp+spt))+.50049+((pwp+spt)/(3*splength/2)))'
 .param seindus='1e-7*2*splength/2*(log((splength)/(pwp+spt))+.50049+((pwp+spt)/(3*splength/2)))'
 .param prindu='(np>=1)*prindum+(np<1)*prindus'
 .param seindu='(ns>=1)*seindum+(ns<1)*seindus'
 *
 * correction coefficients to account for metal thickness of single spirals and small adjustments for 1-1.5 turn spirals
 .param pscale='(pstack<=1)*min((0.99-spt*1e4),(0.84+np*xp*4e-4/spt))+(pstack>2)*min((0.99-spt*1e4),(0.84+nx*xp*4e-4/spt))'
 .param poffset='min(0.02e-9,0.1e-9*np-0.13e-9)*(pstack<=1)'
 .param prind='prindu*pscale+poffset'
 .param seind='seindu*pscale+poffset'
 .param xind='xindu*pscale+poffset'
 *
 * calculate series stacked inductance
 .param pksr='min(0.99,0.24*log10(prindu*1e9)+0.54)'
 .param msr='pksr*prindu'
 .param psrind='2*prindu+2*msr'
 *
 * calculate inductance of underpass (taking into account thickness effects)
 .param upl='(pstack>=2)*1e-12+(pstack<=1)*(1e-7*2*uplength*(log((2*uplength)/(pwup+upt))+.50049+((pwup+upt)/(3*uplength))))'
 .param upind='upl*pscale'
 *
 *******************************************************************************
 * calculate parameters to determine skin/proximity effect effect networks
 *******************************************************************************
 *
 * radius of circular cross section with equivalent self inductance
 .param prad1='0.2235*(pwp+spt)/0.7788'
 * maximum frequency of interest is 40ghz
 .param pwmax='2*pi*40e9'
 * effective resistivity of spiral
 .param prho='((pstack==1)*(prrs*sers/(prrs+sers))+((pstack==0)*1+(pstack>2))*prrs+(pstack==2)*((prrs+sers)/2))*spt'
 * conductivity of line
 .param pcondtl='1/prho'
 * dc resistance of rectangular cross-section line (only use length of spiral, not underpasses)
 .param prdcrect='prho*((pstack<3)*plength+(pstack>2)*xlength/2)/(pwp*spt)'
 * dc resistance of equivalent (for inductance) circular cross-section (only use length of spiral, not underpasses)
 .param prdc='prho*((pstack<3)*plength+(pstack>2)*xlength/2)/(pi*prad1**2)'
 * skin depth at highest frequency of interest
 .param pdeltamax='sqrt(2/(pwmax*mu0*pcondtl))'
 * partitioning coefficient based on skin depth  and equivalent outer radius
 .param palphar='0.53*prad1/pdeltamax'
 * resistance partitioning coefficient based on palphar and the following relationships:
 * r1=resistance of outer annulus=palphar*rdc
 * r2=r1/rr
 * r3=r2/rr==r1/rr^2 ....
 * partitioning the cross-section into three subsections requires solving for the roots of:
 * rr^2+rr+(1-palphar)=0, so that the parallel resistance is equivalent to rdc.
 * the quadratic equation is used to extract the maximum root of the equation to determine rr
 .param prr='(sqrt(1-4*(1-palphar))-1)/2'
 * resistance of each partition
 .param pres1='palphar*prdc'
 .param pres2='pres1/prr'
 .param pres3='pres2/prr'
 * areas of two annuli and central cross-section based on the resistance constraints
 .param parea1='prho*plength/pres1'
 .param parea2='prho*plength/pres2'
 .param parea3='prho*plength/pres3'
 * outer radii of second annulus and inner circular cross-section
 .param prad2='sqrt((parea2+parea3)/pi)'
 .param prad3='sqrt(parea3/pi)'
 * ratios of inner/outer radii for two annuli
 .param pratio1='prad2/prad1'
 .param pratio2='prad3/prad2'
 * coefficients used to calculate the self inductance of each annulus
 .param plnez1='-0.1067*pwr(pratio1,4)+0.3742*pwr(pratio1,3)-0.5160*pwr(pratio1,2)-0.0017*pratio1+0.2501'
 .param plnez2='-0.1067*pwr(pratio2,4)+0.3742*pwr(pratio2,3)-0.5160*pwr(pratio2,2)-0.0017*pratio2+0.2501'
 *
 *******************************************************************************
 * proximity effect network empirical scaling coefficients
 *******************************************************************************
 *
 * single level:     turn off proximity effect network for less than 2 turn spirals
 * parallel stacked: proximity effect stays on all the time due to extra metal thickness
 * series stacked: proximity effect stays on all the time due to enhanced magnetic field
 * m1 groundplane: proximity effect turned on all the time
 .param nsp='(pstack<2)*np+(pstack>2)*nx'
 .param proxim='(pgrnd==-2)*1+(pgrnd==-1)*(min(1,((pstack==0)*1+(pstack==3)*1)*((nsp>=2)+(nsp<2)*0.001)+(pstack==1)*1+(pstack==4)*1+(pstack==2)*1))'
 *
 * empirical correction factor for lrfdc in proximity effect network (multiplied by spiral effective inductance)
 * l1=l2=lrfdc*2  (parallel combination)
 * this parameter essentially describes the inductance variation due to proximity effect
 * a value of 0.2 indicates a 20% reduction over frequency
 .param plscrf='((pstack<=1)*1+(pstack>2)*1)*min(plscrfmax,(plscrfa*abs(pwr(min(0,hp-0.95),2))+plscrfb)*proxim)+(pstack==2)*(slscrfa*hp+slscrfb)'
 *
 * empirical correction factor for r1 in proximity effect network (multiplied by spiral rdc)
 * this parameter sets the minimum dc resistance of the proximity effect matrix or, conversely,
 * it sets the percentage of the overall dc resistance that is prone to proximity effect variation
 .param prscrf='min(prscrfmax,max(prscrfmin,prscrfa*hgen+prscrfb))*proxim'
 *
 *******************************************************************************
 * ...back to skin effect network calculations
 *******************************************************************************
 * empirical scale factors to adjust overall inductance and resistance due to skin/proximity effect networks
 .param plscale='1-plscrf'
 .param prscale='1-prscrf'
 * self inductance of each partition
 .param pl1='plscale*2e-7*plength*(log(2*plength/prad1)+plnez1-1)'
 .param pl2='plscale*2e-7*plength*(log(2*plength/prad2)+plnez2-1)'
 .param pl3='plscale*2e-7*plength*(log(2*plength/prad3)-0.75)'
 * geometric mean distances between the three partitions
 .param pgmd13='exp((pwr(prad1,2)*log(prad1)-pwr(prad2,2)*log(prad2))/(pwr(prad1,2)-pwr(prad2,2))-0.5)'
 .param pgmd12='pgmd13'
 .param pgmd23='exp((pwr(prad2,2)*log(prad2)-pwr(prad3,2)*log(prad3))/(pwr(prad2,2)-pwr(prad3,2))-0.5)'
 * mutual inductances between the three partitions
 .param pm12='plscale*2e-7*plength*(log(plength/pgmd12+sqrt(1+pwr(plength,2)/pwr(pgmd12,2)))-sqrt(1+pwr(pgmd12,2)/pwr(plength,2))+pgmd12/plength)'
 .param pm13='plscale*2e-7*plength*(log(plength/pgmd13+sqrt(1+pwr(plength,2)/pwr(pgmd13,2)))-sqrt(1+pwr(pgmd13,2)/pwr(plength,2))+pgmd13/plength)'
 .param pm23='plscale*2e-7*plength*(log(plength/pgmd23+sqrt(1+pwr(plength,2)/pwr(pgmd23,2)))-sqrt(1+pwr(pgmd23,2)/pwr(plength,2))+pgmd23/plength)'
 * coupling coefficients between the three partitioned inductances
 .param pk12='min(0.99,pm12/sqrt(pl1*pl2))'
 .param pk13='min(0.99,pm13/sqrt(pl1*pl3))'
 .param pk23='min(0.99,pm23/sqrt(pl2*pl3))'
 * resistance of each partition transformed back into cross-sectional shape
 .param pr1='pres1*prdcrect/prdc*prscale'
 .param pr2='pres2*prdcrect/prdc*prscale'
 .param pr3='pres3*prdcrect/prdc*prscale'
 *
 * calculate extra inductance beyond self inductance for complete spiral
 .param plcalc='(1e-7*2*plength*(log((2*plength)/(pwp+spt))+.50049+((pwp+spt)/(3*plength))))'
 * for small, single turn spirals, self inductance may be more than total inductance
 .param plratio='((pstack<=1)*1+(pstack>2))*prind/plcalc+(pstack==2)*psrind/2/plcalc'
 .param plextps='(plratio>=1)*((pstack<=1)*(prind-plcalc)+(pstack==2)*(psrind-2*plcalc)/2)'
 .param plextx='(plratio>=1)*(prind-plcalc)'
 .param plext='(pstack<=2)*plextps+(pstack>2)*plextx'
 * scale all inductances in the case that the self inductance is greater than the total spiral inductance
 .param pscsm='(plratio*10>=10)*1+(plratio*10<10)*plratio'
 * calculate mutual inductance between two halves of spiral if series stacked
 .param pmpsps='psrind/2-plcalc-plext'
 .param pmpsx='(plratio>=1)*((plratio-1)/plratio*(xind/2-prind))'
 .param pmps='(pstack==2)*pmpsps+(pstack>2)*pmpsx'
 * coupling coefficient derived from above mutual inductance
 .param pkps='(plext*1e12>0)*pmps/max(plext,1e-15)'
 *
 * coupling coefficient between primary and secondary for symmetric spirals
 .param pmskx='(pstack>2)*(1/plratio*(xind/2-prind))'
 *
 **************primary to secondary coupling coefficient calculation************
 *
 .param pkps11='min(0.99,pmskx/sqrt(pl1*pl1))'
 .param pkps22='min(0.99,pmskx/sqrt(pl2*pl2))'
 .param pkps33='min(0.99,pmskx/sqrt(pl3*pl3))'
 .param pkps12='min(0.99,pmskx/sqrt(pl1*pl2))'
 .param pkps13='min(0.99,pmskx/sqrt(pl1*pl3))'
 .param pkps23='min(0.99,pmskx/sqrt(pl2*pl3))'
 *
 *******************************************************************************
 * network to add proximity effect resistance and inductance
 *******************************************************************************
 *
 .param plrfdc='((pstack<=1)*1+(pstack>=2)*2)*plcalc*pscsm*plscrf'
 .param pb='1'
 .param prrf1='prscrf*prdcrect'
 *
 * empirical correction factor to determine the ratio between r2 and r1 in the proximity effect network
 * hollowness h=.2->.9:
 * this parameter sets the upper end of the resistance variation with frequency for the proximity effect matrix
 .param pa03='((pstack==0)*1+(pstack==3)*1)*min(pamax,paa*pwr(min(0,hgen-0.9),3)+pab)'
 .param pa14='((pstack==1)*1+(pstack==4)*1)*min(pamax,paa*pwr(hgen,-3)+pab)'
 .param pa2_c='(pstack==2)*min(pamax,paa*pwr(abs(min(0,hp-0.9)),2)+pab)'
 .param pa='pa03+pa14+pa2_c'
 *
 * empirical correction factor controlling resistance and inductance of additional proximity effect network leg
 * hollowness h=.2->.9:
 * additional r-l leg to proximity effect network when needed
 .param prf='prfb'
 .param ppow='ppowa*hgen+ppowb'
 *
 .param plrf1='plrfdc*pwr(pa+1,2)/(pwr(pa,2)+pb)'
 .param plrf2='pb*plrf1'
 .param plrf3='pb*plrf2'
 .param prrf2='prrf1*pa'
 .param prrf3='prrf1*pwr(pa,ppow)'
 *
 **************************************************************************
 * calculate m1 groundplane resistance
 **************************************************************************
 * width of groundplane fingers
 .param pfwidth='0.8e-6'
 * pitch of groundplane fingers
 .param pfpitch='3e-6'
 * 1/2 length of side of octagon with diemater equal to average diameter of spiral
 * this is used to determine number of full length fingers in groundplane comb
 .param psoct2='davgp*0.207'
 .param pnsoct2='psoct2/pfpitch'
 * length of rest of centerline connection out to external tap
 * this is used to determine number and average length of the remaining fingers in the comb
 .param psrest='davgp/2-psoct2'
 .param pnsrest='psrest/pfpitch'
 * fingers of varying length have a constant length and a varying length component
 .param psrestavg='psoct2+psrest/2'
 * total resistance contributed by full length fingers in 1/4 groundplane
 .param proct2='psoct2/pfwidth*gprs/pnsoct2'
 * total resistance contributed by varying length fingers in 1/4 groundplane
 .param proctrest='psrestavg/pfwidth*gprs/pnsrest'
 * total groundplane resistance including contribution from all four quadrants
 * empirical multiplier on groundplane resistance based on data
 .param prgptotal='prgptb*0.25*(proct2*proctrest/(proct2+proctrest))'
 **************************************************************************
 * calculate length of outer, and inner turns
 **************************************************************************
 *
 .param outerlenpps='3.31376*(xp-pwp)-0.4142*(pwp+psp)'
 .param outerlensps='3.31376*(xs-pws)-0.4142*(pws+pss)'
 .param outerlenx='3.31376*xp'
 .param outerlenp='(pstack<=2)*outerlenpps+(pstack>2)*outerlenx'
 .param outerlens='(pstack<=2)*outerlensps+(pstack>2)*outerlenx'
 *
 .param innerlenpps='max(0,(np>=2)*(3.31376*((dinp+3*pwp+psp)-pwp)-0.4142*(pwp+psp))+(np<2)*pfractp*(3.31376*((dinp+3*pwp+psp)-pwp)-0.4142*(pwp+psp))-30e-6)'
 .param innerlensps='max(0,(ns>=2)*(3.31376*((dins+3*pws+pss)-pws)-0.4142*(pws+pss))+(ns<2)*pfracts*(3.31376*((dins+3*pws+pss)-pws)-0.4142*(pws+pss))-30e-6)'
 .param innerlenx='3.31376*(xp-(pceilx-1)*(pwp+psx)-pwp)'
 .param innerlenp='(pstack<=2)*innerlenpps+(pstack>2)*innerlenx'
 .param innerlens='(pstack<=2)*innerlensps+(pstack>2)*innerlenx'
 *
 *
 **************************************************************************
 * calculate substrate resistances and capacitances
 **************************************************************************
 *
 .param condsi='condsib/rsx'
 *
 * equations used in calculating rsx and csx
 * for embedded turns
 .param hoverwe='sxthk/pwp'
 * width ov outer and inner turns assumed to be wider to electric field spreading out
 .param hoverwo='sxthk/(pwp+2*spt)'
 *
 * fhw is calculated from fhwl and fhwg as follows:
 *
 *    if hoverw<1 then  fhw=fhwl
 *                else  fhw=fhwg
 *    end if
 * for embedded turns
 .param fhwle='1/((1/hoverwe)+2.42-(0.44*hoverwe)+pwr(abs(1-hoverwe),6))'
 .param fhwge='1/(2*pi)*log((8*hoverwe)+(0.25/hoverwe))'
 .param fhwe='(hoverwe<1)*fhwle+(hoverwe>=1)*fhwge'
 .param eeffe='((ersi+1)/2)+((ersi-1)/(2*sqrt(1+(10*hoverwe))))'
 * for outer and inner turns
 .param fhwlo='1/((1/hoverwo)+2.42-(0.44*hoverwo)+pwr(abs(1-hoverwo),6))'
 .param fhwgo='1/(2*pi)*log((8*hoverwo)+(0.25/hoverwo))'
 .param fhwo='(hoverwo<1)*fhwlo+(hoverwo>=1)*fhwgo'
 .param eeffo='((ersi+1)/2)+((ersi-1)/(2*sqrt(1+(10*hoverwo))))'
 *
 * calculate ratio of (outer+inner)/total spiral length for weighting factor of hoverw and eeff and fhw
 .param subratio='min(1,(outerlenp+innerlenp)/splength)'
 .param hoverw='(subratio*hoverwo+hoverwe*(1-subratio))/subratio'
 .param eeff='(subratio*eeffo+eeffe*(1-subratio))/subratio'
 .param fhw='(subratio*fhwo+fhwe*(1-subratio))/subratio'
 *
 * calculate substrate resistance and capacitance
 * empirical substrate resistance correction:
 .param rsxcorr='(pgrnd==-1)*rsxcorrb+(pgrnd==-2)'
 * empirical substrate capacitance correction:
 .param csxcorr0134='(pgrnd==-1)*((pstack<=1)*1+(pstack>2)*1)*min(csxcormax,csxcorra*splength*1e6+csxcorrb)'
 .param csxcorr2='(pgrnd==-1)*(pstack==2)*min(csxcormax,csxcorra*plength*1e6+csxcorrb)'
 .param csxcorr='max(0.01,csxcorr0134+csxcorr2)'
 .param psxosplps='((pstack<=1)*1+(pstack>2)*1)*(1/posplps)+(pstack==2)*(1/sosplps)'           $ posplps at each port for single, sosplps at outer turns (series)
 .param psxisplps='((pstack<=1)*1+(pstack>2)*1)*(1/(0.5-posplps))+(pstack==2)*(1/(1-sosplps))' $ (0.5-posplps) (twice) for middle, (1-sosplps) (twice) at inner turns (series)
 .param psxosplx='((pstack<=1)*1+(pstack>2)*1)*(1/posplx)'                                     $ posplx at each port for single
 .param psxisplx='((pstack<=1)*1+(pstack>2)*1)*(1/(0.5-posplx))'                               $ (0.5-posplx) (twice) for middle
 .param psxospl='(pstack<=2)*psxosplps+(pstack>2)*psxosplx'
 .param psxispl='(pstack<=2)*psxisplps+(pstack>2)*psxisplx'
 .param pcsxoutp='csxcorr*splength/psxospl*e0*eeff/fhw'
 .param pcsxinp='csxcorr*splength/psxispl*e0*eeff/fhw'
 .param prsxoutp='rsxcorr*((pgrnd==-1)*1/((splength/psxospl*condsi*(1+(1/sqrt(1+(10*hoverw)))))/(2*fhw))+(pgrnd==-2)*prgptotal*psxospl)'
 .param prsxinp='rsxcorr*((pgrnd==-1)*1/((splength/psxispl*condsi*(1+(1/sqrt(1+(10*hoverw)))))/(2*fhw))+(pgrnd==-2)*prgptotal*psxispl)'
 .param pcsxouts='csxcorr*splength/psxospl*e0*eeff/fhw'
 .param pcsxins='csxcorr*splength/psxispl*e0*eeff/fhw'
 .param prsxouts='rsxcorr*((pgrnd==-1)*1/((splength/psxospl*condsi*(1+(1/sqrt(1+(10*hoverw)))))/(2*fhw))+(pgrnd==-2)*prgptotal*psxospl)'
 .param prsxins='rsxcorr*((pgrnd==-1)*1/((splength/psxispl*condsi*(1+(1/sqrt(1+(10*hoverw)))))/(2*fhw))+(pgrnd==-2)*prgptotal*psxispl)'
 *
 * groundplane resistance temperature coeffcient
 .param trgrnd='(pgrnd==-1)*trsx+(pgrnd==-2)*tgprs'
 **************************************************************************
 * calculate m1 groundplane centertap resistance
 **************************************************************************
 *
 * width of groundplane centerline connection
 .param pwtap='5e-6'
 * average centerline resistance for all fingers
 .param prm1ct='(pgrnd==-2)*(xp/2/pwtap*ctrs)+(pgrnd==-1)*1e-5'
 *
 **************************************************************************
 * calculate all of the line capacitances
 **************************************************************************
 *
 * total line capacitance between secondary spiral and substrate in (f/m)
 * when the line has adjacent lines on both sides
 * (empirical scaling factor)
 .param pcmses='pcmsesb*(cses*pws+2*cmsesf)'
 *
 * total line capacitance between primary spiral and substrate in (f/m)
 * when the line has adjacent lines on both sides
 * (empirical scaling factor)
 .param pcmprs='pcmprsb*(cprs*pwp+2*cmprsf)'
 *
 * extra fringing capacitance between secondary spiral and substrate in (f/m)
 * for the innermost and outermost turns due to lack of adjacent lines
 * (empirical scaling factor0
 .param pcofses='pcofsesb*csesf-cmsesf'
 *
 * extra fringing capacitance between primary spiral and substrate in (f/m)
 * for the innermost and outermost turns due to lack of adjacent lines
 * (empirical scaling factor0
 .param pcofprs='pcofprsb*cprsf-cmprsf'
 *
 * total line capacitance between underpass and substrate in (f/m)
 .param pcus='cus*pws+2*cusf'
 *
 * total line capacitance between primary and secondary lines in (f/m)
 * when the line has an adjacent line on one side and no line on the other side
 * (empirical scaling factor)
 .param pcoprse='pcoprseb*(cprse*pwp+cprsef+cmprsef)'
 *
 * total line capacitance between primary and secondary lines in (f/m)
 * when the line has adjacent lines on both sides
 * (empirical scaling factor)
 .param pcmprse='pcmprseb*(cprse*pwp+2*cmprsef)'
 *
 * spiral to underpass cross cap for turns surrounded on both sides (f/m)
 .param pcmspu='cpru*pwp+(pstack<=2)*2*cmpruf'
 *
 * spiral to underpass cross cap for outermost and innermost turns (f/m)
 .param pcospu='cpru*pwp+(pstack>2)*(((pstack==0)*1+(pstack==2)*1)*(cpruf+cmpruf)+2*(pstack==1)*cmpruf)'
 *
 * spiral to underpass cross cap in the case of a less than two turn spiral(f/m)
 .param pcxspu='cpru*pwp+2*((pstack==0)+(pstack==2))*cpruf+2*(pstack==1)*cmpruf'
 *
 * spiral to underpass cross cap for turns surrounded on both sides (f/crossing)
 .param pcptm='pcmspu*pwu'
 *
 * spiral to underpass cross cap for outermost and innermost turns (f/crossing)
 .param pcpte='pcospu*pwu'
 *
 * spiral to underpass cross cap in the case of a less than two turn spiral (f/crossing)
 .param pcptx='pcxspu*pwu'
 *
 **************************************************************************
 * calculate spiral to substrate oxide capacitances
 **************************************************************************
 .param pcoxosplps='((pstack<=1)*1+(pstack>2)*1)*(1/posplps)+(pstack==2)*(1/sosplps)'           $ posplps at each port for single, sosplps at outer turns (series)
 .param pcoxisplps='((pstack<=1)*1+(pstack>2)*1)*(1/(0.5-posplps))+(pstack==2)*(1/(1-sosplps))' $ (0.5-posplps) (twice) for middle, (1-sosplps) (twice) at inner turns (series)
 .param pcoxosplx='((pstack<=1)*1+(pstack>2)*1)*(1/posplx)'                                     $ posplx at each port for single
 .param pcoxisplx='((pstack<=1)*1+(pstack>2)*1)*(1/(0.5-posplx))'                               $ (0.5-posplx) (twice) for middle
 .param pcoxospl='(pstack<=2)*pcoxosplps+(pstack>2)*pcoxosplx'
 .param pcoxispl='(pstack<=2)*pcoxisplps+(pstack>2)*pcoxisplx'
 *
 * for series stack includes additional area capacitance between primary and substrate where it is not shielded by secondary
 .param pcoxoutp='(splength*pcmprs+pcofprs*(innerlenp+outerlenp))/pcoxospl+(pstack==2)*(1/8*outerlenp*(cprs*pwp+cprsf+cmprsf))'
 *
 .param pcoxouts='(splength*pcmses+pcofses*(innerlenp+outerlenp))/pcoxospl+(pstack<=1)*(2*(pgrnd==-1)+(pgrnd==-2))*pcus*uplength'
 *
 .param pcoxinp='(splength*pcmprs+pcofprs*(innerlenp+outerlenp))/pcoxispl+(pstack==2)*(1/2*innerlenp*(cprs*pwp+cprsf+cmprsf))'
 *
 .param pcoxins='(splength*pcmses+pcofses*(innerlenp+outerlenp))/pcoxispl'
 *
 * calculate the resistance of the underpass and the vias to the spiral
 .param pxvias='max(1,int((pwp-2e-6+4e-6)/4e-6))'
 .param pyvias='1'
 * maximum via metal resistivity
 .param pviarho='1.5e-7'
 * total resistance=viarho*viaheight/viaarea
 .param prvias='pviarho*4e-6/(pxvias*pyvias*1.24e-6*max(5e-6,(pwp/2-2e-6)))'
 .param prups='uplength/pwup*uprs+prvias-((pstack==1)*prvias)'
 .param prux='(pceilx-1)*(xoverlen/pwp*prrs+xoverlen/pwup*uprs)+(pstack==3)*(pceilx-1)*2*prvias'
 .param pruse='max(1e-5,(pstack<=2)*prups+(pstack>2)*prux/2)'
 .param prupr='max(1e-5,(pstack>2)*prux/2)'
 *
 **************************************************************************
 * calculate turn-to-turn capacitance
 **************************************************************************
 * capacitance between outer turn of primary and inner turn of secondary
 .param pcopisps='(pstack<=1)*((plength-innerlenp)*cprpr/2)+(pstack==2)*max(1f,(plength-outerlenp-innerlenp)*cprpr)'
 * turn to turn capacitance (minus outerlength) plus all crossovers except one. total divided by 2
 .param pcopisx='max(1e-15,(pceilx>1)*(((splength-innerlenx-outerlenx/2)*cprpr+(pceilx-1)*pcptx)/2))'
 .param pcopis='(pstack<=2)*pcopisps+(pstack>2)*pcopisx'
 * capacitance between outer turn of secondary and inner turn of secondary
 .param pcosisps='(pstack<=1)*((plength-innerlenp)*cprpr/2)+(pstack==2)*max(1f,(slength-outerlens-innerlens)*csese)'
 * turn to turn capacitance (minus outerlength) plus all crossovers except one. total divided by 2
 .param pcosisx='max(1e-15,(pceilx>1)*(((splength-innerlenx-outerlenx/2)*cprpr+(pceilx-1)*pcptx)/2))'
 .param pcosis='(pstack<=2)*pcosisps+(pstack>2)*pcosisx'
 * capacitance between outer turn of primary and outer turn of secondary
 .param pcoposps='(pstack<=1)*((pintp<3)*pintp*pcptx+(pintp>=3)*(2*pcpte+(pintp-2)*pcptm))+(pstack==2)*((7/8*outerlenp+innerlenp/2)*pcoprse+(plength-outerlenp-innerlenp)*pcmprse)'
 * turn to turn capacitance for outermost turn plus one crossing capacitance
 * (empirical scaling coefficient)
 .param pcoposx='pcoo*max(1e-15,(pceilx>1)*(outerlenx/2*cprpr+pcptx))'
 .param pcopos='pcoo*((pstack<=2)*pcoposps+(pstack>2)*pcoposx)'
 * empirical capacitance multiplier for outer to inner capacitances (copis, cosis)
 .param pcoips='pow(hp,2-(pstack==2))/1.5'
 .param pcoix='1'
 .param pcoi='pcoo*((pstack<=2)*pcoips+(pstack>2)*pcoix)'
 *
 * element multiplier for series spirals or single spirals
 * (divide each element by 2 for single spirals, leave unscaled for series stacked or symmetric spirals)
 .param ltype='2-(pstack>1)'
 *
 *
 *
 *
 *
 *
 *
 *
 *
 * additional coupled inductances network (lump underpass into secondary)
 lpra outpr au1               l='max((plext/ltype),1f)'
 lsea inse au2                l='max((plext/ltype+upind),1f)'
 ruppr au1 a1                 r='prupr'              tc1=tuprs dtemp=pdtemp
 rupse au2 a2                 r='pruse'              tc1=tuprs dtemp=pdtemp
 kpsa  lpra lsea k=pkps
 *
 * proximity effect network "primary"
 lprf1 a1 rpf1                l='max((plrf1*proxim/2),1f)'
 rprf1 rpf1 ap1               r='prrf1*proxim/2'     tc1=tsprs dtemp=pdtemp
 lprf2 a1 rpf2                l='max((plrf2*proxim/2),1f)'
 rprf2 rpf2 ap1               r='prrf2*proxim/2'     tc1=tsprs dtemp=pdtemp
 lprf3 a1 rpf3                l='max((plrf3*proxim/2*prf),1f)'
 rprf3 rpf3 ap1               r='prrf3*proxim/2/prf' tc1=tsprs dtemp=pdtemp
 *
 * skin effect network "primary"
 rpr1a ap1 a11                r='pr1/ltype'          tc1=tsprs dtemp=pdtemp
 rpr2a ap1 a12                r='pr2/ltype'          tc1=tsprs dtemp=pdtemp
 rpr3a ap1 a13                r='pr3/ltype'          tc1=tsprs dtemp=pdtemp
 lpr1a a11 inpr               l='max((pl1/ltype*pscsm),1f)'
 lpr2a a12 inpr               l='max((pl2/ltype*pscsm),1f)'
 lpr3a a13 inpr               l='max((pl3/ltype*pscsm),1f)'
 k12pra  lpr1a lpr2a k=pk12
 k13pra  lpr1a lpr3a k=pk13
 k23pra  lpr2a lpr3a k=pk23
 *
 * proximity effect network "secondary"
 lsrf1 a2 rsf1                l='max((plrf1*proxim/2),1f)'
 rsrf1 rsf1 as2               r='prrf1*proxim/2'     tc1=tsprs dtemp=pdtemp
 lsrf2 a2 rsf2                l='max((plrf2*proxim/2),1f)'
 rsrf2 rsf2 as2               r='prrf2*proxim/2'     tc1=tsprs dtemp=pdtemp
 lsrf3 a2  rsf3               l='max((plrf3*proxim/2*prf),1f)'
 rsrf3 rsf3 as2               r='prrf3*proxim/2/prf' tc1=tsprs dtemp=pdtemp
 *
 * skin effect network "secondary"
 rse1a as2 a21                r='pr1/ltype'          tc1=tsprs dtemp=pdtemp
 rse2a as2 a22                r='pr2/ltype'          tc1=tsprs dtemp=pdtemp
 rse3a as2 a23                r='pr3/ltype'          tc1=tsprs dtemp=pdtemp
 lse1a a21 outse              l='max((pl1/ltype*pscsm),1f)'
 lse2a a22 outse              l='max((pl2/ltype*pscsm),1f)'
 lse3a a23 outse              l='max((pl3/ltype*pscsm),1f)'
 k12sea  lse1a lse2a k=pk12
 k13sea  lse1a lse3a k=pk13
 k23sea  lse2a lse3a k=pk23
 *
 * primary to secondary coupling coefficients
 k11prse  lpr1a lse1a k=pkps11
 k12prse  lpr1a lse2a k=pkps12
 k13prse  lpr1a lse3a k=pkps13
 k21prse  lpr2a lse1a k=pkps12
 k22prse  lpr2a lse2a k=pkps22
 k23prse  lpr2a lse3a k=pkps23
 k31prse  lpr3a lse1a k=pkps13
 k32prse  lpr3a lse2a k=pkps23
 k33prse  lpr3a lse3a k=pkps33
 *
 * substrate loss networks
 copis outpr inse             c='pcoi*pcopis'
 cosis outse inse             c='pcoi*pcosis'
 copos outpr outse            c='pcopos'
 coxoutp outpr 3              c='pcoxoutp'
 coxinp inpr 4                c='pcoxinp'
 csxoutp 3 gp                 c='pcsxoutp'
 csxinp 4 gp                  c='pcsxinp'
 rsxoutp 3 gp                 r='prsxoutp'  tc1=trgrnd dtemp=pdtemp
 rsxinp 4 gp                  r='prsxinp'   tc1=trgrnd dtemp=pdtemp
 coxouts outse 6              c='pcoxouts'
 coxins inse 5                c='pcoxins'
 csxouts 6 gp                 c='pcsxouts'
 csxins 5 gp                  c='pcsxins'
 rsxouts 6 gp                 r='prsxouts'  tc1=trgrnd dtemp=pdtemp
 rsxins 5 gp                  r='prsxins'   tc1=trgrnd dtemp=pdtemp
 *
 * groundplane center-tap
 rm1ct gp gnd                 r='prm1ct'    tc1=tctrs dtemp=pdtemp
 *
 .ends indstack
 .include './ind.inc'
 * path, component, release: cmrf8sf/reldm/hspice/models/ind.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.4 06/02/24 09:35:01
 * tech:cmrf8sf
 * ver :v1.3.0.0
 ***************************************************************************
 *
 * octagonal inductor model for single level octagonal spiral
 *
 ***************************************************************************
 *
 * the inductor model calls indstack subcurcuit.
 *                                  +-------+
 *                                  |       |
 *                                  o       o
 *                  +------------------------------------+
 *  out  o---------o|outpr        inpr     inse     outse|o----------o  in
 *                  |                                    |
 *                  |         "indstack subcircuit"      |
 *                  |                                    |
 *                  |                 gnd                |
 *                  +------------------------------------+
 *                                      o
 *                                      |
 *                                      o
 *                      gnd (substrate/groundplane)
 *******************************************************************************
 *
 * notes:
 *
 *  1. outer dimension (x) may vary from 100um to 400um.
 *
 *  2. supported spiral widths (w) vary from 5um to 25um.
 *
 *  3. turn to turn space (s) is fixed at 5um.
 *
 *  4. number of turns (n) may vary from 1 to 20 in 1/4 turn increments.
 *
 *
 *
 * ibm confidential
 * (c) 2004 ibm corporation
 *
 *******************************************************************************
 *
 * scalable, single level octagonal inductor model
 *
 *
 *
 .subckt ind (out in gnd)
 *
 +    x      =  250u      $ largest outer dimension of octagonal spiral (m)
 +    w      =  10u       $ width of spiral turn (m)
 +    s      =  5u        $ turn to turn space (m)
 +    n      =  4.5       $ number of turns
 *                        $ 1/4 turn incr.
 +    wu     =  15u       $ width of underpass (m)
 +    tlev1  =  2         $ number of (1x) metal levels in spiral
 +    tlev2  =  1         $ number of (2x) metal levels in spiral
 +    bp     =  2         $ indicator of grounding scheme under spiral
 *                        $  2 = bf (default)
 *                        $  8 = m1 groundplane
 +    dtemp  =  0         $ temperature difference between element and
 *                        $ circuit temperature (deg c).
 *
 *
 * element multipliers for powerspice
 + cmult='1'
 + lmult='1'
 + rmult='1'
 + lenmult='1'
 + px='x*lenmult'
 + pw='w*lenmult'
 + ps='s*lenmult'
 + ppwu='wu*lenmult'
 + rxflfrac='0.20'
 + rxeff='oppcstif-2*rxflfrac*oppcstif'
 + pcflfrac='0.20'
 + pceff='oppcthkf-2*pcflfrac*oppcthkf'
 + m1flfrac='0.09'
 + m1teff='m1t-2*m1flfrac*m1t'
 + m2flfrac='0.09'
 + m2teff='m2t-2*m2flfrac*m2t'
 + mqflfrac='0.09'
 + mqteff='mqt-2*mqflfrac*mqt'
 + lyflfrac='0.09'
 + lyteff='lyt-2*lyflfrac*lyt'
 + e1flfrac='0.09'
 + e1teff='e1t-2*e1flfrac*e1t'
 + maflfrac='0.00'
 + mateff='mat-2*maflfrac*mat'
 + m3flfrac='0.09'
 + m3teff='m3t-2*m3flfrac*m3t'
 + m4flfrac='0.09'
 + m4teff='m4t-2*m4flfrac*m4t'
 + mgflfrac='0.09'
 + mgteff='mgt-2*mgflfrac*mgt'
 *
 * bp conversion to bptype
 + bptype='(bp==2)*-1+(bp==8)*-2'
 * nlev conversion from tlev
 + nlev='tlev1+(tlev2==1)+(tlev2==2)*4'
 *
 * calculations of stack height info.
 + prt3='mat'
 + delpr3='(delma)/1'
 + prrs3='1/(1/(mars))'
 + temcpr3='(mars*tmars)'
 + temcprnum3='(mars)'
 + sect3='e1t'
 + delsec3='(dele1)/1'
 + secrs3='1/(1/(e1rs))'
 + temcse3='(e1rs*te1rs)'
 + temcsenum3='(e1rs)'
 + secprt3='e1mat'
 *
 + prt4='mat'
 + delpr4='(delma)/1'
 + prrs4='1/(1/(mars))'
 + temcpr4='(mars*tmars)'
 + temcprnum4='(mars)'
 + sect4='e1t'
 + delsec4='(dele1)/1'
 + secrs4='1/(1/(e1rs))'
 + temcse4='(e1rs*te1rs)'
 + temcsenum4='(e1rs)'
 + secprt4='e1mat'
 *
 + prt5='mat'
 + delpr5='(delma)/1'
 + prrs5='1/(1/(mars))'
 + temcpr5='(mars*tmars)'
 + temcprnum5='(mars)'
 + sect5='e1t'
 + delsec5='(dele1)/1'
 + secrs5='1/(1/(e1rs))'
 + temcse5='(e1rs*te1rs)'
 + temcsenum5='(e1rs)'
 + secprt5='e1mat'
 *
 + prt6='mat'
 + delpr6='(delma)/1'
 + prrs6='1/(1/(mars))'
 + temcpr6='(mars*tmars)'
 + temcprnum6='(mars)'
 + sect6='e1t'
 + delsec6='(dele1)/1'
 + secrs6='1/(1/(e1rs))'
 + temcse6='(e1rs*te1rs)'
 + temcsenum6='(e1rs)'
 + secprt6='e1mat'
 *
 + prt7='mat'
 + delpr7='(delma)/1'
 + prrs7='1/(1/(mars))'
 + temcpr7='(mars*tmars)'
 + temcprnum7='(mars)'
 + sect7='e1t'
 + delsec7='(dele1)/1'
 + secrs7='1/(1/(e1rs))'
 + temcse7='(e1rs*te1rs)'
 + temcsenum7='(e1rs)'
 + secprt7='e1mat'
 *
 *
 * calculations of primary and secondary.
 + pprt='(nlev==3)*prt3+(nlev==4)*prt4+(nlev==5)*prt5+(nlev==6)*prt6+(nlev==7)*prt7'
 + pdelpr='(nlev==3)*delpr3+(nlev==4)*delpr4+(nlev==5)*delpr5+(nlev==6)*delpr6+(nlev==7)*delpr7'
 + pprrs='(nlev==3)*prrs3+(nlev==4)*prrs4+(nlev==5)*prrs5+(nlev==6)*prrs6+(nlev==7)*prrs7'
 + temcpr='(nlev==3)*temcpr3+(nlev==4)*temcpr4+(nlev==5)*temcpr5+(nlev==6)*temcpr6+(nlev==7)*temcpr7'
 + temcprnum='(nlev==3)*temcprnum3+(nlev==4)*temcprnum4+(nlev==5)*temcprnum5+(nlev==6)*temcprnum6+(nlev==7)*temcprnum7'
 + psect='(nlev==3)*sect3+(nlev==4)*sect4+(nlev==5)*sect5+(nlev==6)*sect6+(nlev==7)*sect7'
 + pdelsec='(nlev==3)*delsec3+(nlev==4)*delsec4+(nlev==5)*delsec5+(nlev==6)*delsec6+(nlev==7)*delsec7'
 + psecrs='(nlev==3)*secrs3+(nlev==4)*secrs4+(nlev==5)*secrs5+(nlev==6)*secrs6+(nlev==7)*secrs7'
 + temcse='(nlev==3)*temcse3+(nlev==4)*temcse4+(nlev==5)*temcse5+(nlev==6)*temcse6+(nlev==7)*temcse7'
 + temcsenum='(nlev==3)*temcsenum3+(nlev==4)*temcsenum4+(nlev==5)*temcsenum5+(nlev==6)*temcsenum6+(nlev==7)*temcsenum7'
 + psecprt='(nlev==3)*secprt3+(nlev==4)*secprt4+(nlev==5)*secprt5+(nlev==6)*secprt6+(nlev==7)*secprt7'
 + h3='rxeff+pceff+capct+m1teff+m1m2t+m2teff+m2mqt+mqteff+mqlyt+lyteff+lye1t+psect+psecprt+pprt'
 + h4='rxeff+pceff+capct+m1teff+m1m2t+m2teff+m2m3t+m3teff+m3mqt+mqteff+mqlyt+lyteff+lye1t+psect+psecprt+pprt'
 + h5='rxeff+pceff+capct+m1teff+m1m2t+m2teff+m2m3t+m3teff+m3m4t+m4teff+m4mqt+mqteff+mqlyt+lyteff+lye1t+psect+psecprt+pprt'
 + h6='rxeff+pceff+capct+m1teff+m1m2t+m2teff+m2mqt+mqteff+mqmgt+mgteff+mqlyt+lyteff+lye1t+psect+psecprt+pprt'
 + h7='rxeff+pceff+capct+m1teff+m1m2t+m2teff+m2m3t+m3teff+m3mqt+mqteff+mqmgt+mgteff+mqlyt+lyteff+lye1t+psect+psecprt+pprt'
 + phpr='(nlev==3)*h3+(nlev==4)*h4+(nlev==5)*h5+(nlev==6)*h6+(nlev==7)*h7-pprt'
 + phsec='phpr-psect-psecprt'
 *
 * calculations of m1 shield stack height.
 + phm1sx='oppcstif+oppcthkf+capct+m1t'
 + phpreff='phpr-(bp==8)*phm1sx'
 + phseceff='phsec-(bp==8)*phm1sx'
 * calculations of temc. coefficient
 + ptprrs='temcpr/temcprnum'
 + ptsers='temcse/temcsenum'
 *
 * pr single layer coefficients
 + ppcprs='e0*4.065/phpreff'
 + ppcus='e0*4.041/phseceff'
 + ppcpru='e0*4.100/psecprt'
 + ppcpruf='e0*4.100*(2*1.064/(pi-2)*log(pi/2)+2*1.064/pi*log(1+pprt/psecprt))'
 + ppcprsf='e0*4.065*(2*0.638/(pi-2)*log(pi/2)+2*2.436/pi*log(1+pprt/phpreff))'
 + ppcusf='e0*4.041*(2*0.510/(pi-2)*log(pi/2)+2*1.732/pi*log(1+psect/phseceff))'
 + palphapru='atan(ps/1.258/psecprt)'
 + ppcmpruf='e0*4.100*(0.695*(1-cos(2*palphapru))/(2*palphapru-sin(2*palphapru))*log(2*palphapru/sin(2*palphapru)))'
 + palphapr='atan(ps/0.219/phpreff)'
 + ppcmprsf='e0*4.065*(0.200*(1-cos(2*palphapr))/(2*palphapr-sin(2*palphapr))*log(2*palphapr/sin(2*palphapr)))'
 + pbeta='pi/2-2*palphapr'
 + ppcprpr='e0*4.065*(1/pi*log(1+pw/ps)+0.000/(pi-2)*log(pi/2)+1.226*pprt/ps+1.472/2*(1-cos(pbeta))/(pbeta-sin(pbeta))*log(pbeta/sin(pbeta)))'
 *
 xstack out 2 in 2 gnd indstack
 + xp='px'
 + xs='px'
 + wp='pw'
 + ws='pw'
 + sp='ps'
 + ss='ps'
 + np='n'
 + ns='n'
 + pwu='ppwu'
 + pstack='0'
 + pgrnd='bptype'
 + gprs='m1rs'
 + tgprs='tm1rs'
 + ctrs='m1rs'
 + tctrs='tm1rs'
 + rsx='rsub'
 + trsx='trsub'
 + pdtemp='dtemp'
 + delpr='pdelpr'
 + prrs='pprrs'
 + prt='pprt'
 + tprrs='ptprrs'
 + delse='pdelpr'
 + sers='pprrs'
 + sect='pprt'
 + tsers='ptprrs'
 + delup='pdelsec'
 + uprs='(psecrs+0.0006/(pw*1e6))'
 + tuprs='ptsers'
 + upt='psect'
 + cprs='ppcprs'
 + cprsf='ppcprsf'
 + cmprsf='ppcmprsf'
 + cprpr='ppcprpr'
 + cpru='ppcpru'
 + cpruf='ppcpruf'
 + cmpruf='ppcmpruf'
 + cses='ppcprs'
 + csesf='ppcprsf'
 + cmsesf='ppcmprsf'
 + csese='ppcprpr'
 + cprse='1f'
 + cprsef='1f'
 + cmprsef='1f'
 + cus='ppcus'
 + cusf='ppcusf'
 + sxthk='pmsxt'
 * optimization coefficients
 + prscrfmin ='0.9e-3'
 + prscrfmax ='3.0e-3'
 + prscrfa ='6e-3'
 + prscrfb ='-0.4e-3'
 + prfb ='0.6e-6'
 + ppowa ='0'
 + ppowb ='0'
 + pamax ='8000'
 + paa ='-10000'
 + pab ='800'
 + condsib ='1'
 + prgptb ='800'
 + rsxcorrb ='1.2'
 + csxcormax ='2.1'
 + csxcorra ='1.2e-3'
 + csxcorrb ='-0.2891'
 + pcmprsb ='0.7'
 + pcmsesb ='0.7'
 + pcofprsb ='1.2'
 + pcofsesb ='1.2'
 + pcoprseb ='1.3'
 + pcmprseb ='1.5'
 + posplps ='0.25'
 + plscrfmax ='0.2'
 + plscrfa ='0.25'
 + plscrfb ='0.05'
 + pcoo ='1.0'
 *
 .ends ind
 .include './indp.inc'
 * path, component, release: cmrf8sf/reldm/hspice/models/indp.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.4 06/02/24 09:35:03
 * tech:cmrf8sf
 * ver :v1.3.0.0
 ***************************************************************************
 *
 * octagonal inductor model for parallel stacked octagonal spiral
 *
 ***************************************************************************
 *
 * the inductor model calls indstack subcurcuit.
 *                                  +-------+
 *                                  |       |
 *                                  o       o
 *                  +------------------------------------+
 *  out  o---------o|outpr        inpr     inse     outse|o----------o  in
 *                  |                                    |
 *                  |         "indstack subcircuit"      |
 *                  |                                    |
 *                  |                 gnd                |
 *                  +------------------------------------+
 *                                      o
 *                                      |
 *                                      o
 *                      gnd (substrate/groundplane)
 *******************************************************************************
 *
 * notes:
 *
 *  1. outer dimension (x) may vary from 100um to 400um.
 *
 *  2. supported spiral widths (w) vary from 5um to 25um.
 *
 *  3. turn to turn space (s) is fixed at 5um.
 *
 *  4. number of turns (n) may vary from 1 to 20 in 1/4 turn increments.
 *
 *
 *
 * ibm confidential
 * (c) 2004 ibm corporation
 *
 *******************************************************************************
 *
 * scalable, parallel stacked octagonal inductor model
 *
 *
 *
 .subckt indp (out in gnd)
 *
 +    x      =  250u      $ largest outer dimension of octagonal spiral (m)
 +    w      =  10u       $ width of spiral turn (m)
 +    s      =  5u        $ turn to turn space (m)
 +    n      =  4.5       $ number of turns
 *                        $ 1/4 turn incr.
 +    wu     =  15u       $ width of underpass (m)
 +    tlev1  =  2         $ number of (1x) metal levels in spiral
 +    tlev2  =  1         $ number of (2x) metal levels in spiral
 +    bp     =  2         $ indicator of grounding scheme under spiral
 *                        $  2 = bf (default)
 *                        $  8 = m1 groundplane
 +    dtemp  =  0         $ temperature difference between element and
 *                        $ circuit temperature (deg c).
 *
 *
 * element multipliers for powerspice
 + cmult='1'
 + lmult='1'
 + rmult='1'
 + lenmult='1'
 + px='x*lenmult'
 + pw='w*lenmult'
 + ps='s*lenmult'
 + ppwu='wu*lenmult'
 + rxflfrac='0.20'
 + rxeff='oppcstif-2*rxflfrac*oppcstif'
 + pcflfrac='0.20'
 + pceff='oppcthkf-2*pcflfrac*oppcthkf'
 + m1flfrac='0.09'
 + m1teff='m1t-2*m1flfrac*m1t'
 + m2flfrac='0.09'
 + m2teff='m2t-2*m2flfrac*m2t'
 + mqflfrac='0.09'
 + mqteff='mqt-2*mqflfrac*mqt'
 + lyflfrac='0.09'
 + lyteff='lyt-2*lyflfrac*lyt'
 + e1flfrac='0.09'
 + e1teff='e1t-2*e1flfrac*e1t'
 + maflfrac='0.00'
 + mateff='mat-2*maflfrac*mat'
 + m3flfrac='0.09'
 + m3teff='m3t-2*m3flfrac*m3t'
 + m4flfrac='0.09'
 + m4teff='m4t-2*m4flfrac*m4t'
 + mgflfrac='0.09'
 + mgteff='mgt-2*mgflfrac*mgt'
 *
 * bp conversion to bptype
 + bptype='(bp==2)*-1+(bp==8)*-2'
 * nlev conversion from tlev
 + nlev='tlev1+(tlev2==1)+(tlev2==2)*4'
 *
 * calculations of stack height info.
 + prt3='mat'
 + delpr3='(delma)/1'
 + prrs3='1/(1/(mars))'
 + temcpr3='(mars*tmars)'
 + temcprnum3='(mars)'
 + sect3='e1t'
 + delsec3='(dele1)/1'
 + secrs3='1/(1/(e1rs))'
 + temcse3='(e1rs*te1rs)'
 + temcsenum3='(e1rs)'
 + secprt3='e1mat'
 *
 + prt4='mat'
 + delpr4='(delma)/1'
 + prrs4='1/(1/(mars))'
 + temcpr4='(mars*tmars)'
 + temcprnum4='(mars)'
 + sect4='e1t'
 + delsec4='(dele1)/1'
 + secrs4='1/(1/(e1rs))'
 + temcse4='(e1rs*te1rs)'
 + temcsenum4='(e1rs)'
 + secprt4='e1mat'
 *
 + prt5='mat'
 + delpr5='(delma)/1'
 + prrs5='1/(1/(mars))'
 + temcpr5='(mars*tmars)'
 + temcprnum5='(mars)'
 + sect5='e1t'
 + delsec5='(dele1)/1'
 + secrs5='1/(1/(e1rs))'
 + temcse5='(e1rs*te1rs)'
 + temcsenum5='(e1rs)'
 + secprt5='e1mat'
 *
 + prt6='mat'
 + delpr6='(delma)/1'
 + prrs6='1/(1/(mars))'
 + temcpr6='(mars*tmars)'
 + temcprnum6='(mars)'
 + sect6='e1t'
 + delsec6='(dele1)/1'
 + secrs6='1/(1/(e1rs))'
 + temcse6='(e1rs*te1rs)'
 + temcsenum6='(e1rs)'
 + secprt6='e1mat'
 *
 + prt7='mat'
 + delpr7='(delma)/1'
 + prrs7='1/(1/(mars))'
 + temcpr7='(mars*tmars)'
 + temcprnum7='(mars)'
 + sect7='e1t'
 + delsec7='(dele1)/1'
 + secrs7='1/(1/(e1rs))'
 + temcse7='(e1rs*te1rs)'
 + temcsenum7='(e1rs)'
 + secprt7='e1mat'
 *
 *
 * calculations of primary and secondary.
 + pprt='(nlev==3)*prt3+(nlev==4)*prt4+(nlev==5)*prt5+(nlev==6)*prt6+(nlev==7)*prt7'
 + pdelpr='(nlev==3)*delpr3+(nlev==4)*delpr4+(nlev==5)*delpr5+(nlev==6)*delpr6+(nlev==7)*delpr7'
 + pprrs='(nlev==3)*prrs3+(nlev==4)*prrs4+(nlev==5)*prrs5+(nlev==6)*prrs6+(nlev==7)*prrs7'
 + temcpr='(nlev==3)*temcpr3+(nlev==4)*temcpr4+(nlev==5)*temcpr5+(nlev==6)*temcpr6+(nlev==7)*temcpr7'
 + temcprnum='(nlev==3)*temcprnum3+(nlev==4)*temcprnum4+(nlev==5)*temcprnum5+(nlev==6)*temcprnum6+(nlev==7)*temcprnum7'
 + psect='(nlev==3)*sect3+(nlev==4)*sect4+(nlev==5)*sect5+(nlev==6)*sect6+(nlev==7)*sect7'
 + pdelsec='(nlev==3)*delsec3+(nlev==4)*delsec4+(nlev==5)*delsec5+(nlev==6)*delsec6+(nlev==7)*delsec7'
 + psecrs='(nlev==3)*secrs3+(nlev==4)*secrs4+(nlev==5)*secrs5+(nlev==6)*secrs6+(nlev==7)*secrs7'
 + temcse='(nlev==3)*temcse3+(nlev==4)*temcse4+(nlev==5)*temcse5+(nlev==6)*temcse6+(nlev==7)*temcse7'
 + temcsenum='(nlev==3)*temcsenum3+(nlev==4)*temcsenum4+(nlev==5)*temcsenum5+(nlev==6)*temcsenum6+(nlev==7)*temcsenum7'
 + psecprt='(nlev==3)*secprt3+(nlev==4)*secprt4+(nlev==5)*secprt5+(nlev==6)*secprt6+(nlev==7)*secprt7'
 + h3='rxeff+pceff+capct+m1teff+m1m2t+m2teff+m2mqt+mqteff+mqlyt+lyteff+lye1t+psect+psecprt+pprt'
 + h4='rxeff+pceff+capct+m1teff+m1m2t+m2teff+m2m3t+m3teff+m3mqt+mqteff+mqlyt+lyteff+lye1t+psect+psecprt+pprt'
 + h5='rxeff+pceff+capct+m1teff+m1m2t+m2teff+m2m3t+m3teff+m3m4t+m4teff+m4mqt+mqteff+mqlyt+lyteff+lye1t+psect+psecprt+pprt'
 + h6='rxeff+pceff+capct+m1teff+m1m2t+m2teff+m2mqt+mqteff+mqmgt+mgteff+mqlyt+lyteff+lye1t+psect+psecprt+pprt'
 + h7='rxeff+pceff+capct+m1teff+m1m2t+m2teff+m2m3t+m3teff+m3mqt+mqteff+mqmgt+mgteff+mqlyt+lyteff+lye1t+psect+psecprt+pprt'
 + phpr='(nlev==3)*h3+(nlev==4)*h4+(nlev==5)*h5+(nlev==6)*h6+(nlev==7)*h7-pprt'
 + phsec='phpr-psect-psecprt'
 *
 * calculations of m1 shield stack height.
 + phm1sx='oppcstif+oppcthkf+capct+m1t'
 + phpreff='phpr-(bp==8)*phm1sx'
 + phseceff='phsec-(bp==8)*phm1sx'
 * calculations of temc. coefficient
 + ptprrs='temcpr/temcprnum'
 + ptsers='temcse/temcsenum'
 *
 * pr parallel spiral coefficients
 + ppcprs='e0*4.041/phseceff'
 + ppcus='e0*4.041/phseceff'
 + ppcpru='e0*4.100/psecprt'
 + ppcpruf='e0*4.100*(2*1.064/(pi-2)*log(pi/2)+2*1.064/pi*log(1+pprt/psecprt))'
 + ppcprsf='e0*4.041*(2*0.873/(pi-2)*log(pi/2)+2*1.586/pi*log(1+(pprt+psect)/phseceff))'
 + ppcusf='e0*4.041*(2*0.955/(pi-2)*log(pi/2)+2*2.816/pi*log(1+psect/phseceff))'
 + palphapr='atan(ps/0.576/phseceff)'
 + ppcmprsf='e0*4.041*(0.377*(1-cos(2*palphapr))/(2*palphapr-sin(2*palphapr))*log(2*palphapr/sin(2*palphapr)))'
 + pbeta='pi/2-2*palphapr'
 + ppcprpr='e0*4.526*(1/pi*log(1+pw/ps)+0.000/(pi-2)*log(pi/2)+1.206*(pprt+psect)/ps+1.771/2*(1-cos(pbeta))/(pbeta-sin(pbeta))*log(pbeta/sin(pbeta)))'
 + ppcmpruf='1e-12*(0.000*pow((phseceff*1e6),2)+-0.000*(phseceff*1e6)+16.726)'
 *
 xstack out 2 in 2 gnd indstack
 + xp='px'
 + xs='px'
 + wp='pw'
 + ws='pw'
 + sp='ps'
 + ss='ps'
 + np='n'
 + ns='n'
 + pwu='ppwu'
 + pstack='1'
 + pgrnd='bptype'
 + gprs='m1rs'
 + tgprs='tm1rs'
 + ctrs='m1rs'
 + tctrs='tm1rs'
 + rsx='rsub'
 + trsx='trsub'
 + pdtemp='dtemp'
 + delpr='(pdelpr*pprt+pdelsec*psect)/(pprt+psect)'
 + prrs='pprrs'
 + prt='(pprt+psect)'
 + tprrs='(pprrs*ptprrs+psecrs*ptsers)/(pprrs+psecrs)'
 + delse='(pdelpr*pprt+pdelsec*psect)/(pprt+psect)'
 + sers='(psecrs+0.0006/(pw*1e6))'
 + sect='(pprt+psect)'
 + tsers='(pprrs*ptprrs+psecrs*ptsers)/(pprrs+psecrs)'
 + delup='pdelsec'
 + uprs='psecrs'
 + tuprs='ptsers'
 + upt='psect'
 + cprs='ppcprs'
 + cprsf='ppcprsf'
 + cmprsf='ppcmprsf'
 + cprpr='ppcprpr'
 + cpru='ppcpru'
 + cpruf='ppcpruf'
 + cmpruf='ppcmpruf'
 + cses='ppcprs'
 + csesf='ppcprsf'
 + cmsesf='ppcmprsf'
 + csese='ppcprpr'
 + cprse='1f'
 + cprsef='1f'
 + cmprsef='1f'
 + cus='ppcus'
 + cusf='ppcusf'
 + sxthk='pmsxt'
 * optimization coefficients
 + prscrfmin ='0.9e-3'
 + prscrfmax ='3.0e-3'
 + prscrfa ='8e-3'
 + prscrfb ='-0.0008'
 + prfb ='1.0e-6'
 + ppowa ='0'
 + ppowb ='0'
 + pamax ='7000'
 + paa ='100'
 + pab ='1000'
 + condsib ='1'
 + prgptb ='500'
 + rsxcorrb ='1.2'
 + csxcormax ='2.1'
 + csxcorra ='1.2e-3'
 + csxcorrb ='-0.2891'
 + pcmprsb ='0.7'
 + pcmsesb ='0.7'
 + pcofprsb ='1.7'
 + pcofsesb ='1.6'
 + pcoprseb ='1'
 + pcmprseb ='1'
 + posplps ='0.32'
 + plscrfmax ='0.4'
 + plscrfa ='0.25'
 + plscrfb ='0.05'
 + pcoo ='0.5'
 *
 .ends indp
 .include './inds.inc'
 * path, component, release: cmrf8sf/reldm/hspice/models/inds.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.4 06/02/24 09:35:05
 * tech:cmrf8sf
 * ver :v1.3.0.0
 ***************************************************************************
 *
 * octagonal inductor model for series stacked octagonal spiral
 *
 ***************************************************************************
 *
 * the inductor model calls indstack subcurcuit.
 *                                  +-------+
 *                                  |       |
 *                                  o       o
 *                  +------------------------------------+
 *  out  o---------o|outpr        inpr     inse     outse|o----------o  in
 *                  |                                    |
 *                  |         "indstack subcircuit"      |
 *                  |                                    |
 *                  |                 gnd                |
 *                  +------------------------------------+
 *                                      o
 *                                      |
 *                                      o
 *                      gnd (substrate/groundplane)
 *******************************************************************************
 *
 * notes:
 *
 *  1. outer dimension (x) may vary from 100um to 400um.
 *
 *  2. supported spiral widths (w) vary from 5um to 25um.
 *
 *  3. turn to turn space (s) is fixed at 5um.
 *
 *  4. number of turns (n) may vary from 1 to 20 in 1/2 turn increments.
 *
 *
 *
 * ibm confidential
 * (c) 2004 ibm corporation
 *
 *******************************************************************************
 *
 * scalable, series stacked octagonal inductor model
 *
 *
 *
 .subckt inds (out in gnd)
 *
 +    x      =  250u      $ largest outer dimension of octagonal spiral (m)
 +    w      =  10u       $ width of spiral turn (m)
 +    s      =  5u        $ turn to turn space (m)
 +    n      =  4.5       $ number of turns
 *                        $ 1/2 turn incr.
 +    wu     =  15u       $ width of underpass (m)
 +    tlev1  =  2         $ number of (1x) metal levels in spiral
 +    tlev2  =  1         $ number of (2x) metal levels in spiral
 +    bp     =  2         $ indicator of grounding scheme under spiral
 *                        $  2 = bf (default)
 *                        $  8 = m1 groundplane
 +    dtemp  =  0         $ temperature difference between element and
 *                        $ circuit temperature (deg c).
 *
 *
 * element multipliers for powerspice
 + cmult='1'
 + lmult='1'
 + rmult='1'
 + lenmult='1'
 + px='x*lenmult'
 + pw='w*lenmult'
 + ps='s*lenmult'
 + ppwu='wu*lenmult'
 + rxflfrac='0.20'
 + rxeff='oppcstif-2*rxflfrac*oppcstif'
 + pcflfrac='0.20'
 + pceff='oppcthkf-2*pcflfrac*oppcthkf'
 + m1flfrac='0.09'
 + m1teff='m1t-2*m1flfrac*m1t'
 + m2flfrac='0.09'
 + m2teff='m2t-2*m2flfrac*m2t'
 + mqflfrac='0.09'
 + mqteff='mqt-2*mqflfrac*mqt'
 + lyflfrac='0.09'
 + lyteff='lyt-2*lyflfrac*lyt'
 + e1flfrac='0.09'
 + e1teff='e1t-2*e1flfrac*e1t'
 + maflfrac='0.00'
 + mateff='mat-2*maflfrac*mat'
 + m3flfrac='0.09'
 + m3teff='m3t-2*m3flfrac*m3t'
 + m4flfrac='0.09'
 + m4teff='m4t-2*m4flfrac*m4t'
 + mgflfrac='0.09'
 + mgteff='mgt-2*mgflfrac*mgt'
 *
 * bp conversion to bptype
 + bptype='(bp==2)*-1+(bp==8)*-2'
 * nlev conversion from tlev
 + nlev='tlev1+(tlev2==1)+(tlev2==2)*4'
 *
 * calculations of stack height info.
 + prt3='mat'
 + delpr3='(delma)/1'
 + prrs3='1/(1/(mars))'
 + temcpr3='(mars*tmars)'
 + temcprnum3='(mars)'
 + sect3='e1t'
 + delsec3='(dele1)/1'
 + secrs3='1/(1/(e1rs))'
 + temcse3='(e1rs*te1rs)'
 + temcsenum3='(e1rs)'
 + secprt3='e1mat'
 *
 + prt4='mat'
 + delpr4='(delma)/1'
 + prrs4='1/(1/(mars))'
 + temcpr4='(mars*tmars)'
 + temcprnum4='(mars)'
 + sect4='e1t'
 + delsec4='(dele1)/1'
 + secrs4='1/(1/(e1rs))'
 + temcse4='(e1rs*te1rs)'
 + temcsenum4='(e1rs)'
 + secprt4='e1mat'
 *
 + prt5='mat'
 + delpr5='(delma)/1'
 + prrs5='1/(1/(mars))'
 + temcpr5='(mars*tmars)'
 + temcprnum5='(mars)'
 + sect5='e1t'
 + delsec5='(dele1)/1'
 + secrs5='1/(1/(e1rs))'
 + temcse5='(e1rs*te1rs)'
 + temcsenum5='(e1rs)'
 + secprt5='e1mat'
 *
 + prt6='mat'
 + delpr6='(delma)/1'
 + prrs6='1/(1/(mars))'
 + temcpr6='(mars*tmars)'
 + temcprnum6='(mars)'
 + sect6='e1t'
 + delsec6='(dele1)/1'
 + secrs6='1/(1/(e1rs))'
 + temcse6='(e1rs*te1rs)'
 + temcsenum6='(e1rs)'
 + secprt6='e1mat'
 *
 + prt7='mat'
 + delpr7='(delma)/1'
 + prrs7='1/(1/(mars))'
 + temcpr7='(mars*tmars)'
 + temcprnum7='(mars)'
 + sect7='e1t'
 + delsec7='(dele1)/1'
 + secrs7='1/(1/(e1rs))'
 + temcse7='(e1rs*te1rs)'
 + temcsenum7='(e1rs)'
 + secprt7='e1mat'
 *
 *
 * calculations of primary and secondary.
 + pprt='(nlev==3)*prt3+(nlev==4)*prt4+(nlev==5)*prt5+(nlev==6)*prt6+(nlev==7)*prt7'
 + pdelpr='(nlev==3)*delpr3+(nlev==4)*delpr4+(nlev==5)*delpr5+(nlev==6)*delpr6+(nlev==7)*delpr7'
 + pprrs='(nlev==3)*prrs3+(nlev==4)*prrs4+(nlev==5)*prrs5+(nlev==6)*prrs6+(nlev==7)*prrs7'
 + temcpr='(nlev==3)*temcpr3+(nlev==4)*temcpr4+(nlev==5)*temcpr5+(nlev==6)*temcpr6+(nlev==7)*temcpr7'
 + temcprnum='(nlev==3)*temcprnum3+(nlev==4)*temcprnum4+(nlev==5)*temcprnum5+(nlev==6)*temcprnum6+(nlev==7)*temcprnum7'
 + psect='(nlev==3)*sect3+(nlev==4)*sect4+(nlev==5)*sect5+(nlev==6)*sect6+(nlev==7)*sect7'
 + pdelsec='(nlev==3)*delsec3+(nlev==4)*delsec4+(nlev==5)*delsec5+(nlev==6)*delsec6+(nlev==7)*delsec7'
 + psecrs='(nlev==3)*secrs3+(nlev==4)*secrs4+(nlev==5)*secrs5+(nlev==6)*secrs6+(nlev==7)*secrs7'
 + temcse='(nlev==3)*temcse3+(nlev==4)*temcse4+(nlev==5)*temcse5+(nlev==6)*temcse6+(nlev==7)*temcse7'
 + temcsenum='(nlev==3)*temcsenum3+(nlev==4)*temcsenum4+(nlev==5)*temcsenum5+(nlev==6)*temcsenum6+(nlev==7)*temcsenum7'
 + psecprt='(nlev==3)*secprt3+(nlev==4)*secprt4+(nlev==5)*secprt5+(nlev==6)*secprt6+(nlev==7)*secprt7'
 + h3='rxeff+pceff+capct+m1teff+m1m2t+m2teff+m2mqt+mqteff+mqlyt+lyteff+lye1t+psect+psecprt+pprt'
 + h4='rxeff+pceff+capct+m1teff+m1m2t+m2teff+m2m3t+m3teff+m3mqt+mqteff+mqlyt+lyteff+lye1t+psect+psecprt+pprt'
 + h5='rxeff+pceff+capct+m1teff+m1m2t+m2teff+m2m3t+m3teff+m3m4t+m4teff+m4mqt+mqteff+mqlyt+lyteff+lye1t+psect+psecprt+pprt'
 + h6='rxeff+pceff+capct+m1teff+m1m2t+m2teff+m2mqt+mqteff+mqmgt+mgteff+mqlyt+lyteff+lye1t+psect+psecprt+pprt'
 + h7='rxeff+pceff+capct+m1teff+m1m2t+m2teff+m2m3t+m3teff+m3mqt+mqteff+mqmgt+mgteff+mqlyt+lyteff+lye1t+psect+psecprt+pprt'
 + phpr='(nlev==3)*h3+(nlev==4)*h4+(nlev==5)*h5+(nlev==6)*h6+(nlev==7)*h7-pprt'
 + phsec='phpr-psect-psecprt'
 *
 * calculations of m1 shield stack height.
 + phm1sx='oppcstif+oppcthkf+capct+m1t'
 + phpreff='phpr-(bp==8)*phm1sx'
 + phseceff='phsec-(bp==8)*phm1sx'
 * calculations of temc. coefficient
 + ptprrs='temcpr/temcprnum'
 + ptsers='temcse/temcsenum'
 *
 * pr series spiral coefficients
 + ppcprs='e0*4.065/phpreff'
 + ppcses='e0*4.041/phseceff'
 + ppcprse='e0*4.100/psecprt'
 + ppcprsef='e0*4.100*(2*1.064/(pi-2)*log(pi/2)+2*1.064/pi*log(1+pprt/psecprt))'
 + palphaprse='atan(ps/1.258/psecprt)'
 + ppcmprsef='e0*4.100*(0.695*(1-cos(2*palphaprse))/(2*palphaprse-sin(2*palphaprse))*log(2*palphaprse/sin(2*palphaprse)))'
 + ppcprsf='e0*4.065*(2*0.284/(pi-2)*log(pi/2)+2*2.269/pi*log(1+pprt/phpreff))'
 + palphapr='atan(ps/0.100/phpreff)'
 + ppcmprsf='e0*4.065*(0.035*(1-cos(2*palphapr))/(2*palphapr-sin(2*palphapr))*log(2*palphapr/sin(2*palphapr)))'
 + pbetapr='pi/2-2*palphapr'
 + ppcprpr='e0*4.065*(1/pi*log(1+pw/ps)+0.120/(pi-2)*log(pi/2)+1.266*pprt/ps+0.087/2*(1-cos(pbetapr))/(pbetapr-sin(pbetapr))*log(pbetapr/sin(pbetapr)))'
 + ppcsesf='e0*4.041*(2*0.510/(pi-2)*log(pi/2)+2*1.732/pi*log(1+psect/phseceff))'
 + palphase='atan(ps/0.868/phseceff)'
 + ppcmsesf='e0*4.041*(0.428*(1-cos(2*palphase))/(2*palphase-sin(2*palphase))*log(2*palphase/sin(2*palphase)))'
 + pbetase='pi/2-2*palphase'
 + ppcsese='e0*4.041*(1/pi*log(1+w/s)+0.000/(pi-2)*log(pi/2)+1.140*psect/ps+0.000/2*(1-cos(pbetase))/(pbetase-sin(pbetase))*log(pbetase/sin(pbetase)))'
 *
 xstack out 2 in 2 gnd indstack
 + xp='px'
 + xs='px'
 + wp='pw'
 + ws='pw'
 + sp='ps'
 + ss='ps'
 + np='n/2'
 + ns='n/2'
 + pwu='ppwu'
 + pstack='2'
 + pgrnd='bptype'
 + gprs='m1rs'
 + tgprs='tm1rs'
 + ctrs='m1rs'
 + tctrs='tm1rs'
 + rsx='rsub'
 + trsx='trsub'
 + pdtemp='dtemp'
 + delpr='pdelpr'
 + prrs='pprrs'
 + prt='pprt'
 + tprrs='ptprrs'
 + delse='pdelsec'
 + sers='(psecrs+0.0006/(pw*1e6))'
 + sect='psect'
 + tsers='ptsers'
 + delup='pdelsec'
 + uprs='psecrs'
 + tuprs='ptsers'
 + upt='psect'
 + cprs='1f'
 + cprsf='ppcprsf'
 + cmprsf='ppcmprsf'
 + cprpr='ppcprpr'
 + cpru='1f'
 + cpruf='1f'
 + cmpruf='1f'
 + cses='ppcses'
 + csesf='ppcsesf'
 + cmsesf='ppcmsesf'
 + csese='ppcsese'
 + cprse='ppcprse'
 + cprsef='ppcprsef'
 + cmprsef='ppcmprsef'
 + cus='1f'
 + cusf='1f'
 + sxthk='pmsxt'
 * optimization coefficients
 + prscrfmin ='0.75e-3'
 + prscrfmax ='2.5e-3'
 + prscrfa ='0.0'
 + prscrfb ='2.2e-3'
 + prfb ='1'
 + ppowa ='-0.125'
 + ppowb ='1.15'
 + paa ='10000'
 + pab ='2500'
 + pamax ='4000'
 + condsib ='1'
 + prgptb ='700'
 + rsxcorrb ='1.2'
 + csxcormax ='3'
 + csxcorra ='1.2e-3'
 + csxcorrb ='0.5294'
 + pcmprsb ='0'
 + pcmsesb ='0.6'
 + pcofprsb ='0.7'
 + pcofsesb ='1.8'
 + pcoprseb ='0.7'
 + pcmprseb ='0.3'
 + sosplps ='0.4'
 + plscrfmax ='0.48'
 + slscrfa ='-0.429'
 + slscrfb ='0.486'
 + pcoo ='0.7'
 *
 .ends inds
 .include './kxres.inc'
 * path, component, release: cmos8base/rel/hspice/models/kxres.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.3 08/11/21 11:41:14
 *
 *>  ibm cmrf8sf/bicmos8wl   kxres    kx beol resistor
 *
 ***********************************************************************
 *
 *  distributed r-c network that accounts for end resistance effects,
 *  parasitic capacitance and includes a fixed substrate resistance.
 *
 *           rend       rmid                     rmid       rend
 *   in  o--/\/\/\--+--/\/\/\---------+---------/\/\/\--+--/\/\/\--o  out
 *                  |                 |                 |
 *                  |                 |                 |
 *                ----              -----             -----
 *           capa ----         capb -----        capc -----
 *                  |                 |                 |
 *                  |                 |                 |
 *                  +-----------------+-----------------+
 *                                    |
 *   parasitic capacitance is         \
 *   divided among c elements         / rsub
 *   in 1/6 - 2/3 - 1/6 ratios        \
 *                                    |
 *                                    o substrate (sx)
 *
 ***********************************************************************
 *
 *  dimensions: w = design width  of kx
 *              l = design space between vias
 *
 *  syntax:     specify both width and length:
 *              xxx  in out sx  kxres (w=5u  l=5u)
 *
 *       or     specify width and resistance:
 *              xxx  in out sx  kxres (w=5u  r=150)
 *
 *  series:     sbar  --> defined model parameter,   reff = rbar * sbar
 *
 *  parallel:      m  --> implicit hspice parameter, reff = rbar / m
 *
 *               par  --> defined model parameter,   reff = rbar / par
 *
 *  optional:  dtemp  --> device temperature difference with respect to
 *                         the simulated circuit temperature (deg c).
 *
 *              tlev1 --> number of thin metal levels, used to determine
 *                        parasitic capacitance, default=2
 *
 *                 sh --> self-heating switch, default = 1
 *                        no self-heating effects => sh=0
 *
 *                rsx --> fixed substrate resistance, default = 50 ohm.
 *
 *
 *  notes:
 *
 *  1. model supports only rectangular resistors with vias at each
 *     end of the resistor bar. "dogbone" or multiple tap layouts are
 *     not supported.
 *
 * ibm confidential
 * (c) 2006 ibm corporation
 *
 ***********************************************************************
 *
 .subckt kxres  ( in out sx )  w=5u  l=-1u  r=-1  sbar=1  par=1  dtemp=0  sh=1  rsx=50  tlev1=2 
 *
 * check for minimum width, calculate effective width
 + kxwdth = 'max(w,5.0u) + kxdwf'
 + kxwdthn = 'max(w,5.0u) + kxdwn'
 + kxwkx = 'max(w,5.0u) + tdelkx'
 *
 * calculate  length when r > 0, l < 0
 + pleqn =  '((r*kxwdthn - 2*kxrenn) / kxrsn)'
 *
 * select op length, user input takes precedence over calculated length
 + plnom = 'max(l,0) + ((l-abs(l))/(2*l))*pleqn'
 *
 * check for minimum length, calculate effective length
 + kxlen = 'max(plnom,5u)'
 *
 * resistance calculation including temperature effects
 + pdeltat= 'temper-25+dtemp'
 + rmidt  = 'kxrsf * kxlen / kxwdth / 2'
 + rmid  = 'rmidt * (1 + kxrstc1*pdeltat + kxrstc2*pdeltat*pdeltat)'
 + rend  = 'kxrenf / kxwdth'
 + prtot = '2 * (rmid + rend)'
 *
 * calculate area, perimeter for capacitance
 * subtract delta w, delta l to obtain drawn dimensions,
 * then include region outside of contacts
 + kxcapperi  = '2*((kxlen + 2*kxendf) + kxwkx)'
 + kxcaparea = '(kxlen + 2*kxendf) * kxwkx'
 *
 * partition capacitance area, perimeter
 + akxxc = 'kxcaparea / 3'
 + pkxxc = 'kxcapperi  / 3'
 *
 * determine capacitance parameters based on stack height.
 * these constants represent the height of kx over the closest mx level, the thickness of kx, and
 * the thickness of any given mx level (note: all thin metal levels are the same thickness in this technology)
 + mxkxt= 0.120u
 + kxt= 0.05u
 + mxt = m2t			
 + h1='0.10*oppcstif+0.50*oppcthkn+capct+0.1*m1t+m1m2t+mxt+mxkxt+kxt'
 + h2='0.10*oppcstif+0.50*oppcthkn+capct+0.1*m1t+m1m2t+0.1*m2t+m2m3t+mxt+mxkxt+kxt'
 + h3='0.10*oppcstif+0.50*oppcthkn+capct+0.1*m1t+m1m2t+0.1*m2t+m2m3t+0.1*m3t+m3m4t+mxt+mxkxt+kxt'
 + h4='0.10*oppcstif+0.50*oppcthkn+capct+0.1*m1t+m1m2t+0.1*m2t+m2m3t+0.1*m3t+m3m4t+0.1*m4t+m4m5t+mxt+mxkxt+kxt'
 + h5='0.10*oppcstif+0.50*oppcthkn+capct+0.1*m1t+m1m2t+0.1*m2t+m2m3t+0.1*m3t+m3m4t+0.1*m4t+m4m5t+0.1*m5t+m5m6t+mxt+mxkxt+kxt'
 + phpr='(tlev1==2)*h1+(tlev1==3)*h2+(tlev1==4)*h3+(tlev1==5)*h4+(tlev1==6)*h5-kxt'
 + ppcprs='e0*4.069/phpr'
 + ppcprsf='e0*4.069*(2*1.190/(pi-2)*log(pi/2)+2*10.000/pi*log(1+kxt/phpr))'

 *
 * mis-match calculation
 + pkxma   = 'kxma * kxma / (kxlen * kxwdth * 1e12)'
 + pkxml   = 'kxml * kxml / (kxlen * kxlen * 1e12)'
 + pkxmw   = 'kxmw * kxmw / (kxwdth * kxwdth * 1e12)'
 + kx3sig = '0.01 * sqrt(pkxml + pkxmw + pkxma)'
 + kxmm   = 'kx3sig * 0.7071 / sqrt(sbar * par)'
 + mmres  = agauss(0,1,3)
 + mmatr  = '1 + (kxmm * mmres)'
 *
 *  the voltage coefficients take into effect self-heating
 + usesh = '((gsh==1)&&(sh==1))||(gsh==2)'    $ self-heating switch
 + kxpsh = 'usesh*kxshk  * exp(kxshm*log(w*plnom*1e12)) / (2*rmid*w*plnom*sbar*sbar*1e12) '
 *
 * resistor network
 rea  in 1   r='rend*mmatr*sbar' tc1=kxrntc  dtemp=dtemp
 rma  1  2   r='rmid*mmatr*sbar/(1 + kxpsh*v(in,out)*v(in,out))' 
 rmb  2  3   r='rmid*mmatr*sbar/(1 + kxpsh*v(in,out)*v(in,out))' 
 reb  3  out r='rend*mmatr*sbar' tc1=kxrntc  dtemp=dtemp
 *
 capa  6   1   c='((akxxc*ppcprs + pkxxc*ppcprsf)/2)*sbar'
 capb  6   2   c='(2*(akxxc*ppcprs + pkxxc*ppcprsf))*sbar'
 capc  6   3   c='((akxxc*ppcprs + pkxxc*ppcprsf)/2)*sbar'
 *
 rsb   6  sx   r='rsx'
 *
 .ends kxres
 .include './l1res.inc'
 * path, component, release: cmrf8sf/reldm/hspice/models/l1res.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.5 08/11/21 11:42:22
 *
 *>  ibm cmrf8sf   l1res    l1 beol resistor
 *
 ***********************************************************************
 *
 *  distributed r-c network that accounts for end resistance effects,
 *  parasitic capacitance and includes a fixed substrate resistance.
 *
 *           rend       rmid                     rmid       rend
 *   in  o--/\/\/\--+--/\/\/\---------+---------/\/\/\--+--/\/\/\--o  out
 *                  |                 |                 |
 *                  |                 |                 |
 *                ----              -----             -----
 *           capa ----         capb -----        capc -----
 *                  |                 |                 |
 *                  |                 |                 |
 *                  +-----------------+-----------------+
 *                                    |
 *   parasitic capacitance is         \
 *   divided among c elements         / rsub
 *   in 1/6 - 2/3 - 1/6 ratios        \
 *                                    |
 *                                    o substrate (sx)
 *
 ***********************************************************************
 *
 *  dimensions: w = design width  of l1
 *              l = design space between vias
 *
 *  syntax:     specify both width and length:
 *              xxx  in out sx  l1res (w=5u  l=8u)
 *
 *       or     specify width and resistance:
 *              xxx  in out sx  l1res (w=5u  r=150)
 *
 *  series:     sbar  --> defined model parameter,   reff = rbar * sbar
 *
 *  parallel:      m  --> implicit hspice parameter, reff = rbar / m
 *
 *              par  --> defined model parameter,   reff = rbar / par
 *
 *  optional:  dtemp  --> device temperature difference with respect to
 *                         the simulated circuit temperature (deg c).
 *
 *              tlev1 --> number of thin metal levels, used to determine
 *                        parasitic capacitance, default=2
 *
 *              tlev2 --> number of thick metal levels, used to determine
 *                        parasitic capacitance, default=1
 *
 *                 sh --> self-heating switch, default = 1
 *                        no self-heating effects => sh=0
 *
 *                rsx --> fixed substrate resistance, default = 50 ohm.
 *
 *  notes:
 *
 *  1. model supports only rectangular resistors with vias at each
 *     end of the resistor bar. "dogbone" or multiple tap layouts are
 *     not supported.
 *
 * ibm confidential
 * (c) 2003 ibm corporation
 *
 ***********************************************************************
 *
 .subckt l1res  ( in out sx )  w=5u  l=-1u  r=-1  sbar=1  par=1  dtemp=0  tlev1=2  tlev2=1  sh=1  rsx=50
 *
 + l1w = 'min(30u,w)'
 + l1wdth = 'max(l1w,5.0u) + l1dwf'
 + rendn = '2u*(exp(l1renn)-17.5) / l1wdth'
 + pleqn =  '((r - rendn)*(w+l1dwn)) / l1rsn'
 *
 * select op length, user input takes precedence over calculated length
 + plnom = 'max(l,0) + ((l-abs(l))/(2*l))*pleqn'
 *
 * check for minimum length, calculate effective length
 + l1len = 'max(plnom,8u)'
 *
 * resistance calculation
 *  these are the temperature coefficients
 + l1rstc1 = -405u
 + l1rstc2 = 0.45u
 + l1rntc = 0
 + pdeltat= 'temper-25+dtemp'
 + rmidt  = 'l1rsf * l1len / l1wdth / 2'
 + rmid   = 'rmidt * (1 + l1rstc1*pdeltat + l1rstc2*pdeltat*pdeltat)' 
 + rend  = '1u*(exp(l1renf)-17.5) / l1wdth'
 + prtot = '2 * (rmid + rend)'
 *
 * calculate area, perimeter for capacitance
 * subtract delta w, delta l to obtain drawn dimensions,
 * then include region outside of contacts
 + l1endf = 2.24u
 + l1capperi  = '2*((l1len + 2*l1endf) + (l1wdth-l1dwn))'
 + l1caparea = '(l1len + 2*l1endf) * (l1wdth-l1dwn)'
 *
 * partition capacitance area, perimeter
 + al1xc = 'l1caparea / 3'
 + pl1xc = 'l1capperi  / 3'
 *
 * determine capacitance parameters based on stack height.
 * check for limits on 2 <= tlev1 <= 4 and 1 <= tlev2 <= 2
 + tlv1 = 'max(2,tlev1)'
 + tl1  = 'min(4,tlv1)'
 + tlv2 = 'max(1,tlev2)'
 + tl2  = 'min(2,tlv2)'
 + m3yn = '((tl1 == 3) || (tl1 == 4))'
 + m4yn = '(tl1 == 4)'
 + mgyn = '(tl2 == 2)'
 + stackhgt = '(1-2*0.45)*oppcstif + (1-2*0.25)*oppcthkf + capct + (m1t/2.0) + (m1m2t + m2t/2.0) + (m2m3t + m3t/2.0)*m3yn + (m3m4t + m4t/2.0)*m4yn + (mxmqt + mqt/2.0) + (mqmgt + mgt/2.0)*mgyn + mqlyt + lyt + lye1t + e1t'
 + cl1s = '4.1*8.8542p/stackhgt'
 + stackhgtf = '(1-2*0.45)*oppcstif + (1-2*0.25)*oppcthkf + capct + m1m2t + m2m3t*m3yn + m3m4t*m4yn + mxmqt + mqmgt*mgyn + mqlyt + lyt + lye1t'
 + cl1sf = '4.1*8.8542p*5.58u/stackhgtf'
 *
 * mis-match calculation
 + l1ma = 1.5
 + pl1ma   = 'l1ma * l1ma / (l1len * l1wdth * 1e12)'
 + l13sig = '0.01 * sqrt(pl1ma)'
 + l1mm   = 'l13sig * 0.7071 / sqrt(sbar * par)'
 + mmres  = agauss(0,1,3)
 + mmatr  = '1 + (l1mm * mmres)'
 *
 *  the voltage coefficients take into effect self-heating
 + usesh = '((gsh==1)&&(sh==1))||(gsh==2)'		$self-heating switch
 + l1psh = 'usesh*110.0 / (prtot*sbar*sbar) / exp(.625*log(w*plnom*1e12))'

 * resistor network
 rea  in 1   r='rend*mmatr*sbar' tc1=l1rntc  dtemp=dtemp
 rma  1  2   r='rmid*mmatr*sbar/(1 + l1psh*v(in,out)*v(in,out))' 
 rmb  2  3   r='rmid*mmatr*sbar/(1 + l1psh*v(in,out)*v(in,out))' 
 reb  3  out r='rend*mmatr*sbar' tc1=l1rntc  dtemp=dtemp
 *
 capa  6   1   c='(  (al1xc*cl1s + pl1xc*cl1sf)/2)*sbar'
 capb  6   2   c='(2*(al1xc*cl1s + pl1xc*cl1sf)  )*sbar'
 capc  6   3   c='(  (al1xc*cl1s + pl1xc*cl1sf)/2)*sbar'
 *
 rsb   6  sx   r='rsx'

 .ends l1res
 .include './lpnfet.inc'
 * path, component, release: cmos8base/rel/hspice/models/lpnfet.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.10 09/07/28 16:59:31
 *
 *>  ibm cmrf8sf/bicmos8wl  lpnfet  1.5v lp nfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) lpnfet l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.12u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 0    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 1    <- gate connection switch (1->single-ended,
 *                                                       2->double-ended)
 *          + rbodymod = 0    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +  rf_rsub = 1    <- body resistance multiplier
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---
 *            gate     | |     (bsim4.4     )    bulk
 *              o------| |-----(internal    )-----o
 *                     | |     (rsub network)
 *                     | |---
 *                          |
 *                          |
 *                          |
 *                          o
 *                        source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2009 ibm corporation
 *
 ***************************************************************************
 *
 .subckt lpnfet d g s b w=1.0u l=0.12u nf=1 par=1 dtemp=0
 +                      as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                      lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                      panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                      panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                      plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                      rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1
 +                      rbps=100 rbpd=100 rbsb=1e9 rbpb=50 rbdb=1e9
 .param
 *
 * if monte carlo and "pl*" instance parameter = zero, use values from skew/process file
 +   a_plnest     = limit(-0.5,0.5)
 +   sel_plnest   = '((plnest == 1) || ((a_plnest*plnest) == 1))'
 +   a_plorient   = limit(-0.5,0.5)
 +   sel_plorient = '((plorient == 1) || ((a_plorient*plorient) == 1))'
 +   a_pld200     = limit(-0.5,0.5)
 +   sel_pld200   = '((pld200 == 1) || ((a_pld200*pld200) == 1))'
 +   a_pwd100     = limit(-0.5,0.5)
 +   sel_pwd100   = '((pwd100 == 1) || ((a_pwd100*pwd100) == 1))'
 *
 * calculate aclv/acwv and final lint/wint params
 +   aclv_ni_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_nest == 2))/aclv_factor + cnr_lpn*(1-mc_fet_mm_f)*(pc_nest != 2))'
 +   aclv_or_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_orient == 2))/aclv_factor + cnr_lpn*(1-mc_fet_mm_f)*(pc_orient != 2))'
 +   aclv_dist_sws = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_dist == 2))/aclv_factor + cnr_lpn*(1-mc_fet_mm_f)*(pc_dist != 2))'
 +   aclv_ni       = '((fet_aclv_nest*sel_plnest) + (fet_aclv_iso*(1-sel_plnest)))*aclv_ni_sws'
 +   aclv_or       = '((fet_aclv_v*sel_plorient) + (fet_aclv_h*(1-sel_plorient)))*aclv_or_sws'
 +   aclv_dist     = '((fet_aclv_out*sel_pld200) + (fet_aclv_in*(1-sel_pld200)))*aclv_dist_sws'
 +   aclv_ran      = agauss(cnr_lpn,mc_sw,3)
 *
 +   acwv_dist_sws = '(-mc_sw + ((mc_fet_mm_f != 1) && (rx_dist == 2))/acwv_factor + cnr_lpn*(1-mc_fet_mm_f)*(rx_dist != 2))'
 +   acwv_dist     = '((fet_acwv_out*sel_pwd100) + (fet_acwv_in*(1-sel_pwd100)))*acwv_dist_sws'
 +   acwv_ran      = agauss('-cnr_lpn',mc_sw,3)
 *
 .param
 +   xc_lint_1 = '(aclv_ni*aclv_fet_ni + aclv_or*aclv_fet_or)'
 +   xc_lint_2 = '((aclv_dist*aclv_fet_dist) + (aclv_ran + (mc_global == 2))*aclv_fet_ran)'
 +   xx_lint_3 = '(mc_fet_mm_f + (aclv_factor*(1-mc_fet_mm_f)))'
 +   xx_lint_4 = '((mc_global == 2)*(-xlint_lpn) + (mc_global != 2))'
 +   xc_lint_t = '((xc_lint_1 + xc_lint_2)*xx_lint_3)*xx_lint_4'
 *
 +   xc_wint_1 = '((acwv_dist*acwv_fet_dist) + (acwv_ran + (mc_global == 2))*acwv_fet_ran)'
 +   xx_wint_2 = '(mc_fet_mm_f + (acwv_factor*(1-mc_fet_mm_f)))'
 +   xx_wint_3 = '((mc_global == 2)*(xwint_lpn) + (mc_global != 2))'
 +   xc_wint_t = '((xc_wint_1)*xx_wint_2)*xx_wint_3'
 *
 *     final =  nominal      +      acv * dist(-1,1)      +        global * dist(-1,1)
 + lint_lpnfet = 'lint_lpn + 1.5*total_aclv_fet*xc_lint_t*fet_geo_mm + ltol_lpn*xlint_lpn'
 + wint_lpnfet = 'wint_lpn + 1.5*total_acwv_fet*xc_wint_t*fet_geo_mm + wtol_lpn*xwint_lpn'
 *
 .param
 * switch to turn on or off the sti stress effects
 +  isti = '((gstis==1)&&(lstis==1))||(gstis==2)'
 *
 * switch to turn on or off the nwell proximity effects
 +  inw  = '((gwells==1)&&(lnws==1))||(gwells==2)'
 *
 * nwell proximity effect calculations
 +  proxpre  =  0.015e-06            $ [v-m]
 +  proxlen  = -0.35e-06             $ [m]
 +  proxk1   =  0.375                $ [unitless]
 +  rxwparm1 = -0.28                 $ [unitless]
 +  rxwparm2 =  0.56e-06             $ [unitless]
 +  rxwparm3 =  0.0e-6               $ [m]
 +  nw1b1   = 'panw1 /(band1 -proxlen)'
 +  nw2b2   = 'panw2 /(band2 -proxlen)'
 +  nw3b3   = 'panw3 /(band3 -proxlen)'
 +  nw4b4   = 'panw4 /(band4 -proxlen)'
 +  nw5b5   = 'panw5 /(band5 -proxlen)'
 +  nw6b6   = 'panw6 /(band6 -proxlen)'
 +  nw7b7   = 'panw7 /(band7 -proxlen)'
 +  nw8b8   = 'panw8 /(band8 -proxlen)'
 +  nw9b9   = 'panw9 /(band9 -proxlen)'
 +  nw10b10 = 'panw10/(band10-proxlen)'
 +  prox_term = 'inw*(proxpre/(l*w))*(nw1b1+nw2b2+nw3b3+nw4b4+nw5b5+nw6b6+nw7b7+nw8b8+nw9b9+nw10b10)'
 +  k1_lpn_base = 0.2699
 +  k1_lpn      = 'k1_lpn_base+proxk1*prox_term'
 *
 * mis-match calculations: include multiplicity (par)
 .param
 +  kvt  =  9.0e-9
 +  kvtl =  4.0e-8
 +  kvtw =  0.0
 +  kmb  =  1.15e-5
 +  kmbl =  6.0e-8
 +  kmbw =  2.0e-8
 +  sigvth  = 'kvt/sqrt((w-kvtw)*par*(l-kvtl))'
 +  sigbeta = 'kmb/sqrt((w-kmbw)*par*(l-kmbl))'
 *
 +  dvth0 = agauss(0,1,3)               $ local mis-match distributions
 +  dbeta = agauss(0,1,3)
 *                                      $ select local vs global vs corner
 +  d_vth0 = 'dvth0*(mc_global != 2) + xlpnvth0*(mc_global == 2) - cnr_lpn'
 +  d_beta = 'dbeta*(mc_global != 2) + dlpnu0*(mc_global == 2) - cnr_lpn'
 *
 +  mmvth0 = 'sigvth * d_vth0 * fet_dop_mm'    $ vth0 mis-match
 +  mmbeta = 'sigbeta * d_beta * fet_dop_mm'   $ beta mis-match
 *
 +  pvt_var = 'mmvth0 + prox_term'      $ local vth0 variation
 *
 .param
 * flicker noise calculations: statistics are function of w and l and par
 +  noideva = '10u * 0.12u * 10'        $ device area for extracted variation
 +  noistd  = 1.1513                    $ worst case variation value
 *
 +  noi_scale = 'noistd-min(log(sqrt(w*l*par/noideva)),0)'   $ area scaling
 +  noiamult  = 'exp(dnoi_lpn*noi_scale)'                $ gate bias scaliing
 +  noibmult  = 'exp(dnoi_lpn*noi_scale/2.25)'
 +  noicmult  = 'exp(dnoi_lpn*noi_scale/5.06)'
 *
 * thermal noise scaling equation
 +  tnoitanha = -0.2
 +  tnoitanhb = 6.80e6
 +  tnoitanhc = 2.0e12
 +  ntnoi_lpnfet = '1.4/tanh(tnoitanha + tnoitanhb*l + tnoitanhc*l*l)'
 *
 * gate resistance scaling equations
 +  rg11 = '0.05e6*l + 12'
 +  rg12 = '30e6*l - 3'
 +  xrg1 = 'max(0.1,(rg11*rg12/(rg11+rg12)))'
 +  xrg2 = 'max(0.0,((0.6e-6/l + 1.26)*(0.08e6*w + 2.6)/5))'
 *
 .param
 * vtsat trend modification for narrow devices
 + nar='(w<1u)'
 + sw='(w<3.5u)'
 + lpe0scl='(1.193e-7*nar+(1.193e-7+0.16e-7*(w-1u)*1e6)*(1-nar))*sw+1.593e-7*(1-sw)'
 + dvt0wscl='(-0.09*nar+(-0.09+0.036*(w-1u)*1e6)*(1-nar))*sw'
 *
 m0 d g s b  lpnch  w=w l=l nf=nf dtemp=dtemp
 +                  as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                  sa='isti*sa' sb='isti*sb' sd='isti*sd'
 +                  rgatemod=rgatemod rbodymod=rbodymod
 *
 ***************************************************************************
 * lp nfet bsim4v4 model
 ***************************************************************************
 .model lpnch  nmos  (                              level   = 54
 +version = 4.4            binunit = 1              paramchk= 1
 +mobmod  = 0              rdsmod  = 1              permod  = 1
 +epsrox  = 3.9            toxe    = toxe_lpn       toxp    = toxp_lpn
 +toxm    = 3.12e-9        xj      = 1.5e-7         ndep    = 7e17
 +ngate   = 3e20           nsd     = 1e20
 +rsh     = rsh_lpn        rshg    = rsh_lpn
 +vth0    = 'vth0_lpn+pvt_var'                      vfb     = -1
 +pvth0   = pvth0_lpn
 +k1      = k1_lpn         k2      = 0.03473        k3      = 56.29
 +lk1     = -0.001         wk3     = -8.337         lk3b    = 0
 +k3b     = 21.37          w0      = 7.244e-07      lpe0    = lpe0scl
 +lw0     = 0              lk3     = 1.315          pk3     = -0.4966
 +lpeb    = 1.741e-07      dvt0    = 5.417          dvt1    = 1
 +dvt2    = 0              dvtp0   = 1e-09          dvtp1   = 0
 +dvt0w   = dvt0wscl       dvt1w   = 1e+06          dvt2w   = 0
 +u0    = 'u0_lpn+mmbeta'  ua      = 5.1e-12        ub      = 1.905e-18
 +wua     = 1.053e-10      lu0     = 5.522          wu0     = -4.613
 +wub     = -1e-19         wuc     = -2.692e-11     puc     = -1.702e-12
 +uc      = 1.395e-10      vsat    = vsat_lpn       a0      = 1.188
 +ags     = 0.8577         b0      = 7.386e-06      b1      = 3.575e-05
 +keta    = 1.388e-18      a1      = 0              a2      = 1
 +lketa   = -0.006         wdwg    = -2.1e-09
 +wint    = 0              lint    = 0              dwg     = 1.77e-08
 +dwb     = 0              voff    = -0.1594        voffl   = -1.459e-09
 +minv    = -0.4054        nfactor = 1.102          eta0    = 0.1185
 +etab    = -0.05133       dsub    = 0.2982         cit     = 0.001449
 +cdsc    = 0.0007852      cdscb   = 0              cdscd   = 0
 +pclm    = 0.6534         pdiblc1 = 8.882e-16      pdiblc2 = 0.004978
 +pdiblcb = 0.02           drout   = 1.08           pscbe1  = 4.24e+08
 +pscbe2  = 1e-05          pvag    = 1.988          delta   = 0.008
 +fprout  = 4.441e-16      pdits   = 0.003091       pditsl  = 3967
 +pditsd  = 0.001
 +rdw     = 'rdsw_lpn+5'   rdwmin  = 1.302          rsw     = rdsw_lpn
 +rswmin  = 1.864          prwg    = 0              prwb    = -0.1014
 +alpha0  = 2.965e-12      alpha1  = 0.0001472      beta0   = 3.436
 +lalpha0 = 9.153e-12      lalpha1 = -1.08e-5
 +wr      = 1
 ***************************************************************************
 * jds/vt temperature parameters
 ***************************************************************************
 +tnom    = 25             ute     = -1.521         lute    = 0.01
 +kt1     = -0.1817        kt1l    = -7.172e-10     kt2     = -2.2e-07
 +ua1     = 0              ub1     = 0              uc1     = 0
 +at      = 500            prt     = 0.33
 +tempmod = 0
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 +igcmod  = 1              igbmod  = 1              agidl   = 1.988e-07
 +bgidl   = 2.184e+09      cgidl   = 13.22          egidl   = 2.22e-16
 +aigbacc = 0.01098        bigbacc = 0.001486       cigbacc = 0.0758
 +nigbacc = 1.085          aigbinv = 0.008728       bigbinv = 0.0008679
 +cigbinv = 0.01274        eigbinv = 1              nigbinv = 1.778
 +aigc    = 0.01011        bigc    = 0.0007852      cigc    = 0.002265
 +aigsd   = 0.01041        bigsd   = 0.0003373      cigsd   = -0.03802
 +dlcig   = 4.178e-09      nigc    = 2.483          poxedge = 1
 +pigcd   = 2.7            ntox    = 1.035          toxref  = toxe_lpn
 ***************************************************************************
 * sti stress model parameters
 ***************************************************************************
 +saref   = 3e-06          sbref   = 3e-06          wlod    = 0
 +ku0     = -2e-08         kvsat   = -0.3           tku0    = 0
 +lku0    = -2e-08         wku0    = -5e-08         llodku0 = 1
 +wlodku0 = 1              kvth0   = 2e-08          lkvth0  = 8.5e-08
 +wkvth0  = 2e-07          pkvth0  = 0              llodvth = 1
 +wlodvth = 1              stk2    = 0              lodk2   = 1
 +steta0  = 0              lodeta0 = 1
 ***************************************************************************
 * source/drain to body junction diode parameters
 ***************************************************************************
 +diomod  = 1             ijthdfwd= 0.1            ijthsfwd= 0.1
 +jss     = js_lpn        jsd     = js_lpn         jsws    = jsw_lpn
 +jswd    = jsw_lpn       jswgs   = jsw_lpn        jswgd   = jsw_lpn
 +cjs     = cj_lpn        cjd     = cj_lpn         cjsws   = cjsw_lpn
 +cjswd   = cjsw_lpn      cjswgs  = cjsg_lpn       cjswgd  = cjsg_lpn
 +mjs     = mj_lpn        mjd     = mj_lpn         mjsws   = mjsw_lpn
 +mjswd   = mjsw_lpn      mjswgs  = mjsg_lpn       mjswgd  = mjsg_lpn
 +pbs     = pb_lpn        pbd     = pb_lpn         pbsws   = pbsw_lpn
 +pbswd   = pbsw_lpn      pbswgs  = pbsg_lpn       pbswgd  = pbsg_lpn
 +njs     = n_lpn         njd     = n_lpn          xjbvd   = 1
 +bvd     = bd_n          xjbvs   = 1              bvs     = bd_n
 ***************************************************************************
 * junction diode temperature parameters
 ***************************************************************************
 +tcj     = cta_n         tcjsw   = ctp_n          tcjswg  = ctp_n
 +tpb     = pta_n         tpbsw   = ptp_n          tpbswg  = ptp_n
 +xtis    = 3             xtid    = 3
 ***************************************************************************
 * capacitance-voltage (cv) parameters
 ***************************************************************************
 +capmod  = 2             xpart   = 0              dlc     = 17n
 +dwc     = 0             cgdo    = cgdo_lpn       cgso    = cgso_lpn
 +cgsl    = cgsl_lpn      cgdl    = cgdl_lpn       ckappas = 10.97
 +ckappad = 10.97         cf      = 0              cgbo    = 1.706e-11
 +acde    = 0.4           moin    = 14.6           noff    = 1.8
 +voffcv  = -0.099
 ***************************************************************************
 * layout dependence parameters
 ***************************************************************************
 +geomod  = '(1 - int((nf+1)/2) + int(nf/2))'       rgeomod = 1
 +xgl     = lwbpc          xgw     = 0.43e-6        xl    = '-2*lint_lpnfet'
 +xw  = '-2*wint_lpnfet'   dmcg    = 0.23e-6        dmci    = 0.32e-6
 +dwj     = 0              ngcon   = ngcon
 ***************************************************************************
 * rf model parameters
 ***************************************************************************
 +rgatemod= rgatemod       trnqsmod= 0              rbodymod= rbodymod
 +acnqsmod= 0              xrcrg1  = xrg1           xrcrg2  = xrg2
 +rbps    = 'rbps*rf_rsub' rbpd    = 'rbpd*rf_rsub'
 +rbsb    = 'rbsb*rf_rsub' rbpb    = 'rbpb*rf_rsub' rbdb    = 'rbdb*rf_rsub'
 ***************************************************************************
 * flicker noise parameters
 ***************************************************************************
 +fnoimod = 1           noia  = '9.1e41*noiamult'   noib = '5e23*noibmult'
 +noic = '1.75*noicmult'   em      = 4.10e7         af      = 1
 +ef      = 0.95           kf      = 0
 ***************************************************************************
 * channel thermal noise parameters
 ***************************************************************************
 +tnoimod = 0              ntnoi   = ntnoi_lpnfet   )
 *
 .ends lpnfet
 .include './lpnfet_rf.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/lpnfet_rf.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.4 06/12/11 17:00:03
 *
 *>  ibm cmrf8sf  lpnfet_rf  1.5v lp nfet rf subcircuit
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) lpnfet_rf l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.12u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.15um of nw edge
 *          +    panw2 = 0    <- active area within 0.15um to 0.325um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.2um to 1.7um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 3    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 2    <- extrinsic gate connection switch (1->single-ended,
 *                                                                 2->double-ended)
 *          +     gtab = 1    <- m1 gate ring tabs flag (1->tabs present,
 *                                                       0->tabs absent)
 *          + rbodymod = 1    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +     ring = 2    <- substrate contact type for rf pcell 
 *          +  rf_rsub = 1    <- body resistance multiplier
 *          +    cwire = 1    <- wiring capacitance multiplier
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                                ||   drain
 *                            o---||-----o------------------o
 *                            |   ||     |                  |
 *                            |  cwgd    |                  |
 *                            |          |                 ---
 *                            |          |                 ---cwds
 *                            |          |                  |
 *                            |     | |---                  |
 *       gate                 | g1  | |     (bsim4.4     )  | bulk
 *         o----/\/\/\--------o-----| |-----(internal    )--)--o
 *                rg          |     | |     (rsub network)  |
 *                            |     | |---                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |  cwgs    |                  |
 *                            |   ||     |                  |
 *                            o---||-----o------------------o
 *                                ||   source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2006 ibm corporation
 *
 ***************************************************************************
 *
 .subckt lpnfet_rf d g s b w=1.0u l=0.12u nf=1 par=1 dtemp=0
 +                         as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                         lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                         panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                         panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                         plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                         rgatemod=3 ngcon=2 gtab=1 rbodymod=1 ring=2
 +                         rf_rsub=1 cwire=1
 *
 .param
 +  legacy = '(ring==99)'                        $ switch for legacy pcell
 +  nfo    = '(int((nf+1)/2) - int(nf/2))'       $ switch for odd,even fingers
 *
 * extrinsic gate resistance calculations (function of w, l, and nf)
 +  wum    = '(w/nf)*1e6'
 +  lum    = 'l*1e6'
 *
 +  rlen_a = 'lum*(1 + ((nf - 3)/2)) + diff_thn*1e6*((nf - 1)/2)'
 +  rlen_b = '0.5*lum + (diff_thn*1e6 + lum)*((nf/2) - 1)'
 +  rlen   = 'nfo*rlen_a + (1-nfo)*rlen_b'
 *
 +  ra_term1 = '0.81*legacy + 0.91*(1-legacy)'
 +  ra_len   = '(ra_term1 + 0.5*lum + (nf==2)*0.5*lum + (nf>2)*(rlen/3))/(0.4)'
 +  ra_wid   = '(2.5*wum + 1.65)*legacy + (1.25*wum + 0.875)*(1-legacy)'
 +  ra       = 'm1rsi * (ra_len + ra_wid)'
 +  rb       = 'm1rsi * (4.3*legacy + 3.3*(1-legacy))'
 +  rcont    = 'cars * (1/nf)'
 *
 +  rgate  = '0.5*(rb*gtab + (1/ngcon)*(ra+0.5*rcont))'
 *
 .param
 * substrate resistance calculations (function of w, l, and nf)
 +  rhorz  = 'max(50,((63e6*l + 376)*(4.0e-3/w)/300))'
 +  rvert  = 'max(150,((228e-6/l - 296)*(12e-3/w - 50)/1050))'
 *
 * gate capacitance calculation (function of w, l, and nf)
 +  cg1   = '0.2e6*l + 9'
 +  cg2   = '18e6*l'
 +  cgate = '((cg1*cg2/(cg1+cg2)) + 0.08e6*w - 1.2)*0.5e-15'
 *
 * drain-source capacitance calculation (function of w, l, and nf)
 +  cdsw  = '1.721e5*w + 0.198'
 +  cdsl  = '(3.65e-7/l + 0.1058)*3e-16'
 *
 x1 d g1 s b lpnfet w=w l=l nf=nf par=par dtemp=dtemp
 +                  as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                  lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                  panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                  panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                  panw9=panw9 panw10=panw10
 +                  plnest=plnest plorient=plorient
 +                  pld200=pld200 pwd100=pwd100
 +                  rgatemod=rgatemod ngcon=2
 +                  rbodymod=rbodymod rf_rsub=rf_rsub
 +                  rbps=rhorz rbpd=rhorz
 +                  rbsb=rvert rbpb=rvert rbdb=rvert
 *
 rg     g   g1  r=rgate
 cwgd   g1  d   c='1e-18 + cgate*cwire'
 cwgs   g1  s   c='1e-18 + cgate*cwire'
 cwds   d   s   c='1e-18 + (cdsw*cdsl)*cwire'
 *
 .ends lpnfet_rf
 .include './lpnfettw.inc'
 * path, component, release: cmos8base/rel/hspice/models/lpnfettw.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.1 09/06/15 08:25:54
 *
 *>  ibm cmrf8sf/bicmos8wl  lpnfettw  1.5v triple well lp nfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b tw sx ) lpnfettw l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.12u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 0    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 1    <- gate connection switch (1->single-ended,
 *                                                       2->double-ended)
 *          + rbodymod = 0    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +  rf_rsub = 1    <- body resistance multiplier
 *
 *          +   t3well = 1    <- well isolation flag
 *                                   1-> t3 isolation, true triple well, default)
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---         d1           d2
 *            gate     | |   bulk   |\     tw    /|
 *              o------| |-----o----| >|---o---|< |----o sx
 *                     | |          |/           \|
 *                     | |---
 *                          |     area and perimeter for both pi diodes
 *                          |     are calculated based on inside n-well
 *                          o     edge of the isolation ring.
 *                        source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2009 ibm corporation
 *
 ***************************************************************************
 *
 .subckt lpnfettw d g s b tw sx w=1.0u l=0.12u nf=1 par=1 dtemp=0
 +                              as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                              lstis=1 sa=0 sb=0 sd=0 lnws=0 t3well=1
 +                              panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                              panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                              plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                              rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1
 .param
 *
 * pc to pc spacing based on gr207,207b,207c
 +  pc2pc = '(0.36 + 0.04*(l > 0.125e-06) + 0.04*(l > 0.175e-06))*1.0e-06'
 +  pc2rx = 0.55e-06                          $ pc to outside rx distance
 +  iwlength  = '(nf*l+(nf-1)*pc2pc+2*pc2rx+2.34u)'
 +  iwwidth = 'w/nf+2.34u'
 +  iwarea  = 'iwlength*iwwidth'
 +  iwperim = '2 * (iwlength+iwwidth)'
 +  owarea  = '(iwlength+3u) * (iwwidth+3u)'
 +  owperim = '2 * (iwlength+iwwidth+6u)'
 *
 x1 d g s b lpnfet w=w l=l nf=nf par=par dtemp=dtemp
 +                 as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                 lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                 panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                 panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                 panw9=panw9 panw10=panw10 plnest=plnest
 +                 plorient=plorient pld200=pld200 pwd100=pwd100
 +                 rgatemod=rgatemod ngcon=ngcon rbodymod=rbodymod
 +                 rf_rsub=rf_rsub
 *
 x2   b  tw diodepwpi area=iwarea perim=iwperim dtemp=dtemp t3well=t3well
 x3   sx tw diodepisx area=owarea perim=owperim dtemp=dtemp t3well=t3well
 x4   sx tw diodenwx  area=0      perim=owperim dtemp=dtemp t3well=t3well
 *
 .ends lpnfettw
 .include './lpnfettw_rf.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/lpnfettw_rf.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.1 09/06/15 08:31:17
 *
 *>  ibm cmrf8sf/bicmos8wl  lpnfettw_rf  1.5v triple well lp nfet rf subcircuit
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b tw sx ) lpnfettw_rf l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.12u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 3    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 2    <- extrinsic gate connection switch (1->single-ended,
 *                                                                 2->double-ended)
 *          +     gtab = 1    <- m1 gate ring tabs flag (1->tabs present,
 *                                                       0->tabs absent)
 *          + rbodymod = 1    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +     ring = 2    <- substrate contact type for rf pcell 
 *          +  rf_rsub = 1    <- body resistance multiplier
 *          +    cwire = 1    <- wiring capacitance multiplier
 *
 *          +   t3well = 1    <- well isolation flag
 *                                   1-> t3 isolation, true triple well, default)
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---         d1           d2
 *            gate     | |   bulk   |\     tw    /|
 *              o------| |-----o----| >|---o---|< |----o sx
 *                     | |          |/           \|
 *                     | |---
 *                          |     area and perimeter for both pi diodes
 *                          |     are calculated based on inside n-well
 *                          o     edge of the isolation ring.
 *                        source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2009 ibm corporation
 *
 ***************************************************************************
 *
 .subckt lpnfettw_rf d g s b tw sx w=1.0u l=0.12u nf=1 par=1 dtemp=0
 +                                 as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                                 lstis=1 sa=0 sb=0 sd=0 lnws=0 t3well=0
 +                                 panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                                 panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                                 plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                                 rgatemod=3 ngcon=2 gtab=1 rbodymod=1 ring=2
 +                                 rf_rsub=1 cwire=1
 .param
 *
 * pc to pc spacing based on gr207,207b,207c
 +  pc2pc = '(0.36 + 0.04*(l > 0.125e-06) + 0.04*(l > 0.175e-06))*1.0e-06'
 +  pc2rx = 0.55e-06                          $ pc to outside rx distance
 +  iwlength  = '(nf*l+(nf-1)*pc2pc+2*pc2rx+2.9u)'
 +  iwwidth = 'w/nf+2.74u'
 +  iwarea  = 'iwlength*iwwidth'
 +  iwperim = '2 * (iwlength+iwwidth)'
 +  owarea  = '(iwlength+3u) * (iwwidth+3u)'
 +  owperim = '2 * (iwlength+iwwidth+6u)'
 *
 x1 d g s b lpnfet_rf w=w l=l nf=nf par=par dtemp=dtemp
 +                    as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                    lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                    panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                    panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                    panw9=panw9 panw10=panw10 plnest=plnest
 +                    plorient=plorient pld200=pld200 pwd100=pwd100
 +                    rgatemod=rgatemod ngcon=ngcon gtab=gtab
 +                    rbodymod=rbodymod ring=ring
 +                    rf_rsub=rf_rsub cwire=cwire
 *
 x2   b  tw diodepwpi area=iwarea perim=iwperim dtemp=dtemp t3well=t3well
 x3   sx tw diodepisx area=owarea perim=owperim dtemp=dtemp t3well=t3well
 x4   sx tw diodenwx  area=0      perim=owperim dtemp=dtemp t3well=t3well
 *
 .ends lpnfettw_rf
 .include './lppfet.inc'
 * path, component, release: cmos8base/rel/hspice/models/lppfet.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.8 09/07/28 16:59:38
 *
 *>  ibm cmrf8sf/bicmos8wl  lppfet  1.5v lp pfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) lppfet l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.12u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 0    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 1    <- gate connection switch (1->single-ended,
 *                                                       2->double-ended)
 *          + rbodymod = 0    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +  rf_rsub = 1    <- body resistance multiplier
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---
 *            gate     | |     (bsim4.4     )    bulk
 *              o------| |-----(internal    )-----o
 *                     | |     (rsub network)
 *                     | |---
 *                          |
 *                          |
 *                          |
 *                          o
 *                        source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2009 ibm corporation
 *
 ***************************************************************************
 *
 .subckt lppfet d g s b w=1.0u l=0.12u nf=1 par=1 dtemp=0
 +                      as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                      lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                      panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                      panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                      plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                      rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1
 +                      rbps=100 rbpd=100 rbsb=1e9 rbpb=50 rbdb=1e9
 .param
 *
 * if monte carlo and "pl*" instance parameter = zero, use values from skew/process file
 +   a_plnest     = limit(-0.5,0.5)
 +   sel_plnest   = '((plnest == 1) || ((a_plnest*plnest) == 1))'
 +   a_plorient   = limit(-0.5,0.5)
 +   sel_plorient = '((plorient == 1) || ((a_plorient*plorient) == 1))'
 +   a_pld200     = limit(-0.5,0.5)
 +   sel_pld200   = '((pld200 == 1) || ((a_pld200*pld200) == 1))'
 +   a_pwd100     = limit(-0.5,0.5)
 +   sel_pwd100   = '((pwd100 == 1) || ((a_pwd100*pwd100) == 1))'
 *
 * calculate aclv/acwv and final lint/wint params
 +   aclv_ni_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_nest == 2))/aclv_factor + cnr_lpp*(1-mc_fet_mm_f)*(pc_nest != 2))'
 +   aclv_or_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_orient == 2))/aclv_factor + cnr_lpp*(1-mc_fet_mm_f)*(pc_orient != 2))'
 +   aclv_dist_sws = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_dist == 2))/aclv_factor + cnr_lpp*(1-mc_fet_mm_f)*(pc_dist != 2))'
 +   aclv_ni       = '((fet_aclv_nest*sel_plnest) + (fet_aclv_iso*(1-sel_plnest)))*aclv_ni_sws'
 +   aclv_or       = '((fet_aclv_v*sel_plorient) + (fet_aclv_h*(1-sel_plorient)))*aclv_or_sws'
 +   aclv_dist     = '((fet_aclv_out*sel_pld200) + (fet_aclv_in*(1-sel_pld200)))*aclv_dist_sws'
 +   aclv_ran      = agauss(cnr_lpp,mc_sw,3)
 *
 +   acwv_dist_sws = '(-mc_sw + ((mc_fet_mm_f != 1) && (rx_dist == 2))/acwv_factor + cnr_lpp*(1-mc_fet_mm_f)*(rx_dist != 2))'
 +   acwv_dist     = '((fet_acwv_out*sel_pwd100) + (fet_acwv_in*(1-sel_pwd100)))*acwv_dist_sws'
 +   acwv_ran      = agauss('-cnr_lpp',mc_sw,3)
 *
 .param
 +   xc_lint_1 = '(aclv_ni*aclv_fet_ni + aclv_or*aclv_fet_or)'
 +   xc_lint_2 = '((aclv_dist*aclv_fet_dist) + (aclv_ran + (mc_global == 2))*aclv_fet_ran)'
 +   xx_lint_3 = '(mc_fet_mm_f + (aclv_factor*(1-mc_fet_mm_f)))'
 +   xx_lint_4 = '((mc_global == 2)*(-xlint_lpp) + (mc_global != 2))'
 +   xc_lint_t = '((xc_lint_1 + xc_lint_2)*xx_lint_3)*xx_lint_4'
 *
 +   xc_wint_1 = '((acwv_dist*acwv_fet_dist) + (acwv_ran + (mc_global == 2))*acwv_fet_ran)'
 +   xx_wint_2 = '(mc_fet_mm_f + (acwv_factor*(1-mc_fet_mm_f)))'
 +   xx_wint_3 = '((mc_global == 2)*(xwint_lpp) + (mc_global != 2))'
 +   xc_wint_t = '((xc_wint_1)*xx_wint_2)*xx_wint_3'
 *
 *     final =  nominal      +      acv * dist(-1,1)      +        global * dist(-1,1)
 + lint_lppfet = 'lint_lpp + 1.5*total_aclv_fet*xc_lint_t*fet_geo_mm + ltol_lpp*xlint_lpp'
 + wint_lppfet = 'wint_lpp + 1.5*total_acwv_fet*xc_wint_t*fet_geo_mm + wtol_lpp*xwint_lpp'
 *
 .param
 * switch to turn on or off the sti stress effects
 +  isti = '((gstis==1)&&(lstis==1))||(gstis==2)'
 *
 * switch to turn on or off the nwell proximity effects
 +  inw  = '((gwells==1)&&(lnws==1))||(gwells==2)'
 *
 * nwell proximity effect calculations
 +  proxpre  =  0.015e-06            $ [v-m]
 +  proxlen  = -0.35e-06             $ [m]
 +  proxk1   =  0.375                $ [unitless]
 +  rxwparm1 = -0.28                 $ [unitless]
 +  rxwparm2 =  0.56e-06             $ [unitless]
 +  rxwparm3 =  0.0e-6               $ [m]
 +  nw1b1   = 'panw1 /(band1 -proxlen)'
 +  nw2b2   = 'panw2 /(band2 -proxlen)'
 +  nw3b3   = 'panw3 /(band3 -proxlen)'
 +  nw4b4   = 'panw4 /(band4 -proxlen)'
 +  nw5b5   = 'panw5 /(band5 -proxlen)'
 +  nw6b6   = 'panw6 /(band6 -proxlen)'
 +  nw7b7   = 'panw7 /(band7 -proxlen)'
 +  nw8b8   = 'panw8 /(band8 -proxlen)'
 +  nw9b9   = 'panw9 /(band9 -proxlen)'
 +  nw10b10 = 'panw10/(band10-proxlen)'
 +  prox_term = 'inw*(proxpre/(l*w))*(nw1b1+nw2b2+nw3b3+nw4b4+nw5b5+nw6b6+nw7b7+nw8b8+nw9b9+nw10b10)'
 +  k1_lpp_base = 0.4644
 +  k1_lpp      = 'k1_lpp_base+proxk1*prox_term'
 *
 * mis-match calculations: include multiplicity (par)
 .param
 +  kvt  =  9.0e-9
 +  kvtl =  3.0e-8
 +  kvtw = -1.0e-7
 +  kmb  =  4.3e-6
 +  kmbl = -3.0e-6
 +  kmbw = -1.0e-7
 +  sigvth  = 'kvt/sqrt((w-kvtw)*par*(l-kvtl))'
 +  sigbeta = 'kmb/sqrt((w-kmbw)*par*(l-kmbl))'
 *
 +  dvth0 = agauss(0,1,3)               $ local mis-match distributions
 +  dbeta = agauss(0,1,3)
 *                                      $ select local vs global vs corner
 +  d_vth0 = 'dvth0*(mc_global != 2) + xlppvth0*(mc_global == 2) - cnr_lpp'
 +  d_beta = 'dbeta*(mc_global != 2) + dlppu0*(mc_global == 2) - cnr_lpp'
 *
 +  mmvth0 = 'sigvth * d_vth0 * fet_dop_mm'    $ vth0 mis-match
 +  mmbeta = 'sigbeta * d_beta * fet_dop_mm'   $ beta mis-match
 *
 +  pvt_var = 'mmvth0 - prox_term'      $ local vth0 variation
 *
 .param
 * flicker noise calculations: statistics are function of w and l and par
 +  noideva = '10u * 0.12u * 10'        $ device area for extracted variation
 +  noistd  = 0.886                     $ worst case variation value
 *
 +  noi_scale = 'noistd-min(log(sqrt(w*l*par/noideva)),0)'   $ area scaling
 +  noiamult  = 'exp(dnoi_lpp*noi_scale)'                $ gate bias scaliing
 +  noibmult  = 'exp(dnoi_lpp*noi_scale/1.5)'
 +  noicmult  = 'exp(dnoi_lpp*noi_scale/2.25)'
 *
 * thermal noise scaling equation
 +  tnoitanha = 0.5
 +  tnoitanhb = 8.02e6
 +  tnoitanhc = 3.0e13
 +  ntnoi_lppfet = '1.58/tanh(tnoitanha + tnoitanhb*l + tnoitanhc*l*l)'
 *
 * gate resistance scaling equations
 +  rg11 = '1e6*l + 12'
 +  rg12 = '60e6*l - 4'
 +  xrg1 = 'max(0.1,(rg11*rg12/(rg11+rg12)))'
 +  xrg2 = 'max(0.0,((1.68e-6/l - 1.3)*(52e-6/w + 8)/12))'
 *
 m0 d g s b  lppch  w=w l=l nf=nf dtemp=dtemp
 +                  as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                  sa='isti*sa' sb='isti*sb' sd='isti*sd'
 +                  rgatemod=rgatemod rbodymod=rbodymod
 *
 ***************************************************************************
 * lp pfet bsim4v4 model
 ***************************************************************************
 .model lppch  pmos  (                              level   = 54
 +version = 4.4            binunit = 1              paramchk= 1
 +mobmod  = 0              rdsmod  = 1              permod  = 1
 +epsrox  = 3.9            toxe    = toxe_lpp       toxp    = toxp_lpp
 +toxm    = 3.12e-9        xj      = 1.5e-07        ndep    = 4.5e+17
 +ngate   = 1.2e+20        nsd     = 1e+20
 +rsh     = rsh_lpp        rshg    = rsh_lpp
 +vth0 = 'vth0_lpp+pvt_var'                         vfb     = -1
 +wvth0   = 0.022          pvth0   = pvth0_lpp
 +k1      = k1_lpp         k2      = -0.05          k3      = 27.36
 +k3b     = 48.65          w0      = 3.388e-06      lpe0    = 4.7e-8
 +lpeb    = 5.383e-08      dvt0    = 8.266e-09      dvt1    = 0.5129
 +dvt2    = -0.0001678     dvtp0   = 1e-09          dvtp1   = 0
 +dvt0w   = 1.315e-09      dvt1w   = 2.208e+04      dvt2w   = -0.032
 +u0    = 'u0_lpp+mmbeta'  ua      = 1.796e-09      ub      = 3.932e-19
 +lua     = -7.55e-11      wua     = -7.211e-11
 +uc      = 0              vsat    = 2.259e5         a0      = 2.665e-15
 +ags     = -0.00138       b0      = 1.3e-05        b1      = 1.858e-05
 +keta    = 0.001312       a1      = 0              a2      = 1
 +wint    = 3e-08          lint    = -4.2e-08       dwg     = 0
 +dwb     = 8.424e-11      voff    = -0.1562        voffl   = -1.575e-09
 +minv    = -0.2565        nfactor = 1.1            eta0    = 0.009
 +etab    = -0.01659       dsub    = 0.2358         cit     = 0.001358
 +cdsc    = 0.0007852      cdscb   = 0.0008325      cdscd   = 0
 +pclm    = 0.8658         pdiblc1 = 3.9e-07        pdiblc2 = 0.01062
 +pdiblcb = 0.09527        drout   = 0.07505        pscbe1  = 4.24e+08
 +pscbe2  = 1e-05          pvag    = 2.22e-15       delta   = 0.01511
 +fprout  = 0.9267         pdits   = 0.1321         pditsl  = 1.074e+05
 +pditsd  = 0.8218
 +rdw     = rdsw_lpp       rdwmin  = 3.099          rsw     = rdsw_lpp
 +rswmin  = 3.038          prwg    = 0.004431       prwb    = 0.1
 +alpha0  = 1e-12          alpha1  = 0.00355        beta0   = 10
 +wr      = 1              pnfactor = -0.015        pu0     = 0.37
 ***************************************************************************
 * jds/vt temperature parameters
 ***************************************************************************
 +tnom    = 25             ute     = -0.7622
 +kt1     = -0.1959        kt1l    = -1.928e-09     kt2     = -0.0937
 +ua1     = 1.834e-09      ub1     = -3.083e-18     uc1     = 0
 +at      = 3.137e+04      prt     = 55.98
 +tempmod = 0
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 +igcmod  = 1              igbmod  = 1              agidl   = 5.9e-09
 +bgidl   = 1.738e+09      cgidl   = 1              egidl   = 0.55
 +aigbacc = 0.01153        bigbacc = 0.00131        cigbacc = -1e-04
 +nigbacc = 2.355          aigbinv = 0.00809        bigbinv = 0.0007038
 +cigbinv = 0.01089        eigbinv = 1.48           nigbinv = 3.162
 +aigc    = 0.006931       bigc    = 0.0001684      cigc    = -0.016
 +aigsd   = 0.006931       bigsd   = 0.000405       cigsd   = 0.000898
 +dlcig   = 2.14e-09       nigc    = 2.781          poxedge = 1
 +pigcd   = 3.36           ntox    = 1              toxref  = toxe_lpp
 ***************************************************************************
 * sti stress model parameters
 ***************************************************************************
 +saref   = 3e-06          sbref   = 3e-06          wlod    = 0
 +ku0     = 1.7e-07        kvsat   = -1             tku0    = 0
 +lku0    = 1.9e-07        wku0    = 2.8e-06        llodku0 = 1
 +wlodku0 = 1              kvth0   = 0              lkvth0  = 0
 +wkvth0  = -1.84e-07      pkvth0  = 0              llodvth = 1
 +wlodvth = 1              stk2    = 4e-09          lodk2   = 1
 +steta0  = 0              lodeta0 = 1
 ***************************************************************************
 * source/drain to body junction diode parameters
 ***************************************************************************
 +diomod  = 1             ijthdfwd= 0.1            ijthsfwd= 0.1
 +jss     = js_lpp        jsd     = js_lpp         jsws    = jsw_lpp
 +jswd    = jsw_lpp       jswgs   = jsw_lpp        jswgd   = jsw_lpp
 +cjs     = cj_lpp        cjd     = cj_lpp         cjsws   = cjsw_lpp
 +cjswd   = cjsw_lpp      cjswgs  = cjsg_lpp       cjswgd  = cjsg_lpp
 +mjs     = mj_lpp        mjd     = mj_lpp         mjsws   = mjsw_lpp
 +mjswd   = mjsw_lpp      mjswgs  = mjsg_lpp       mjswgd  = mjsg_lpp
 +pbs     = pb_lpp        pbd     = pb_lpp         pbsws   = pbsw_lpp
 +pbswd   = pbsw_lpp      pbswgs  = pbsg_lpp       pbswgd  = pbsg_lpp
 +njs     = n_lpp         njd     = n_lpp          xjbvd   = 1
 +bvd     = bd_p          xjbvs   = 1              bvs     = bd_p
 ***************************************************************************
 * junction diode temperature parameters
 ***************************************************************************
 +tcj     = cta_p         tcjsw   = ctp_p          tcjswg  = ctp_p
 +tpb     = pta_p         tpbsw   = ptp_p          tpbswg  = ptp_p
 +xtis    = 3             xtid    = 3
 ***************************************************************************
 * capacitance-voltage (cv) parameters
 ***************************************************************************
 +capmod  = 2             xpart   = 0              dlc     = 14n
 +dwc     = 0             cgdo    = cgdo_lpp       cgso    = cgso_lpp
 +cgsl    = cgsl_lpp      cgdl    = cgdl_lpp       ckappas = 5.902
 +ckappad = 5.902         cf      = 0              cgbo    = 1.706e-11
 +acde    = 0.4           moin    = 8.97           noff    = 2.27
 +voffcv  = -0.0969
 ***************************************************************************
 * layout dependence parameters
 ***************************************************************************
 +geomod  = '(1 - int((nf+1)/2) + int(nf/2))'       rgeomod = 1
 +xgl     = lwbpc          xgw     = 0.43e-6        xl    = '-2*lint_lppfet'
 +xw  = '-2*wint_lppfet'   dmcg    = 0.23e-6        dmci    = 0.32e-6
 +dwj     = 0              ngcon   = ngcon
 +ww      = -2.5e-16       wwn     = 1.2            wwc     = 0
 +ll      = 1.45e-16       lln     = 1.2            llc     = 0
 +lw      = -4e-15         lwn     = 1              lwc     = 0
 ***************************************************************************
 * rf model parameters
 ***************************************************************************
 +rgatemod= rgatemod       trnqsmod= 0              rbodymod= rbodymod
 +acnqsmod= 0              xrcrg1  = xrg1           xrcrg2  = xrg2
 +rbps    = 'rbps*rf_rsub' rbpd    = 'rbpd*rf_rsub'
 +rbsb    = 'rbsb*rf_rsub' rbpb    = 'rbpb*rf_rsub' rbdb    = 'rbdb*rf_rsub'
 ***************************************************************************
 * flicker noise parameters
 ***************************************************************************
 +fnoimod = 1           noia   = '3e42*noiamult'   noib = '1.6e27*noibmult'
 +noic = '2.1e8*noicmult'  em      = 4.10e7         af      = 1
 +ef      = 1.15           kf      = 0
 ***************************************************************************
 * channel thermal noise parameters
 ***************************************************************************
 +tnoimod = 0              ntnoi   = ntnoi_lppfet   )
 *
 .ends lppfet
 .include './lppfet_rf.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/lppfet_rf.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.4 06/12/11 17:00:05
 *
 *>  ibm cmrf8sf  lppfet_rf  1.5v lp pfet rf subcircuit
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) lppfet_rf l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.12u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.15um of nw edge
 *          +    panw2 = 0    <- active area within 0.15um to 0.325um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.2um to 1.7um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 3    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 2    <- extrinsic gate connection switch (1->single-ended,
 *                                                                 2->double-ended)
 *          +     gtab = 1    <- m1 gate ring tabs flag (1->tabs present,
 *                                                       0->tabs absent)
 *          + rbodymod = 1    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +     ring = 2    <- substrate contact type for rf pcell 
 *          +  rf_rsub = 1    <- body resistance multiplier
 *          +    cwire = 1    <- wiring capacitance multiplier
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                                ||   drain
 *                            o---||-----o------------------o
 *                            |   ||     |                  |
 *                            |  cwgd    |                  |
 *                            |          |                 ---
 *                            |          |                 ---cwds
 *                            |          |                  |
 *                            |     | |---                  |
 *       gate                 | g1  | |     (bsim4.4     )  | bulk
 *         o----/\/\/\--------o-----| |-----(internal    )--)--o
 *                rg          |     | |     (rsub network)  |
 *                            |     | |---                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |  cwgs    |                  |
 *                            |   ||     |                  |
 *                            o---||-----o------------------o
 *                                ||   source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2006 ibm corporation
 *
 ***************************************************************************
 *
 .subckt lppfet_rf d g s b w=1.0u l=0.12u nf=1 par=1 dtemp=0
 +                         as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                         lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                         panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                         panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                         plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                         rgatemod=3 ngcon=2 gtab=1 rbodymod=1 ring=2
 +                         rf_rsub=1 cwire=1
 *
 .param
 +  legacy = '(ring==99)'                        $ switch for legacy pcell
 +  nfo    = '(int((nf+1)/2) - int(nf/2))'       $ switch for odd,even fingers
 *
 * extrinsic gate resistance calculations (function of w, l, and nf)
 +  wum    = '(w/nf)*1e6'
 +  lum    = 'l*1e6'
 *
 +  rlen_a = 'lum*(1 + ((nf - 3)/2)) + diff_thn*1e6*((nf - 1)/2)'
 +  rlen_b = '0.5*lum + (diff_thn*1e6 + lum)*((nf/2) - 1)'
 +  rlen   = 'nfo*rlen_a + (1-nfo)*rlen_b'
 *
 +  ra_term1 = '0.81*legacy + 0.91*(1-legacy)'
 +  ra_len   = '(ra_term1 + 0.5*lum + (nf==2)*0.5*lum + (nf>2)*(rlen/3))/(0.4)'
 +  ra_wid   = '(2.5*wum + 1.65)*legacy + (1.25*wum + 0.875)*(1-legacy)'
 +  ra       = 'm1rsi * (ra_len + ra_wid)'
 +  rb       = 'm1rsi * (4.3*legacy + 3.3*(1-legacy))'
 +  rcont    = 'cars * (1/nf)'
 *
 +  rgate  = '0.5*(rb*gtab + (1/ngcon)*(ra+0.5*rcont))'
 *
 .param
 * substrate resistance calculations (function of w, l, and nf)
 +  rhorz  = 'max(50,((27e6*l + 272)*(1.335e-3/w + 131)/190))'
 +  rvert  = 'max(150,((2e-6/l + 185)*(9e-3/w - 181)/270))'
 *
 * gate capacitance calculation (function of w, l, and nf)
 +  cg1   = '0.2e6*l + 9'
 +  cg2   = '18e6*l'
 +  cgate = '((cg1*cg2/(cg1+cg2)) + 0.08e6*w - 1.2)*0.5e-15'
 *
 * drain-source capacitance calculation (function of w, l, and nf)
 +  cdsw  = '1.721e5*w + 0.198'
 +  cdsl  = '(3.65e-7/l + 0.1058)*0.5e-15'
 *
 x1 d g1 s b lppfet w=w l=l nf=nf par=par dtemp=dtemp
 +                  as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                  lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                  panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                  panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                  panw9=panw9 panw10=panw10
 +                  plnest=plnest plorient=plorient
 +                  pld200=pld200 pwd100=pwd100
 +                  rgatemod=rgatemod ngcon=2
 +                  rbodymod=rbodymod rf_rsub=rf_rsub
 +                  rbps=rhorz rbpd=rhorz
 +                  rbsb=rvert rbpb=rvert rbdb=rvert
 *
 rg     g   g1  r=rgate
 cwgd   g1  d   c='1e-18 + cgate*cwire'
 cwgs   g1  s   c='1e-18 + cgate*cwire'
 cwds   d   s   c='1e-18 + (cdsw*cdsl)*cwire'
 *
 .ends lppfet_rf
 .include './lvtnfet.inc'
 * path, component, release: cmos8base/rel/hspice/models/lvtnfet.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.2 09/07/28 16:59:45
 *
 *>  ibm cmrf8sf/bicmos8wl  lvtnfet  1.5v lvt nfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) lvtnfet l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.12u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 0    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 1    <- gate connection switch (1->single-ended,
 *                                                       2->double-ended)
 *          + rbodymod = 0    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +  rf_rsub = 1    <- body resistance multiplier
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---
 *            gate     | |     (bsim4.4     )    bulk
 *              o------| |-----(internal    )-----o
 *                     | |     (rsub network)
 *                     | |---
 *                          |
 *                          |
 *                          |
 *                          o
 *                        source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2009 ibm corporation
 *
 ***************************************************************************
 *
 .subckt lvtnfet d g s b w=1.0u l=0.12u nf=1 par=1 dtemp=0
 +                       as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                       lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                       panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                       panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                       plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                       rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1
 +                       rbps=100 rbpd=100 rbsb=1e9 rbpb=50 rbdb=1e9
 .param
 *
 * if monte carlo and "pl*" instance parameter = zero, use values from skew/process file
 +   a_plnest     = limit(-0.5,0.5)
 +   sel_plnest   = '((plnest == 1) || ((a_plnest*plnest) == 1))'
 +   a_plorient   = limit(-0.5,0.5)
 +   sel_plorient = '((plorient == 1) || ((a_plorient*plorient) == 1))'
 +   a_pld200     = limit(-0.5,0.5)
 +   sel_pld200   = '((pld200 == 1) || ((a_pld200*pld200) == 1))'
 +   a_pwd100     = limit(-0.5,0.5)
 +   sel_pwd100   = '((pwd100 == 1) || ((a_pwd100*pwd100) == 1))'
 *
 * calculate aclv/acwv and final lint/wint params
 +   aclv_ni_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_nest == 2))/aclv_factor + cnr_lvn*(1-mc_fet_mm_f)*(pc_nest != 2))'
 +   aclv_or_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_orient == 2))/aclv_factor + cnr_lvn*(1-mc_fet_mm_f)*(pc_orient != 2))'
 +   aclv_dist_sws = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_dist == 2))/aclv_factor + cnr_lvn*(1-mc_fet_mm_f)*(pc_dist != 2))'
 +   aclv_ni       = '((fet_aclv_nest*sel_plnest) + (fet_aclv_iso*(1-sel_plnest)))*aclv_ni_sws'
 +   aclv_or       = '((fet_aclv_v*sel_plorient) + (fet_aclv_h*(1-sel_plorient)))*aclv_or_sws'
 +   aclv_dist     = '((fet_aclv_out*sel_pld200) + (fet_aclv_in*(1-sel_pld200)))*aclv_dist_sws'
 +   aclv_ran      = agauss(cnr_lvn,mc_sw,3)
 *
 +   acwv_dist_sws = '(-mc_sw + ((mc_fet_mm_f != 1) && (rx_dist == 2))/acwv_factor + cnr_lvn*(1-mc_fet_mm_f)*(rx_dist != 2))'
 +   acwv_dist     = '((fet_acwv_out*sel_pwd100) + (fet_acwv_in*(1-sel_pwd100)))*acwv_dist_sws'
 +   acwv_ran      = agauss('-cnr_lvn',mc_sw,3)
 *
 .param
 +   xc_lint_1 = '(aclv_ni*aclv_fet_ni + aclv_or*aclv_fet_or)'
 +   xc_lint_2 = '((aclv_dist*aclv_fet_dist) + (aclv_ran + (mc_global == 2))*aclv_fet_ran)'
 +   xx_lint_3 = '(mc_fet_mm_f + (aclv_factor*(1-mc_fet_mm_f)))'
 +   xx_lint_4 = '((mc_global == 2)*(-xlint_lvn) + (mc_global != 2))'
 +   xc_lint_t = '((xc_lint_1 + xc_lint_2)*xx_lint_3)*xx_lint_4'
 *
 +   xc_wint_1 = '((acwv_dist*acwv_fet_dist) + (acwv_ran + (mc_global == 2))*acwv_fet_ran)'
 +   xx_wint_2 = '(mc_fet_mm_f + (acwv_factor*(1-mc_fet_mm_f)))'
 +   xx_wint_3 = '((mc_global == 2)*(xwint_lvn) + (mc_global != 2))'
 +   xc_wint_t = '((xc_wint_1)*xx_wint_2)*xx_wint_3'
 *
 *     final =  nominal      +      acv * dist(-1,1)      +        global * dist(-1,1)
 + lint_lvtnfet = 'lint_lvn + 1.5*total_aclv_fet*xc_lint_t*fet_geo_mm + ltol_lvn*xlint_lvn'
 + wint_lvtnfet = 'wint_lvn + 1.5*total_acwv_fet*xc_wint_t*fet_geo_mm + wtol_lvn*xwint_lvn'
 *
 .param
 * switch to turn on or off the sti stress effects
 +  isti = '((gstis==1)&&(lstis==1))||(gstis==2)'
 *
 * switch to turn on or off the nwell proximity effects
 +  inw  = '((gwells==1)&&(lnws==1))||(gwells==2)'
 *
 * nwell proximity effect calculations
 +  proxpre  =  0.023e-06            $ [v-m]
 +  proxlen  = -0.35e-06             $ [m]
 +  proxk1   =  0.375                $ [unitless]
 +  rxwparm1 = -0.28                 $ [unitless]
 +  rxwparm2 =  0.56e-06             $ [unitless]
 +  rxwparm3 =  0.0e-6               $ [m]
 +  nw1b1   = 'panw1 /(band1 -proxlen)'
 +  nw2b2   = 'panw2 /(band2 -proxlen)'
 +  nw3b3   = 'panw3 /(band3 -proxlen)'
 +  nw4b4   = 'panw4 /(band4 -proxlen)'
 +  nw5b5   = 'panw5 /(band5 -proxlen)'
 +  nw6b6   = 'panw6 /(band6 -proxlen)'
 +  nw7b7   = 'panw7 /(band7 -proxlen)'
 +  nw8b8   = 'panw8 /(band8 -proxlen)'
 +  nw9b9   = 'panw9 /(band9 -proxlen)'
 +  nw10b10 = 'panw10/(band10-proxlen)'
 +  prox_term = 'inw*(proxpre/(l*w))*(nw1b1+nw2b2+nw3b3+nw4b4+nw5b5+nw6b6+nw7b7+nw8b8+nw9b9+nw10b10)'
 +  k1_lvn_base = 0.325
 +  k1_lvn      = 'k1_lvn_base+proxk1*prox_term'
 *
 * mis-match calculations: include multiplicity (par)
 .param
 +  kvt  =  1.3e-8
 +  kvtl =  0
 +  kvtw = -2.0e-7
 +  kmb  =  6.0e-6
 +  kmbl =  9.0e-8
 +  kmbw = -5.0e-7
 +  sigvth  = 'kvt/sqrt((w-kvtw)*par*(l-kvtl))'
 +  sigbeta = 'kmb/sqrt((w-kmbw)*par*(l-kmbl))'
 *
 +  dvth0 = agauss(0,1,3)               $ local mis-match distributions
 +  dbeta = agauss(0,1,3)
 *                                      $ select local vs global vs corner
 +  d_vth0 = 'dvth0*(mc_global != 2) + xlvnvth0*(mc_global == 2) - cnr_lvn'
 +  d_beta = 'dbeta*(mc_global != 2) + dlvnu0*(mc_global == 2) - cnr_lvn'
 *
 +  mmvth0 = 'sigvth * d_vth0 * fet_dop_mm'    $ vth0 mis-match
 +  mmbeta = 'sigbeta * d_beta * fet_dop_mm'   $ beta mis-match
 *
 +  pvt_var = 'mmvth0 + prox_term'      $ local vth0 variation
 *
 .param
 * flicker noise calculations: statistics are function of w and l and par
 +  noideva = '10u * 0.12u * 10'        $ device area for extracted variation
 +  noistd  = 2.066                     $ worst case variation value
 *
 +  noi_scale = 'noistd-min(log(sqrt(w*l*par/noideva)),0)'   $ area scaling
 +  noiamult  = 'exp(dnoi_lvn*noi_scale)'                $ gate bias scaliing
 +  noibmult  = 'exp(dnoi_lvn*noi_scale/1.5521)'
 +  noicmult  = 'exp(dnoi_lvn*noi_scale/2.4091)'
 *
 * thermal noise scaling equation
 +  tnoitanha = -0.2
 +  tnoitanhb = 6.85e6
 +  tnoitanhc = 4.0e12
 +  ntnoi_lvtnfet = '1.18/tanh(tnoitanha + tnoitanhb*l + tnoitanhc*l*l)'
 *
 * gate resistance scaling equations
 +  rg11 = '1e5*l + 15'
 +  rg12 = '1.2e7*l - 1.237'
 +  xrg1 = 'max(0.1,(rg11*rg12/(rg11+rg12)))'
 +  xrg2 = 'max(0.0,((7.217e-7/l - 0.27)*(1.614e5*w + 2.5)/5.747))'
 *
 m0 d g s b  lvtnch  w=w l=l nf=nf dtemp=dtemp
 +                   as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                   sa='isti*sa' sb='isti*sb' sd='isti*sd'
 +                   rgatemod=rgatemod rbodymod=rbodymod
 *
 ***************************************************************************
 * lvt nfet bsim4v4 model
 ***************************************************************************
 .model lvtnch  nmos  (    level   = 54             permod  = 1
 +version = 4.4            binunit = 1              paramchk= 1
 +mobmod  = 0              rdsmod  = 1              epsrox  = 3.9
 +toxe    = toxe_lvn       toxp    = toxp_lvn       toxm    = 3.1196e-9
 +xj      = 6e-8           ndep    = 4.5e17         ngate   = 1.75e20
 +nsd     = 3e20           rsh     = rsh_lvn        rshg    = rsh_lvn
 +vth0    = 'vth0_lvn+pvt_var'                      vfb     = -1
 +phin    = 1.577e-3       pvth0   = pvth0_lvn
 +k1      = k1_lvn         k2      = -0.0272        k3      = 4.73
 +k3b     = -5.99291       w0      = 5.6e-6         lpe0    = 2.674e-7
 +lpeb    = 2.93725e-8     dvt0    = 3              dvt1    = 0.961973
 +dvt2    = -0.0443306     dvtp0   = 2.93129e-8     dvtp1   = 1.96324e-8
 +dvt0w   = 5e-3           dvt1w   = 8.22e5         dvt2w   = 0
 +u0    = 'u0_lvn+mmbeta'  ua      = 1.75671e-10    ub      = 2.1056e-18
 +uc      = 2.52e-10       eu      = 1.67           lu0     = 6
 +pu0     = 0.72           vsat    = 9.533e4        a0      = 1.34
 +ags     = 1.2            b0      = 2.16786e-8     b1      = 0
 +keta    = -0.0786938     a1      = 0              a2      = 1
 +wint    = 0              lint    = 0              dwg     = -2e-8
 +dwb     = 0              voff    = -0.092         voffl   = -5.6e-9
 +minv    = -0.08          nfactor = 0.9            eta0    = 0.2737
 +etab    = 0              dsub    = 0.546086       cit     = 1.5e-3
 +cdsc    = 4.3e-4         cdscb   = -1e-3          cdscd   = 5.4e-4
 +pclm    = 0.410186       pdiblc1 = 0.299673       pdiblc2 = 0.019618
 +pdiblcb = -0.5887        drout   = 0.594674       pscbe1  = 8e8
 +pscbe2  = 1e-5           pvag    = 0.60358        delta   = 0.01
 +fprout  = 0              pdits   = 0.197624       pditsl  = 0
 +pditsd  = 0.818812
 +rdswmin = 0              rdw     = rdsw_lvn       rdwmin  = 0
 +rsw     = rdsw_lvn       rswmin  = 0              prwg    = 0
 +prwb    = 0              wr      = 1              alpha0  = 1.5e-8
 +alpha1  = 0.207          beta0   = 11             wu0     = -13.6
 +wvsat   = -1.4e3         lvsat   = -700           pvsat   = -100
 +lminv   = 0.04           lnfactor= -0.06          lub     = -1.7e-20
 +lk1     = 4e-4           lalpha0 = 3.5085e-9      lalpha1 = -0.072
 +lbeta0  = -0.62          lags    = -0.1           lvth0   = 3.4e-3
 +pminv   = -8.7e-3
 ***************************************************************************
 * jds/vt temperature parameters
 ***************************************************************************
 +tempmod = 0              tnom    = 25             ute     = -1.93
 +kt1     = -0.31          kt1l    = 4e-9           kt2     = 0
 +ub1     = -8e-19         uc1     = -8e-11         ua1     = 0
 +luc     = -3.1e-11       wua     = 1.902e-11      wub     = 2.829e-19
 +at      = 3.8e4
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 +igcmod  = 1              igbmod  = 1              agidl   = 1.30226e-6
 +bgidl   = 3.00995e9      cgidl   = 1.09817        egidl   = 0.2592
 +aigbacc = 0.01083        bigbacc = 1.981e-3       cigbacc = 0.066
 +nigbacc = 1.085          aigbinv = 0.0101         bigbinv = 1.149e-3
 +cigbinv = 0.033          eigbinv = 1.30           nigbinv = 0.997
 +aigc    = 0.01128        bigc    = 1.3074e-3      cigc    = 0.0195922
 +aigsd   = 9.12e-3        bigsd   = 8.41e-4        cigsd   = 0.0705029
 +dlcig   = 4.36516e-9     nigc    = 0.419          poxedge = 1
 +pigcd   = 2.7            ntox    = 1.035          laigbacc= 5.6e-5
 +lbigbacc= -4.69e-5       lcigbacc= -3.6e-3        laigbinv= -2.5e-5
 +lbigbinv= -2.8e-4        lcigbinv= -7e-4          leigbinv= -0.0196
 +laigc   = -2.311e-5      lbigc   = -1.54e-5       lcigc   = -2.8e-4
 +laigsd  = 1.26e-4        lbigsd  = -1.12e-5       lcigsd  = -4.62e-3
 +lpigcd  = 0.13           toxref  = 'toxe_lvn-0.03e-9'
 ***************************************************************************
 * sti stress model parameters
 ***************************************************************************
 +saref   = 3e-6           sbref   = 3e-6           wlod    = 0
 +ku0     = -4.2e-8        kvsat   = 0.14           tku0    = 0
 +lku0    = 0              wku0    = 0              llodku0 = 0
 +wlodku0 = 0              kvth0   = 2e-9           lkvth0  = 0
 +wkvth0  = 0              pkvth0  = 0              llodvth = 0
 +wlodvth = 0              stk2    = 1e-8           lodk2   = 1
 +steta0  = 0              lodeta0 = 1
 ***************************************************************************
 * source/drain to body junction diode parameters
 ***************************************************************************
 +diomod  = 1             ijthdfwd= 0.1            ijthsfwd= 0.1
 +jss     = js_lvn        jsd     = js_lvn         jsws    = jsw_lvn
 +jswd    = jsw_lvn       jswgs   = jsw_lvn        jswgd   = jsw_lvn
 +cjs     = cj_lvn        cjd     = cj_lvn         cjsws   = cjsw_lvn
 +cjswd   = cjsw_lvn      cjswgs  = cjsg_lvn       cjswgd  = cjsg_lvn
 +mjs     = mj_lvn        mjd     = mj_lvn         mjsws   = mjsw_lvn
 +mjswd   = mjsw_lvn      mjswgs  = mjsg_lvn       mjswgd  = mjsg_lvn
 +pbs     = pb_lvn        pbd     = pb_lvn         pbsws   = pbsw_lvn
 +pbswd   = pbsw_lvn      pbswgs  = pbsg_lvn       pbswgd  = pbsg_lvn
 +njs     = n_lvn         njd     = n_lvn          xjbvd   = 1
 +bvd     = bd_n          xjbvs   = 1              bvs     = bd_n
 ***************************************************************************
 * junction diode temperature parameters
 ***************************************************************************
 +tcj     = cta_n         tcjsw   = ctp_n          tcjswg  = ctp_n
 +tpb     = pta_n         tpbsw   = ptp_n          tpbswg  = ptp_n
 +xtis    = 3             xtid    = 3
 ***************************************************************************
 * capacitance-voltage (cv) parameters
 ***************************************************************************
 +capmod  = 2             xpart   = 0              dlc     = 20n
 +dwc     = 0             cgdo    = cgdo_lvn       cgso    = cgso_lvn
 +cgsl    = cgsl_lvn      cgdl    = cgdl_lvn       ckappas = 8.5
 +ckappad = 8.5           cf      = 0              cgbo    = 1.706e-11
 +acde    = 0.36          moin    = 5              noff    = 3
 +voffcv  = -0.06951
 ***************************************************************************
 * layout dependence parameters
 ***************************************************************************
 +geomod  = '(1 - int((nf+1)/2) + int(nf/2))'       rgeomod = 1
 +xgl     = lwbpc          xgw     = 0.43e-6        xl    = '-2*lint_lvtnfet'
 +xw  = '-2*wint_lvtnfet'  dmcg    = 0.23e-6        dmci    = 0.32e-6
 +dwj     = 0              ngcon   = ngcon
 ***************************************************************************
 * rf model parameters
 ***************************************************************************
 +rgatemod= rgatemod       trnqsmod= 0              rbodymod= rbodymod
 +acnqsmod= 0              xrcrg1  = xrg1           xrcrg2  = xrg2
 +rbps    = 'rbps*rf_rsub' rbpd    = 'rbpd*rf_rsub'
 +rbsb    = 'rbsb*rf_rsub' rbpb    = 'rbpb*rf_rsub' rbdb    = 'rbdb*rf_rsub'
 ***************************************************************************
 * flicker noise parameters
 ***************************************************************************
 +fnoimod = 1           noia = '2.75e41*noiamult'   noib = '5e19*noibmult'
 +noic = '1.5e8*noicmult'  em      = 4.10e7         af      = 1
 +ef      = 0.87           kf      = 0
 ***************************************************************************
 * channel thermal noise parameters
 ***************************************************************************
 +tnoimod = 0              ntnoi   = ntnoi_lvtnfet  )
 *
 .ends lvtnfet
 .include './lvtnfet_rf.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/lvtnfet_rf.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.4 06/12/11 17:00:07
 *
 *>  ibm cmrf8sf  lvtnfet_rf  1.5v lvt nfet rf subcircuit
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) lvtnfet_rf l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.12u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.15um of nw edge
 *          +    panw2 = 0    <- active area within 0.15um to 0.325um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.2um to 1.7um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 3    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 2    <- extrinsic gate connection switch (1->single-ended,
 *                                                                 2->double-ended)
 *          +     gtab = 1    <- m1 gate ring tabs flag (1->tabs present,
 *                                                       0->tabs absent)
 *          + rbodymod = 1    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +     ring = 2    <- substrate contact type for rf pcell 
 *          +  rf_rsub = 1    <- body resistance multiplier
 *          +    cwire = 1    <- wiring capacitance multiplier
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                                ||   drain
 *                            o---||-----o------------------o
 *                            |   ||     |                  |
 *                            |  cwgd    |                  |
 *                            |          |                 ---
 *                            |          |                 ---cwds
 *                            |          |                  |
 *                            |     | |---                  |
 *       gate                 | g1  | |     (bsim4.4     )  | bulk
 *         o----/\/\/\--------o-----| |-----(internal    )--)--o
 *                rg          |     | |     (rsub network)  |
 *                            |     | |---                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |  cwgs    |                  |
 *                            |   ||     |                  |
 *                            o---||-----o------------------o
 *                                ||   source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2006 ibm corporation
 *
 ***************************************************************************
 *
 .subckt lvtnfet_rf d g s b w=1.0u l=0.12u nf=1 par=1 dtemp=0
 +                          as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                          lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                          panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                          panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                          plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                          rgatemod=3 ngcon=2 gtab=1 rbodymod=1 ring=2
 +                          rf_rsub=1 cwire=1
 *
 .param
 +  legacy = '(ring==99)'                        $ switch for legacy pcell
 +  nfo    = '(int((nf+1)/2) - int(nf/2))'       $ switch for odd,even fingers
 *
 * extrinsic gate resistance calculations (function of w, l, and nf)
 +  wum    = '(w/nf)*1e6'
 +  lum    = 'l*1e6'
 *
 +  rlen_a = 'lum*(1 + ((nf - 3)/2)) + diff_thn*1e6*((nf - 1)/2)'
 +  rlen_b = '0.5*lum + (diff_thn*1e6 + lum)*((nf/2) - 1)'
 +  rlen   = 'nfo*rlen_a + (1-nfo)*rlen_b'
 *
 +  ra_term1 = '0.81*legacy + 0.91*(1-legacy)'
 +  ra_len   = '(ra_term1 + 0.5*lum + (nf==2)*0.5*lum + (nf>2)*(rlen/3))/(0.4)'
 +  ra_wid   = '(2.5*wum + 1.65)*legacy + (1.25*wum + 0.875)*(1-legacy)'
 +  ra       = 'm1rsi * (ra_len + ra_wid)'
 +  rb       = 'm1rsi * (4.3*legacy + 3.3*(1-legacy))'
 +  rcont    = 'cars * (1/nf)'
 *
 +  rgate  = '0.5*(rb*gtab + (1/ngcon)*(ra+0.5*rcont))'
 *
 .param
 * substrate resistance calculations (function of w, l, and nf)
 +  rhorz  = 'max(10,((1.84e8*l + 182)*(3.984e-3/w + 5.4)/200))'
 +  rvert  = 'max(10,((6.4e-5/l + 266)*(18.07e-3/w - 101)/800))'
 *
 * gate capacitance calculation (function of w, l, and nf)
 +  cg1   = '0.7e6*l + 8'
 +  cg2   = '30e6*l - 2'
 +  cgate = '((cg1*cg2/(cg1+cg2)) + 0.055e6*w - 0.84)*1e-15'
 *
 * drain-source capacitance calculation (function of w, l, and nf)
 +  cdsw  = '7.47e4*w + 0.0216'
 +  cdsl  = '(1.692e-7/l + 0.1066)*1e-15/1.5'
 *
 x1 d g1 s b lvtnfet w=w l=l nf=nf par=par dtemp=dtemp
 +                   as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                   lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                   panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                   panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                   panw9=panw9 panw10=panw10
 +                   plnest=plnest plorient=plorient
 +                   pld200=pld200 pwd100=pwd100
 +                   rgatemod=rgatemod ngcon=2
 +                   rbodymod=rbodymod rf_rsub=rf_rsub
 +                   rbps=rhorz rbpd=rhorz
 +                   rbsb=rvert rbpb=rvert rbdb=rvert
 *
 rg     g   g1  r=rgate
 cwgd   g1  d   c='1e-18 + cgate*cwire'
 cwgs   g1  s   c='1e-18 + cgate*cwire'
 cwds   d   s   c='1e-18 + (cdsw*cdsl)*cwire'
 *
 .ends lvtnfet_rf
 .include './lvtnfettw.inc'
 * path, component, release: cmos8base/rel/hspice/models/lvtnfettw.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.1 09/06/15 08:26:01
 *
 *>  ibm cmrf8sf/bicmos8wl  lvtnfettw  1.5v triple well lvt nfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b tw sx ) lvtnfettw l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.12u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 0    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 1    <- gate connection switch (1->single-ended,
 *                                                       2->double-ended)
 *          + rbodymod = 0    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +  rf_rsub = 1    <- body resistance multiplier
 *
 *          +   t3well = 1    <- well isolation flag
 *                                   1-> t3 isolation, true triple well, default)
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---         d1           d2
 *            gate     | |   bulk   |\     tw    /|
 *              o------| |-----o----| >|---o---|< |----o sx
 *                     | |          |/           \|
 *                     | |---
 *                          |     area and perimeter for both pi diodes
 *                          |     are calculated based on inside n-well
 *                          o     edge of the isolation ring.
 *                        source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2009 ibm corporation
 *
 ***************************************************************************
 *
 .subckt lvtnfettw d g s b tw sx w=1.0u l=0.12u nf=1 par=1 dtemp=0
 +                               as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                               lstis=1 sa=0 sb=0 sd=0 lnws=0 t3well=1
 +                               panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                               panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                               plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                               rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1
 .param
 *
 * pc to pc spacing based on gr207,207b,207c
 +  pc2pc = '(0.36 + 0.04*(l > 0.125e-06) + 0.04*(l > 0.175e-06))*1.0e-06'
 +  pc2rx = 0.55e-06                          $ pc to outside rx distance
 +  iwlength  = '(nf*l+(nf-1)*pc2pc+2*pc2rx+2.34u)'
 +  iwwidth = 'w/nf+2.34u'
 +  iwarea  = 'iwlength*iwwidth'
 +  iwperim = '2 * (iwlength+iwwidth)'
 +  owarea  = '(iwlength+3u) * (iwwidth+3u)'
 +  owperim = '2 * (iwlength+iwwidth+6u)'
 *
 x1 d g s b lvtnfet w=w l=l nf=nf par=par dtemp=dtemp
 +                  as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                  lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                  panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                  panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                  panw9=panw9 panw10=panw10 plnest=plnest
 +                  plorient=plorient pld200=pld200 pwd100=pwd100
 +                  rgatemod=rgatemod ngcon=ngcon rbodymod=rbodymod
 +                  rf_rsub=rf_rsub
 *
 x2   b  tw diodepwpi area=iwarea perim=iwperim dtemp=dtemp t3well=t3well
 x3   sx tw diodepisx area=owarea perim=owperim dtemp=dtemp t3well=t3well
 x4   sx tw diodenwx  area=0      perim=owperim dtemp=dtemp t3well=t3well
 *
 .ends lvtnfettw
 .include './lvtnfettw_rf.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/lvtnfettw_rf.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.1 09/06/15 08:31:24
 *
 *>  ibm cmrf8sf/bicmos8wl  lvtnfettw_rf  1.5v triple well lvt nfet rf subcircuit
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b tw sx ) lvtnfettw_rf l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.12u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 3    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 2    <- extrinsic gate connection switch (1->single-ended,
 *                                                                 2->double-ended)
 *          +     gtab = 1    <- m1 gate ring tabs flag (1->tabs present,
 *                                                       0->tabs absent)
 *          + rbodymod = 1    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +     ring = 2    <- substrate contact type for rf pcell 
 *          +  rf_rsub = 1    <- body resistance multiplier
 *          +    cwire = 1    <- wiring capacitance multiplier
 *
 *          +   t3well = 1    <- well isolation flag
 *                                   1-> t3 isolation, true triple well, default)
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---         d1           d2
 *            gate     | |   bulk   |\     tw    /|
 *              o------| |-----o----| >|---o---|< |----o sx
 *                     | |          |/           \|
 *                     | |---
 *                          |     area and perimeter for both pi diodes
 *                          |     are calculated based on inside n-well
 *                          o     edge of the isolation ring.
 *                        source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2009 ibm corporation
 *
 ***************************************************************************
 *
 .subckt lvtnfettw_rf d g s b tw sx w=1.0u l=0.12u nf=1 par=1 dtemp=0
 +                                  as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                                  lstis=1 sa=0 sb=0 sd=0 lnws=0 t3well=1
 +                                  panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                                  panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                                  plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                                  rgatemod=3 ngcon=2 gtab=1 rbodymod=1 ring=2
 +                                  rf_rsub=1 cwire=1
 .param
 *
 * pc to pc spacing based on gr207,207b,207c
 +  pc2pc = '(0.36 + 0.04*(l > 0.125e-06) + 0.04*(l > 0.175e-06))*1.0e-06'
 +  pc2rx = 0.55e-06                          $ pc to outside rx distance
 +  iwlength  = '(nf*l+(nf-1)*pc2pc+2*pc2rx+2.9u)'
 +  iwwidth = 'w/nf+2.74u'
 +  iwarea  = 'iwlength*iwwidth'
 +  iwperim = '2 * (iwlength+iwwidth)'
 +  owarea  = '(iwlength+3u) * (iwwidth+3u)'
 +  owperim = '2 * (iwlength+iwwidth+6u)'
 *
 x1 d g s b lvtnfet_rf w=w l=l nf=nf par=par dtemp=dtemp
 +                     as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                     lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                     panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                     panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                     panw9=panw9 panw10=panw10 plnest=plnest
 +                     plorient=plorient pld200=pld200 pwd100=pwd100
 +                     rgatemod=rgatemod ngcon=ngcon gtab=gtab
 +                     rbodymod=rbodymod ring=ring
 +                     rf_rsub=rf_rsub cwire=cwire
 *
 x2   b  tw diodepwpi area=iwarea perim=iwperim dtemp=dtemp t3well=t3well
 x3   sx tw diodepisx area=owarea perim=owperim dtemp=dtemp t3well=t3well
 x4   sx tw diodenwx  area=0      perim=owperim dtemp=dtemp t3well=t3well
 *
 .ends lvtnfettw_rf
 .include './lvtpfet.inc'
 * path, component, release: cmos8base/rel/hspice/models/lvtpfet.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.2 09/07/28 16:59:52
 *
 *>  ibm cmrf8sf/bicmos8wl  lvtpfet  1.5v lvt pfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) lvtpfet l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.12u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 0    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 1    <- gate connection switch (1->single-ended,
 *                                                       2->double-ended)
 *          + rbodymod = 0    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +  rf_rsub = 1    <- body resistance multiplier
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---
 *            gate     | |     (bsim4.4     )    bulk
 *              o------| |-----(internal    )-----o
 *                     | |     (rsub network)
 *                     | |---
 *                          |
 *                          |
 *                          |
 *                          o
 *                        source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2009 ibm corporation
 *
 ***************************************************************************
 *
 .subckt lvtpfet d g s b w=1.0u l=0.12u nf=1 par=1 dtemp=0
 +                       as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                       lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                       panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                       panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                       plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                       rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1
 +                       rbps=100 rbpd=100 rbsb=1e9 rbpb=50 rbdb=1e9
 .param
 *
 * if monte carlo and "pl*" instance parameter = zero, use values from skew/process file
 +   a_plnest     = limit(-0.5,0.5)
 +   sel_plnest   = '((plnest == 1) || ((a_plnest*plnest) == 1))'
 +   a_plorient   = limit(-0.5,0.5)
 +   sel_plorient = '((plorient == 1) || ((a_plorient*plorient) == 1))'
 +   a_pld200     = limit(-0.5,0.5)
 +   sel_pld200   = '((pld200 == 1) || ((a_pld200*pld200) == 1))'
 +   a_pwd100     = limit(-0.5,0.5)
 +   sel_pwd100   = '((pwd100 == 1) || ((a_pwd100*pwd100) == 1))'
 *
 * calculate aclv/acwv and final lint/wint params
 +   aclv_ni_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_nest == 2))/aclv_factor + cnr_lvp*(1-mc_fet_mm_f)*(pc_nest != 2))'
 +   aclv_or_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_orient == 2))/aclv_factor + cnr_lvp*(1-mc_fet_mm_f)*(pc_orient != 2))'
 +   aclv_dist_sws = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_dist == 2))/aclv_factor + cnr_lvp*(1-mc_fet_mm_f)*(pc_dist != 2))'
 +   aclv_ni       = '((fet_aclv_nest*sel_plnest) + (fet_aclv_iso*(1-sel_plnest)))*aclv_ni_sws'
 +   aclv_or       = '((fet_aclv_v*sel_plorient) + (fet_aclv_h*(1-sel_plorient)))*aclv_or_sws'
 +   aclv_dist     = '((fet_aclv_out*sel_pld200) + (fet_aclv_in*(1-sel_pld200)))*aclv_dist_sws'
 +   aclv_ran      = agauss(cnr_lvp,mc_sw,3)
 *
 +   acwv_dist_sws = '(-mc_sw + ((mc_fet_mm_f != 1) && (rx_dist == 2))/acwv_factor + cnr_lvp*(1-mc_fet_mm_f)*(rx_dist != 2))'
 +   acwv_dist     = '((fet_acwv_out*sel_pwd100) + (fet_acwv_in*(1-sel_pwd100)))*acwv_dist_sws'
 +   acwv_ran      = agauss('-cnr_lvp',mc_sw,3)
 *
 .param
 +   xc_lint_1 = '(aclv_ni*aclv_fet_ni + aclv_or*aclv_fet_or)'
 +   xc_lint_2 = '((aclv_dist*aclv_fet_dist) + (aclv_ran + (mc_global == 2))*aclv_fet_ran)'
 +   xx_lint_3 = '(mc_fet_mm_f + (aclv_factor*(1-mc_fet_mm_f)))'
 +   xx_lint_4 = '((mc_global == 2)*(-xlint_lvp) + (mc_global != 2))'
 +   xc_lint_t = '((xc_lint_1 + xc_lint_2)*xx_lint_3)*xx_lint_4'
 *
 +   xc_wint_1 = '((acwv_dist*acwv_fet_dist) + (acwv_ran + (mc_global == 2))*acwv_fet_ran)'
 +   xx_wint_2 = '(mc_fet_mm_f + (acwv_factor*(1-mc_fet_mm_f)))'
 +   xx_wint_3 = '((mc_global == 2)*(xwint_lvp) + (mc_global != 2))'
 +   xc_wint_t = '((xc_wint_1)*xx_wint_2)*xx_wint_3'
 *
 *     final =  nominal      +      acv * dist(-1,1)      +        global * dist(-1,1)
 + lint_lvtpfet = 'lint_lvp + 1.5*total_aclv_fet*xc_lint_t*fet_geo_mm + ltol_lvp*xlint_lvp'
 + wint_lvtpfet = 'wint_lvp + 1.5*total_acwv_fet*xc_wint_t*fet_geo_mm + wtol_lvp*xwint_lvp'
 *
 .param
 * switch to turn on or off the sti stress effects
 +  isti = '((gstis==1)&&(lstis==1))||(gstis==2)'
 *
 * switch to turn on or off the nwell proximity effects
 +  inw  = '((gwells==1)&&(lnws==1))||(gwells==2)'
 *
 * nwell proximity effect calculations
 +  proxpre  =  0.017e-06            $ [v-m]
 +  proxlen  = -0.35e-06             $ [m]
 +  proxk1   =  0.375                $ [unitless]
 +  rxwparm1 = -0.28                 $ [unitless]
 +  rxwparm2 =  0.56e-06             $ [unitless]
 +  rxwparm3 =  0.0e-6               $ [m]
 +  nw1b1   = 'panw1 /(band1 -proxlen)'
 +  nw2b2   = 'panw2 /(band2 -proxlen)'
 +  nw3b3   = 'panw3 /(band3 -proxlen)'
 +  nw4b4   = 'panw4 /(band4 -proxlen)'
 +  nw5b5   = 'panw5 /(band5 -proxlen)'
 +  nw6b6   = 'panw6 /(band6 -proxlen)'
 +  nw7b7   = 'panw7 /(band7 -proxlen)'
 +  nw8b8   = 'panw8 /(band8 -proxlen)'
 +  nw9b9   = 'panw9 /(band9 -proxlen)'
 +  nw10b10 = 'panw10/(band10-proxlen)'
 +  prox_term = 'inw*(proxpre/(l*w))*(nw1b1+nw2b2+nw3b3+nw4b4+nw5b5+nw6b6+nw7b7+nw8b8+nw9b9+nw10b10)'
 +  k1_lvp_base = 0.27
 +  k1_lvp      = 'k1_lvp_base+proxk1*prox_term'
 *
 * mis-match calculations: include multiplicity (par)
 .param
 +  kvt  =  1.33e-8
 +  kvtl = -2.5e-8
 +  kvtw = -4.0e-7
 +  kmb  =  1.8e-6
 +  kmbl = -5.0e-8
 +  kmbw = -5.0e-6
 +  sigvth  = 'kvt/sqrt((w-kvtw)*par*(l-kvtl))'
 +  sigbeta = 'kmb/sqrt((w-kmbw)*par*(l-kmbl))'
 *
 +  dvth0 = agauss(0,1,3)               $ local mis-match distributions
 +  dbeta = agauss(0,1,3)
 *                                      $ select local vs global vs corner
 +  d_vth0 = 'dvth0*(mc_global != 2) + xlvpvth0*(mc_global == 2) - cnr_lvp'
 +  d_beta = 'dbeta*(mc_global != 2) + dlvpu0*(mc_global == 2) - cnr_lvp'
 *
 +  mmvth0 = 'sigvth * d_vth0 * fet_dop_mm'    $ vth0 mis-match
 +  mmbeta = 'sigbeta * d_beta * fet_dop_mm'   $ beta mis-match
 *
 +  pvt_var = 'mmvth0 - prox_term'      $ local vth0 variation
 *
 .param
 * flicker noise calculations: statistics are function of w and l and par
 +  noideva = '10u * 0.12u * 10'        $ device area for extracted variation
 +  noistd  = 1.2562                    $ worst case variation value
 *
 +  noi_scale = 'noistd-min(log(sqrt(w*l*par/noideva)),0)'   $ area scaling
 +  noiamult  = 'exp(dnoi_lvp*noi_scale)'                $ gate bias scaliing
 +  noibmult  = 'exp(dnoi_lvp*noi_scale/2.25)'
 +  noicmult  = 'exp(dnoi_lvp*noi_scale/5.06)'
 *
 * thermal noise scaling equation
 +  tnoitanha = -0.5
 +  tnoitanhb = 6.42e6
 +  tnoitanhc = 3.0e13
 +  ntnoi_lvtpfet = '1.38/tanh(tnoitanha + tnoitanhb*l + tnoitanhc*l*l)'
 *
 * gate resistance scaling equations
 +  rg11 = '7e4*l + 10.7'
 +  rg12 = '8e7*l - 8.25'
 +  xrg1 = 'max(0.1,(rg11*rg12/(rg11+rg12)))'
 +  xrg2 = 'max(0.0,((5.738e-7/l + 0.0917)*(6.46e4*w + 3.0347)/4.75))'
 *
 m0 d g s b  lvtpch  w=w l=l nf=nf dtemp=dtemp
 +                   as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                   sa='isti*sa' sb='isti*sb' sd='isti*sd'
 +                   rgatemod=rgatemod rbodymod=rbodymod
 *
 ***************************************************************************
 * lvt pfet bsim4v4 model
 ***************************************************************************
 .model lvtpch  pmos  (                             level   = 54
 +version = 4.4            binunit = 1              paramchk= 1
 +mobmod  = 0              rdsmod  = 1              permod  = 1
 +epsrox  = 3.9            toxe    = toxe_lvp       toxp    = toxp_lvp
 +toxm    = 3.281e-9       xj      = 6e-8           ndep    = 7.4e17
 +ngate   = 1e20           nsd     = 1e20           
 +rsh     = rsh_lvp        rshg    = rsh_lvp        phin    = 0
 +vth0    = 'vth0_lvp+pvt_var'                      vfb     = -1
 +pvth0   = pvth0_lvp
 +k1      = k1_lvp         k2      = -0.02          k3      = 0
 +k3b     = 0              w0      = 1.1e-6         lpe0    = 2.08e-7
 +lpeb    = 1.97e-7        dvt0    = 4.7863         dvt1    = 0.6139
 +dvt2    = 0              dvtp0   = 3.13973e-7     dvtp1   = 0
 +dvt0w   = 0.685          dvt1w   = 8.002e6        dvt2w   = 0.22
 +u0    = 'u0_lvp+mmbeta'  ua      = 4.258e-10      ub      = 1.354e-18
 +uc      = -5e-11         eu      = 1              vsat    = 9.994e4
 +a0      = 0.961          ags     = 0.6            b0      = 3.01995e-8
 +b1      = 3.712e-7       keta    = -0.085         a1      = 0
 +a2      = 1              wint    = 0              lint    = 0
 +dwg     = -1e-8          dwb     = 0              voff    = -0.0885
 +voffl   = -4.7e-9        minv    = 0.08           nfactor = 1
 +eta0    = 0.95           etab    = 0              dsub    = 0.766
 +cit     = 0              cdsc    = 9.96828e-5     cdscb   = 0
 +cdscd   = 2.1e-5         pclm    = 1.468          pdiblc1 = 0.31069
 +pdiblc2 = 6.6e-3         pdiblcb = -0.52          drout   = 2
 +pscbe1  = 5.76e8         pscbe2  = 1.4011e-6      pvag    = 10
 +delta   = 0.01684        fprout  = 3.06941e-5     pdits   = 0.34
 +pditsl  = 0              pditsd  = 0.65
 +lc      = 0              xn      = 3
 +rdw     = rdsw_lvp       rdwmin  = 0              rsw     = rdsw_lvp
 +rswmin  = 0              prwg    = 0              prwb    = 0
 +wr      = 1              alpha0  = 1e-12          alpha1  = 4e-3
 +beta0   = 9.9            lalpha0 = 7.017e-12      lketa   = 4.48e-3
 +lu0     = -0.7           wu0     = 0.05           pu0     = -0.1
 +pvsat   = -480           lk1     = 4.61e-3        lvsat   = 600
 +lnfactor= 0.065          lminv   = -0.01          ldelta  = 2.1e-3
 ***************************************************************************
 * jds/vt temperature parameters
 ***************************************************************************
 +tempmod = 0              tnom    = 25             ute     = -1.012
 +kt1     = -0.3           kt1l    = -1e-8          kt2     = 0
 +ua1     = 1.8e-9         ub1     = -3e-18         uc1     = -3.4e-10
 +at      = 3.3e4          prt     = 0
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 +igcmod  = 1              igbmod  = 1              toxref  = 'toxe_lvp-0.5e-9'
 +agidl   = 5.9e-9         bgidl   = 1.7378e9       ntox    = 1
 +cgidl   = 1              egidl   = 0.55           aigbacc = 0.011
 +bigbacc = 1.7e-3         cigbacc = -0.022         nigbacc = 1.99
 +aigbinv = 7.90e-3        bigbinv = 7.885e-4       cigbinv = 0.045
 +eigbinv = 1.6            nigbinv = 2.29           aigc    = 7.025e-3
 +bigc    = 3.45e-4        cigc    = -0.016         aigsd   = 5.68e-3
 +bigsd   = 1.114e-4       cigsd   = 1.19e-3        dlcig   = 1.8e-9
 +nigc    = 0.709          poxedge = 1              pigcd   = 3.0912
 +laigbacc= 8.292e-5       lbigbacc= -1.48396e-5    lpigcd  = 0.17
 +lcigbacc= -8.6e-3        laigbinv= 5e-7           lbigbinv= -5.6e-6
 +lcigbinv= -2.186e-3      leigbinv= -0.016         laigc   = 1.0e-5
 +lbigc   = -8.4392e-6     lcigc   = -1.6e-3        laigsd  = 4.0392e-5
 +lbigsd  = -1.34e-6       lcigsd  = -8.64338e-4
 ***************************************************************************
 * sti stress model parameters
 ***************************************************************************
 +saref   = 3e-6           sbref   = 3e-6           wlod    = 0
 +ku0     = 9e-8           kvsat   = 0              tku0    = 0
 +lku0    = 2e-7           wku0    = 0              llodku0 = 1
 +wlodku0 = 1              kvth0   = 5.8e-9         lkvth0  = 0.03
 +wkvth0  = 0              pkvth0  = 0              llodvth = 1
 +wlodvth = 1              stk2    = 0              lodk2   = 1
 +steta0  = 0              lodeta0 = 1
 ***************************************************************************
 * source/drain to body junction diode parameters
 ***************************************************************************
 +diomod  = 1             ijthdfwd= 0.1            ijthsfwd= 0.1
 +jss     = js_lvp        jsd     = js_lvp         jsws    = jsw_lvp
 +jswd    = jsw_lvp       jswgs   = jsw_lvp        jswgd   = jsw_lvp
 +cjs     = cj_lvp        cjd     = cj_lvp         cjsws   = cjsw_lvp
 +cjswd   = cjsw_lvp      cjswgs  = cjsg_lvp       cjswgd  = cjsg_lvp
 +mjs     = mj_lvp        mjd     = mj_lvp         mjsws   = mjsw_lvp
 +mjswd   = mjsw_lvp      mjswgs  = mjsg_lvp       mjswgd  = mjsg_lvp
 +pbs     = pb_lvp        pbd     = pb_lvp         pbsws   = pbsw_lvp
 +pbswd   = pbsw_lvp      pbswgs  = pbsg_lvp       pbswgd  = pbsg_lvp
 +njs     = n_lvp         njd     = n_lvp          xjbvd   = 1
 +bvd     = bd_p          xjbvs   = 1              bvs     = bd_p
 ***************************************************************************
 * junction diode temperature parameters
 ***************************************************************************
 +tcj     = cta_p         tcjsw   = ctp_p          tcjswg  = ctp_p
 +tpb     = pta_p         tpbsw   = ptp_p          tpbswg  = ptp_p
 +xtis    = 3             xtid    = 3
 ***************************************************************************
 * capacitance-voltage (cv) parameters
 ***************************************************************************
 +capmod  = 2             xpart   = 0              dlc     = 20n
 +dwc     = 0             cgdo    = cgdo_lvp       cgso    = cgso_lvp
 +cgsl    = cgsl_lvp      cgdl    = cgdl_lvp       ckappas = 4.5
 +ckappad = 4.5           cf      = 0              cgbo    = 1.706e-11
 +acde    = 0.4           moin    = 5              noff    = 3
 +voffcv  = -0.05
 ***************************************************************************
 * layout dependence parameters
 ***************************************************************************
 +geomod  = '(1 - int((nf+1)/2) + int(nf/2))'       rgeomod = 1
 +xgl     = lwbpc          xgw     = 0.43e-6        xl    = '-2*lint_lvtpfet'
 +xw  = '-2*wint_lvtpfet'  dmcg    = 0.23e-6        dmci    = 0.32e-6
 +dwj     = 0              ngcon   = ngcon
 ***************************************************************************
 * rf model parameters
 ***************************************************************************
 +rgatemod= rgatemod       trnqsmod= 0              rbodymod= rbodymod
 +acnqsmod= 0              xrcrg1  = xrg1           xrcrg2  = xrg2
 +rbps    = 'rbps*rf_rsub' rbpd    = 'rbpd*rf_rsub'
 +rbsb    = 'rbsb*rf_rsub' rbpb    = 'rbpb*rf_rsub' rbdb    = 'rbdb*rf_rsub'
 ***************************************************************************
 * flicker noise parameters
 ***************************************************************************
 +fnoimod = 1           noia  = '2.0e41*noiamult'   noib = '7e26*noibmult'
 +noic = '0.75*noicmult'   em      = 4.10e7         af      = 1
 +ef      = 1.15           kf      = 0
 ***************************************************************************
 * channel thermal noise parameters
 ***************************************************************************
 +tnoimod = 0              ntnoi   = ntnoi_lvtpfet  )
 *
 .ends lvtpfet
 .include './lvtpfet_rf.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/lvtpfet_rf.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.4 06/12/11 17:00:09
 *
 *>  ibm cmrf8sf  lvtpfet_rf  1.5v lvt pfet rf subcircuit
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) lvtpfet_rf l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.12u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.15um of nw edge
 *          +    panw2 = 0    <- active area within 0.15um to 0.325um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.2um to 1.7um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 3    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 2    <- extrinsic gate connection switch (1->single-ended,
 *                                                                 2->double-ended)
 *          +     gtab = 1    <- m1 gate ring tabs flag (1->tabs present,
 *                                                       0->tabs absent)
 *          + rbodymod = 1    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +     ring = 2    <- substrate contact type for rf pcell 
 *          +  rf_rsub = 1    <- body resistance multiplier
 *          +    cwire = 1    <- wiring capacitance multiplier
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                                ||   drain
 *                            o---||-----o------------------o
 *                            |   ||     |                  |
 *                            |  cwgd    |                  |
 *                            |          |                 ---
 *                            |          |                 ---cwds
 *                            |          |                  |
 *                            |     | |---                  |
 *       gate                 | g1  | |     (bsim4.4     )  | bulk
 *         o----/\/\/\--------o-----| |-----(internal    )--)--o
 *                rg          |     | |     (rsub network)  |
 *                            |     | |---                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |  cwgs    |                  |
 *                            |   ||     |                  |
 *                            o---||-----o------------------o
 *                                ||   source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2006 ibm corporation
 *
 ***************************************************************************
 *
 .subckt lvtpfet_rf d g s b w=1.0u l=0.12u nf=1 par=1 dtemp=0
 +                          as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                          lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                          panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                          panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                          plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                          rgatemod=3 ngcon=2 gtab=1 rbodymod=1 ring=2
 +                          rf_rsub=1 cwire=1
 *
 .param
 +  legacy = '(ring==99)'                        $ switch for legacy pcell
 +  nfo    = '(int((nf+1)/2) - int(nf/2))'       $ switch for odd,even fingers
 *
 * extrinsic gate resistance calculations (function of w, l, and nf)
 +  wum    = '(w/nf)*1e6'
 +  lum    = 'l*1e6'
 *
 +  rlen_a = 'lum*(1 + ((nf - 3)/2)) + diff_thn*1e6*((nf - 1)/2)'
 +  rlen_b = '0.5*lum + (diff_thn*1e6 + lum)*((nf/2) - 1)'
 +  rlen   = 'nfo*rlen_a + (1-nfo)*rlen_b'
 *
 +  ra_term1 = '0.81*legacy + 0.91*(1-legacy)'
 +  ra_len   = '(ra_term1 + 0.5*lum + (nf==2)*0.5*lum + (nf>2)*(rlen/3))/(0.4)'
 +  ra_wid   = '(2.5*wum + 1.65)*legacy + (1.25*wum + 0.875)*(1-legacy)'
 +  ra       = 'm1rsi * (ra_len + ra_wid)'
 +  rb       = 'm1rsi * (4.3*legacy + 3.3*(1-legacy))'
 +  rcont    = 'cars * (1/nf)'
 *
 +  rgate  = '0.5*(rb*gtab + (1/ngcon)*(ra+0.5*rcont))'
 *
 .param
 * substrate resistance calculations (function of w, l, and nf)
 +  rhorz  = 'max(10,((2.83e8*l + 134)*(3.463e-3/w - 11.1)/164))'
 +  rvert  = 'max(10,((6.2e-5/l + 92)*(12e-3/w - 10.13)/604))'
 *
 * gate capacitance calculation (function of w, l, and nf)
 +  cg1   = '7e5*l + 3'
 +  cg2   = '3e7*l - 2'
 +  cgate = '((cg1*cg2/(cg1+cg2)) + 4e4*w - 0.4)*1e-15'
 *
 * drain-source capacitance calculation (function of w, l, and nf)
 +  cdsw  = '2.636e5*w + 0.6214'
 +  cdsl  = '(5.783e-7/l + 1.0966)*1e-15/5.9'
 *
 x1 d g1 s b lvtpfet w=w l=l nf=nf par=par dtemp=dtemp
 +                   as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                   lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                   panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                   panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                   panw9=panw9 panw10=panw10
 +                   plnest=plnest plorient=plorient
 +                   pld200=pld200 pwd100=pwd100
 +                   rgatemod=rgatemod ngcon=2
 +                   rbodymod=rbodymod rf_rsub=rf_rsub
 +                   rbps=rhorz rbpd=rhorz
 +                   rbsb=rvert rbpb=rvert rbdb=rvert
 *
 rg     g   g1  r=rgate
 cwgd   g1  d   c='1e-18 + cgate*cwire'
 cwgs   g1  s   c='1e-18 + cgate*cwire'
 cwds   d   s   c='1e-18 + (cdsw*cdsl)*cwire'
 *
 .ends lvtpfet_rf
 .include './mimcap.inc'
 * path, component, release: cmrf8sf/reldm/hspice/models/mimcap.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.4 08/11/21 11:43:28
 *
 *>  ibm cmrf8sf  mimcap          single mim capacitor
 *
 ***********************************************************************
 *
 * the model is comprised of a capacitor and series resistance and inductance.
 * the input (lower plate) has losses to substrate characterized by a capacitor
 * and series resistor.
 *
 *
 *       r1                 |------|      r2
 *                   | |    |  l1  |     
 *  o--/\  /\---|----| |----|      |----/\  /\--o
 *  in   \/     |    | |    |------|      \/   out
 *              |
 *            -----
 *            -----  c3
 *              |
 *              |
 *              \
 *              /  r3
 *              \
 *              |
 *              |  reference plane
 *   o----------|-------------------------------o
 *                                
 ***********************************************************************
 *
 *  dimensions: w, l = design length of qy
 *
 *  syntax:     specify both length and width:
 *              xxx  in out ref  mimcap (l=100u w=100u)
 *
 *       or     specify length and capacitance:
 *              xxx  in out ref  mimcap (l=100u c=5p)
 *
 *  optional:   est    --> include estimated bottom plate to substrate
 *                        (or n-well) capacitance (default, est=1). turn
 *                        switch off (est=0) for extracted layout.
 *
 *              tlev1  --> indicates the number of thin metal levels present.
 *                         possible values are 2,3,and 4.  
 *                        
 *              tlev2  --> indicates the number of double thick metal levels
 *                        present.  tlev2 has a value of 1 when only mq is 
 *                        present, and 2 when mq and mg are present.
 *
 *              setind --> user determined value for the parasitic inductance.
 *                        the default value of -2, which is used as a switch,
 *                        forces the calculated inductance to be used.
 *
 *	           m  --> implicit multiplicity parameter 
 * 
 *   	         par  --> explicit multiplicity parameter
 *
 *              dtemp  --> device temperature difference with respect to
 *                        the simulated circuit temperature (deg c).
 *
 *
 *  notes:
 *
 *  1. node assignment  - node "in"  = lower metal plate (ly)
 *                      - node "out" = upper metal plate (qy)
 *
 *  2. model assumes the following design/process targets:
 *     - mim area capacitance = 2.05 mf/meter**2
 *     - mim dielectric thickness between qy and bottom plate = 330 angstroms
 *
 *  3. estimated bottom plate parasitic capacitance calculation assumes
 *     no devices placed under the mim. accurate parasitic capacitance
 *     value for cases with devices under mim can only be obtained from
 *     extracted layout.
 *
 *  4. the parasitic inductance included in this model is for the mim only,
 *     it does not include any connections to the mim.
 *     the inducance assumes the wiring is into the mim on one side
 *     and out of the mim on the opposite side. these two sides are assumed
 *     to be sides defined by the parameter w. for any other connection
 *     the inductance would be different than the model indicates.
 *
 * ibm confidential
 * (c) 2003 ibm corporation
 *                                
 ***********************************************************************
 .subckt mimcap in out ref l=100u w=-0.5 c=-0.5 est=1 tlev1=2 tlev2=1 setind=-2 rsx=50 dtemp=0 par=1 bp=3
 *
 * q level switch settings
 +  qlev   = 'tlev1+tlev2+1'
 +  q4     = '(qlev==4)'
 +  q5     = '(qlev==5)'
 +  q6     = '(qlev==6)'
 *
 * thick metal level switch
 +  twothk = 'tlev2 - 1'
 *
 * flag set to 1 if an invalid q level was selected by user
 +  q_error = '1 - (q4 + q5 + q6)'
 *
 * calculate width of device
 +  pl = 'l + delqy'
 +  wx = '(c-(2*l*ncmimp))/(ncmima*l+2*ncmimp)'
 +  npw= 'max(w,0) + abs(w-abs(w))*wx'
 +  pw = 'npw + delqy'
 *
 * mis-match calculation
 +  mma   = '(4.0) / (npw*l * 1e12)'
 +  mmw   = '(1.0) / (npw*npw * 1e12)'
 +  mml   = '(0.0) / (l*l * 1e12)'
 +  m3sig = '0.01 * sqrt(mma+mmw+mml) * 0.7071 / sqrt(par)'
 +  mmcap = agauss(0,1,3)
 +  mmatc = '1 + (m3sig * mmcap)'
 *
 * calculate total capacitance
 +  pctot = '(cmima*pl*pw + cmimp*2*(pl+pw)) * mmatc * (1-q_error)'
 +  ptcc  = '1 + 15.3e-6 * (temper + dtemp - 25)'
 *
 * calculate number of ft vias present
 +  nftb   = '2*int((npw+4.0u)/3.24u)'	$ number of bottom plate vias present
 +  nfttw  = 'int((npw-2.0u)/3.24u)'     $ top plate
 +  nfttl  = 'int((l+0.50u)/5.74u)'
 +  nfttop = 'nfttw * nfttl' 
 *
 * via and wiring resistance calculations
 +  prviab = 'prvft/nftb'
 +  prviat = 'prvft/nfttop'
 +  e1l    = 'npw-2.00u+dele1'
 +  e1w    = '(3.24u+dele1) * nfttl'
 +  lyw    = 'npw + 4.0u + delly'
 +  lyl    = 'l + 9.48u + delly'
 +  e1lyw  = '3.24u + dele1'
 +  e1lyl  = 'npw + 4.0u + dele1'
 *  assume top plate is wired into from one side
 +  prwir  = '(1/3)*(e1rs*e1l/e1w)'     $ top plate resistance
 * resistance through top plate vertically, scaled by area, fitted coefficient
 +  prqthr = '15.0e-11/(pw*pl)'
 +  prtop  = 'prviat + prwir + prqthr'
 +  prbot  = '(lyrs*lyl/lyw) + (1/2)*(1/3)*e1rs*e1lyl/e1lyw + prviab'
 *
 * wiring inductance calculations
 * inductance of the e1 lattice that contacts the qt plate
 +  inde1qt  = '0.2u*(2/3*e1l)*(log(2*(e1l)/(e1w+e1t))+0.5+(e1w+e1t)/(3*(e1l)))'
 * inductance for the stripes of e1 that contact the ly plate
 +  inde1ly  = '(1/2)*0.2u*(2/3*e1lyl)*(log(2*(e1lyl)/(e1lyw+e1t))+0.5+(e1lyw+e1t)/(3*(e1lyl)))'   
 * inductance of the ly bottom plate
 +  indly    = '0.2u*(2/3*lyl)*(log(2*(lyl)/(lyw+lyt))+0.5+(lyw+lyt)/(3*(lyl)))'
 * total inductance calculated or user provided value used
 +  indval   = '(setind!=-2)*setind + (setind==-2)*(inde1qt+inde1ly+indly)'
 *
 * calculate the stack height to groundplane from mim bottom plate for 1
 * thick metal option
 + honethk1      = 'oppcstif+oppcthkf+capct+m1t+m1m2t+m2t'
 + honethk2      = '(qlev>4)*(m2m3t+m3t)+(qlev>5)*(m3m4t+m4t)'
 + honethk3      = 'mxmqt+mqt+mqlyt'
 + honethk       = 'honethk1+honethk2+honethk3'
 *
 * calculate the stack height to groundplane from mim bottom plate for 2
 * thick metal option
 + htwothk1      = 'oppcstif+oppcthkf+capct+m1t+m1m2t+m2t'
 + htwothk2      = '(qlev>5)*(m2m3t+m3t)'
 + htwothk3      = 'mxmqt+mqt+mqmgt+mgt+mglyt'
 + htwothk       = 'htwothk1+htwothk2+htwothk3'
 *
 * select proper thickness depending on thick levels present
 + h          = 'honethk*(1-twothk)+htwothk*twothk'
 *
 * calculate effective stack height reduction due to m1,m2,m3,m4,mq and mg fill
 + mflfrac    = '0.45'
 + mtldtone   = '-2*mflfrac*(m1t+m2t+m3t*(qlev>4)+m4t*(qlev>5)+mqt)'
 + mtldttwo   = '-2*mflfrac*(m1t+m2t+m3t*(qlev>5)+mqt+mgt)'
 + mtldt      = 'mtldtone*(1-twothk)+mtldttwo*twothk'
 *
 * calculate effective stack height reduction due to rx fill 
 + rxflfrac = '0.45'
 + rxdt     = '-2*rxflfrac*oppcstif'
 * calculate effective stack height reduction due to pc fill 
 + pcflfrac = '0.25'
 + pcdt     = '-2*pcflfrac*oppcthkf'
 *
 * calculate total effective stack height delta
 + totdt    = 'mtldt+pcdt+rxdt'
 *
 * calculate effective stack height
 + heffec   = 'h+totdt'
 *
 * calculate area and perimeter capacitance
 + cmbot  = 'e0*eoxdepo/heffec'
 + cmfbot = 'e0*eoxdepo*(2/(pi-2)*log(pi/2)+2/pi*log(1+lyt/heffec))'
 + pcref  = 'lyl*lyw*cmbot + 2*(lyl+lyw)*cmfbot'
 *
 *
 r1  in   1  r='max(0.001,prbot)'    tc1=0.0033   dtemp=dtemp
 c1  1    2  c='pctot*ptcc*(1+(3.90e-5*(v(1,2)))+(2.72e-5*(abs((v(1,2)))**2)))'
 l1  2    3  l='indval'                           dtemp=dtemp
 r2  3  out  r='max(0.001,prtop)'    tc1=0.0033   dtemp=dtemp
 c3  1    4  c='max(0.01f,pcref*est)'             dtemp=dtemp
 r3  4  ref  r='rsx'                              dtemp=dtemp

 .ends mimcap







 .include './ncap.inc'
 * path, component, release: cmos8base/rel/hspice/models/ncap.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.3 09/07/24 10:48:30
 *
 *>  ibm cmrf8sf/bicmos8wl ncap nmos varactor
 *
 *******************************************************************************
 *
 *  syntax:  xxx (gx sx xx dx) ncap
 *           +      l = 2u    <- length (m)
 *           +      w = 2u    <- width  (m)
 *           +  pcrep = 1     <- number of gates per individual rx diffusion
 *           + prxrep = 1     <- number of individual rx diffusion shapes
 *           +  dtemp = 0     <- temp rise from ambient (deg c)
 *           +    rsx = 50    <- substrate resistance
 *
 *                            .--------------------.
 *                            |                    |
 *                            |<-------- l-------->|
 *                            |                    |
 *                       .----|--------------------|-----.
 *                       |    |          ^         |     | rx
 *                       |  s |          |         |  d  |
 *                       |    |          w         |     |
 *                       |    |          |         |     |
 *                       |    |          v         |     |
 *                        ----|--------------------|-----
 *                            |                    |
 *                            |          pc        |
 *                            |                    |
 *                             --------------------
 *
 * notes:
 *
 *  1. model assumes source and drain are shorted and dual side pc
 *     contacts are shorted.
 *
 * 
 *                   (gx)           rtop          
 *                     o-----------/\/\/\----(g1)
 *                                             |
 *                                             /
 *                                        rpc  \
 *                                             /
 *                                             |
 *                                      +-----(1)
 *                                      |      |
 *                                      |      |
 *                                      |  ca  = 
 *                                      |      |
 *                                      |      |
 *                                      |    (11)
 *                                      |      |
 *                                  cf  =      |
 *                                      |      |
 *                                      |      /
 *                                      | rrx  \
 *                                      |      /
 *                                      |      |
 *                                      |      |
 *                                      +----(s1)--/\/\/\------------o (sx)
 *                                             |    rbots
 *                                             |
 *                                             +---/\/\/\------------o (dx)
 *                                             |    rbotd
 *                                             |
 *                                           - - -
 *                                            / \
 *                                        dcx - -
 *                                             |
 *                                             |
 *                                        (xx) o (substrate)
 *
 *
 *  these models were developed using the spectre (tm) circuit simulator.
 *
 * ibm confidential
 * (c) 2009 ibm corporation
 *
 ********************************************************************************
 *
 .subckt ncap (gx sx xx dx)  l=2u w=2u pcrep=1 prxrep=1 dtemp=0 rsx=50 
 *
 *---- drawn geometry ----------------------------------------------
 + pl = 'max(l,0.24u)'
 + pw = 'max(w,1.0u)'
 *
 *---- drawn geometry + mask bias ----------------------------------
 + plf  = 'pl + lwbpc'
 + pwf  = 'pw + delrx'
 *
 *---- area/perimeter calculations ---------------------------------
 *  device values
 + ngdiff   = 'max(1,pcrep)'
 + ndiff    = 'max(1,prxrep)'
 + par      = 'ngdiff*ndiff'
 + pareac   = '(plf-0.05u) * pwf * par'
 + pedgec   = '0.05u * pwf * par'
 *  nwell values
 + lnw      = '(2 * 0.85u) + ((ngdiff-1) * 0.44u) + (ngdiff * pl)'
 + wnw      = '(2 * 0.40u) + ((ndiff-1) * (0.68u+emw)) + (ndiff * pw)'
 + areanw   = 'lnw * wnw'
 + perimnw  = '2 * (lnw + wnw)'
 *---- rx and pc fringe cap ----------------------------------------
 + prxfrng = 0.174n
 + pcapof  = 0.161n
 + pmetf   = 0.090f
 + pcof    = 'par * (2 * pwf * pcapof + 2 * plf * prxfrng + pmetf)'
 *---- main area capacitance ---------------------------------------
 *   see equations at top of file
 * pcehck = 'cox*pareac'
 *---- nw resistance -----------------------------------------------
 + prnw   = '(0.9*nwrs) * (0.5 * plf + 0.44u) / (6 * pwf) + (0.5 * nrnw) / (2 * 0.44u * pwf)'
 *---- gate resistance ---------------------------------------------
 + prgate = '(pcrsi * pwf) / (12 * plf) + (oppcrenf * 1.0p) / (pwf * plf)'
 *
 *---- metal line resistances ----------------------
 *     value below is m1 sheet resistance and thickness
 + prtop = '(m1rsi * (plf + .44u) * ngdiff) / (3*(.20u + emw))'
 *     source/drain 
 + prbot = '(m1rs * (plf + 0.44u) * ngdiff) / (3*(min(8u,pwf/2)))' 
 *
 *  subcircuit
 rtop  gx  g1  r='prtop/(ndiff+1)'  dtemp=dtemp tc1=tm1rs 
 rpc   g1   1  r='prgate / par'  dtemp=dtemp tc1=tpcrsi 
 xca    1  11  mosvarcap 
 +   pl_va = 'plf-0.05u'
 +   pw_va = pwf
 +  pnf_va = par
 +   co_va = co_mv
 +  cot_va = 0.21m
 +   qs_va = qs_mv 
 +   qp_va = qp_mv 
 +  pon_va = pon_mv 
 + pont_va = 15m 
 +  vbi_va = vbi_mv
 + vbit_va = 'vbi_mv*8m' 
 +  lk1_va = 150u
 +  lk2_va = 10.7
 +  lk3_va = 6.8
 + lk1t_va = 0m
 + deltemp = 'temper+dtemp-25'
 xcaed  1  11  mosvarcap
 +   pl_va = 0.05u
 +   pw_va = pwf
 +  pnf_va = par
 +   co_va = '1.04*co_mv'
 +  cot_va = 0.21m
 +   qs_va = '1.09*qs_mv' 
 +   qp_va = 7.5m 
 +  pon_va = 19m 
 + pont_va = 15m 
 +  vbi_va = 0.077
 + vbit_va = 385u 
 +  lk1_va = 150u
 +  lk2_va = 10.7
 +  lk3_va = 6.8
 + lk1t_va = 0m
 + deltemp = 'temper+dtemp-25'
 rrx   11  s1  r='prnw / par'  dtemp=dtemp tc1=tnwrs 
 rbots s1  sx  r='2*prbot/ndiff'  dtemp=dtemp tc1=tm1rs 
 rbotd s1  dx  r='2*prbot/ndiff'  dtemp=dtemp tc1=tm1rs 
 cfr    1  s1  c=pcof
 dsx   xx  s1  sxd  area='areanw' pj='perimnw' dtemp=dtemp

 *
 *---- nwell-to-sub diode ---------------------------------------
 .model sxd d
 + level = 1
 +  tlev = 2
 + tlevc = 1
 +  tref = 25
 +    eg = 1.11
 +   xti = 3.0
 +    rs = 'rsx*areanw'
 +     n = n_nw
 +    js = js_nw
 +   jsw = jsw_nw
 +    cj = cj_nw
 +   cta = cta_nw
 +    pb = pb_nw
 +   tpb = pta_nw
 +     m = mj_nw
 +   cjp = cjsw_nw
 +   ctp = ctp_nw
 +   php = pbsw_nw
 +  tphp = ptp_nw
 +  mjsw = mjsw_nw
 +    vb = bd_nw
 * 
 .ends ncap
 .include './nfet.inc'
 * path, component, release: cmos8base/rel/hspice/models/nfet.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.8 08/07/30 17:11:55
 *
 *>  ibm cmrf8sf/bicmos8wl  nfet  1.5v nfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) nfet l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.12u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 0    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 1    <- gate connection switch (1->single-ended,
 *                                                       2->double-ended)
 *          + rbodymod = 0    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +  rf_rsub = 1    <- body resistance multiplier
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---
 *            gate     | |     (bsim4.4     )    bulk
 *              o------| |-----(internal    )-----o
 *                     | |     (rsub network)
 *                     | |---
 *                          |
 *                          |
 *                          |
 *                          o
 *                        source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2008 ibm corporation
 *
 ***************************************************************************
 *
 .subckt nfet d g s b w=1.0u l=0.12u nf=1 par=1 dtemp=0
 +                    as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                    lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                    panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                    panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                    plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                    rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1
 +                    rbps=100 rbpd=100 rbsb=1e9 rbpb=50 rbdb=1e9
 .param
 *
 * if monte carlo and "pl*" instance parameter = zero, use values from skew/process file
 +   a_plnest     = limit(-0.5,0.5)
 +   sel_plnest   = '((plnest == 1) || ((a_plnest*plnest) == 1))'
 +   a_plorient   = limit(-0.5,0.5)
 +   sel_plorient = '((plorient == 1) || ((a_plorient*plorient) == 1))'
 +   a_pld200     = limit(-0.5,0.5)
 +   sel_pld200   = '((pld200 == 1) || ((a_pld200*pld200) == 1))'
 +   a_pwd100     = limit(-0.5,0.5)
 +   sel_pwd100   = '((pwd100 == 1) || ((a_pwd100*pwd100) == 1))'
 *
 * calculate aclv/acwv and final lint/wint params
 +   aclv_ni_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_nest == 2))/aclv_factor + cnr_n*(1-mc_fet_mm_f)*(pc_nest != 2))'
 +   aclv_or_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_orient == 2))/aclv_factor + cnr_n*(1-mc_fet_mm_f)*(pc_orient != 2))'
 +   aclv_dist_sws = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_dist == 2))/aclv_factor + cnr_n*(1-mc_fet_mm_f)*(pc_dist != 2))'
 +   aclv_ni       = '((fet_aclv_nest*sel_plnest) + (fet_aclv_iso*(1-sel_plnest)))*aclv_ni_sws'
 +   aclv_or       = '((fet_aclv_v*sel_plorient) + (fet_aclv_h*(1-sel_plorient)))*aclv_or_sws'
 +   aclv_dist     = '((fet_aclv_out*sel_pld200) + (fet_aclv_in*(1-sel_pld200)))*aclv_dist_sws'
 +   aclv_ran      = agauss(cnr_n,mc_sw,3)
 *
 +   acwv_dist_sws = '(-mc_sw + ((mc_fet_mm_f != 1) && (rx_dist == 2))/acwv_factor + cnr_n*(1-mc_fet_mm_f)*(rx_dist != 2))'
 +   acwv_dist     = '((fet_acwv_out*sel_pwd100) + (fet_acwv_in*(1-sel_pwd100)))*acwv_dist_sws'
 +   acwv_ran      = agauss('-cnr_n',mc_sw,3)
 *
 .param
 +   xc_lint_1 = '(aclv_ni*aclv_fet_ni + aclv_or*aclv_fet_or)'
 +   xc_lint_2 = '((aclv_dist*aclv_fet_dist) + (aclv_ran + (mc_global == 2))*aclv_fet_ran)'
 +   xx_lint_3 = '(mc_fet_mm_f + (aclv_factor*(1-mc_fet_mm_f)))'
 +   xx_lint_4 = '((mc_global == 2)*(-xlint_n) + (mc_global != 2))'
 +   xc_lint_t = '((xc_lint_1 + xc_lint_2)*xx_lint_3)*xx_lint_4'
 *
 +   xc_wint_1 = '((acwv_dist*acwv_fet_dist) + (acwv_ran + (mc_global == 2))*acwv_fet_ran)'
 +   xx_wint_2 = '(mc_fet_mm_f + (acwv_factor*(1-mc_fet_mm_f)))'
 +   xx_wint_3 = '((mc_global == 2)*(xwint_n) + (mc_global != 2))'
 +   xc_wint_t = '((xc_wint_1)*xx_wint_2)*xx_wint_3'
 *
 *     final =  nominal      +      acv * dist(-1,1)      +        global * dist(-1,1)
 + lint_nfet = 'lint_n + 1.5*total_aclv_fet*xc_lint_t*fet_geo_mm + ltol_n*xlint_n'
 + wint_nfet = 'wint_n + 1.5*total_acwv_fet*xc_wint_t*fet_geo_mm + wtol_n*xwint_n'
 *
 .param
 * switch to turn on or off the sti stress effects
 +  isti = '((gstis==1)&&(lstis==1))||(gstis==2)'
 *
 * switch to turn on or off the nwell proximity effects
 +  inw  = '((gwells==1)&&(lnws==1))||(gwells==2)'
 *
 * nwell proximity effect calculations
 +  proxpre  =  0.015e-06            $ [v-m]
 +  proxlen  = -0.35e-06             $ [m]
 +  proxk1   =  0.375                $ [unitless]
 +  rxwparm1 = -0.28                 $ [unitless]
 +  rxwparm2 =  0.56e-06             $ [unitless]
 +  rxwparm3 =  0.0e-6               $ [m]
 +  nw1b1   = 'panw1 /(band1 -proxlen)'
 +  nw2b2   = 'panw2 /(band2 -proxlen)'
 +  nw3b3   = 'panw3 /(band3 -proxlen)'
 +  nw4b4   = 'panw4 /(band4 -proxlen)'
 +  nw5b5   = 'panw5 /(band5 -proxlen)'
 +  nw6b6   = 'panw6 /(band6 -proxlen)'
 +  nw7b7   = 'panw7 /(band7 -proxlen)'
 +  nw8b8   = 'panw8 /(band8 -proxlen)'
 +  nw9b9   = 'panw9 /(band9 -proxlen)'
 +  nw10b10 = 'panw10/(band10-proxlen)'
 +  prox_term = 'inw*(proxpre/(l*w))*(nw1b1+nw2b2+nw3b3+nw4b4+nw5b5+nw6b6+nw7b7+nw8b8+nw9b9+nw10b10)'
 +  k1_n_base = 0.3
 +  k1_n      = 'k1_n_base+proxk1*prox_term'
 *
 * mis-match calculations: include multiplicity (par)
 .param
 +  kvt  =  1.35e-8
 +  kvtl = -5.0e-8
 +  kvtw = -7.0e-8
 +  kmb  =  3.0e-6
 +  kmbl = -7.0e-6
 +  kmbw = -6.0e-6
 +  sigvth  = 'kvt/sqrt((w-kvtw)*par*(l-kvtl))'
 +  sigbeta = 'kmb/sqrt((w-kmbw)*par*(l-kmbl))'
 *
 +  dvth0 = agauss(0,1,3)               $ local mis-match distributions
 +  dbeta = agauss(0,1,3)
 *                                      $ select local vs global vs corner
 +  d_vth0 = 'dvth0*(mc_global != 2) + xnvth0*(mc_global == 2) - cnr_n'
 +  d_beta = 'dbeta*(mc_global != 2) + dnu0*(mc_global == 2) - cnr_n'
 *
 +  mmvth0 = 'sigvth * d_vth0 * fet_dop_mm'    $ vth0 mis-match
 +  mmbeta = 'sigbeta * d_beta * fet_dop_mm'   $ beta mis-match
 *
 +  pvt_var = 'mmvth0 + prox_term'      $ local vth0 variation
 *
 .param
 * flicker noise calculations: statistics are function of w and l and par
 +  noideva = '10u * 0.12u * 10'        $ device area for extracted variation
 +  noistd  = 1.1678                    $ worst case variation value
 *
 +  noi_scale = 'noistd-min(log(sqrt(w*l*par/noideva)),0)'   $ area scaling
 +  noiamult  = 'exp(dnoi_n*noi_scale)'                  $ gate bias scaliing
 +  noibmult  = 'exp(dnoi_n*noi_scale/1.2741)'
 +  noicmult  = 'exp(dnoi_n*noi_scale/2.3101)'
 *
 * thermal noise scaling equation
 +  tnoitanha = -0.2
 +  tnoitanhb = 6.55e6
 +  tnoitanhc = 2.0e12
 +  ntnoi_nfet = '1.1475/tanh(tnoitanha + tnoitanhb*l + tnoitanhc*l*l)'
 *
 * gate resistance scaling equations
 +  rg11 = '0.05e6*l + 11.5'
 +  rg12 = '14e6*l - 1.467'
 +  xrg1 = 'max(0.1,(rg11*rg12/(rg11+rg12)))'
 +  xrg2 = 'max(0.0,((1.3351e-6/l - 0.2206)*(2.184e5*w + 5.1178)/10.7))'
 *
 m0 d g s b  nch  w=w l=l nf=nf dtemp=dtemp
 +                as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                sa='isti*sa' sb='isti*sb' sd='isti*sd'
 +                rgatemod=rgatemod rbodymod=rbodymod
 *
 ***************************************************************************
 * nfet bsim4v4 model
 ***************************************************************************
 .model nch  nmos  (                                level   = 54
 +version = 4.4            binunit = 1              paramchk= 1
 +mobmod  = 0              rdsmod  = 1              permod  = 1
 +epsrox  = 3.9            toxe    = toxe_n         toxp    = toxp_n
 +toxm    = 3.12e-9        xj      = 1.5e-7         ndep    = 6e15
 +ngate   = 3e20           nsd     = 1e20           rsh     = rsh_n
 +rshg    = rsh_n          vth0 = 'vth0_n+pvt_var'  vfb     = -1
 +pvth0   = pvth0_n
 +k1      = k1_n           k2      = -1.6e-3        k3      = 10
 +k3b     = 10             w0      = 1e-6           lpe0    = 4.67e-7
 +lpeb    = 1.5e-7         dvt0    = 0.28           dvt1    = 0.64
 +dvt2    = 0              dvtp0   = 3e-8           dvtp1   = 1.96e-8
 +dvt0w   = 8.5e-3         dvt1w   = 1e6            dvt2w   = 0.5
 +u0    = 'u0_n+mmbeta'    ua      = 1e-11          ub      = 2e-18
 +uc      = 1.5e-10        vsat    = 1.01e5         a0      = 1.5
 +ags     = 1              b0      = 1e-6           b1      = 1e-6
 +keta    = -0.03          a1      = 0              a2      = 0.8
 +wint    = 0              lint    = 0              dwg     = 1.6e-9
 +dwb     = 2e-9           voff    = -0.078         voffl   = -1.6e-8
 +minv    = 0.49           nfactor = 1              eta0    = 0.12
 +etab    = -0.02          dsub    = 1.25           cit     = 0
 +cdsc    = 0              cdscb   = 0              cdscd   = 0
 +pclm    = 0.3            pdiblc1 = 1e-3           pdiblc2 = 0.0225
 +pdiblcb = -1             drout   = 0.41           pscbe1  = 8e8
 +pscbe2  = 1e-5           pvag    = 1.65           delta   = 5e-3
 +fprout  = 0              pdits   = 0.33           pditsl  = 1.09e-5
 +pditsd  = 0.8
 +rdw     = rdsw_n         rdwmin  = 0              rsw     = rdsw_n
 +rswmin  = 0              prwg    = 0              prwb    = 0
 +wu0     = -10            wk3     = -4.5           la0     = -0.1
 +alpha0  = 1.4e-8         alpha1  = 0.5            beta0   = 11.8
 +wr      = 1              pvsat   = 250
 ***************************************************************************
 * jds/vt temperature parameters
 ***************************************************************************
 +tnom    = 25             ute     = -2.5           pute    = 0.01
 +kt1     = -0.4           kt1l    = 1.5e-8         kt2     = -0.1
 +ua1     = -2.2e-10       ub1     = -2.6e-18       uc1     = -2.1e-10
 +at      = 4e4            prt     = 3.2            lkt2    = 4e-3
 +tempmod = 0
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 +igcmod  = 1              igbmod  = 1              agidl   = 1.30226e-6
 +bgidl   = 3.00995e9      cgidl   = 1.09817        egidl   = 0.2592
 +aigbacc = 0.01098        bigbacc = 1.486e-3       cigbacc = 0.0758
 +nigbacc = 1.085          aigbinv = 9.2e-3         bigbinv = 9.11e-4
 +cigbinv = 0.033          eigbinv = 1.365          nigbinv = 0.997
 +aigc    = 11.1e-3        bigc    = 1.0579e-3      cigc    = 3.27567e-3
 +aigsd   = 9.75e-3        bigsd   = 9.58e-4        cigsd   = 0.0705029
 +dlcig   = 4.36516e-9     nigc    = 0.419          poxedge = 1
 +pigcd   = 2.7            ntox    = 1.035          toxref  = 'toxe_n+0.36e-9'
 +lbigbacc= -4.69e-5       lcigbacc= -3.6e-3        laigbinv= -2.5e-5
 +lbigbinv= -9.0e-6        lcigbinv= -7e-4          leigbinv= -0.0196
 +laigc   = -2.0e-5        lbigc   = -1.54e-5       lcigc   = -2.8e-4
 +lnigc   = 0              laigsd  = 9e-5           lbigsd  = -2.1e-5
 +lcigsd  = -4.62e-3       lpoxedge= 0              lpigcd  = -5e-3
 +laigbacc= 1.4e-4
 ***************************************************************************
 * sti stress model parameters
 ***************************************************************************
 +saref   = 3e-6           sbref   = 3e-6           wlod    = 0
 +ku0     = -5.2e-8        kvsat   = 0.5            tku0    = 0
 +lku0    = 2.5e-8         wku0    = 0              llodku0 = 1
 +wlodku0 = 1              kvth0   = 0.65e-9        lkvth0  = -4.88e-8
 +wkvth0  = 0              pkvth0  = 0              llodvth = 1
 +wlodvth = 1              stk2    = 2e-9           lodk2   = 1
 +steta0  = 0              lodeta0 = 1
 ***************************************************************************
 * source/drain to body junction diode parameters
 ***************************************************************************
 +diomod  = 1             ijthdfwd= 0.1            ijthsfwd= 0.1
 +jss     = js_n          jsd     = js_n           jsws    = jsw_n
 +jswd    = jsw_n         jswgs   = jsw_n          jswgd   = jsw_n
 +cjs     = cj_n          cjd     = cj_n           cjsws   = cjsw_n
 +cjswd   = cjsw_n        cjswgs  = cjsg_n         cjswgd  = cjsg_n
 +mjs     = mj_n          mjd     = mj_n           mjsws   = mjsw_n
 +mjswd   = mjsw_n        mjswgs  = mjsg_n         mjswgd  = mjsg_n
 +pbs     = pb_n          pbd     = pb_n           pbsws   = pbsw_n
 +pbswd   = pbsw_n        pbswgs  = pbsg_n         pbswgd  = pbsg_n
 +njs     = n_n           njd     = n_n            xjbvd   = 1
 +bvd     = bd_n          xjbvs   = 1              bvs     = bd_n
 ***************************************************************************
 * junction diode temperature parameters
 ***************************************************************************
 +tcj     = cta_n         tcjsw   = ctp_n          tcjswg  = ctp_n
 +tpb     = pta_n         tpbsw   = ptp_n          tpbswg  = ptp_n
 +xtis    = 3             xtid    = 3
 ***************************************************************************
 * capacitance-voltage (cv) parameters
 ***************************************************************************
 +capmod  = 2             xpart   = 0              dlc     = 18n
 +dwc     = 0             cgdo    = cgdo_n         cgso    = cgso_n
 +cgsl    = cgsl_n        cgdl    = cgdl_n         ckappas = 9.3524
 +ckappad = 9.3524        cf      = 0              cgbo    = 1.706e-11
 +acde    = 0.65          moin    = 15             noff    = 1.3
 +voffcv  = -0.07
 ***************************************************************************
 * layout dependence parameters
 ***************************************************************************
 +geomod  = '(1 - int((nf+1)/2) + int(nf/2))'       rgeomod = 1
 +xgl     = lwbpc          xgw     = 0.43e-6        xl    = '-2*lint_nfet'
 +xw    = '-2*wint_nfet'   dmcg    = 0.23e-6        dmci    = 0.32e-6
 +dwj     = 0              ngcon   = ngcon
 ***************************************************************************
 * rf model parameters
 ***************************************************************************
 +rgatemod= rgatemod       trnqsmod= 0              rbodymod= rbodymod
 +acnqsmod= 0              xrcrg1  = xrg1           xrcrg2  = xrg2
 +rbps    = 'rbps*rf_rsub' rbpd    = 'rbpd*rf_rsub'
 +rbsb    = 'rbsb*rf_rsub' rbpb    = 'rbpb*rf_rsub' rbdb    = 'rbdb*rf_rsub'
 ***************************************************************************
 * flicker noise parameters
 ***************************************************************************
 +fnoimod = 1           noia = '4e41*noiamult'      noib = '9e23*noibmult'
 +noic = '1.95e8*noicmult' em      = 4.10e7         af      = 1
 +ef      = 0.87           kf      = 0
 ***************************************************************************
 * channel thermal noise parameters
 ***************************************************************************
 +tnoimod = 0              ntnoi   = ntnoi_nfet     )
 *
 .ends nfet
 .include './nfet_psp.inc'
 * path, component, release: cmos8base/rel/hspice/models/nfet_psp.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.1 10/10/12 14:47:28
 *
 *>  ibm cmrf8sf/bicmos8wl  nfetpsp  1.5v nfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) nfetpsp l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.12u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---
 *            gate     | |         bulk
 *              o------| |----------o
 *                     | |     
 *                     | |---
 *                          |
 *                          |
 *                          |
 *                          o
 *                        source
 *
 *         note: the ldd resistance is accounted for within the psp model.
 *
 * ibm confidential
 * (c) 2010 ibm corporation
 *
 ***************************************************************************
 .subckt nfetpsp d g s b
 +		     w=1.0u l=0.12u nf=1 par=1 dtemp=0
 +                    as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                    lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                    panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                    panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                    plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                    rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1
 +                    rbps=100 rbpd=100 rbsb=1e9 rbpb=50 rbdb=1e9
 .param
 *
 * if monte carlo and "pl*" instance parameter = zero, use values from skew/process file
 +   a_plnest     = limit(-0.5,0.5)
 +   sel_plnest   = '((plnest == 1) || ((a_plnest*plnest) == 1))'
 +   a_plorient   = limit(-0.5,0.5)
 +   sel_plorient = '((plorient == 1) || ((a_plorient*plorient) == 1))' 
 +   a_pld200     = limit(-0.5,0.5)
 +   sel_pld200   = '((pld200 == 1) || ((a_pld200*pld200) == 1))' 
 +   a_pwd100     = limit(-0.5,0.5)
 +   sel_pwd100   = '((pwd100 == 1) || ((a_pwd100*pwd100) == 1))'
 *
 * calculate aclv/acwv and final lint/wint params
 +   aclv_ni_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_nest == 2))/aclv_factor + cnr_n*(1-mc_fet_mm_f)*(pc_nest != 2))'
 +   aclv_or_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_orient == 2))/aclv_factor + cnr_n*(1-mc_fet_mm_f)*(pc_orient != 2))'
 +   aclv_dist_sws = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_dist == 2))/aclv_factor + cnr_n*(1-mc_fet_mm_f)*(pc_dist != 2))'
 +   aclv_ni       = '((fet_aclv_nest*sel_plnest) + (fet_aclv_iso*(1-sel_plnest)))*aclv_ni_sws'
 +   aclv_or       = '((fet_aclv_v*sel_plorient) + (fet_aclv_h*(1-sel_plorient)))*aclv_or_sws'
 +   aclv_dist     = '((fet_aclv_out*sel_pld200) + (fet_aclv_in*(1-sel_pld200)))*aclv_dist_sws'
 +   aclv_ran      = agauss(cnr_n,mc_sw,3)
 *
 +   acwv_dist_sws = '(-mc_sw + ((mc_fet_mm_f != 1) && (rx_dist == 2))/acwv_factor + cnr_n*(1-mc_fet_mm_f)*(rx_dist != 2))'
 +   acwv_dist     = '((fet_acwv_out*sel_pwd100) + (fet_acwv_in*(1-sel_pwd100)))*acwv_dist_sws'
 +   acwv_ran      = agauss('-cnr_n',mc_sw,3)
 *
 .param
 +   xc_lint_1 = '(aclv_ni*aclv_fet_ni + aclv_or*aclv_fet_or)'
 +   xc_lint_2 = '((aclv_dist*aclv_fet_dist) + (aclv_ran + (mc_global == 2))*aclv_fet_ran)'
 +   xx_lint_3 = '(mc_fet_mm_f + (aclv_factor*(1-mc_fet_mm_f)))'
 +   xx_lint_4 = '((mc_global == 2)*(-xlint_n) + (mc_global != 2))'
 +   xc_lint_t = '((xc_lint_1 + xc_lint_2)*xx_lint_3)*xx_lint_4'
 *
 +   xc_wint_1 = '((acwv_dist*acwv_fet_dist) + (acwv_ran + (mc_global == 2))*acwv_fet_ran)'
 +   xx_wint_2 = '(mc_fet_mm_f + (acwv_factor*(1-mc_fet_mm_f)))'
 +   xx_wint_3 = '((mc_global == 2)*(xwint_n) + (mc_global != 2))'
 +   xc_wint_t = '((xc_wint_1)*xx_wint_2)*xx_wint_3'
 *
 *     final =  nominal      +      acv * dist(-1,1)      +        global * dist(-1,1)
 + lint_nfet = 'lint_psp_n + 1.5*total_aclv_fet*xc_lint_t*fet_geo_mm + ltol_n*xlint_n'
 + wint_nfet = 'wint_psp_n + 1.5*total_acwv_fet*xc_wint_t*fet_geo_mm + wtol_n*xwint_n'
 *
 .param
 * switch to turn on or off the sti stress effects
 +  isti = '((gstis==1)&&(lstis==1))||(gstis==2)'
 *
 * switch to turn on or off the nwell proximity effects
 +  inw  = '((gwells==1)&&(lnws==1))||(gwells==2)'
 *
 * nwell proximity effect calculations
 +  proxpre  =  0.015e-06            $ [v-m]
 +  proxlen  = -0.35e-06             $ [m]
 +  proxk1   =  0.375                $ [unitless]
 +  rxwparm1 = -0.28                 $ [unitless]
 +  rxwparm2 =  0.56e-06             $ [unitless]
 +  rxwparm3 =  0.0e-6               $ [m]
 +  nw1b1   = 'panw1 /(band1 -proxlen)'
 +  nw2b2   = 'panw2 /(band2 -proxlen)'
 +  nw3b3   = 'panw3 /(band3 -proxlen)'
 +  nw4b4   = 'panw4 /(band4 -proxlen)'
 +  nw5b5   = 'panw5 /(band5 -proxlen)'
 +  nw6b6   = 'panw6 /(band6 -proxlen)'
 +  nw7b7   = 'panw7 /(band7 -proxlen)'
 +  nw8b8   = 'panw8 /(band8 -proxlen)'
 +  nw9b9   = 'panw9 /(band9 -proxlen)'
 +  nw10b10 = 'panw10/(band10-proxlen)'
 +  prox_term = 'inw*(proxpre/(l*w))*(nw1b1+nw2b2+nw3b3+nw4b4+nw5b5+nw6b6+nw7b7+nw8b8+nw9b9+nw10b10)'
 +  nsub_prox = '1.5e23*sqrt(prox_term)'
 *
 * mis-match calculations: include multiplicity (par)
 .param
 +  kvt  =  1.25e-8 
 +  kvtl = -5.0e-8 
 +  kvtw = -1.0e-8 
 +  kmb  =  2.4e-9  
 +  kmbl = -3.0e-7 
 +  kmbw = -2.0e-8 
 +  sigvth  = 'kvt/sqrt((w-kvtw)*par*(l-kvtl))'
 +  sigbeta = 'kmb/sqrt((w-kmbw)*par*(l-kmbl))'
 *
 +  dvth0 = agauss(0,1,3)               $ local mis-match distributions
 +  dbeta = agauss(0,1,3)
 *                                      $ select local vs global vs corner
 +  d_vth0 = 'dvth0*(mc_global != 2) + xnvth0*(mc_global == 2) - cnr_n'
 +  d_beta = 'dbeta*(mc_global != 2) + dnu0*(mc_global == 2) - cnr_n'
 *
 +  mmvth0 = 'sigvth * d_vth0 * fet_dop_mm'    $ vth0 mis-match
 +  mmbeta = 'sigbeta * d_beta * fet_dop_mm'   $ beta mis-match
 *
 +  pvt_var = 'mmvth0 + prox_term'      $ local vth0 variation
 *
 .param
 * flicker noise calculations: statistics are function of w and l and par
 +  noideva = '10u * 0.12u * 10'      $ device area for extracted variation
 +  noistd  = 1.1678                  $ worst case variation value
 *
 +  noi_scale = 'noistd-min(log(sqrt(w*l*par/noideva)),0)'   $ area scaling
 +  noiamult  = 'exp(dnoi_n*noi_scale)'                  $ gate bias scaliing
 +  noibmult  = 'exp(dnoi_n*noi_scale/1.2741)'
 +  noicmult  = 'exp(dnoi_n*noi_scale/2.3101)'
 *
 * thermal noise scaling equation
 +  tnoitanha = -0.2
 +  tnoitanhb = 6.55e6
 +  tnoitanhc = 5.0e12
 +  ntnoi_nfet = '0.92/tanh(tnoitanha + tnoitanhb*l + tnoitanhc*l*l)'
 *
 * multi-finger sti scaling equation
 +  ratio_a = 'min(3.0, max(0.3,(sd+l)/(sa+0.5*l)))'
 +  delta_a = '5e-3*pow(ratio_a,3)'
 +  sec1a   = '1-0.37*log(nf)*sqrt(ratio_a)'
 +  sec2a   = '5.0/(nf+7)/pow(ratio_a,0.4)'
 +  sa_eff1 = '(sa+0.5*l)/(0.5*(sec1a+sec2a+sqrt((sec1a-sec2a)*(sec1a-sec2a)+delta_a)))-0.5*l' 
 +  sa_eff  = '(sa != 0)*sa_eff1'
 +  ratio_b = 'min(3.0, max(0.3,(sd+l)/(sb+0.5*l)))'
 +  delta_b = '5e-3*pow(ratio_b,3)'
 +  sec1b   = '1-0.37*log(nf)*sqrt(ratio_b)'
 +  sec2b   = '5.0/(nf+7)/pow(ratio_b,0.4)'
 +  sb_eff1 = '(sb+0.5*l)/(0.5*(sec1b+sec2b+sqrt((sec1b-sec2b)*(sec1b-sec2b)+delta_b)))-0.5*l' 
 +  sb_eff  = '(sb != 0)*sb_eff1'
 *
 m0 d g s b nch w='w/nf' l=l as='as/nf' ad='ad/nf' ps='ps/nf' pd='pd/nf' 
 +              mult=nf sa='isti*sa_eff' sb='isti*sb_eff'
 *
 ***************************************************************************
 * psp fet model
 ***************************************************************************
 *
 .model nch nmos    
 + level     = 69         version   = 102.3      tr        = 25        
 ***************************************************************************
 * switch settings
 ***************************************************************************
 + swgidl    = 1          swigate   = 1          swimpact  = 1         
 + swjuncap  = 3         
 ***************************************************************************
 * parameters with process variation
 ***************************************************************************
 + lvaro     = '-2*lint_nfet'
 + wvaro     = '-2*wint_nfet' 
 + toxo      = tox_psp_n  
 + toxovo    = tox_psp_n 
 + uo        = 'uo_psp_n+mmbeta' 
 + rsw1      = rsw_psp_n  
 + nsubo     = 'nsubo_psp_n+nsub_prox' 
 + vfbo      = 'vfb_psp_n+pvt_var'
 + fol1      = fol1_psp_n 
 + fol2      = fol2_psp_n
 + lov       = 'lint_psp_n+dl_psp_n'
 ***************************************************************************
 * core parameters
 ***************************************************************************
 + a1l       = 0.1826     a1o       = 1.32       a1w       = 0         
 + a2o       = 15.81      a3l       = -0.04678   a3o       = 0.7521    
 + a3w       = 0          a4l       = 3          a4o       = 0.0015    
 + a4w       = 0          alp1l1    = 0.03399    alp1l2    = 0.1615    
 + alp1lexp  = 0.2569     alp1w     = 0.01491    alp2l1    = 0.5982    
 + alp2l2    = 3.458e-11  alp2lexp  = 6.105e-06  alp2w     = -0.08145  
 + alpl      = 0.003443   alplexp   = 1.29       alpw      = -0.02084  
 + axl       = 0.4184     axo       = 21.29      betw1     = 0.029     
 + betw2     = -0.085     cfbo      = 0.55       cfl       = 6.469e-05 
 + cflexp    = 2.506      cfrw      = 0          cfw       = -0.01     
 + cgbovl    = 0          csl       = 0.0573     cslexp    = 1.5       
 + cslw      = 0          cso       = 0          csw       = -9.72e-10 
 + ctl       = 0.02       ctlexp    = 0.16       ctlw      = 0.009267  
 + cto       = 0.1551     ctw       = -0.004252  dlq       = -3.7e-08  
 + dnsubo    = 0          dphibl    = 0.1126     dphiblexp = 0.12      
 + dphiblw   = -0.01343   dphibo    = 0.01616    dphibw    = -0.1055   
 + dta       = dtemp      dwq       = 0          fbet1     = -0.603    
 + fbet1w    = -0.04      fbet2     = 0.795      fetao     = 1.903     
 + lap       = 0          lp1       = 4.354e-07  lp1w      = 0         
 + lp2       = 2.624e-07  lpck      = 8.637e-08  lpckw     = 0.09897   
 + lvarl     = 0          lvarw     = 0          mueo      = 1.05      
 + muew      = 4.7e-11    novo      = 3e+25      npck      = 3.796e+23 
 + npckw     = -0.01557   npl       = 0          npo       = 1e+26     
 + nslpo     = 0          nsubw     = -0.002294  qmc       = 0.385     
 + rsbo      = 0          rsgo      = 0          rsw2      = 0         
 + sta2o     = 0          stbetl    = 0.02       stbetlw   = -0.003    
 + stbeto    = 1.8        stbetw    = -0.01      stcso     = 1         
 + stmueo    = 0.1        strso     = 1          stthemuo  = 0.6       
 + stthesatl = 0.055      stthesatlw= -0.005     stthesato = 1.25      
 + stthesatw = 0          stvfbl    = 0.025      stvfblw   = 0.007     
 + stvfbo    = 0.0006     stvfbw    = -0.03      stxcoro   = 1         
 + themuo    = 1.26       thesatbo  = 0          thesatgo  = 0.5       
 + thesatl=thesatl_psp_n  thesatlexp= 0.854      thesatlw  = -0.002    
 + thesato   = 0.3        thesatw   = 0.01901    vfbl      = 0.00242
 + vfblw     = vfblw_n    vfbw      = -0.008     vnsubo    = 0         
 + vpo       = 0.1392     wbet      = 2e-07      wot       = 0         
 + wseg      = 1e-10      wsegp     = 1.389e-10  wvarl     = 0         
 + wvarw     = 0          xcorl     = 0.1        xcorlw    = -0.09918  
 + xcoro     = 0.03162    xcorw     = 0.2       
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 + gcoo      = 11.83      iginvlw   = 5.115      igovw     = 0.6593    
 + gc2o      = 0.6149     gc3o      = -0.2159    chibo     = 1.67      
 + stigo     = 2          agidlw    = 0.5939     bgidlo    = 26.11     
 + cgidlo    = 0.427      stbgidlo  = 0         
 ***************************************************************************
 * sti stress model parameters
 ***************************************************************************
 + saref     = 3e-6       sbref     = 3e-6       wlod      = 0         
 + kuo       = -5.2e-8    kvsat     = 0.5        tkuo      = 0         
 + lkuo      = 2.5e-8     wkuo      = 0          llodkuo   = 1         
 + wlodkuo   = 1          kvtho     = 0.65e-9    lkvtho    = -4.88e-8  
 + wkvtho    = 0          pkvtho    = 0          llodvth   = 1         
 + wlodvth   = 1          stetao    = 0          lodetao   = 1         
 ***************************************************************************
 * junction diode parameters
 ***************************************************************************
 + trj       = 25
 ***************************************************************************
 *   capacitance parameters
 ***************************************************************************
 + cjorbot   = cj_n       cjorsti   = cjsw_n     cjorgat   = cjsg_n    
 + vbirbot   = pb_n       vbirsti   = pbsw_n     vbirgat   = pbsg_n    
 + pbot      = mj_n       psti      = mjsw_n     pgat      = mjsg_n    
 ***************************************************************************
 *   ideal current parameters
 ***************************************************************************
 + idsatrbot = js_n       idsatrsti = jsw_n      idsatrgat = jsw_n     
 + phigbot   = 1.135744   phigsti   = 1.135744   phiggat   = 1.135744  
 + csrhbot   = 0          csrhsti   = 0          csrhgat   = 0         
 + xjunsti   = 1e-07      xjungat   = 1e-07     
 ***************************************************************************
 *   trap-assisted tunneling parameters
 ***************************************************************************
 + ctatbot   = 0          ctatsti   = 0          ctatgat   = 0         
 + mefftatbot= 0.25       mefftatsti= 0.25       mefftatgat= 0.25      
 ***************************************************************************
 *   band-to-band tunneling parameters
 ***************************************************************************
 + cbbtbot   = 0          cbbtsti   = 0          cbbtgat   = 0         
 + fbbtrbot  = 1e+09      fbbtrsti  = 1e+09      fbbtrgat  = 1e+09     
 + stfbbtbot = 0          stfbbtsti = 0          stfbbtgat = 0         
 ***************************************************************************
 *   avalanche and breakdown parameters
 ***************************************************************************
 + vbrbot    = 1001       vbrsti    = 1001       vbrgat    = 1001      
 + pbrbot    = 4          pbrsti    = 4          pbrgat    = 4         
 ***************************************************************************
 * noise parameters
 ***************************************************************************
 + nfalw     = '9.6e24*noiamult'
 + nfblw     = '7.2e6*noibmult'
 + nfclw     = '1.6e-9*noicmult'
 + efo	    = 0.87
 + lintnoi   = 0.012e-6 
 + alpnoi    = 2
 + fnto      = ntnoi_nfet 
 *
 .ends nfetpsp
 .include './nfet_rf.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/nfet_rf.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.4 06/12/11 17:00:30
 *
 *>  ibm cmrf8sf  nfet_rf  1.5v nfet rf subcircuit
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) nfet_rf l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.12u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 3    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 2    <- extrinsic gate connection switch (1->single-ended,
 *                                                                 2->double-ended)
 *          +     gtab = 1    <- m1 gate ring tabs flag (1->tabs present,
 *                                                       0->tabs absent)
 *          + rbodymod = 1    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +     ring = 2    <- substrate contact type for rf pcell 
 *          +  rf_rsub = 1    <- body resistance multiplier
 *          +    cwire = 1    <- wiring capacitance multiplier
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                                ||   drain
 *                            o---||-----o------------------o
 *                            |   ||     |                  |
 *                            |  cwgd    |                  |
 *                            |          |                 ---
 *                            |          |                 ---cwds
 *                            |          |                  |
 *                            |     | |---                  |
 *       gate                 | g1  | |     (bsim4.4     )  | bulk
 *         o----/\/\/\--------o-----| |-----(internal    )--)--o
 *                rg          |     | |     (rsub network)  |
 *                            |     | |---                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |  cwgs    |                  |
 *                            |   ||     |                  |
 *                            o---||-----o------------------o
 *                                ||   source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2006 ibm corporation
 *
 ***************************************************************************
 *
 .subckt nfet_rf d g s b w=1.0u l=0.12u nf=1 par=1 dtemp=0
 +                       as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                       lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                       panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                       panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                       plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                       rgatemod=3 ngcon=2 gtab=1 rbodymod=1 ring=2
 +                       rf_rsub=1 cwire=1
 *
 .param
 +  legacy = '(ring==99)'                        $ switch for legacy pcell
 +  nfo    = '(int((nf+1)/2) - int(nf/2))'       $ switch for odd,even fingers
 *
 * extrinsic gate resistance calculations (function of w, l, and nf)
 +  wum    = '(w/nf)*1e6'
 +  lum    = 'l*1e6'
 *
 +  rlen_a = 'lum*(1 + ((nf - 3)/2)) + diff_thn*1e6*((nf - 1)/2)'
 +  rlen_b = '0.5*lum + (diff_thn*1e6 + lum)*((nf/2) - 1)'
 +  rlen   = 'nfo*rlen_a + (1-nfo)*rlen_b'
 *
 +  ra_term1 = '0.81*legacy + 0.91*(1-legacy)'
 +  ra_len   = '(ra_term1 + 0.5*lum + (nf==2)*0.5*lum + (nf>2)*(rlen/3))/(0.4)'
 +  ra_wid   = '(2.5*wum + 1.65)*legacy + (1.25*wum + 0.875)*(1-legacy)'
 +  ra       = 'm1rsi * (ra_len + ra_wid)'
 +  rb       = 'm1rsi * (4.3*legacy + 3.3*(1-legacy))'
 +  rcont    = 'cars * (1/nf)'
 *
 +  rgate  = '0.5*(rb*gtab + (1/ngcon)*(ra+0.5*rcont))'
 *
 .param
 * substrate resistance calculations (function of w, l, and nf)
 +  rhorz  = 'max(10,((1.85e8*l + 30)*(1.011e-3/w)/50))'
 +  rvert  = 'max(10,((3.8e-5/l + 288)*(9.972e-3/w + 85)/600))'
 *
 * gate capacitance calculation (function of w, l, and nf)
 +  cgate = '((2e5*l + 9)*1.8e7*l/(1.82e7*l + 9) + 8e4*w - 1.2)*1e-15'
 *
 * drain-source capacitance calculation (function of w, l, and nf)
 +  cdsw  = '1.721e5*w + 0.198'
 +  cdsl  = '(3.65e-7/l + 0.1058)*3e-16'
 *
 x1 d g1 s b nfet   w=w l=l nf=nf par=par dtemp=dtemp
 +                  as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                  lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                  panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                  panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                  panw9=panw9 panw10=panw10
 +                  plnest=plnest plorient=plorient
 +                  pld200=pld200 pwd100=pwd100
 +                  rgatemod=rgatemod ngcon=2
 +                  rbodymod=rbodymod rf_rsub=rf_rsub
 +                  rbps=rhorz rbpd=rhorz
 +                  rbsb=rvert rbpb=rvert rbdb=rvert
 *
 rg     g   g1  r=rgate
 cwgd   g1  d   c='1e-18 + cgate*cwire'
 cwgs   g1  s   c='1e-18 + cgate*cwire'
 cwds   d   s   c='1e-18 + (cdsw*cdsl)*cwire'
 *
 .ends nfet_rf
 .include './nfet_rf_psp.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/nfet_rf_psp.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.1 10/10/12 14:45:40
 *
 *>  ibm cmrf8sf  nfetpsp_rf  1.5v nfet rf subcircuit
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) nfetpsp_rf l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.12u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          +    ngcon = 2    <- extrinsic gate connection switch (1->single-ended,
 *                                                                 2->double-ended)
 *          +     gtab = 1    <- m1 gate ring tabs flag (1->tabs present,
 *                                                       0->tabs absent)
 *          +     ring = 2    <- substrate contact type for rf pcell 
 *          +    cwire = 1    <- wiring capacitance multiplier
 *
 *
 * subcircuit schematic:
 *
 *                                ||   drain
 *                            o---||-----o------------------o
 *                            |   ||     |                  |
 *                            |  cwgd    |                  |
 *                            |          |                 ---
 *                            |          |                 ---cwds
 *                            |          |                  |
 *                            |     | |---                  |
 *       gate                 | g1  | |     (psp         )  | bulk
 *         o----/\/\/\--------o-----| |-----(internal    )--)--o
 *                rg          |     | |     (rsub network)  |
 *                            |     | |---                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |  cwgs    |                  |
 *                            |   ||     |                  |
 *                            o---||-----o------------------o
 *                                ||   source
 *
 *         note: the ldd resistance is accounted for within the psp model.
 *
 * ibm confidential
 * (c) 2010 ibm corporation
 *
 ***************************************************************************
 .subckt nfetpsp_rf d g s b
 +		     w=1.0u l=0.12u nf=1 par=1 dtemp=0
 +                    as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                    lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                    panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                    panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                    plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                    rgatemod=3 ngcon=2 gtab=1 rbodymod=1 ring=2
 +                    rf_rsub=1 cwire=1
 .param
 *
 * if monte carlo and "pl*" instance parameter = zero, use values from skew/process file
 +   a_plnest     = limit(-0.5,0.5)
 +   sel_plnest   = '((plnest == 1) || ((a_plnest*plnest) == 1))'
 +   a_plorient   = limit(-0.5,0.5)
 +   sel_plorient = '((plorient == 1) || ((a_plorient*plorient) == 1))' 
 +   a_pld200     = limit(-0.5,0.5)
 +   sel_pld200   = '((pld200 == 1) || ((a_pld200*pld200) == 1))' 
 +   a_pwd100     = limit(-0.5,0.5)
 +   sel_pwd100   = '((pwd100 == 1) || ((a_pwd100*pwd100) == 1))'
 *
 * calculate aclv/acwv and final lint/wint params
 +   aclv_ni_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_nest == 2))/aclv_factor + cnr_n*(1-mc_fet_mm_f)*(pc_nest != 2))'
 +   aclv_or_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_orient == 2))/aclv_factor + cnr_n*(1-mc_fet_mm_f)*(pc_orient != 2))'
 +   aclv_dist_sws = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_dist == 2))/aclv_factor + cnr_n*(1-mc_fet_mm_f)*(pc_dist != 2))'
 +   aclv_ni       = '((fet_aclv_nest*sel_plnest) + (fet_aclv_iso*(1-sel_plnest)))*aclv_ni_sws'
 +   aclv_or       = '((fet_aclv_v*sel_plorient) + (fet_aclv_h*(1-sel_plorient)))*aclv_or_sws'
 +   aclv_dist     = '((fet_aclv_out*sel_pld200) + (fet_aclv_in*(1-sel_pld200)))*aclv_dist_sws'
 +   aclv_ran      = agauss(cnr_n,mc_sw,3)
 *
 +   acwv_dist_sws = '(-mc_sw + ((mc_fet_mm_f != 1) && (rx_dist == 2))/acwv_factor + cnr_n*(1-mc_fet_mm_f)*(rx_dist != 2))'
 +   acwv_dist     = '((fet_acwv_out*sel_pwd100) + (fet_acwv_in*(1-sel_pwd100)))*acwv_dist_sws'
 +   acwv_ran      = agauss('-cnr_n',mc_sw,3)
 *
 .param
 +   xc_lint_1 = '(aclv_ni*aclv_fet_ni + aclv_or*aclv_fet_or)'
 +   xc_lint_2 = '((aclv_dist*aclv_fet_dist) + (aclv_ran + (mc_global == 2))*aclv_fet_ran)'
 +   xx_lint_3 = '(mc_fet_mm_f + (aclv_factor*(1-mc_fet_mm_f)))'
 +   xx_lint_4 = '((mc_global == 2)*(-xlint_n) + (mc_global != 2))'
 +   xc_lint_t = '((xc_lint_1 + xc_lint_2)*xx_lint_3)*xx_lint_4'
 *
 +   xc_wint_1 = '((acwv_dist*acwv_fet_dist) + (acwv_ran + (mc_global == 2))*acwv_fet_ran)'
 +   xx_wint_2 = '(mc_fet_mm_f + (acwv_factor*(1-mc_fet_mm_f)))'
 +   xx_wint_3 = '((mc_global == 2)*(xwint_n) + (mc_global != 2))'
 +   xc_wint_t = '((xc_wint_1)*xx_wint_2)*xx_wint_3'
 *
 *     final =  nominal      +      acv * dist(-1,1)      +        global * dist(-1,1)
 + lint_nfet = 'lint_psp_n + 1.5*total_aclv_fet*xc_lint_t*fet_geo_mm + ltol_n*xlint_n'
 + wint_nfet = 'wint_psp_n + 1.5*total_acwv_fet*xc_wint_t*fet_geo_mm + wtol_n*xwint_n'
 *
 .param
 * switch to turn on or off the sti stress effects
 +  isti = '((gstis==1)&&(lstis==1))||(gstis==2)'
 *
 * switch to turn on or off the nwell proximity effects
 +  inw  = '((gwells==1)&&(lnws==1))||(gwells==2)'
 *
 * nwell proximity effect calculations
 +  proxpre  =  0.015e-06            $ [v-m]
 +  proxlen  = -0.35e-06             $ [m]
 +  proxk1   =  0.375                $ [unitless]
 +  rxwparm1 = -0.28                 $ [unitless]
 +  rxwparm2 =  0.56e-06             $ [unitless]
 +  rxwparm3 =  0.0e-6               $ [m]
 +  nw1b1   = 'panw1 /(band1 -proxlen)'
 +  nw2b2   = 'panw2 /(band2 -proxlen)'
 +  nw3b3   = 'panw3 /(band3 -proxlen)'
 +  nw4b4   = 'panw4 /(band4 -proxlen)'
 +  nw5b5   = 'panw5 /(band5 -proxlen)'
 +  nw6b6   = 'panw6 /(band6 -proxlen)'
 +  nw7b7   = 'panw7 /(band7 -proxlen)'
 +  nw8b8   = 'panw8 /(band8 -proxlen)'
 +  nw9b9   = 'panw9 /(band9 -proxlen)'
 +  nw10b10 = 'panw10/(band10-proxlen)'
 +  prox_term = 'inw*(proxpre/(l*w))*(nw1b1+nw2b2+nw3b3+nw4b4+nw5b5+nw6b6+nw7b7+nw8b8+nw9b9+nw10b10)'
 +  nsub_prox = '1.5e23*sqrt(prox_term)'
 *
 * mis-match calculations: include multiplicity (par)
 .param
 +  kvt  =  1.25e-8 
 +  kvtl = -5.0e-8 
 +  kvtw = -1.0e-8 
 +  kmb  =  2.4e-9  
 +  kmbl = -3.0e-7 
 +  kmbw = -2.0e-8 
 +  sigvth  = 'kvt/sqrt((w-kvtw)*par*(l-kvtl))'
 +  sigbeta = 'kmb/sqrt((w-kmbw)*par*(l-kmbl))'
 *
 +  dvth0 = agauss(0,1,3)               $ local mis-match distributions
 +  dbeta = agauss(0,1,3)
 *                                      $ select local vs global vs corner
 +  d_vth0 = 'dvth0*(mc_global != 2) + xnvth0*(mc_global == 2) - cnr_n'
 +  d_beta = 'dbeta*(mc_global != 2) + dnu0*(mc_global == 2) - cnr_n'
 *
 +  mmvth0 = 'sigvth * d_vth0 * fet_dop_mm'    $ vth0 mis-match
 +  mmbeta = 'sigbeta * d_beta * fet_dop_mm'   $ beta mis-match
 *
 +  pvt_var = 'mmvth0 + prox_term'      $ local vth0 variation
 *
 .param
 * flicker noise calculations: statistics are function of w and l and par
 +  noideva = '10u * 0.12u * 10'      $ device area for extracted variation
 +  noistd  = 1.1678                  $ worst case variation value
 *
 +  noi_scale = 'noistd-min(log(sqrt(w*l*par/noideva)),0)'   $ area scaling
 +  noiamult  = 'exp(dnoi_n*noi_scale)'                  $ gate bias scaliing
 +  noibmult  = 'exp(dnoi_n*noi_scale/1.2741)'
 +  noicmult  = 'exp(dnoi_n*noi_scale/2.3101)'
 *
 * thermal noise scaling equation
 +  tnoitanha = -0.2
 +  tnoitanhb = 6.55e6
 +  tnoitanhc = 2.0e13
 +  ntnoi_nfet = '0.92/tanh(tnoitanha + tnoitanhb*l + tnoitanhc*l*l)'
 *
 * multi-finger sti scaling equation
 +  ratio_a = 'min(3.0, max(0.3,(sd+l)/(sa+0.5*l)))'
 +  delta_a = '5e-3*pow(ratio_a,3)'
 +  sec1a   = '1-0.37*log(nf)*sqrt(ratio_a)'
 +  sec2a   = '5.0/(nf+7)/pow(ratio_a,0.4)'
 +  sa_eff1 = '(sa+0.5*l)/(0.5*(sec1a+sec2a+sqrt((sec1a-sec2a)*(sec1a-sec2a)+delta_a)))-0.5*l' 
 +  sa_eff  = '(sa != 0)*sa_eff1'
 +  ratio_b = 'min(3.0, max(0.3,(sd+l)/(sb+0.5*l)))'
 +  delta_b = '5e-3*pow(ratio_b,3)'
 +  sec1b   = '1-0.37*log(nf)*sqrt(ratio_b)'
 +  sec2b   = '5.0/(nf+7)/pow(ratio_b,0.4)'
 +  sb_eff1 = '(sb+0.5*l)/(0.5*(sec1b+sec2b+sqrt((sec1b-sec2b)*(sec1b-sec2b)+delta_b)))-0.5*l' 
 +  sb_eff  = '(sb != 0)*sb_eff1'
 *
 +  legacy = '(ring==99)'                        $ switch for legacy pcell
 +  nfo    = '(int((nf+1)/2) - int(nf/2))'       $ switch for odd,even fingers
 *
 * extrinsic gate resistance calculations (function of w, l, and nf)
 +  wum    = '(w/nf)*1e6'
 +  lum    = 'l*1e6'
 *
 +  rlen_a = 'lum*(1 + ((nf - 3)/2)) + diff_thn*1e6*((nf - 1)/2)'
 +  rlen_b = '0.5*lum + (diff_thn*1e6 + lum)*((nf/2) - 1)'
 +  rlen   = 'nfo*rlen_a + (1-nfo)*rlen_b'
 *
 +  ra_term1 = '0.81*legacy + 0.91*(1-legacy)'
 +  ra_len   = '(ra_term1 + 0.5*lum + (nf==2)*0.5*lum + (nf>2)*(rlen/3))/(0.4)'
 +  ra_wid   = '(2.5*wum + 1.65)*legacy + (1.25*wum + 0.875)*(1-legacy)'
 +  ra       = 'm1rsi * (ra_len + ra_wid)'
 +  rb       = 'm1rsi * (4.3*legacy + 3.3*(1-legacy))'
 +  rcont    = 'cars * (1/nf)'
 *
 +  rgate  = '0.5*(rb*gtab + (1/ngcon)*(ra+0.5*rcont))'
 *
 +  rg	  = 'pcrsi*(0.15e-6+(w/nf)/(3*ngcon))/ngcon/l + 4.2e-11/(w/nf*l)' 
 *
 * substrate resistance calculations (function of w, l, and nf)
 +  rbulk = '5e-9/((w/nf+0.1e-6)*(l+0.1e-6))'
 +  rw = '300*((nf-1)*0.36e-6+nf*l+3.3e-6)/(w/nf+2.2e-6)'
 +  rl = '50*(w/nf+2.2e-6)/(l+0.01e-6)'
 +  rwell = 'rw*rl/(rw+rl)'
 +  rjuns = '6e3*(l+0.5e-6)/(w/nf+1.0e-6)'
 +  rjund = rjuns
 *
 * gate capacitance calculation (function of w, l, and nf)
 +  cgate = '((5e5*l + 9)*(8e6*l-0.3)/(8.5e6*l + 8.7)*nf + 2e5*w)*0.5e-16'
 *
 * drain-source capacitance calculation (function of w, l, and nf)
 +  cdsw  = '1.721e5*w + 0.198'
 +  cdsl  = '(3.65e-7/l + 0.1058)*3e-16'
 *
 m0 d g1 s b nch w='w/nf' l=l as='as/nf' ad='ad/nf' ps='ps/nf' pd='pd/nf' 
 +               mult=nf sa='isti*sa_eff' sb='isti*sb_eff'
 *
 rg     g   g1  r=rgate
 cwgd   g1  d   c='1e-18 + cgate*cwire'
 cwgs   g1  s   c='1e-18 + cgate*cwire'
 cwds   d   s   c='1e-18 + (cdsw*cdsl)*cwire'
 *
 ***************************************************************************
 * psp fet model
 ***************************************************************************
 .model nch nmos    
 ***************************************************************************
 * rf/nqs parameters
 ***************************************************************************
 + swnqs	    = 5		 munqso	   = 1      	rgo	  = rg	
 + rbulko    = rbulk	 rwello	   = rwell	rjunso	  = rjuns	
 + rjundo    = rjund	
 ***************************************************************************
 * dc parameters
 ***************************************************************************
 + level     = 69         version   = 102.3      tr        = 25        
 ***************************************************************************
 * switch settings
 ***************************************************************************
 + swgidl    = 1          swigate   = 1          swimpact  = 1         
 + swjuncap  = 3         
 ***************************************************************************
 * parameters with process variation
 ***************************************************************************
 + lvaro     = '-2*lint_nfet'
 + wvaro     = '-2*wint_nfet'
 + toxo      = tox_psp_n  
 + toxovo    = tox_psp_n 
 + uo        = 'uo_psp_n+mmbeta'
 + rsw1      = rsw_psp_n  
 + nsubo     = 'nsubo_psp_n+nsub_prox'
 + vfbo      = 'vfb_psp_n+pvt_var'
 + fol1      = fol1_psp_n 
 + fol2      = fol2_psp_n
 + lov       = 'lint_psp_n+dl_psp_n'
 ***************************************************************************
 * core parameters
 ***************************************************************************
 + a1l       = 0.1826     a1o       = 1.32       a1w       = 0         
 + a2o       = 15.81      a3l       = -0.04678   a3o       = 0.7521    
 + a3w       = 0          a4l       = 3          a4o       = 0.0015    
 + a4w       = 0          alp1l1    = 0.03399    alp1l2    = 0.1615    
 + alp1lexp  = 0.2569     alp1w     = 0.01491    alp2l1    = 0.5982    
 + alp2l2    = 3.458e-11  alp2lexp  = 6.105e-06  alp2w     = -0.08145  
 + alpl      = 0.003443   alplexp   = 1.29       alpw      = -0.02084  
 + axl       = 0.4184     axo       = 21.29      betw1     = 0.029     
 + betw2     = -0.085     cfbo      = 0.55       cfl       = 6.469e-05 
 + cflexp    = 2.506      cfrw      = 0          cfw       = -0.01     
 + cgbovl    = 0          csl       = 0.0573     cslexp    = 1.5       
 + cslw      = 0          cso       = 0          csw       = -9.72e-10 
 + ctl       = 0.02       ctlexp    = 0.16       ctlw      = 0.009267  
 + cto       = 0.1551     ctw       = -0.004252  dlq       = -3.7e-08  
 + dnsubo    = 0          dphibl    = 0.1126     dphiblexp = 0.12      
 + dphiblw   = -0.01343   dphibo    = 0.01616    dphibw    = -0.1055   
 + dta       = dtemp      dwq       = 0          fbet1     = -0.603    
 + fbet1w    = -0.04      fbet2     = 0.795      fetao     = 1.903     
 + lap       = 0          lp1       = 4.354e-07  lp1w      = 0         
 + lp2       = 2.624e-07  lpck      = 8.637e-08  lpckw     = 0.09897   
 + lvarl     = 0          lvarw     = 0          mueo      = 1.05      
 + muew      = 4.7e-11    novo      = 3e+25      npck      = 3.796e+23 
 + npckw     = -0.01557   npl       = 0          npo       = 1e+26     
 + nslpo     = 0          nsubw     = -0.002294  qmc       = 0.385     
 + rsbo      = 0          rsgo      = 0          rsw2      = 0         
 + sta2o     = 0          stbetl    = 0.02       stbetlw   = -0.003    
 + stbeto    = 1.8        stbetw    = -0.01      stcso     = 1         
 + stmueo    = 0.1        strso     = 1          stthemuo  = 0.6       
 + stthesatl = 0.055      stthesatlw= -0.005     stthesato = 1.25      
 + stthesatw = 0          stvfbl    = 0.025      stvfblw   = 0.007     
 + stvfbo    = 0.0006     stvfbw    = -0.03      stxcoro   = 1         
 + themuo    = 1.26       thesatbo  = 0          thesatgo  = 0.5       
 + thesatl= thesatl_psp_n thesatlexp= 0.854      thesatlw  = -0.002    
 + thesato   = 0.3        thesatw   = 0.01901    vfbl      = 0.00242
 + vfblw     = vfblw_n    vfbw      = -0.008     vnsubo    = 0         
 + vpo       = 0.1392     wbet      = 2e-07      wot       = 0         
 + wseg      = 1e-10      wsegp     = 1.389e-10  wvarl     = 0         
 + wvarw     = 0          xcorl     = 0.1        xcorlw    = -0.09918  
 + xcoro     = 0.03162    xcorw     = 0.2       
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 + gcoo      = 11.83      iginvlw   = 5.115      igovw     = 0.6593    
 + gc2o      = 0.6149     gc3o      = -0.2159    chibo     = 1.67      
 + stigo     = 2          agidlw    = 0.5939     bgidlo    = 26.11     
 + cgidlo    = 0.427      stbgidlo  = 0         
 ***************************************************************************
 * sti stress model parameters
 ***************************************************************************
 + saref     = 3e-6       sbref     = 3e-6       wlod      = 0         
 + kuo       = -5.2e-8    kvsat     = 0.5        tkuo      = 0         
 + lkuo      = 2.5e-8     wkuo      = 0          llodkuo   = 1         
 + wlodkuo   = 1          kvtho     = 0.65e-9    lkvtho    = -4.88e-8  
 + wkvtho    = 0          pkvtho    = 0          llodvth   = 1         
 + wlodvth   = 1          stetao    = 0          lodetao   = 1         
 ***************************************************************************
 * junction diode parameters
 ***************************************************************************
 + trj       = 25
 ***************************************************************************
 *   capacitance parameters
 ***************************************************************************
 + cjorbot   = cj_n       cjorsti   = cjsw_n     cjorgat   = cjsg_n    
 + vbirbot   = pb_n       vbirsti   = pbsw_n     vbirgat   = pbsg_n    
 + pbot      = mj_n       psti      = mjsw_n     pgat      = mjsg_n    
 ***************************************************************************
 *   ideal current parameters
 ***************************************************************************
 + idsatrbot = js_n       idsatrsti = jsw_n      idsatrgat = jsw_n     
 + phigbot   = 1.135744   phigsti   = 1.135744   phiggat   = 1.135744  
 + csrhbot   = 0          csrhsti   = 0          csrhgat   = 0         
 + xjunsti   = 1e-07      xjungat   = 1e-07     
 ***************************************************************************
 *   trap-assisted tunneling parameters
 ***************************************************************************
 + ctatbot   = 0          ctatsti   = 0          ctatgat   = 0         
 + mefftatbot= 0.25       mefftatsti= 0.25       mefftatgat= 0.25      
 ***************************************************************************
 *   band-to-band tunneling parameters
 ***************************************************************************
 + cbbtbot   = 0          cbbtsti   = 0          cbbtgat   = 0         
 + fbbtrbot  = 1e+09      fbbtrsti  = 1e+09      fbbtrgat  = 1e+09     
 + stfbbtbot = 0          stfbbtsti = 0          stfbbtgat = 0         
 ***************************************************************************
 *   avalanche and breakdown parameters
 ***************************************************************************
 + vbrbot    = 1001       vbrsti    = 1001       vbrgat    = 1001      
 + pbrbot    = 4          pbrsti    = 4          pbrgat    = 4         
 ***************************************************************************
 * noise parameters
 ***************************************************************************
 + nfalw     = '9.6e24*noiamult'
 + nfblw     = '7.2e6*noibmult'
 + nfclw     = '1.6e-9*noicmult'
 + efo	    = 0.87
 + lintnoi   = 0.012e-6 
 + alpnoi    = 2
 + fnto      = ntnoi_nfet 
 *
 .ends nfetpsp_rf
 .include './nfet33.inc'
 * path, component, release: cmos8base/rel/hspice/models/nfet33.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.9 09/03/06 16:18:39
 *
 *>  ibm cmrf8sf/bicmos8wl  nfet33  3.3v nfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) nfet33 l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.40u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 0    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 1    <- gate connection switch (1->single-ended,
 *                                                       2->double-ended)
 *          + rbodymod = 0    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +  rf_rsub = 1    <- body resistance multiplier
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---
 *            gate     | |     (bsim4.4     )    bulk
 *              o------| |-----(internal    )-----o
 *                     | |     (rsub network)
 *                     | |---
 *                          |
 *                          |
 *                          |
 *                          o
 *                        source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2008 ibm corporation
 *
 ***************************************************************************
 *
 .subckt nfet33 d g s b w=1.0u l=0.40u nf=1 par=1 dtemp=0
 +                      as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                      lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                      panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                      panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                      plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                      rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1
 +                      rbps=100 rbpd=100 rbsb=1e9 rbpb=50 rbdb=1e9
 .param
 *
 * if monte carlo and "pl*" instance parameter = zero, use values from skew/process file
 +   a_plnest     = limit(-0.5,0.5)
 +   sel_plnest   = '((plnest == 1) || ((a_plnest*plnest) == 1))'
 +   a_plorient   = limit(-0.5,0.5)
 +   sel_plorient = '((plorient == 1) || ((a_plorient*plorient) == 1))'
 +   a_pld200     = limit(-0.5,0.5)
 +   sel_pld200   = '((pld200 == 1) || ((a_pld200*pld200) == 1))'
 +   a_pwd100     = limit(-0.5,0.5)
 +   sel_pwd100   = '((pwd100 == 1) || ((a_pwd100*pwd100) == 1))'
 *
 * calculate aclv/acwv and final lint/wint params
 +   aclv_ni_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_nest == 2))/aclv_dgfactor + cnr_n33*(1-mc_fet_mm_f)*(pc_nest != 2))'
 +   aclv_or_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_orient == 2))/aclv_dgfactor + cnr_n33*(1-mc_fet_mm_f)*(pc_orient != 2))'
 +   aclv_dist_sws = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_dist == 2))/aclv_dgfactor + cnr_n33*(1-mc_fet_mm_f)*(pc_dist != 2))'
 +   aclv_ni       = '((dgfet_aclv_nest*sel_plnest) + (dgfet_aclv_iso*(1-sel_plnest)))*aclv_ni_sws'
 +   aclv_or       = '((dgfet_aclv_v*sel_plorient) + (dgfet_aclv_h*(1-sel_plorient)))*aclv_or_sws'
 +   aclv_dist     = '((dgfet_aclv_out*sel_pld200) + (dgfet_aclv_in*(1-sel_pld200)))*aclv_dist_sws'
 +   aclv_ran      = agauss(cnr_n33,mc_sw,3)
 *
 +   acwv_dist_sws = '(-mc_sw + ((mc_fet_mm_f != 1) && (rx_dist == 2))/acwv_dgfactor + cnr_n33*(1-mc_fet_mm_f)*(rx_dist != 2))'
 +   acwv_dist     = '((dgfet_acwv_out*sel_pwd100) + (dgfet_acwv_in*(1-sel_pwd100)))*acwv_dist_sws'
 +   acwv_ran      = agauss('-cnr_n33',mc_sw,3)
 *
 .param
 +   xc_lint_1 = '(aclv_ni*aclv_dgfet_ni + aclv_or*aclv_dgfet_or)'
 +   xc_lint_2 = '((aclv_dist*aclv_dgfet_dist) + (aclv_ran + (mc_global == 2))*aclv_dgfet_ran)'
 +   xx_lint_3 = '(mc_fet_mm_f + (aclv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_lint_4 = '((mc_global == 2)*(-xlint_n33) + (mc_global != 2))'
 +   xc_lint_t = '((xc_lint_1 + xc_lint_2)*xx_lint_3)*xx_lint_4'
 *
 +   xc_wint_1 = '((acwv_dist*acwv_dgfet_dist) + (acwv_ran + (mc_global == 2))*acwv_dgfet_ran)'
 +   xx_wint_2 = '(mc_fet_mm_f + (acwv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_wint_3 = '((mc_global == 2)*(xwint_n33) + (mc_global != 2))'
 +   xc_wint_t = '((xc_wint_1)*xx_wint_2)*xx_wint_3'
 *
 *     final =  nominal      +      acv * dist(-1,1)      +        global * dist(-1,1)
 + lint_nfet33 = 'lint_n33 + 1.5*total_aclv_dgfet*xc_lint_t*fet_geo_mm + ltol_n33*xlint_n33'
 + wint_nfet33 = 'wint_n33 + 1.5*total_acwv_dgfet*xc_wint_t*fet_geo_mm + wtol_n33*xwint_n33'
 *
 .param
 * switch to turn on or off the sti stress effects
 +  isti = '((gstis==1)&&(lstis==1))||(gstis==2)'
 *
 * switch to turn on or off the nwell proximity effects
 +  inw  = '((gwells==1)&&(lnws==1))||(gwells==2)'
 *
 * nwell proximity effect calculations
 +  proxpre  =  0.07e-06             $ [v-m]
 +  proxlen  = -0.35e-06             $ [m]
 +  proxk1   =  0.375                $ [unitless]
 +  rxwparm1 = -0.28                 $ [unitless]
 +  rxwparm2 =  0.56e-06             $ [unitless]
 +  rxwparm3 =  0.0e-6               $ [m]
 +  nw1b1   = 'panw1 /(band1 -proxlen)'
 +  nw2b2   = 'panw2 /(band2 -proxlen)'
 +  nw3b3   = 'panw3 /(band3 -proxlen)'
 +  nw4b4   = 'panw4 /(band4 -proxlen)'
 +  nw5b5   = 'panw5 /(band5 -proxlen)'
 +  nw6b6   = 'panw6 /(band6 -proxlen)'
 +  nw7b7   = 'panw7 /(band7 -proxlen)'
 +  nw8b8   = 'panw8 /(band8 -proxlen)'
 +  nw9b9   = 'panw9 /(band9 -proxlen)'
 +  nw10b10 = 'panw10/(band10-proxlen)'
 +  prox_term = 'inw*(proxpre/(l*w))*(nw1b1+nw2b2+nw3b3+nw4b4+nw5b5+nw6b6+nw7b7+nw8b8+nw9b9+nw10b10)'
 +  k1_n33_base = 0.44
 +  k1_n33      = 'k1_n33_base+proxk1*prox_term'
 *
 * mis-match calculations: include multiplicity (par)
 .param
 +  kvt  =  1.2e-8
 +  kvtl =  2.0e-7
 +  kvtw = -3.0e-7
 +  kmb  =  7.0e-6
 +  kmbl = -3.0e-7
 +  kmbw = -8.0e-7
 +  sigvth  = 'kvt/sqrt((w-kvtw)*par*(l-kvtl))'
 +  sigbeta = 'kmb/sqrt((w-kmbw)*par*(l-kmbl))'
 *
 +  dvth0 = agauss(0,1,3)               $ local mis-match distributions
 +  dbeta = agauss(0,1,3)
 *                                      $ select local vs global vs corner
 +  d_vth0 = 'dvth0*(mc_global != 2) + xn33vth0*(mc_global == 2) - cnr_n33'
 +  d_beta = 'dbeta*(mc_global != 2) + dn33u0*(mc_global == 2) - cnr_n33'
 *
 +  mmvth0 = 'sigvth * d_vth0 * fet_dop_mm'    $ vth0 mis-match
 +  mmbeta = 'sigbeta * d_beta * fet_dop_mm'   $ beta mis-match
 *
 +  pvt_var = 'mmvth0 + prox_term'      $ local vth0 variation
 *
 .param
 * flicker noise calculations: statistics are function of w and l and par
 +  noideva = '10u * 0.40u * 10'        $ device area for extracted variation
 +  noistd  = 0.7910                    $ worst case variation value
 *
 +  noi_scale = 'noistd-min(log(sqrt(w*l*par/noideva)),0)'   $ area scaling
 +  noiamult  = 'exp(dnoi_n33*noi_scale)'                $ gate bias scaliing
 +  noibmult  = 'exp(dnoi_n33*noi_scale/1.10)'
 +  noicmult  = 'exp(dnoi_n33*noi_scale/1.21)'
 *
 * thermal noise scaling equation
 +  tnoitanha = 0.16
 +  tnoitanhb = 5.0e6
 +  tnoitanhc = 2.0e11
 +  ntnoi_nfet33 = '1.13/tanh(tnoitanha + tnoitanhb*l + tnoitanhc*l*l)'
 *
 * gate resistance scaling equations
 +  xrg1 = 'max(0.1,(4.4e6*l + 0.7))'
 +  xrg2 = 'max(0.0,((4.676e-6/l + 1.7756)*(300*w + 15.9)/14))'
 *
 m0 d g s b  n33ch  w=w l=l nf=nf dtemp=dtemp
 +                  as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                  sa='isti*sa' sb='isti*sb' sd='isti*sd'
 +                  rgatemod=rgatemod rbodymod=rbodymod
 *
 ***************************************************************************
 * 3.3v nfet bsim4v4 model
 ***************************************************************************
 .model n33ch  nmos  (                              level   = 54
 +version = 4.4            binunit = 1              paramchk= 1
 +mobmod  = 0              rdsmod  = 1              permod  = 1
 +epsrox  = 3.9            toxe    = toxe_n33       toxp    = toxp_n33
 +toxm    = 5.9e-9         xj      = 1.5e-7         ndep    = 7.5e17
 +ngate   = 3e20           nsd     = 1e20
 +rsh     = rsh_n33        rshg    = rsh_n33        phin    = 0
 +vth0    = 'vth0_n33+pvt_var'                      vfb     = -1
 +pvth0   = pvth0_n33
 +k1      = k1_n33         k2      = -0.0197157     k3      = 4
 +k3b     = 10             w0      = 3e-6           lpe0    = 4.54e-8
 +lpeb    = -5.6e-8        vbm     = -3      
 +dvt0    = 23.4446        dvt1    = 0.4654         dvt2    = -0.032
 +dvtp0   = 0              dvtp1   = 0
 +dvt0w   = 0              dvt1w   = 5.3e6          dvt2w   = -0.032
 +u0    = 'u0_n33+mmbeta'  ua      = -6.53087e-10   ub      = 2.245e-18
 +uc      = 9.8e-11        lu0     = 16             lua     = 0
 +lub     = 2.8e-19        luc     = 2.8e-11        wu0     = -54
 +wua     = 0.0            wub     = -1.6e-19       wuc     = -2.3e-11
 +eu      = 1.67           vsat    = vsat_n33       ags     = 0.34  
 +a0      = 1.4            la0     = -0.32
 +lags    = 0.2            b0      = 0              b1      = 6.4e-6
 +keta    = -0.076         a1      = 0              a2      = 1
 +wint    = 0              lint    = 0              dwg     = 0
 +dwb     = 0              voff    = -0.15          voffl   = 8e-9
 +minv    = 0              nfactor = 0.53           eta0    = 0.3
 +etab    = 0              dsub    = 0.298          cit     = 0
 +cdsc    = 2.4e-5         cdscb   = 0              cdscd   = 0
 +pclm    = 0.7465         lpclm   = 1.4
 +pdiblc1 = 1.112          pdiblc2 = 2.0893e-3      pdiblcb = 10
 +wpdiblcb= -10
 +drout   = 0.56           pscbe1  = 4.36e8         pscbe2  = 9.6e-6
 +pvag    = 20             delta   = 7.67e-3        fprout  = 0
 +pdits   = 0              pditsl  = 0              pditsd  = 0
 +lc      = 0
 +xn      = 3              rdw     = 'rdsw_n33+2'   rdwmin  = 50
 +rsw     = rdsw_n33       rswmin  = 50             prwg    = 1
 +prwb    = 0              wr      = 1
 +alpha0  = 2.36e-7        alpha1  = 0.9            beta0   = 16.5
 ***************************************************************************
 * jds/vt temperature parameters
 ***************************************************************************
 +tnom    = 25             ute     = -1.8           kt1     = -0.2065
 +kt1l    = -2e-9          kt2     = 8e-3           ua1     = 4e-10
 +ub1     = -2.4e-18       uc1     = -4.5e-11       at      = 1e3
 +prt     = 0              tempmod = 0
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 +igcmod  = 0              igbmod  = 0              agidl   = 4e-7
 +bgidl   = 2.6e9          cgidl   = 0.5            egidl   = 0.8
 +aigbacc = 0.43           bigbacc = 0.054          cigbacc = 0.075
 +nigbacc = 1              aigbinv = 0.35           bigbinv = 0.03
 +cigbinv = 6e-3           eigbinv = 1.1            nigbinv = 3
 +aigc    = 0.054          bigc    = 0.054          cigc    = 0.075
 +aigsd   = 0.43           bigsd   = 0.054          cigsd   = 0.075
 +dlcig   = 1.4e-8         nigc    = 1              poxedge = 1
 +pigcd   = 1              ntox    = 1              toxref  = 'toxe_n33-2.9e-9'
 ***************************************************************************
 * sti stress model parameters
 ***************************************************************************
 +saref   = 3e-6           sbref   = 3e-6           wlod    = 0
 +ku0     = -4e-8          kvsat   = 0              tku0    = 0
 +lku0    = 0              wku0    = 0              llodku0 = 1
 +wlodku0 = 0              kvth0   = 0              lkvth0  = 0
 +wkvth0  = 0              pkvth0  = 0              llodvth = 0
 +wlodvth = 0              stk2    = 0              lodk2   = 1
 +steta0  = 0              lodeta0 = 1
 ***************************************************************************
 * source/drain to body junction diode parameters
 ***************************************************************************
 +diomod  = 1             ijthdfwd= 0.1            ijthsfwd= 0.1
 +jss     = js_n33        jsd     = js_n33         jsws    = jsw_n33
 +jswd    = jsw_n33       jswgs   = jsw_n33        jswgd   = jsw_n33
 +cjs     = cj_n33        cjd     = cj_n33         cjsws   = cjsw_n33
 +cjswd   = cjsw_n33      cjswgs  = cjsg_n33       cjswgd  = cjsg_n33
 +mjs     = mj_n33        mjd     = mj_n33         mjsws   = mjsw_n33
 +mjswd   = mjsw_n33      mjswgs  = mjsg_n33       mjswgd  = mjsg_n33
 +pbs     = pb_n33        pbd     = pb_n33         pbsws   = pbsw_n33
 +pbswd   = pbsw_n33      pbswgs  = pbsg_n33       pbswgd  = pbsg_n33
 +njs     = n_n33         njd     = n_n33          xjbvd   = 1
 +bvd     = bd_n          xjbvs   = 1              bvs     = bd_n
 ***************************************************************************
 * junction diode temperature parameters
 ***************************************************************************
 +tcj     = cta_n         tcjsw   = ctp_n          tcjswg  = ctp_n
 +tpb     = pta_n         tpbsw   = ptp_n          tpbswg  = ptp_n
 +xtis    = 3             xtid    = 3
 ***************************************************************************
 * capacitance-voltage (cv) parameters
 ***************************************************************************
 +capmod  = 2             xpart   = 0              dlc     = 32.5n
 +dwc     = 0             cgdo    = cgdo_n33       cgso    = cgso_n33
 +cgsl    = cgsl_n33      cgdl    = cgdl_n33       ckappas = 2.3
 +ckappad = 2.3           cf      = 0              cgbo    = 1.706e-11
 +acde    = 0.45          moin    = 5              noff    = 2.5
 +voffcv  = 0.067
 ***************************************************************************
 * layout dependence parameters
 ***************************************************************************
 +geomod  = '(1 - int((nf+1)/2) + int(nf/2))'       rgeomod = 1
 +xgl     = lwbpc          xgw     = 0.43e-6        xl    = '-2*lint_nfet33'
 +xw  = '-2*wint_nfet33'   dmcg    = 0.23e-6        dmci    = 0.32e-6
 +dwj     = 0              ngcon   = ngcon
 ***************************************************************************
 * rf model parameters
 ***************************************************************************
 +rgatemod= rgatemod       trnqsmod= 0              rbodymod= rbodymod
 +acnqsmod= 0              xrcrg1  = xrg1           xrcrg2  = xrg2
 +rbps    = 'rbps*rf_rsub' rbpd    = 'rbpd*rf_rsub'
 +rbsb    = 'rbsb*rf_rsub' rbpb    = 'rbpb*rf_rsub' rbdb    = 'rbdb*rf_rsub'
 ***************************************************************************
 * flicker noise parameters
 ***************************************************************************
 +fnoimod = 1              noia = '4e41*noiamult'   noib = '1.44e24*noibmult'
 +noic = '1.26e8*noicmult' em      = 4.10e7         af      = 1
 +ef      = 0.87           kf      = 0
 ***************************************************************************
 * channel thermal noise parameters
 ***************************************************************************
 +tnoimod = 0              ntnoi   = ntnoi_nfet33   )
 *
 .ends nfet33
 .include './nfet33_rf.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/nfet33_rf.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.4 06/12/11 17:00:11
 *
 *>  ibm cmrf8sf  nfet33_rf  3.3v nfet rf subcircuit
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) nfet33_rf l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.40u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.15um of nw edge
 *          +    panw2 = 0    <- active area within 0.15um to 0.325um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.2um to 1.7um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 3    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 2    <- extrinsic gate connection switch (1->single-ended,
 *                                                                 2->double-ended)
 *          +     gtab = 1    <- m1 gate ring tabs flag (1->tabs present,
 *                                                       0->tabs absent)
 *          + rbodymod = 1    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +     ring = 2    <- substrate contact type for rf pcell 
 *          +  rf_rsub = 1    <- body resistance multiplier
 *          +    cwire = 1    <- wiring capacitance multiplier
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                                ||   drain
 *                            o---||-----o------------------o
 *                            |   ||     |                  |
 *                            |  cwgd    |                  |
 *                            |          |                 ---
 *                            |          |                 ---cwds
 *                            |          |                  |
 *                            |     | |---                  |
 *       gate                 | g1  | |     (bsim4.4     )  | bulk
 *         o----/\/\/\--------o-----| |-----(internal    )--)--o
 *                rg          |     | |     (rsub network)  |
 *                            |     | |---                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |  cwgs    |                  |
 *                            |   ||     |                  |
 *                            o---||-----o------------------o
 *                                ||   source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2006 ibm corporation
 *
 ***************************************************************************
 *
 .subckt nfet33_rf d g s b w=1.0u l=0.40u nf=1 par=1 dtemp=0
 +                         as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                         lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                         panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                         panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                         plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                         rgatemod=3 ngcon=2 gtab=1 rbodymod=1 ring=2
 +                         rf_rsub=1 cwire=1
 *
 .param
 +  legacy = '(ring==99)'                        $ switch for legacy pcell
 +  nfo    = '(int((nf+1)/2) - int(nf/2))'       $ switch for odd,even fingers
 *
 * extrinsic gate resistance calculations (function of w, l, and nf)
 +  wum    = '(w/nf)*1e6'
 +  lum    = 'l*1e6'
 *
 +  rlen_a = 'lum*(1 + ((nf - 3)/2)) + diff_thn*1e6*((nf - 1)/2)'
 +  rlen_b = '0.5*lum + (diff_thn*1e6 + lum)*((nf/2) - 1)'
 +  rlen   = 'nfo*rlen_a + (1-nfo)*rlen_b'
 *
 +  ra_term1 = '0.81*legacy + 0.91*(1-legacy)'
 +  ra_len   = '(ra_term1 + 0.5*lum + (nf==2)*0.5*lum + (nf>2)*(rlen/3))/(0.4)'
 +  ra_wid   = '(2.5*wum + 1.65)*legacy + (1.25*wum + 0.875)*(1-legacy)'
 +  ra       = 'm1rsi * (ra_len + ra_wid)'
 +  rb       = 'm1rsi * (4.3*legacy + 3.3*(1-legacy))'
 +  rcont    = 'cars * (1/nf)'
 *
 +  rgate  = '0.5*(rb*gtab + (1/ngcon)*(ra+0.5*rcont))'
 *
 .param
 * substrate resistance calculations (function of w, l, and nf)
 +  rhorz  = 50
 +  rvert  = 'max(10,((7.48e-5/l + 113)*(4.591e-3/w + 58)/300))'
 *
 * gate capacitance calculation (function of w, l, and nf)
 +  cgate = '(5e5*l + 1.4e5*w + 0.5)*1e-15'
 *
 * drain-source capacitance calculation (function of w, l, and nf)
 +  cdsw  = '7.11e4*w + 0.3435'
 +  cdsl  = '(6.168e-7/l + 0.3035)*0.5e-15'
 *
 x1 d g1 s b nfet33 w=w l=l nf=nf par=par dtemp=dtemp
 +                  as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                  lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                  panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                  panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                  panw9=panw9 panw10=panw10
 +                  plnest=plnest plorient=plorient
 +                  pld200=pld200 pwd100=pwd100
 +                  rgatemod=rgatemod ngcon=2
 +                  rbodymod=rbodymod rf_rsub=rf_rsub
 +                  rbps=rhorz rbpd=rhorz
 +                  rbsb=rvert rbpb=rvert rbdb=rvert
 *
 rg     g   g1  r=rgate
 cwgd   g1  d   c='1e-18 + cgate*cwire'
 cwgs   g1  s   c='1e-18 + cgate*cwire'
 cwds   d   s   c='1e-18 + (cdsw*cdsl)*cwire'
 *
 .ends nfet33_rf
 .include './nfet33tw.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/nfet33tw.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.1 09/07/15 10:12:16
 *
 *>  ibm cmrf8sf nfet33tw  3.3v triple well nfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b tw sx ) nfet33tw l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.40u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 0    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 1    <- gate connection switch (1->single-ended,
 *                                                       2->double-ended)
 *          + rbodymod = 0    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +  rf_rsub = 1    <- body resistance multiplier
 *
 *          +   t3well = 1    <- well isolation flag
 *                                   1-> t3 isolation, true triple well, default
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---         d1           d2
 *            gate     | |   bulk   |\     tw    /|
 *              o------| |-----o----| >|---o---|< |----o sx
 *                     | |          |/           \|
 *                     | |---
 *                          |     area and perimeter for both pi diodes
 *                          |     are calculated based on inside n-well
 *                          o     edge of the isolation ring.
 *                        source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2009 ibm corporation
 *
 ***************************************************************************
 *
 .subckt nfet33tw d g s b tw sx w=1.0u l=0.40u nf=1 par=1 dtemp=0
 +                              as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                              lstis=1 sa=0 sb=0 sd=0 lnws=0 t3well=1
 +                              panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                              panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                              plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                              rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1
 .param
 *
 * pc to pc spacing based on gr207,207b,207c
 +  pc2pc = '(0.36 + 0.04*(l > 0.125e-06) + 0.04*(l > 0.175e-06))*1.0e-06'
 +  pc2rx = 0.60e-06                          $ pc to outside rx distance
 +  iwlength  = '(nf*l+(nf-1)*pc2pc+2*pc2rx+2.34u)'
 +  iwwidth = 'w/nf+2.34u'
 +  iwarea  = 'iwlength*iwwidth'
 +  iwperim = '2 * (iwlength+iwwidth)'
 +  owarea  = '(iwlength+3u) * (iwwidth+3u)'
 +  owperim = '2 * (iwlength+iwwidth+6u)'
 *
 x1 d g s b nfet33 w=w l=l nf=nf par=par dtemp=dtemp
 +                 as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                 lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                 panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                 panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                 panw9=panw9 panw10=panw10 plnest=plnest
 +                 plorient=plorient pld200=pld200 pwd100=pwd100
 +                 rgatemod=rgatemod ngcon=ngcon rbodymod=rbodymod
 +                 rf_rsub=rf_rsub
 *
 x2   b  tw diodepwpi area=iwarea perim=iwperim dtemp=dtemp t3well=t3well
 x3   sx tw diodepisx area=owarea perim=owperim dtemp=dtemp t3well=t3well
 x4   sx tw diodenwx  area=0      perim=owperim dtemp=dtemp t3well=t3well
 *
 .ends nfet33tw
 .include './nfet33tw_rf.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/nfet33tw_rf.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.1 09/06/15 08:31:06
 *
 *>  ibm cmrf8sf  nfet33tw_rf  3.3v triple well nfet rf subcircuit
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b tw sx ) nfet33tw_rf l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.40u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 3    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 2    <- extrinsic gate connection switch (1->single-ended,
 *                                                                 2->double-ended)
 *          +     gtab = 1    <- m1 gate ring tabs flag (1->tabs present,
 *                                                       0->tabs absent)
 *          + rbodymod = 1    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +     ring = 2    <- substrate contact type for rf pcell 
 *          +  rf_rsub = 1    <- body resistance multiplier
 *          +    cwire = 1    <- wiring capacitance multiplier
 *
 *          +   t3well = 1    <- well isolation flag
 *                                   1-> t3 isolation, true triple well, default)
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---         d1           d2
 *            gate     | |   bulk   |\     tw    /|
 *              o------| |-----o----| >|---o---|< |----o sx
 *                     | |          |/           \|
 *                     | |---
 *                          |     area and perimeter for both pi diodes
 *                          |     are calculated based on inside n-well
 *                          o     edge of the isolation ring.
 *                        source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2009 ibm corporation
 *
 ***************************************************************************
 *
 .subckt nfet33tw_rf d g s b tw sx w=1.0u l=0.40u nf=1 par=1 dtemp=0
 +                                 as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                                 lstis=1 sa=0 sb=0 sd=0 lnws=0 t3well=1
 +                                 panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                                 panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                                 plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                                 rgatemod=3 ngcon=2 gtab=1 rbodymod=1 ring=2
 +                                 rf_rsub=1 cwire=1
 .param
 *
 * pc to pc spacing based on gr207,207b,207c
 +  pc2pc = '(0.36 + 0.04*(l > 0.125e-06) + 0.04*(l > 0.175e-06))*1.0e-06'
 +  pc2rx = 0.60e-06                          $ pc to outside rx distance
 +  iwlength  = '(nf*l+(nf-1)*pc2pc+2*pc2rx+2.9u)'
 +  iwwidth = 'w/nf+2.74u'
 +  iwarea  = 'iwlength*iwwidth'
 +  iwperim = '2 * (iwlength+iwwidth)'
 +  owarea  = '(iwlength+3u) * (iwwidth+3u)'
 +  owperim = '2 * (iwlength+iwwidth+6u)'
 *
 x1 d g s b nfet33_rf w=w l=l nf=nf par=par dtemp=dtemp
 +                    as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                    lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                    panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                    panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                    panw9=panw9 panw10=panw10 plnest=plnest
 +                    plorient=plorient pld200=pld200 pwd100=pwd100
 +                    rgatemod=rgatemod ngcon=ngcon gtab=gtab
 +                    rbodymod=rbodymod ring=ring
 +                    rf_rsub=rf_rsub cwire=cwire
 *
 x2   b  tw diodepwpi area=iwarea perim=iwperim dtemp=dtemp t3well=t3well
 x3   sx tw diodepisx area=owarea perim=owperim dtemp=dtemp t3well=t3well
 x4   sx tw diodenwx  area=0      perim=owperim dtemp=dtemp t3well=t3well
 *
 .ends nfet33tw_rf
 .include './nfettw.inc'
 * path, component, release: cmos8base/rel/hspice/models/nfettw.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.5 08/03/17 07:42:01
 *
 *>  ibm cmrf8sf/bicmos8wl  nfettw  1.5v triple well nfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b tw sx ) nfettw l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.12u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 0    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 1    <- gate connection switch (1->single-ended,
 *                                                       2->double-ended)
 *          + rbodymod = 0    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +  rf_rsub = 1    <- body resistance multiplier
 *
 *          +   t3well = 0    <- well isolation flag
 *                                  (0-> pi isolation, default
 *                                   1-> t3 isolation, true triple well)
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---         d1           d2
 *            gate     | |   bulk   |\     tw    /|
 *              o------| |-----o----| >|---o---|< |----o sx
 *                     | |          |/           \|
 *                     | |---
 *                          |     area and perimeter for both pi diodes
 *                          |     are calculated based on inside n-well
 *                          o     edge of the isolation ring.
 *                        source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2008 ibm corporation
 *
 ***************************************************************************
 *
 .subckt nfettw d g s b tw sx w=1.0u l=0.12u nf=1 par=1 dtemp=0
 +                            as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                            lstis=1 sa=0 sb=0 sd=0 lnws=0 t3well=0
 +                            panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                            panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                            plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                            rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1
 .param
 *
 * pc to pc spacing based on gr207,207b,207c
 +  pc2pc = '(0.36 + 0.04*(l > 0.125e-06) + 0.04*(l > 0.175e-06))*1.0e-06'
 +  pc2rx = 0.55e-06                          $ pc to outside rx distance
 +  iwlength  = '(nf*l+(nf-1)*pc2pc+2*pc2rx+2.34u)'
 +  iwwidth = 'w/nf+2.34u'
 +  iwarea  = 'iwlength*iwwidth'
 +  iwperim = '2 * (iwlength+iwwidth)'
 +  owarea  = '(iwlength+3u) * (iwwidth+3u)'
 +  owperim = '2 * (iwlength+iwwidth+6u)'
 *
 x1 d g s b nfet   w=w l=l nf=nf par=par dtemp=dtemp
 +                 as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                 lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                 panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                 panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                 panw9=panw9 panw10=panw10 plnest=plnest
 +                 plorient=plorient pld200=pld200 pwd100=pwd100
 +                 rgatemod=rgatemod ngcon=ngcon rbodymod=rbodymod
 +                 rf_rsub=rf_rsub
 *
 x2   b  tw diodepwpi area=iwarea perim=iwperim dtemp=dtemp t3well=t3well
 x3   sx tw diodepisx area=owarea perim=owperim dtemp=dtemp t3well=t3well
 x4   sx tw diodenwx  area=0      perim=owperim dtemp=dtemp t3well=t3well
 *
 .ends nfettw
 .include './nfettw_psp.inc'
 * path, component, release: cmos8base/rel/hspice/models/nfettw_psp.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.1 10/10/12 12:17:27
 *
 *>  ibm cmrf8sf/bicmos8wl  nfettwpsp  1.5v triple well nfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b tw sx ) nfettwpsp l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.12u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *
 *          +   t3well = 0    <- well isolation flag
 *                                  (0-> pi isolation, default
 *                                   1-> t3 isolation, true triple well)
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---         d1           d2
 *            gate     | |   bulk   |\     tw    /|
 *              o------| |-----o----| >|---o---|< |----o sx
 *                     | |          |/           \|
 *                     | |---
 *                          |     area and perimeter for both pi diodes
 *                          |     are calculated based on inside n-well
 *                          o     edge of the isolation ring.
 *                        source
 *
 *         note: the ldd resistance is accounted for within the psp model.
 *
 * ibm confidential
 * (c) 2010 ibm corporation
 *
 ***************************************************************************
 .subckt nfettwpsp  d g s b tw sx
 +                            w=1.0u l=0.12u nf=1 par=1 dtemp=0
 +                            as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                            lstis=1 sa=0 sb=0 sd=0 lnws=0 t3well=0
 +                            panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                            panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                            plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                            rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1
 .param
 *
 * pc to pc spacing based on gr207,207b,207c
 +  pc2pc = '(0.36 + 0.04*(l > 0.125e-06) + 0.04*(l > 0.175e-06))*1.0e-06'
 +  pc2rx = 0.55e-06                        $ pc to outside rx distance
 +  iwlength  = '(nf*l+(nf-1)*pc2pc+2*pc2rx+2.34u)'
 +  iwwidth = 'w/nf+2.34u'
 +  iwarea  = 'iwlength*iwwidth'
 +  iwperim = '2 * (iwlength+iwwidth)'
 +  owarea  = '(iwlength+3u) * (iwwidth+3u)'
 +  owperim = '2 * (iwlength+iwwidth+6u)'
 *
 x1 d g s b nfetpsp w=w l=l nf=nf par=par dtemp=dtemp
 +                  as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                  lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                  panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                  panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                  panw9=panw9 panw10=panw10 plnest=plnest
 +                  plorient=plorient pld200=pld200 pwd100=pwd100
 +                  rgatemod=rgatemod ngcon=ngcon rbodymod=rbodymod
 +                  rf_rsub=rf_rsub
 *
 x2   b  tw diodepwpi area=iwarea perim=iwperim dtemp=dtemp t3well=t3well
 x3   sx tw diodepisx area=owarea perim=owperim dtemp=dtemp t3well=t3well
 x4   sx tw diodenwx  area=1e-15  perim=owperim dtemp=dtemp t3well=t3well
 *
 .ends nfettwpsp
 .include './nfettw_rf.inc'
 * path, component, release: cmos8base/rel/hspice/models/nfettw_rf.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.7 08/03/17 07:41:59
 *
 *>  ibm cmrf8sf/bicmos8wl  nfettw_rf  1.5v triple well nfet rf subcircuit
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b tw sx ) nfettw_rf l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.12u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 3    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 2    <- extrinsic gate connection switch (1->single-ended,
 *                                                                 2->double-ended)
 *          +     gtab = 1    <- m1 gate ring tabs flag (1->tabs present,
 *                                                       0->tabs absent)
 *          + rbodymod = 1    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +     ring = 2    <- substrate contact type for rf pcell 
 *          +  rf_rsub = 1    <- body resistance multiplier
 *          +    cwire = 1    <- wiring capacitance multiplier
 *
 *          +   t3well = 0    <- well isolation flag
 *                                  (0-> pi isolation, default
 *                                   1-> t3 isolation, true triple well)
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---         d1           d2
 *            gate     | |   bulk   |\     tw    /|
 *              o------| |-----o----| >|---o---|< |----o sx
 *                     | |          |/           \|
 *                     | |---
 *                          |     area and perimeter for both pi diodes
 *                          |     are calculated based on inside n-well
 *                          o     edge of the isolation ring.
 *                        source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2008 ibm corporation
 *
 ***************************************************************************
 *
 .subckt nfettw_rf d g s b tw sx w=1.0u l=0.12u nf=1 par=1 dtemp=0
 +                               as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                               lstis=1 sa=0 sb=0 sd=0 lnws=0 t3well=0
 +                               panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                               panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                               plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                               rgatemod=3 ngcon=2 gtab=1 rbodymod=1 ring=2
 +                               rf_rsub=1 cwire=1
 .param
 *
 * pc to pc spacing based on gr207,207b,207c
 +  pc2pc = '(0.36 + 0.04*(l > 0.125e-06) + 0.04*(l > 0.175e-06))*1.0e-06'
 +  pc2rx = 0.55e-06                          $ pc to outside rx distance
 +  iwlength  = '(nf*l+(nf-1)*pc2pc+2*pc2rx+2.9u)'
 +  iwwidth = 'w/nf+2.74u'
 +  iwarea  = 'iwlength*iwwidth'
 +  iwperim = '2 * (iwlength+iwwidth)'
 +  owarea  = '(iwlength+3u) * (iwwidth+3u)'
 +  owperim = '2 * (iwlength+iwwidth+6u)'
 *
 x1 d g s b nfet_rf   w=w l=l nf=nf par=par dtemp=dtemp
 +                    as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                    lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                    panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                    panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                    panw9=panw9 panw10=panw10 plnest=plnest
 +                    plorient=plorient pld200=pld200 pwd100=pwd100
 +                    rgatemod=rgatemod ngcon=ngcon gtab=gtab
 +                    rbodymod=rbodymod ring=ring
 +                    rf_rsub=rf_rsub cwire=cwire
 *
 x2   b  tw diodepwpi area=iwarea perim=iwperim dtemp=dtemp t3well=t3well
 x3   sx tw diodepisx area=owarea perim=owperim dtemp=dtemp t3well=t3well
 x4   sx tw diodenwx  area=0      perim=owperim dtemp=dtemp t3well=t3well
 *
 .ends nfettw_rf
 .include './nfettw_rf_psp.inc'
 * path, component, release: cmos8base/rel/hspice/models/nfettw_rf_psp.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.1 10/10/12 12:17:34
 *
 *>  ibm cmrf8sf/bicmos8wl  nfettwpsp_rf  1.5v triple well nfet rf subcircuit
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b tw sx ) nfettwpsp_rf l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.12u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          +    ngcon = 2    <- extrinsic gate connection switch (1->single-ended,
 *                                                                 2->double-ended)
 *          +     gtab = 1    <- m1 gate ring tabs flag (1->tabs present,
 *                                                       0->tabs absent)
 *          +     ring = 2    <- substrate contact type for rf pcell 
 *          +    cwire = 1    <- wiring capacitance multiplier
 *
 *          +   t3well = 0    <- well isolation flag
 *                                  (0-> pi isolation, default
 *                                   1-> t3 isolation, true triple well)
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---         d1           d2
 *            gate     | |   bulk   |\     tw    /|
 *              o------| |-----o----| >|---o---|< |----o sx
 *                     | |          |/           \|
 *                     | |---
 *                          |     area and perimeter for both pi diodes
 *                          |     are calculated based on inside n-well
 *                          o     edge of the isolation ring.
 *                        source
 *
 *         note: the ldd resistance is accounted for within the psp model.
 *
 * ibm confidential
 * (c) 2010 ibm corporation
 *
 ***************************************************************************
 .subckt nfettwpsp_rf d g s b tw sx
 +                               w=1.0u l=0.12u nf=1 par=1 dtemp=0
 +                               as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                               lstis=1 sa=0 sb=0 sd=0 lnws=0 t3well=0
 +                               panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                               panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                               plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                               rgatemod=3 ngcon=2 gtab=1 rbodymod=1 ring=2
 +                               rf_rsub=1 cwire=1
 .param
 *
 * pc to pc spacing based on gr207,207b,207c
 +  pc2pc = '(0.36 + 0.04*(l > 0.125e-06) + 0.04*(l > 0.175e-06))*1.0e-06'
 +  pc2rx = 0.55e-06                         $ pc to outside rx distance
 +  iwlength  = '(nf*l+(nf-1)*pc2pc+2*pc2rx+2.9u)'
 +  iwwidth = 'w/nf+2.74u'
 +  iwarea  = 'iwlength*iwwidth'
 +  iwperim = '2 * (iwlength+iwwidth)'
 +  owarea  = '(iwlength+3u) * (iwwidth+3u)'
 +  owperim = '2 * (iwlength+iwwidth+6u)'
 *
 x1 d g s b nfetpsp_rf   w=w l=l nf=nf par=par dtemp=dtemp
 +                       as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                       lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                       panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                       panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                       panw9=panw9 panw10=panw10 plnest=plnest
 +                       plorient=plorient pld200=pld200 pwd100=pwd100
 +                       rgatemod=rgatemod ngcon=ngcon gtab=gtab
 +                       rbodymod=rbodymod ring=ring
 +                       rf_rsub=rf_rsub cwire=cwire
 *
 x2   b  tw diodepwpi area=iwarea perim=iwperim dtemp=dtemp t3well=t3well
 x3   sx tw diodepisx area=owarea perim=owperim dtemp=dtemp t3well=t3well
 x4   sx tw diodenwx  area=1e-15  perim=owperim dtemp=dtemp t3well=t3well
 *
 .ends nfettwpsp_rf
 .include './nwres.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/nwres.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.4 10/11/02 15:34:59
 *
 *>  ibm cmrf8sf   nwres    n-well resistor
 *
 ***********************************************************************
 *
 *  distributed r-c network that accounts for end resistance effects,
 *  parasitic capacitance and includes a fixed substrate resistance.
 *
 *           rend          rmid               rmid          rend
 *   in  o--/\/\/\--+-----/\/\/\------+------/\/\/\-----+--/\/\/\--o  out
 *                  |                 |                 |
 *                  |                 |                 |
 *                 / \               / \               / \
 *                /   \             /   \             /   \
 *          dnwxa -----       dnwxb -----       dnwxc -----
 *                  |                 |                 |
 *                  |                 |                 |
 *                  +-----------------+-----------------+
 *                                    |
 *   parasitic capacitance is         \
 *   divided among c elements         / rsub
 *   in 1/6 - 2/3 - 1/6 ratios        \
 *                                    |
 *                                    o substrate (sx)
 *
 ***********************************************************************
 *
 *  dimensions: w = design width  of nwell
 *              l = design space between vias
 *
 *  syntax:     specify both width and length:
 *              xxx  in out sx  nwres (w=5u  l=5u)
 *
 *       or     specify width and resistance:
 *              xxx  in out sx  nwres (w=5u  r=150)
 *
 *  series:        s  --> defined model parameter,   reff = rbar * s
 *
 *  parallel:      m  --> implicit hspice parameter, reff = rbar / m
 *
 *               par  --> defined model parameter,   reff = rbar
 * 
 *  optional:  dtemp  --> device temperature difference with respect to
 *                         the simulated circuit temperature (deg c).
 *
 *                rsx --> fixed substrate resistance, default = 50 ohm.
 *
 *  notes:
 *
 *  1. model supports only rectangular resistors with vias at each
 *     end of the resistor bar. "dogbone" or multiple tap layouts are
 *     not supported.
 *
 * ibm confidential
 * (c) 2006 ibm corporation
 *
 ***********************************************************************
 *
 .subckt nwres  ( in out sx )  w=3u  l=-5u  r=-1  sbar=1  par=1  dtemp=0  rsx=50 sh=1
 *
 * check for minimum width, calculate effective width
 + nwwdth = 'max(w,3u) + nwdwf'
 *
 * calculate  length when r > 0, l < 0
 + rendn = 'nrnw / ((0.8u+delrx)*(nwwdth-1.8u+delrx))'
 + pleqn =  '((r - rendn)*(w+nwdwn)) / nwrsn'
 *
 * select op length, user input takes precedence over calculated length
 + plnom = 'max(l,0) + ((l-abs(l))/(2*l))*pleqn'
 *
 * check for minimum length, calculate effective length
 + nwlen = 'max(plnom,3u)'
 *
 * self heating dimensions
 + delsh= '-1.60u'
 + nwwsh = 'max(w,3u) + delsh'
 + nwlsh = 'max(nwlen + delsh,0)'
 * resistance calculation
 + rmid  = 'nwrsf * (nwlen / nwwdth) / 2'
 + rend = 'nrnw / ((0.8u+delrx)*(nwwdth-1.8u+delrx))'
 + prtot = '2 * (rmid + rend)'
 *
 * calculate area, perimeter for capacitance
 * subtract delta w, delta l to obtain drawn dimensions,
 * then include region outside of contacts
 + nwcapperi  = '2*((nwlen + 2*nwendf + 2*0.8u) + (nwwdth-nwdwn))'
 + nwcaparea = '(nwlen + 2*nwendf + 2*0.8u) * (nwwdth-nwdwn)'
 *
 * partition capacitance area, perimeter
 + anwxc = 'nwcaparea / 3'
 + pnwxc = 'nwcapperi  / 3'
 *
 * mis-match calculation
 + pnwma   = 'nwma * nwma / (nwlen * nwwdth * 1e12)'
 + pnwml   = 'nwml * nwml / (nwlen * nwlen * 1e12)'
 + pnwmw   = 'nwmw * nwmw / (nwwdth * nwwdth * 1e12)'
 + nw3sig = '0.01 * sqrt(pnwma + pnwml + pnwmw)'
 + nwmm   = 'nw3sig * 0.7071 / sqrt(sbar * par)'
 + mmres  = agauss(0,1,3)
 + mmatr  = '1 + (nwmm * mmres)'
 *
 * self-heating calculation
 + usesh = '((gsh==1)&&(sh==1))||(gsh==2)'    $ self-heating switch
 +  psh = 'usesh*nwshk * exp((nwshm-1)*log(nwlsh*nwwsh*1e12)) / (rmid*sbar*sbar)'
 *
 *
 * effective resistance from local conductance
 + rg = '2/(2.0e3*nwwdth + 1.2e3*nwlen)'
 *
 + pdeltat = 'temper-25+dtemp'
 + rmidt = 'rmid*(1.0+(nwrstc1*pdeltat)+(nwrstc2*pdeltat*pdeltat))'
 *
 * resistor network
 rea   in 1   r='rend*mmatr*sbar' tc1=nwrntc  dtemp=dtemp
 rma   1  3   r='rmidt*mmatr*sbar*(1+nwvcr*(abs(v(in,sx)+v(out,sx))/2)) * (1+psh*v(in,out)*v(in,out))'
 rmb   3  5   r='rmidt*mmatr*sbar*(1+nwvcr*(abs(v(in,sx)+v(out,sx))/2)) * (1+psh*v(in,out)*v(in,out))'
 reb   5  out r='rend*mmatr*sbar' tc1=nwrntc  dtemp=dtemp
 *
 *
 dnwa  6  1   dnwsxa  area='(anwxc/2)*sbar'  pj='(pnwxc/2)*sbar'  dtemp=dtemp
 dnwb  6  3   dnwsxa  area='(anwxc*2)*sbar'  pj='(pnwxc*2)*sbar'  dtemp=dtemp
 dnwc  6  5   dnwsxa  area='(anwxc/2)*sbar'  pj='(pnwxc/2)*sbar'  dtemp=dtemp
 *
 rsb   6  sx   r='rsx'
 * nwell to sx diodes
 *
 .model dnwsxa d
 + level = 1
 +  dcap = 2
 +  tlev = 0
 + tlevc = 1
 +  tref = 25
 +    eg = 1.17
 +   xti = 3.0
 +    rs = '3*rg*anwxc'
 +     n = n_nw
 +    js = js_nw
 +   jsw = jsw_nw
 +    cj = cj_nw
 +    pb = pb_nw
 +    mj = mj_nw
 +   cjp = cjsw_nw
 +   php = pbsw_nw
 +  mjsw = mjsw_nw
 +   cta = cta_nw
 +   tpb = pta_nw
 +   ctp = ctp_nw
 +  tphp = ptp_nw
 +    vb = bd_nw
 *
 *
 .ends nwres
 .include './opndres.inc'
 * path, component, release: cmos8base/rel/hspice/models/opndres.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.1 06/02/27 15:42:46
 *
 *>  ibm cmrf8sf/bicmos8wl  opndres    n+ s/d resistor
 *
 ***********************************************************************
 *
 *  distributed r-c network which accounts for end resistance effects,
 *  parasitic capacitance and includes a fixed substrate resistance.
 *
 *           rend       rmid     eva     evb     rmid       rend
 *   in  o--/\/\/\--o--/\/\/\--o--l|--o--|l--o--/\/\/\--o--/\/\/\--o  out
 *                  |                 |                 |
 *                  |                 |                 |
 *                ----              ----              ----
 *                 /\  dsnx          /\  dsnx          /\  dsnx
 *                /  \              /  \              /  \
 *                ----              ----              ----
 *                  |                 |                 |
 *                  |                 |                 |
 *                  \                 \                 \
 *                  /  rg             /  rg             /  rg
 *                  \                 \                 \
 *                  |                 |                 |
 *                  o-----------------o-----------------o
 *                                    |
 *                                    |
 *  parasitic capacitance and         \
 *  resistance is                     / rsub
 *  divided among diodes in           \
 *  1/6 - 2/3 - 1/6 ratios            |
 *                                    o substrate (sx)
 *
 ***********************************************************************
 *
 *  dimensions: w = design width  of rx
 *              l = design length of op
 *
 *  syntax:     specify both width and length:
 *              xxx  in out sx  opndres (w=2u  l=5u)
 *
 *       or     specify width and resistance:
 *              xxx  in out sx  opndres (w=2u  r=150)
 *
 *  series:     sbar  --> defined model parameter,   reff = rbar * sbar
 *
 *  parallel:      m  --> implicit hspice parameter, reff = rbar / m
 *
 *               par  --> defined model parameter,   reff = rbar / par
 *
 *  optional:   dtemp --> device temperature difference with respect to
 *                        the simulated circuit temperature (deg c).
 *
 *                rsx --> fixed substrate resistance, default = 50 ohm.
 *
 *  notes:
 *
 *  1. model supports only rectangular resistors with contacts at each
 *     end of the resistor bar. "dogbone" or multiple tap layouts are 
 *     not supported.
 *
 *  2. model assumes minimum groundrule spacings used for placing contacts
 *     to calculate the end resistance effects based on op design length.
 *
 *
 * ibm confidential
 * (c) 2006 ibm corporation
 *                                
 ***********************************************************************
 *
 .subckt opndres  in out sx  w=2u  l=-1u  r=-1  sbar=1  par=1  dtemp=0  rsx=50

 .param
 * check for minimum width, calculate effective width
 + opwdth = 'max(w,0.28u) + opnddwf'
 + opwdthn = 'max(w,0.28u) + opnddwn'
 + opwrx = 'max(w,0.28u) + tdelrx'

 * calculate op length, assumes w,r and groundrule spacings for contacts
 + pleqn = '((r*opwdthn - 2*opndrenn) / opndrsn)'

 * select op length, user input takes precedence over calculated length
 + plnom = 'max(l,0) + ((l-abs(l))/(2*l))*pleqn'

 * check for minimum length, calculate effective length
 + oplen = 'max(plnom,0.44u)'

 * resistance calculation
 + rmid = 'opndrsf * (oplen / opwdth) / 2'
 + rend = 'opndrenf / opwdth'

 * calculate area, perimeter for capacitance
 * subtract delta w, delta l to obtain drawn dimensions,
 * then include region outside of op mask
 + opcaplen  = '2 * (oplen + 2*opendf + opwrx)'
 + opcaparea = '(oplen + 2*opendf) * opwrx'

 * partition capacitance area, perimeter
 + ansx = 'opcaparea / 3'
 + pnsx = 'opcaplen  / 3'

 * mis-match calculation
 + opma   = 'opndma * opndma / (oplen * opwdth * 1e12)'
 + opml   = 'opndml * opndml / (opwdth * oplen * oplen * 1e18)'
 + opmw   = 'opndmw * opndmw / (opwdth * opwdth * 1e12)'
 + op3sig = '0.01 * sqrt(opma + opml + opmw)'
 + opmm   = 'op3sig * 0.7071 / sqrt(sbar*par)'
 + mmres  = agauss(0,1,3)
 + mmatr  = '1 + (opmm * mmres)'

 * effective resistance from local conductance
 + rg = '1/(ndrgw*opwdth + ndrgl*oplen)'

 * resistor network
 rea  in   1  'rend*mmatr*sbar'  dtemp=dtemp  tc1=opndrntc
 reb   5 out  'rend*mmatr*sbar'  dtemp=dtemp  tc1=opndrntc
 rma   1   2  'rmid*mmatr*sbar'  dtemp=dtemp  tc1=opndrstc
 rmb   4   5  'rmid*mmatr*sbar'  dtemp=dtemp  tc1=opndrstc

 eva   2   3  poly(2)  3 sx  in  2  0 0 0 0  opndvcr
 evb   3   4  poly(2)  3 sx  4 out  0 0 0 0  opndvcr

 dnsa  6   1  dnsxa  area='(ansx/2)*sbar'  pj='(pnsx/2)*sbar' dtemp=dtemp
 dnsb  6   3  dnsxa  area='(2*ansx)*sbar'  pj='(2*pnsx)*sbar' dtemp=dtemp
 dnsc  6   5  dnsxa  area='(ansx/2)*sbar'  pj='(pnsx/2)*sbar' dtemp=dtemp

 rsb   6  sx  r='rsx'

 * n+ to sx diodes
 *
 .model dnsxa d
 + level = 1
 +  dcap = 2
 +  tlev = 0
 + tlevc = 0
 +  tref = 25
 +    eg = 1.11
 +   xti = 3.0
 +    js = js_n
 +   jsw = jsw_n
 +     n = n_n
 +    rs = '3*rg*ansx'
 +    cj = 'cj_n'
 +    pb = pb_n
 +    mj = mj_n
 +   cjp = cjsw_n
 +   php = pbsw_n
 +  mjsw = mjsw_n
 +    vb = 11.5

 .ends opndres
 .include './opppcres.inc'
 * path, component, release: cmos8base/rel/hspice/models/opppcres.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.1.1.3 08/09/02 16:45:47
 *
 *>  ibm cmrf8sf/bicmos8wl  opppcres    p+ poly resistor (over sx or bb)
 *
 ***********************************************************************
 *
 *  distributed r-c network which accounts for end resistance effects,
 *  parasitic capacitance and includes a fixed substrate resistance.
 *
 *          rend        rmid                     rmid        rend
 *  in  o--/\/\/\--o---/\/\/\---------o---------/\/\/\---o--/\/\/\--o  out
 *                 |                  |                  |
 *                 |                  |                  |
 *               ----               -----              -----
 *          cpcx ----          cpcx -----         cpcx -----
 *                 |                  |                  |
 *                 |                  |                  |
 *                 \                  \                  \
 *             rg  /               rg /               rg /
 *                 \                  \                  \
 *                 |                  |                  |
 *                 o------------------o------------------o
 *                                    |
 *   parasitic capacitance is         \
 *   divided among c elements         / rsub
 *   in 1/6 - 2/3 - 1/6 ratios        \
 *                                    |
 *                                    o substrate (sx)
 *
 ***********************************************************************
 *
 *  dimensions: w = design width  of pc
 *              l = design length of op
 *
 *  syntax:     specify both width and length:
 *              xxx  in out sx  opppcres (w=2u  l=5u)
 *
 *       or     specify width and resistance:
 *              xxx  in out sx  opppcres (w=2u  r=520)
 *
 *  series:     sbar  --> defined model parameter,   reff = rbar * sbar
 *
 *  parallel:      m  --> implicit hspice parameter, reff = rbar / m
 *
 *               par  --> defined model parameter,   reff = rbar / par
 *
 *  optional:   dtemp --> device temperature difference with respect to
 *                        the simulated circuit temperature (deg c).
 *
 *                rsx --> fixed substrate resistance, default = 50 ohm.
 *
 *		  bp --> specify groundplane, default bp=3 (sx)
 *                                                     bp=2 (bb)
 *                                                     bp=1 (nw)
 *
 *  notes:
 *
 *  1. model supports only rectangular resistors with contacts at each
 *     end of the resistor bar. "dogbone" or multiple tap layouts are 
 *     not supported.
 *
 *  2. model assumes minimum groundrule spacings used for placing contacts
 *     to calculate the end resistance effects based on op design length.
 *
 *
 * ibm confidential
 * (c) 2006 ibm corporation
 *                                
 ***********************************************************************
 *
 .subckt opppcres  in out sx  w=2u l=-1u r=-1  sbar=1  par=1  dtemp=0 rsx=50  bp=3

 .param
 * check for minimum width, calculate effective width
 + opwdth = 'max(w,0.2u) + oppcdwf'
 + opwdthn = 'max(w,0.2u) + oppcdwn'
 + opwpc = 'max(w,0.2u) + tdelpc'

 * calculate op length, assumes w,r and groundrule spacings for contacts
 + pleqn = '((r*opwdthn - 2*oppcrenn) / oppcrsn)'

 * select op length, user input takes precedence over calculated length
 + plnom = 'max(l,0) + ((l-abs(l))/(2*l))*pleqn'

 * check for minimum length, calculate effective length
 + oplen = 'max(plnom,0.80u)'

 * resistance calculation
 + rmid = 'oppcrsf * (oplen / opwdth) / 2'
 + rend = 'oppcrenf / opwdth'

 * calculate area, perimeter for capacitance
 * subtract delta w, delta l to obtain drawn dimensions,
 * then include region outside of op mask
 + opcaplen  = '2 * (oplen + 2*oppcendf + opwpc)'
 + opcaparea = '(oplen + 2*oppcendf) * opwpc'

 * partition capacitance area, perimeter
 + apcx = 'opcaparea / 3'
 + ppcx = 'opcaplen / 3'

 * mis-match calculation
 + opma   = 'oppcma * oppcma / (oplen * opwdth * 1e12)'
 + opml   = 'oppcml * oppcml / (oplen * oplen * 1e12)'
 + opmw   = 'oppcmw * oppcmw / (opwdth * opwdth * oplen * 1e18)'
 + op3sig = '0.01 * sqrt(opma + opml + opmw)'
 + opmm   = 'op3sig * 0.7071 / sqrt(sbar*par)'
 + mmres  = agauss(0,1,3)
 + mmatr  = '1 + (opmm * mmres)'

 * effective resistance from conductance
 * the ptbb and ptsx are also used for the capacitance
 + ptnw = '(bp==1)'
 + ptbb = '(bp==2)'
 + ptsx = '(bp==3)'
 + kw = '(ptnw*pcnwrgw + ptbb*pcbbrgw + ptsx*pcsxrgw)'
 + kl = '(ptnw*pcnwrgl + ptbb*pcbbrgl + ptsx*pcsxrgl)'
 + rg = '1/(kw*opwdth + kl*oplen)'
 *flicker noise
 + lnoi = '(oplen)*1e6'
 + wnoi = '(opwdth )*1e6'
 + rtot = '2*rmid+2*rend'
 + k1 = 'exp(log(8e-11*(wnoi/lnoi)+0.60e-11)+dnoipc*log(1.2))*(rtot/rmid)*(rtot/rmid)/(sbar*par)'

 * resistor network
 rea  in   1  		'rend*mmatr*sbar'  dtemp=dtemp  tc1=oppcrntc
 reb   5 out  		'rend*mmatr*sbar'  dtemp=dtemp  tc1=oppcrntc
 rma   1   3  resnoi   r='rmid*mmatr*sbar'  dtemp=dtemp  tc1=oppcrst1  tc2=oppcrst2 
 rmb   3   5  		'rmid*mmatr*sbar'  dtemp=dtemp  tc1=oppcrst1  tc2=oppcrst2

 cpca  1  11  c='((ptnw+ptsx+0.9*ptbb)*(apcx*oppcdown + ppcx*oppcfrng)/2)*sbar'
 cpcb  3  31  c='((ptnw+ptsx+0.9*ptbb)*2*(apcx*oppcdown + ppcx*oppcfrng))*sbar'
 cpcc  5  51  c='((ptnw+ptsx+0.9*ptbb)*(apcx*oppcdown + ppcx*oppcfrng)/2)*sbar'

 rga   11  6  '6*rg/sbar'
 rgb   31  6  '1.5*rg/sbar'
 rgc   51  6  '6*rg/sbar'

 rsb   6  sx  r='rsx'

 .model resnoi r noise=1 kf=k1 af=1.94 lf=0 wf=2 ef=1 dw=0u dlr=0u l=lnoi w=wnoi

 .ends opppcres
 .include './oprppres.inc'
 * path, component, release: cmos8base/rel/hspice/models/oprppres.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.3 08/09/02 10:17:09
 *
 *>  ibm cmrf8sf/bicmos8wl  oprppres    rp poly resistor (over sx or bb)
 *
 ***********************************************************************
 *
 *  distributed r-c network which accounts for end resistance effects,
 *  parasitic capacitance and includes a fixed substrate resistance.
 *
 *          rend        rmid                     rmid        rend
 *  in  o--/\/\/\--o---/\/\/\---------o---------/\/\/\---o--/\/\/\--o  out
 *                 |                  |                  |
 *                 |                  |                  |
 *               ----               -----              -----
 *          cpcx ----          cpcx -----         cpcx -----
 *                 |                  |                  |
 *                 |                  |                  |
 *                 \                  \                  \
 *             rg  /               rg /               rg /
 *                 \                  \                  \
 *                 |                  |                  |
 *                 o------------------o------------------o
 *                                    |
 *   parasitic capacitance is         \
 *   divided among c elements         / rsub
 *   in 1/6 - 2/3 - 1/6 ratios        \
 *                                    |
 *                                    o substrate (sx)
 *
 ***********************************************************************
 *
 *  dimensions: w = design width  of pc
 *              l = design length of op
 *
 *  syntax:     specify both width and length:
 *              xxx  in out sx  oprppres (w=2u  l=5u)
 *
 *       or     specify width and resistance:
 *              xxx  in out sx  oprppres (w=2u  r=520)
 *
 *  series:     sbar  --> defined model parameter,   reff = rbar * sbar
 *
 *  parallel:      m  --> implicit hspice parameter, reff = rbar / m
 *
 *               par  --> defined model parameter,   reff = rbar / par
 *
 *  optional:   dtemp --> device temperature difference with respect to
 *                        the simulated circuit temperature (deg c).
 *
 *                rsx --> fixed substrate resistance, default = 50 ohm.
 *
 *		  bp --> specify groundplane, default bp=3 (sx)
 *                                                     bp=2 (bb)
 *                                                     bp=1 (nw)
 *
 *  notes:
 *
 *  1. model supports only rectangular resistors with contacts at each
 *     end of the resistor bar. "dogbone" or multiple tap layouts are 
 *     not supported.
 *
 *  2. model assumes minimum groundrule spacings used for placing contacts
 *     to calculate the end resistance effects based on op design length.
 *
 *
 * ibm confidential
 * (c) 2008 ibm corporation
 *                                
 ***********************************************************************
 *
 .subckt oprppres  in out sx  w=2u l=-1u r=-1  sbar=1  par=1  dtemp=0 rsx=50  bp=3

 .param
 * check for minimum width, calculate effective width
 + opwdth = 'max(w,0.74u) + oprpdwf'
 + opwdthn = 'max(w,0.74u) + oprpdwn'
 + opwpc = 'max(w,0.74u) + tdelpc'

 * calculate op length, assumes w,r and groundrule spacings for contacts
 + pleqn = '((r*opwdthn - 2*oprprenn) / oprprsn)'

 * select op length, user input takes precedence over calculated length
 + plnom = 'max(l,0) + ((l-abs(l))/(2*l))*pleqn'

 * check for minimum length, calculate effective length
 + oplen = 'max(plnom,0.80u)'

 * resistance calculation
 + rmid = 'oprprsf * (oplen / opwdth) / 2'
 + rend = 'oprprenf / opwdth'

 * calculate area, perimeter for capacitance
 * subtract delta w, delta l to obtain drawn dimensions,
 * then include region outside of op mask
 + opcaplen  = '2 * (oplen + 2*oppcendf + opwpc)'
 + opcaparea = '(oplen + 2*oppcendf) * opwpc'

 * partition capacitance area, perimeter
 + apcx = 'opcaparea / 3'
 + ppcx = 'opcaplen / 3'

 * mis-match calculation
 + opma   = 'oprpma * oprpma / (oplen * opwdth * 1e12)'
 + opml   = 'oprpml * oprpml / (oplen * oplen * 1e12)'
 + opmw   = 'oprpmw * oprpmw / (opwdth * opwdth * oplen * 1e18)'
 + op3sig = '0.01 * sqrt(opma + opml + opmw)'
 + opmm   = 'op3sig * 0.7071 / sqrt(sbar*par)'
 + mmres  = agauss(0,1,3)
 + mmatr  = '1 + (opmm * mmres)'

 * effective resistance from conductance
 * the ptbb and ptsx are also used for the capacitance
 + ptnw = '(bp==1)'
 + ptbb = '(bp==2)'
 + ptsx = '(bp==3)'
 + kw = '(ptnw*rpnwrgw + ptbb*rpbbrgw + ptsx*rpsxrgw)'
 + kl = '(ptnw*rpnwrgl + ptbb*rpbbrgl + ptsx*rpsxrgl)'
 + rg = '1/(kw*opwdth + kl*oplen)'
 *flicker noise
 + lnoi = '(oplen)*1e6'
 + wnoi = '(opwdth )*1e6'
 + rtot = '2*rmid+2*rend'
 + k1 = 'exp(log(9e-11*(wnoi/lnoi))+dnoirp*log(1.15))*(rtot/rmid)*(rtot/rmid)/(sbar*par)'

 * resistor network
 rea  in   1  		'rend*mmatr*sbar'  dtemp=dtemp  tc1=oprprntc
 reb   5 out  		'rend*mmatr*sbar'  dtemp=dtemp  tc1=oprprntc
 rma   1   3  resnoi   r='rmid*mmatr*sbar'  dtemp=dtemp  tc1=oprprst1  tc2=oprprst2
 rmb   3   5  		'rmid*mmatr*sbar'  dtemp=dtemp  tc1=oprprst1  tc2=oprprst2

 cpca  1  11  c='((ptnw+ptsx+0.9*ptbb)*(apcx*oppcdown + ppcx*oppcfrng)/2)*sbar'
 cpcb  3  31  c='((ptnw+ptsx+0.9*ptbb)*2*(apcx*oppcdown + ppcx*oppcfrng))*sbar'
 cpcc  5  51  c='((ptnw+ptsx+0.9*ptbb)*(apcx*oppcdown + ppcx*oppcfrng)/2)*sbar'

 rga   11  6  '6*rg/sbar'
 rgb   31  6  '1.5*rg/sbar'
 rgc   51  6  '6*rg/sbar'

 rsb   6  sx  r='rsx'

 .model resnoi r noise=1 kf=k1 af=1.93 lf=0 wf=2 ef=1 dw=0u dlr=0u l=lnoi w=wnoi

 .ends oprppres
 .include './oprrpres.inc'
 * path, component, release: cmos8base/rel/hspice/models/oprrpres.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.3 09/06/02 09:36:10
 *
 *>  ibm cmrf8sf/bicmos8wl  oprrpres   rr poly resistor (over sx or bb)
 *
 ***********************************************************************
 *
 *  distributed r-c network which accounts for end resistance effects,
 *  parasitic capacitance and includes a fixed substrate resistance.
 *
 *           rend       rmid      eva    evb     rmid       rend
 *   in  o--/\/\/\--o--/\/\/\--o--l|--o--|l--o--/\/\/\--o--/\/\/\--o  out
 *                  |                 |                 |
 *                  |                 |                 |
 *                ----              -----             -----
 *           cpcx ----         cpcx -----        cpcx -----
 *                  |                 |                 |
 *                  |                 |                 |
 *                  \                 \                 \
 *              rg  /              rg /              rg /
 *                  \                 \                 \
 *                  |                 |                 |
 *                  o-----------------o-----------------o
 *                                    |
 *   parasitic capacitance is         \
 *   divided among c elements         / rsub
 *   in 1/6 - 2/3 - 1/6 ratios        \
 *                                    |
 *                                    o substrate (sx)
 *
 ***********************************************************************
 *
 *  dimensions: w = design width  of pc
 *              l = design length of op
 *
 *  syntax:     specify both width and length:
 *              xxx  in out sx  oprrpres (w=2u  l=5u)
 *
 *       or     specify width and resistance:
 *              xxx  in out sx  oprrpres (w=2u  r=9.0k)
 *
 *  series:     sbar  --> defined model parameter,   reff = rbar * sbar
 *
 *  parallel:      m  --> implicit hspice parameter, reff = rbar / m
 *
 *               par  --> defined model parameter,   reff = rbar / par
 *
 *  optional:   dtemp --> device temperature difference with respect to
 *                        the simulated circuit temperature (deg c).
 *
 *                 sh --> self-heating switch, default = 1
 *                        no self-heating effects => sh=0
 *
 *                rsx --> fixed substrate resistance, default = 50 ohm.
 *
 *		  bp --> specify groundplane, default bp=3 (sx)
 *                                                     bp=2 (bb)
 *                                                     bp=1 (nw)
 *
 *  notes:
 *
 *  1. model supports only rectangular resistors with contacts at each
 *     end of the resistor bar. "dogbone" or multiple tap layouts are 
 *     not supported.
 *
 *  2. model assumes minimum groundrule spacings used for placing contacts
 *     to calculate the end resistance effects based on op design length.
 *
 *
 * ibm confidential
 * (c) 2006 ibm corporation
 *                                
 ***********************************************************************
 *
 .subckt oprrpres  in out sx  w=2u l=-1u r=-1  sbar=1 par=1  sh=1  dtemp=0  rsx=50  bp=3

 .param
 * check for minimum width, calculate effective width
 + opwdth = 'max(w,0.74u) + oprrdwf'
 + opwdthn = 'max(w,0.74u) + oprrdwn'
 + opwpc = 'max(w,0.74u) + tdelpc'

 * calculate op length, assumes w,r and groundrule spacings for contacts
 + rend2n = 'oppcrenn'
 + pleqn  = '((r*opwdthn - 2*rend2n - 2*oppcrsn*opdlbnn) / oprrrsn) + 2*opdlbnn'

 * select op length, user input takes precedence over calculated length
 + plnom = 'max(l,0) + ((l-abs(l))/(2*l))*pleqn'

 * check for minimum length, calculate effective length
 + oplen = 'max(plnom,1.06u)'

 * resistance calculation
 + rmid  = 'oprrrsf * ((oplen - 2*opdlbnf) / opwdth) / 2'
 + rend1 = 'oppcrsf * (opdlbnf / opwdth)'
 + rend2 = 'oppcrenf / opwdth'

 * calculate area, perimeter for capacitance
 * subtract delta w, delta l to obtain drawn dimensions,
 * then include region outside of op mask
 + opcaplen  = '2 * (oplen + 2*oppcendf + opwpc)'
 + opcaparea = '(oplen + 2*oppcendf) * opwpc'

 * partition capacitance area, perimeter
 + apcx = 'opcaparea / 3'
 + ppcx = 'opcaplen / 3'

 * mis-match calculation
 + opma   = 'oprrma * oprrma / (oplen * opwdth * 1e12)'
 + opml   = 'oprrml * oprrml / (oplen * oplen * 1e12)'
 + opmw   = 'oprrmw * oprrmw / (opwdth * opwdth * 1e12)'
 + op3sig = '0.01 * sqrt(opma + opml + opmw)'
 + opmm   = 'op3sig * 0.7071 / sqrt(sbar*par)'
 + mmres  = agauss(0,1,3)
 + mmatr  = '1 + (opmm * mmres)'

 *  the voltage coefficients take into effect self-heating
 + usesh = '((gsh==1)&&(sh==1))||(gsh==2)'    $ self-heating switch
 + psh = 'usesh*oprrshk * exp(oprrshm*log(opwdth*oplen*1e12)) / (2*rmid*opwdth*oplen*sbar*sbar*1e12)'
 *

 * effective resistance from conductance
 * the ptbb and ptsx are also used for the capacitance
 + ptnw = '(bp==1)'
 + ptbb = '(bp==2)'
 + ptsx = '(bp==3)'
 + kw = '(ptnw*rrnwrgw+ptbb*rrbbrgw+ptsx*rrsxrgw)'
 + kl = '(ptnw*rrnwrgl+ptbb*rrbbrgl+ptsx*rrsxrgl)'
 + rg = '1/(kw*opwdth + kl*oplen)'

 + pdeltat='temper-25+dtemp'
 + rmidt = 'rmid*(1.0+(oprrtc1*pdeltat)+(oprrtc2*pdeltat*pdeltat))'
 *flicker noise
 + lnoi = '(oplen)*1e6'
 + wnoi = '(opwdth )*1e6'
 + rtot = '2*rmid+2*rend1+2*rend2'
 + k1 = 'exp(log(1e-10*(wnoi/lnoi))+dnoirr*log(1.05))*(rtot/rend1)*(rtot/rend1)/(sbar*par)'

 * resistor network
 rea2 in  12  		'rend2*mmatr*sbar'  dtemp=dtemp  tc1=oppcrntc
 rea1 12   1  resnoi   r='rend1*mmatr*sbar'  dtemp=dtemp  tc1=oppcrst1  tc2=oppcrst2
 rma  1    2  		'rmidt*mmatr*sbar/(1 + psh*v(in,out)*v(in,out))'
 rmb  4    5  		'rmidt*mmatr*sbar/(1 + psh*v(in,out)*v(in,out))'
 reb1 5   52  		'rend1*mmatr*sbar'  dtemp=dtemp  tc1=oppcrst1  tc2=oppcrst2
 reb2 52 out  		'rend2*mmatr*sbar'  dtemp=dtemp  tc1=oppcrntc

 eva   2   3  poly(2)  3 sx  in   2  0 0 0 0 oprrvcr
 evb   3   4  poly(2)  3 sx  4  out  0 0 0 0 oprrvcr

 cpca  1  11  c='((ptnw+ptsx+0.9*ptbb)*(apcx*oppcdown + ppcx*oppcfrng)/2)*sbar'
 cpcb  3  31  c='((ptnw+ptsx+0.9*ptbb)*2*(apcx*oppcdown + ppcx*oppcfrng))*sbar'
 cpcc  5  51  c='((ptnw+ptsx+0.9*ptbb)*(apcx*oppcdown + ppcx*oppcfrng)/2)*sbar'

 rga   11  6  '6*rg/sbar'
 rgb   31  6  '1.5*rg/sbar'
 rgc   51  6  '6*rg/sbar'

 rsb   6  sx  r='rsx'

 .model resnoi r noise=1 kf=k1 af=1.84 lf=0 wf=2 ef=1 dw=0u dlr=0u l=lnoi w=wnoi

 .ends oprrpres
 .include './pcapc.inc'
 * path, component, release: cmos8base/rel/hspice/models/pcapc.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.1 06/02/28 16:18:21
 *
 *>  ibm cmrf8sf/bicmos8wl  pcapc     extracted parasitic capacitance model
 *
 ***********************************************************************
 *
 *  model can be used in conjunction with the design system extraction
 *  program which calculates/combines passive wiring parasitic capacitance
 *  per node.
 *
 *                  o  in
 *                  |
 *                  |
 *                ----
 *                             capacitance multiplied by expected
 *                ----         statistical process variation.
 *                  |
 *                  |
 *                  o  out
 *
 ***********************************************************************
 *
 *  syntax:     specify capacitance:
 *              xxx  in out  pcapc  c=10p
 *
 *
 *  notes:
 *
 *  1. units for input capacitance parameter are farads.
 *
 *
 * ibm confidential
 * (c) 2006 ibm corporation
 *                                
 ***********************************************************************
 *
 .subckt pcapc  in out  c=1f

 cpass  in out  'c * tpcap'

 .ends pcapc
 .include './pfet.inc'
 * path, component, release: cmos8base/rel/hspice/models/pfet.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.7 08/08/28 20:57:22
 *
 *>  ibm cmrf8sf/bicmos8wl  pfet  1.5v pfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) pfet l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.12u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 0    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 1    <- gate connection switch (1->single-ended,
 *                                                       2->double-ended)
 *          + rbodymod = 0    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +  rf_rsub = 1    <- body resistance multiplier
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---
 *            gate     | |     (bsim4.4     )    bulk
 *              o------| |-----(internal    )-----o
 *                     | |     (rsub network)
 *                     | |---
 *                          |
 *                          |
 *                          |
 *                          o
 *                        source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2008 ibm corporation
 *
 ***************************************************************************
 *
 .subckt pfet d g s b w=1.0u l=0.12u nf=1 par=1 dtemp=0
 +                    as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                    lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                    panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                    panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                    plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                    rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1
 +                    rbps=100 rbpd=100 rbsb=1e9 rbpb=50 rbdb=1e9
 .param
 *
 * if monte carlo and "pl*" instance parameter = zero, use values from skew/process file
 +   a_plnest     = limit(-0.5,0.5)
 +   sel_plnest   = '((plnest == 1) || ((a_plnest*plnest) == 1))'
 +   a_plorient   = limit(-0.5,0.5)
 +   sel_plorient = '((plorient == 1) || ((a_plorient*plorient) == 1))'
 +   a_pld200     = limit(-0.5,0.5)
 +   sel_pld200   = '((pld200 == 1) || ((a_pld200*pld200) == 1))'
 +   a_pwd100     = limit(-0.5,0.5)
 +   sel_pwd100   = '((pwd100 == 1) || ((a_pwd100*pwd100) == 1))'
 *
 * calculate aclv/acwv and final lint/wint params
 +   aclv_ni_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_nest == 2))/aclv_factor + cnr_p*(1-mc_fet_mm_f)*(pc_nest != 2))'
 +   aclv_or_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_orient == 2))/aclv_factor + cnr_p*(1-mc_fet_mm_f)*(pc_orient != 2))'
 +   aclv_dist_sws = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_dist == 2))/aclv_factor + cnr_p*(1-mc_fet_mm_f)*(pc_dist != 2))'
 +   aclv_ni       = '((fet_aclv_nest*sel_plnest) + (fet_aclv_iso*(1-sel_plnest)))*aclv_ni_sws'
 +   aclv_or       = '((fet_aclv_v*sel_plorient) + (fet_aclv_h*(1-sel_plorient)))*aclv_or_sws'
 +   aclv_dist     = '((fet_aclv_out*sel_pld200) + (fet_aclv_in*(1-sel_pld200)))*aclv_dist_sws'
 +   aclv_ran      = agauss(cnr_p,mc_sw,3)
 *
 +   acwv_dist_sws = '(-mc_sw + ((mc_fet_mm_f != 1) && (rx_dist == 2))/acwv_factor + cnr_p*(1-mc_fet_mm_f)*(rx_dist != 2))'
 +   acwv_dist     = '((fet_acwv_out*sel_pwd100) + (fet_acwv_in*(1-sel_pwd100)))*acwv_dist_sws'
 +   acwv_ran      = agauss('-cnr_p',mc_sw,3)
 *
 .param
 +   xc_lint_1 = '(aclv_ni*aclv_fet_ni + aclv_or*aclv_fet_or)'
 +   xc_lint_2 = '((aclv_dist*aclv_fet_dist) + (aclv_ran + (mc_global == 2))*aclv_fet_ran)'
 +   xx_lint_3 = '(mc_fet_mm_f + (aclv_factor*(1-mc_fet_mm_f)))'
 +   xx_lint_4 = '((mc_global == 2)*(-xlint_p) + (mc_global != 2))'
 +   xc_lint_t = '((xc_lint_1 + xc_lint_2)*xx_lint_3)*xx_lint_4'
 *
 +   xc_wint_1 = '((acwv_dist*acwv_fet_dist) + (acwv_ran + (mc_global == 2))*acwv_fet_ran)'
 +   xx_wint_2 = '(mc_fet_mm_f + (acwv_factor*(1-mc_fet_mm_f)))'
 +   xx_wint_3 = '((mc_global == 2)*(xwint_p) + (mc_global != 2))'
 +   xc_wint_t = '((xc_wint_1)*xx_wint_2)*xx_wint_3'
 *
 *     final =  nominal      +      acv * dist(-1,1)      +        global * dist(-1,1)
 + lint_pfet = 'lint_p + 1.5*total_aclv_fet*xc_lint_t*fet_geo_mm + ltol_p*xlint_p'
 + wint_pfet = 'wint_p + 1.5*total_acwv_fet*xc_wint_t*fet_geo_mm + wtol_p*xwint_p'
 *
 .param
 * switch to turn on or off the sti stress effects
 +  isti = '((gstis==1)&&(lstis==1))||(gstis==2)'
 *
 * switch to turn on or off the nwell proximity effects
 +  inw  = '((gwells==1)&&(lnws==1))||(gwells==2)'
 *
 * nwell proximity effect calculations
 +  proxpre  =  0.015e-06            $ [v-m]
 +  proxlen  = -0.35e-06             $ [m]
 +  proxk1   =  0.375                $ [unitless]
 +  rxwparm1 = -0.28                 $ [unitless]
 +  rxwparm2 =  0.56e-06             $ [unitless]
 +  rxwparm3 =  0.0e-6               $ [m]
 +  nw1b1   = 'panw1 /(band1 -proxlen)'
 +  nw2b2   = 'panw2 /(band2 -proxlen)'
 +  nw3b3   = 'panw3 /(band3 -proxlen)'
 +  nw4b4   = 'panw4 /(band4 -proxlen)'
 +  nw5b5   = 'panw5 /(band5 -proxlen)'
 +  nw6b6   = 'panw6 /(band6 -proxlen)'
 +  nw7b7   = 'panw7 /(band7 -proxlen)'
 +  nw8b8   = 'panw8 /(band8 -proxlen)'
 +  nw9b9   = 'panw9 /(band9 -proxlen)'
 +  nw10b10 = 'panw10/(band10-proxlen)'
 +  prox_term = 'inw*(proxpre/(l*w))*(nw1b1+nw2b2+nw3b3+nw4b4+nw5b5+nw6b6+nw7b7+nw8b8+nw9b9+nw10b10)'
 +  k1_p_base = 0.318
 +  k1_p      = 'k1_p_base+proxk1*prox_term'
 *
 * mis-match calculations: include multiplicity (par)
 .param
 +  kvt  =  8.1e-9
 +  kvtl =  5.0e-8
 +  kvtw = -4.0e-8
 +  kmb  =  2.4e-6
 +  kmbl = -2.5e-7
 +  kmbw = -5.0e-6
 +  sigvth  = 'kvt/sqrt((w-kvtw)*par*(l-kvtl))'
 +  sigbeta = 'kmb/sqrt((w-kmbw)*par*(l-kmbl))'
 *
 +  dvth0 = agauss(0,1,3)               $ local mis-match distributions
 +  dbeta = agauss(0,1,3)
 *                                      $ select local vs global vs corner
 +  d_vth0 = 'dvth0*(mc_global != 2) + xpvth0*(mc_global == 2) - cnr_p'
 +  d_beta = 'dbeta*(mc_global != 2) + dpu0*(mc_global == 2) - cnr_p'
 *
 +  mmvth0 = 'sigvth * d_vth0 * fet_dop_mm'    $ vth0 mis-match
 +  mmbeta = 'sigbeta * d_beta * fet_dop_mm'   $ beta mis-match
 *
 +  pvt_var = 'mmvth0 - prox_term'      $ local vth0 variation
 *
 .param
 * flicker noise calculations: statistics are function of w and l and par
 +  noideva = '10u * 0.12u * 10'        $ device area for extracted variation
 +  noistd  = 1.1513                    $ worst case variation value
 *
 +  noi_scale = 'noistd-min(log(sqrt(w*l*par/noideva)),0)'   $ area scaling
 +  noiamult  = 'exp(dnoi_p*noi_scale)'                  $ gate bias scaliing
 +  noibmult  = 'exp(dnoi_p*noi_scale/1.4307)'
 +  noicmult  = 'exp(dnoi_p*noi_scale/2.5129)'
 *
 * thermal noise scaling equation
 +  tnoitanha = -0.5
 +  tnoitanhb = 6.02e6
 +  tnoitanhc = 3.0e13
 +  ntnoi_pfet = '1.18/tanh(tnoitanha + tnoitanhb*l + tnoitanhc*l*l)'
 *
 * gate resistance scaling equations
 +  rg11 = '0.05e6*l + 15'
 +  rg12 = '30e6*l - 2.18'
 +  xrg1 = 'max(0.1,(rg11*rg12/(rg11+rg12)))'
 +  xrg2 = 'max(0.0,(1.3351*(1e5*w + 8)/(2e7*l)))'
 *
 m0 d g s b  pch  w=w l=l nf=nf dtemp=dtemp
 +                as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                sa='isti*sa' sb='isti*sb' sd='isti*sd'
 +                rgatemod=rgatemod rbodymod=rbodymod
 *
 ***************************************************************************
 * pfet bsim4v4 model
 ***************************************************************************
 .model pch  pmos  (       level   = 54             permod  = 1
 +version = 4.4            binunit = 1              paramchk= 1
 +mobmod  = 0              rdsmod  = 1              epsrox  = 3.9
 +toxe    = toxe_p         toxp    = toxp_p         toxm    = 3.35e-9
 +xj      = 1.2e-7         ndep    = 4e17           ngate   = 1.2e20
 +nsd     = 1e20           rsh     = rsh_p          rshg    = rsh_p
 +vth0    = 'vth0_p+pvt_var'                        vfb     = -1
 +pvth0   = pvth0_p        phin    = 0
 +k1      = k1_p           k2      = 1.306e-3       k3      = 8
 +k3b     = 15             w0      = 1e-6           lpe0    = 1.25e-7
 +lpeb    = 8e-8           dvt0    = 1e-3           dvt1    = 1
 +dvt2    = -1.436e-5      dvtp0   = 1e-7           dvtp1   = 0.08
 +dvt0w   = 0.3            dvt1w   = 2.61e6         dvt2w   = 0.103
 +u0    = 'u0_p+mmbeta'    ua      = 3.7e-10        lua     = -3.5e-11
 +wua     = 2.5e-11        ub      = 1.8e-18        uc      = 4e-11
 +eu      = 1              vsat    = 1.1e5          a0      = 1
 +la0     = -0.07          pa0     = 0.045          ags     = 0.75
 +lags    = 0              b0      = 1e-8           b1      = 1e-8
 +keta    = -0.08          a1      = 0              a2      = 1
 +wint    = 0              lint    = 0              dwg     = -9.6e-9
 +dwb     = 0              voff    = -0.108         voffl   = -3.7e-9
 +minv    = 0              nfactor = 0.387          lnfactor= 0.125
 +eta0    = 8.96e-3        etab    = 0              dsub    = 0.56
 +cit     = 1e-3           cdsc    = 9.97e-5        cdscb   = 0
 +cdscd   = 0              pclm    = 2              pdiblc1 = 0.1495
 +pdiblc2 = 8.1e-3         pdiblcb = -0.488         drout   = 0.491
 +pscbe1  = 4.24e8         pscbe2  = 1e-5           pvag    = 6.05
 +delta   = 0.01           fprout  = 3.07e-5        pdits   = 0.24
 +lpdits  = 0.04           pditsl  = 0              pditsd  = 1.077
 +lc      = 0
 +xn      = 3              rdw     = rdsw_p         rdwmin  = 0
 +rsw     = rdsw_p         rswmin  = 0              prwg    = 0
 +prwb    = 0              wr      = 1              lu0     = -1.6
 +wu0     = 4              pu0     = -0.3
 +alpha0  = 8.2e-10        alpha1  = 0.058          beta0   = 13.5
 ***************************************************************************
 * jds/vt temperature parameters
 ***************************************************************************
 +tempmod = 0              tnom    = 25             ute     = -1.2
 +kt1     = -0.234         kt1l    = -6.1e-9        kt2     = 0
 +ua1     = 4.34e-10       ub1     = -2.4e-18       uc1     = -2e-10
 +at      = 3.3e4          prt     = 0              wute    = -0.03
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 +igcmod  = 1              igbmod  = 1              toxref  = 'toxe_p+0.35e-9'
 +agidl   = 5.9e-9         bgidl   = 1.7378e9       cgidl   = 1
 +egidl   = 0.55           aigbacc = 0.0111         bigbacc = 1.7e-3
 +cigbacc = -0.022         nigbacc = 1.99           aigbinv = 7.84e-3
 +bigbinv = 8.02e-4        cigbinv = 0.045          eigbinv = 1.514
 +nigbinv = 2.29           aigc    = 6.80e-3        bigc    = 1.684e-4
 +cigc    = -0.016         aigsd   = 5.68e-3        bigsd   = 1e-4
 +cigsd   = 8.98e-4        dlcig   = 2.13969e-9     nigc    = 0.709
 +poxedge = 1              pigcd   = 3.36           ntox    = 1
 +laigbacc= 1.382e-4       lbigbacc= -1.613e-5      lcigbacc= -8.6e-3
 +lnigbacc= 0              laigbinv= 1.23e-5        lbigbinv= -5.6e-6
 +lcigbinv= -2.186e-3      leigbinv= -0.015         lnigbinv= 0
 +laigc   = 3.6e-5         lbigc   = -3.08e-6       lcigc   = -2.8e-3
 +lnigc   = 0              laigsd  = 6.12e-5        lbigsd  = 1.34e-5
 +lcigsd  = 6.598e-4       lpoxedge= 0              lpigcd  = 0
 ***************************************************************************
 * sti stress model parameters
 ***************************************************************************
 +saref   = 3e-6           sbref   = 3e-6           wlod    = 0
 +ku0     = 3.5e-8         kvsat   = -1             tku0    = 0
 +lku0    = -0.75e-8       wku0    = 0              llodku0 = 1
 +wlodku0 = 1              kvth0   = 0.15e-10       lkvth0  = 0.75e-9
 +wkvth0  = 0              pkvth0  = 0              llodvth = 1
 +wlodvth = 1              stk2    = -3e-9          lodk2   = 1
 +steta0  = 0              lodeta0 = 1
 ***************************************************************************
 * source/drain to body junction diode parameters
 ***************************************************************************
 +diomod  = 1             ijthdfwd= 0.1            ijthsfwd= 0.1
 +jss     = js_p          jsd     = js_p           jsws    = jsw_p
 +jswd    = jsw_p         jswgs   = jsw_p          jswgd   = jsw_p
 +cjs     = cj_p          cjd     = cj_p           cjsws   = cjsw_p
 +cjswd   = cjsw_p        cjswgs  = cjsg_p         cjswgd  = cjsg_p
 +mjs     = mj_p          mjd     = mj_p           mjsws   = mjsw_p
 +mjswd   = mjsw_p        mjswgs  = mjsg_p         mjswgd  = mjsg_p
 +pbs     = pb_p          pbd     = pb_p           pbsws   = pbsw_p
 +pbswd   = pbsw_p        pbswgs  = pbsg_p         pbswgd  = pbsg_p
 +njs     = n_p           njd     = n_p            xjbvd   = 1
 +bvd     = bd_p          xjbvs   = 1              bvs     = bd_p
 ***************************************************************************
 * junction diode temperature parameters
 ***************************************************************************
 +tcj     = cta_p         tcjsw   = ctp_p          tcjswg  = ctp_p
 +tpb     = pta_p         tpbsw   = ptp_p          tpbswg  = ptp_p
 +xtis    = 3             xtid    = 3
 ***************************************************************************
 * capacitance-voltage (cv) parameters
 ***************************************************************************
 +capmod  = 2             xpart   = 0              dlc     = 17n
 +dwc     = 0             cgdo    = cgdo_p         cgso    = cgso_p
 +cgsl    = cgsl_p        cgdl    = cgdl_p         ckappas = 5
 +ckappad = 5             cf      = 0              cgbo    = 1.27e-10
 +acde    = 0.5           moin    = 5              noff    = 2
 +voffcv  = -0.085
 ***************************************************************************
 * layout dependence parameters
 ***************************************************************************
 +geomod  = '(1 - int((nf+1)/2) + int(nf/2))'       rgeomod = 1
 +xgl     = lwbpc          xgw     = 0.43e-6        xl    = '-2*lint_pfet'
 +xw    = '-2*wint_pfet'   dmcg    = 0.23e-6        dmci    = 0.32e-6
 +dwj     = 0              ngcon   = ngcon
 ***************************************************************************
 * rf model parameters
 ***************************************************************************
 +rgatemod= rgatemod       trnqsmod= 0              rbodymod= rbodymod
 +acnqsmod= 0              xrcrg1  = xrg1           xrcrg2  = xrg2
 +rbps    = 'rbps*rf_rsub' rbpd    = 'rbpd*rf_rsub'
 +rbsb    = 'rbsb*rf_rsub' rbpb    = 'rbpb*rf_rsub' rbdb    = 'rbdb*rf_rsub'
 ***************************************************************************
 * flicker noise parameters
 ***************************************************************************
 +fnoimod = 1           noia = '8.51e41*noiamult'   noib = '9e24*noibmult'
 +noic = '12e9*noicmult'   em      = 4.10e7         af      = 1
 +ef      = 1.15           kf      = 0
 ***************************************************************************
 * channel thermal noise parameters
 ***************************************************************************
 +tnoimod = 0              ntnoi   = ntnoi_pfet     )
 *
 .ends pfet
 .include './pfet_psp.inc'
 * path, component, release: cmos8base/rel/hspice/models/pfet_psp.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.1 10/10/12 14:47:16
 *
 *>  ibm cmrf8sf/bicmos8wl  pfetpsp  1.5v pfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) pfetpsp l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.12u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---
 *            gate     | |         bulk
 *              o------| |----------o
 *                     | |     
 *                     | |---
 *                          |
 *                          |
 *                          |
 *                          o
 *                        source
 *
 *         note: the ldd resistance is accounted for within the psp model.
 *
 * ibm confidential
 * (c) 2010 ibm corporation
 *
 ***************************************************************************
 .subckt pfetpsp d g s b
 +		     w=1.0u l=0.12u nf=1 par=1 dtemp=0
 +                    as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                    lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                    panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                    panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                    plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                    rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1
 +                    rbps=100 rbpd=100 rbsb=1e9 rbpb=50 rbdb=1e9
 .param
 *
 * if monte carlo and "pl*" instance parameter = zero, use values from skew/process file
 +   a_plnest     = limit(-0.5,0.5)
 +   sel_plnest   = '((plnest == 1) || ((a_plnest*plnest) == 1))'
 +   a_plorient   = limit(-0.5,0.5)
 +   sel_plorient = '((plorient == 1) || ((a_plorient*plorient) == 1))' 
 +   a_pld200     = limit(-0.5,0.5)
 +   sel_pld200   = '((pld200 == 1) || ((a_pld200*pld200) == 1))' 
 +   a_pwd100     = limit(-0.5,0.5)
 +   sel_pwd100   = '((pwd100 == 1) || ((a_pwd100*pwd100) == 1))'
 *
 * calculate aclv/acwv and final lint/wint params
 +   aclv_ni_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_nest == 2))/aclv_factor + cnr_p*(1-mc_fet_mm_f)*(pc_nest != 2))'
 +   aclv_or_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_orient == 2))/aclv_factor + cnr_p*(1-mc_fet_mm_f)*(pc_orient != 2))'
 +   aclv_dist_sws = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_dist == 2))/aclv_factor + cnr_p*(1-mc_fet_mm_f)*(pc_dist != 2))'
 +   aclv_ni       = '((fet_aclv_nest*sel_plnest) + (fet_aclv_iso*(1-sel_plnest)))*aclv_ni_sws'
 +   aclv_or       = '((fet_aclv_v*sel_plorient) + (fet_aclv_h*(1-sel_plorient)))*aclv_or_sws'
 +   aclv_dist     = '((fet_aclv_out*sel_pld200) + (fet_aclv_in*(1-sel_pld200)))*aclv_dist_sws'
 +   aclv_ran      = agauss(cnr_p,mc_sw,3)
 *
 +   acwv_dist_sws = '(-mc_sw + ((mc_fet_mm_f != 1) && (rx_dist == 2))/acwv_factor + cnr_p*(1-mc_fet_mm_f)*(rx_dist != 2))'
 +   acwv_dist     = '((fet_acwv_out*sel_pwd100) + (fet_acwv_in*(1-sel_pwd100)))*acwv_dist_sws'
 +   acwv_ran      = agauss('-cnr_p',mc_sw,3)
 *
 .param
 +   xc_lint_1 = '(aclv_ni*aclv_fet_ni + aclv_or*aclv_fet_or)'
 +   xc_lint_2 = '((aclv_dist*aclv_fet_dist) + (aclv_ran + (mc_global == 2))*aclv_fet_ran)'
 +   xx_lint_3 = '(mc_fet_mm_f + (aclv_factor*(1-mc_fet_mm_f)))'
 +   xx_lint_4 = '((mc_global == 2)*(-xlint_p) + (mc_global != 2))'
 +   xc_lint_t = '((xc_lint_1 + xc_lint_2)*xx_lint_3)*xx_lint_4'
 *
 +   xc_wint_1 = '((acwv_dist*acwv_fet_dist) + (acwv_ran + (mc_global == 2))*acwv_fet_ran)'
 +   xx_wint_2 = '(mc_fet_mm_f + (acwv_factor*(1-mc_fet_mm_f)))'
 +   xx_wint_3 = '((mc_global == 2)*(xwint_p) + (mc_global != 2))'
 +   xc_wint_t = '((xc_wint_1)*xx_wint_2)*xx_wint_3'
 *
 *     final =  nominal      +      acv * dist(-1,1)      +        global * dist(-1,1)
 + lint_pfet = 'lint_psp_p + 1.5*total_aclv_fet*xc_lint_t*fet_geo_mm + ltol_p*xlint_p'
 + wint_pfet = 'wint_psp_p + 1.5*total_acwv_fet*xc_wint_t*fet_geo_mm + wtol_p*xwint_p'
 *
 .param
 * switch to turn on or off the sti stress effects
 +  isti = '((gstis==1)&&(lstis==1))||(gstis==2)'
 *
 * switch to turn on or off the nwell proximity effects
 +  inw  = '((gwells==1)&&(lnws==1))||(gwells==2)'
 *
 * nwell proximity effect calculations
 +  proxpre  =  0.015e-06            $ [v-m]
 +  proxlen  = -0.35e-06             $ [m]
 +  proxk1   =  0.375                $ [unitless]
 +  rxwparm1 = -0.28                 $ [unitless]
 +  rxwparm2 =  0.56e-06             $ [unitless]
 +  rxwparm3 =  0.0e-6               $ [m]
 +  nw1b1   = 'panw1 /(band1 -proxlen)'
 +  nw2b2   = 'panw2 /(band2 -proxlen)'
 +  nw3b3   = 'panw3 /(band3 -proxlen)'
 +  nw4b4   = 'panw4 /(band4 -proxlen)'
 +  nw5b5   = 'panw5 /(band5 -proxlen)'
 +  nw6b6   = 'panw6 /(band6 -proxlen)'
 +  nw7b7   = 'panw7 /(band7 -proxlen)'
 +  nw8b8   = 'panw8 /(band8 -proxlen)'
 +  nw9b9   = 'panw9 /(band9 -proxlen)'
 +  nw10b10 = 'panw10/(band10-proxlen)'
 +  prox_term = 'inw*(proxpre/(l*w))*(nw1b1+nw2b2+nw3b3+nw4b4+nw5b5+nw6b6+nw7b7+nw8b8+nw9b9+nw10b10)'
 +  nsub_prox = '1.5e22*sqrt(prox_term)'
 *
 * mis-match calculations: include multiplicity (par)
 .param
 +  kvt  =  8.5e-9
 +  kvtl =  3.6e-8
 +  kvtw = -1.1e-7
 +  kmb  =  2.7e-10
 +  kmbl = -1.0e-7
 +  kmbw = -8.0e-7
 +  sigvth  = 'kvt/sqrt((w-kvtw)*par*(l-kvtl))'
 +  sigbeta = 'kmb/sqrt((w-kmbw)*par*(l-kmbl))'
 *
 +  dvth0 = agauss(0,1,3)               $ local mis-match distributions
 +  dbeta = agauss(0,1,3)
 *                                      $ select local vs global vs corner
 +  d_vth0 = 'dvth0*(mc_global != 2) + xpvth0*(mc_global == 2) - cnr_p'
 +  d_beta = 'dbeta*(mc_global != 2) + dpu0*(mc_global == 2) - cnr_p'
 *
 +  mmvth0 = 'sigvth * d_vth0 * fet_dop_mm'    $ vth0 mis-match
 +  mmbeta = 'sigbeta * d_beta * fet_dop_mm'   $ beta mis-match
 *
 +  pvt_var = 'mmvth0 + prox_term'      $ local vth0 variation
 *
 .param
 * flicker noise calculations: statistics are function of w and l and par
 +  noideva = '10u * 0.12u * 10'      $ device area for extracted variation
 +  noistd  = 1.1513                  $ worst case variation value
 *
 +  noi_scale = 'noistd-min(log(sqrt(w*l*par/noideva)),0)'   $ area scaling
 +  noiamult  = 'exp(dnoi_p*noi_scale)'                  $ gate bias scaliing
 +  noibmult  = 'exp(dnoi_p*noi_scale/1.4307)'
 +  noicmult  = 'exp(dnoi_p*noi_scale/2.5129)'
 *
 * thermal noise scaling equation
 +  tnoitanha = -0.5
 +  tnoitanhb = 6.02e6
 +  tnoitanhc = 1.0e14
 +  ntnoi_pfet = '0.94/tanh(tnoitanha + tnoitanhb*l + tnoitanhc*l*l)'
 *
 * multi-finger sti scaling equation
 +  ratio_a = 'min(3.0, max(0.3,(sd+l)/(sa+0.5*l)))'
 +  delta_a = '5e-3*pow(ratio_a,3)'
 +  sec1a   = '1-0.37*log(nf)*sqrt(ratio_a)'
 +  sec2a   = '5.0/(nf+7)/pow(ratio_a,0.4)'
 +  sa_eff1 = '(sa+0.5*l)/(0.5*(sec1a+sec2a+sqrt((sec1a-sec2a)*(sec1a-sec2a)+delta_a)))-0.5*l' 
 +  sa_eff  = '(sa != 0)*sa_eff1'
 +  ratio_b = 'min(3.0, max(0.3,(sd+l)/(sb+0.5*l)))'
 +  delta_b = '5e-3*pow(ratio_b,3)'
 +  sec1b   = '1-0.37*log(nf)*sqrt(ratio_b)'
 +  sec2b   = '5.0/(nf+7)/pow(ratio_b,0.4)'
 +  sb_eff1 = '(sb+0.5*l)/(0.5*(sec1b+sec2b+sqrt((sec1b-sec2b)*(sec1b-sec2b)+delta_b)))-0.5*l' 
 +  sb_eff  = '(sb != 0)*sb_eff1'
 *
 m0 d g s b pch w='w/nf' l=l as='as/nf' ad='ad/nf' ps='ps/nf' pd='pd/nf'
 +              mult=nf sa='isti*sa_eff' sb='isti*sb_eff'
 *
 ***************************************************************************
 * psp fet model
 ***************************************************************************
 .model pch pmos    
 + level     = 69         version   = 102.3     tr        = 25        
 ***************************************************************************
 * switch settings
 ***************************************************************************
 + swgidl    = 1          swigate   = 1          swimpact  = 1         
 + swjuncap  = 3         
 ***************************************************************************
 * parameters with process variation
 ***************************************************************************
 + lvaro     = '-2*lint_pfet'
 + wvaro     = '-2*wint_pfet'
 + toxo      = tox_psp_p  
 + toxovo    = tox_psp_p 
 + uo        = 'uo_psp_p+mmbeta'
 + rsw1      = rsw_psp_p  
 + nsubo     = 'nsubo_psp_p+nsub_prox'
 + vfbo      = 'vfb_psp_p+pvt_var'
 + fol1      = fol1_psp_p 
 + fol2      = fol2_psp_p
 + lov       = 'lint_psp_p+dl_psp_p'
 ***************************************************************************
 * core parameters
 ***************************************************************************
 + a1l       = -0.03845   a1o       = 9.318      a1w       = 0         
 + a2o       = 21.24      a3l       = -0.05599   a3o       = 1.343     
 + a3w       = 0          a4l       = 0          a4o       = 0         
 + a4w       = 0          alp1l1    = 0.01403    alp1l2    = 0.06835   
 + alp1lexp  = 0.4571     alp1w     = 0          alp2l1    = 0.01666   
 + alp2l2    = 6.6e-06    alp2lexp  = 1.366      alp2w     = 0         
 + alpl      = 0.01932    alplexp   = 0.6185     alpw      = 0         
 + axl       = 0.5        axo       = 33.9       betw1     = 0.1683    
 + betw2     = -0.06201   cfbo      = 0.5        cfl       = 6.2e-05   
 + cflexp    = 2.569      cfrw      = 0          cfw       = -80e-3    
 + cgbovl    = 0          csl       = 0.1541     cslexp    = 0.4243    
 + cslw      = 0          cso       = -0.1       csw       = 0         
 + ctl       = 0.005829   ctlexp    = 1.153      ctlw      = 0         
 + cto       = 0.08415    ctw       = 0          dlq       = -3.7e-08  
 + dnsubo    = 0.1322     dphibl    = 0.003396   dphiblexp = 1.666     
 + dphiblw   = 0          dphibo    = -0.05644   dphibw    = 0         
 + dta       = dtemp      dwq       = 0          fbet1     = 0.1378    
 + fbet1w    = 0.7602     fbet2     = 0          fetao     = 2.658     
 + lap       = 0          lp1       = 3.628e-07  lp1w      = 2.624e-07 
 + lp2       = 3.029e-08  lpck      = 4.044e-09  lpckw     = 0         
 + lvarl     = 0          lvarw     = 0          mueo      = 0.5674    
 + muew      = 0          novo      = 2.5e+25    npck      = 9.416e+23 
 + npckw     = 0          npl       = 0          npo       = 7.683e+25 
 + nslpo     = 0.05       nsubw     = -0.0035    qmc       = 1         
 + rsbo      = 0          rsgo      = 0.1315     rsw2      = 0         
 + sta2o     = 0          stbetl    = 0          stbetlw   = 0         
 + stbeto    = 0.766      stbetw    = 0.009527   stcso     = 0         
 + stmueo    = 0.2031     strso     = -0.000105  stthemuo  = 0.6855    
 + stthesatl = 0.08667    stthesatlw= 0          stthesato = 0.573     
 + stthesatw = 0          stvfbl    = 0          stvfblw   = 0         
 + stvfbo    = 0.0006825  stvfbw    = 0.039      stxcoro   = 0         
 + themuo    = 1.156      thesatbo  = 0          thesatgo  = 0         
 + thesatl=thesatl_psp_p  thesatlexp= 0.9099     thesatlw  = 4e-3      
 + thesato   = 0.5905     thesatw   = 0          vfbl      = 0.0223    
 + vfblw     = vfblw_p    vfbw      = 0          vnsubo    = 1e-15     
 + vpo       = 0.0528     wbet      = 5.382e-08  wot       = 0         
 + wseg      = 1e-10      wsegp     = 1e-10      wvarl     = 0         
 + wvarw     = 0          xcorl     = 0          xcorlw    = 0         
 + xcoro     = 0.001      xcorw     = 0         
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 + gcoo      = 380.2      iginvlw   = 215.6      igovw     = 25        
 + gc2o      = 0.4555     gc3o      = -0.2515    chibo     = 2.314     
 + stigo     = 2          agidlw    = 0.01       bgidlo    = 24        
 + cgidlo    = 0.325      stbgidlo  = 0         
 ***************************************************************************
 * sti stress model parameters
 ***************************************************************************
 + saref     = 3e-6       sbref     = 3e-6       wlod      = 0         
 + kuo       = 3.5e-8     kvsat     = -0.15      tkuo      = 0         
 + lkuo      = -0.75e-8   wkuo      = 0          llodkuo   = 1         
 + wlodkuo   = 0          kvtho     = -0.96e-9   lkvtho    = -0.5e-9   
 + wkvtho    = 0          pkvtho    = 0          llodvth   = 1         
 + wlodvth   = 1          stetao    = 0          lodetao   = 1         
 ***************************************************************************
 * junction diode parameters
 ***************************************************************************
 + trj       = 25
 ***************************************************************************
 *   capacitance parameters
 ***************************************************************************
 + cjorbot   = cj_p       cjorsti   = cjsw_p     cjorgat   = cjsg_p    
 + vbirbot   = pb_p       vbirsti   = pbsw_p     vbirgat   = pbsg_p    
 + pbot      = mj_p       psti      = mjsw_p     pgat      = mjsg_p    
 ***************************************************************************
 *   ideal current parameters
 ***************************************************************************
 + idsatrbot = js_p       idsatrsti = jsw_p      idsatrgat = jsw_p     
 + phigbot   = 1.14775    phigsti   = 1.14775    phiggat   = 1.14775   
 + csrhbot   = 0          csrhsti   = 0          csrhgat   = 0         
 + xjunsti   = 1e-07      xjungat   = 1e-07     
 ***************************************************************************
 *   trap-assisted tunneling parameters
 ***************************************************************************
 + ctatbot   = 0          ctatsti   = 0          ctatgat   = 0         
 + mefftatbot= 0.25       mefftatsti= 0.25       mefftatgat= 0.25      
 ***************************************************************************
 *   band-to-band tunneling parameters
 ***************************************************************************
 + cbbtbot   = 0          cbbtsti   = 0          cbbtgat   = 0         
 + fbbtrbot  = 1e+09      fbbtrsti  = 1e+09      fbbtrgat  = 1e+09     
 + stfbbtbot = 0          stfbbtsti = 0          stfbbtgat = 0         
 ***************************************************************************
 *   avalanche and breakdown parameters
 ***************************************************************************
 + vbrbot    = 1001       vbrsti    = 1001       vbrgat    = 1001      
 + pbrbot    = 4          pbrsti    = 4          pbrgat    = 4         
 ***************************************************************************
 * noise parameters
 ***************************************************************************
 + nfalw     = '3.8e25*noiamult' 
 + nfblw     = '1.1e9*noibmult'
 + nfclw     = '1.5e-7*noicmult'
 + efo       = 1.15
 + lintnoi   = 0
 + alpnoi    = 2
 + fnto      = ntnoi_pfet
 *
 .ends pfetpsp
 .include './pfet_rf.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/pfet_rf.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.4 06/12/11 17:00:31
 *
 *>  ibm cmrf8sf  pfet_rf  1.5v pfet rf subcircuit
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) pfet_rf l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.12u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 3    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 2    <- extrinsic gate connection switch (1->single-ended,
 *                                                                 2->double-ended)
 *          +     gtab = 1    <- m1 gate ring tabs flag (1->tabs present,
 *                                                       0->tabs absent)
 *          + rbodymod = 1    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +     ring = 2    <- substrate contact type for rf pcell 
 *          +  rf_rsub = 1    <- body resistance multiplier
 *          +    cwire = 1    <- wiring capacitance multiplier
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                                ||   drain
 *                            o---||-----o------------------o
 *                            |   ||     |                  |
 *                            |  cwgd    |                  |
 *                            |          |                 ---
 *                            |          |                 ---cwds
 *                            |          |                  |
 *                            |     | |---                  |
 *       gate                 | g1  | |     (bsim4.4     )  | bulk
 *         o----/\/\/\--------o-----| |-----(internal    )--)--o
 *                rg          |     | |     (rsub network)  |
 *                            |     | |---                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |  cwgs    |                  |
 *                            |   ||     |                  |
 *                            o---||-----o------------------o
 *                                ||   source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2006 ibm corporation
 *
 ***************************************************************************
 *
 .subckt pfet_rf d g s b w=1.0u l=0.12u nf=1 par=1 dtemp=0
 +                       as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                       lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                       panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                       panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                       plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                       rgatemod=3 ngcon=2 gtab=1 rbodymod=1 ring=2
 +                       rf_rsub=1 cwire=1
 .param
 +  legacy = '(ring==99)'                        $ switch for legacy pcell
 +  nfo    = '(int((nf+1)/2) - int(nf/2))'       $ switch for odd,even fingers
 *
 * extrinsic gate resistance calculations (function of w, l, and nf)
 +  wum    = '(w/nf)*1e6'
 +  lum    = 'l*1e6'
 *
 +  rlen_a = 'lum*(1 + ((nf - 3)/2)) + diff_thn*1e6*((nf - 1)/2)'
 +  rlen_b = '0.5*lum + (diff_thn*1e6 + lum)*((nf/2) - 1)'
 +  rlen   = 'nfo*rlen_a + (1-nfo)*rlen_b'
 *
 +  ra_term1 = '0.81*legacy + 0.91*(1-legacy)'
 +  ra_len   = '(ra_term1 + 0.5*lum + (nf==2)*0.5*lum + (nf>2)*(rlen/3))/(0.4)'
 +  ra_wid   = '(2.5*wum + 1.65)*legacy + (1.25*wum + 0.875)*(1-legacy)'
 +  ra       = 'm1rsi * (ra_len + ra_wid)'
 +  rb       = 'm1rsi * (4.3*legacy + 3.3*(1-legacy))'
 +  rcont    = 'cars * (1/nf)'
 *
 +  rgate  = '0.5*(rb*gtab + (1/ngcon)*(ra+0.5*rcont))'
 *
 .param
 * substrate resistance calculations (function of w, l, and nf)
 +  rhorz  = 'max(10,((1.65e8*l + 70)*(2.7e-4/w + 75)/89.8))'
 +  rvert  = 'max(10,((8.1e-6/l + 98)*(2.877e-3/w + 22)/165.5))'
 *
 * gate capacitance calculation (function of w, l, and nf)
 +  cgate = '((2e5*l + 9)*1.8e7*l/(1.82e7*l + 9) + 8e4*w - 1.2)*1e-15'
 *
 * drain-source capacitance calculation (function of w, l, and nf)
 +  cdsw  = '2e5*w + 0.2'
 +  cdsl  = '(5e-7/l + 0.2)*3e-16'
 *
 x1 d g1 s b pfet   w=w l=l nf=nf par=par dtemp=dtemp
 +                  as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                  lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                  panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                  panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                  panw9=panw9 panw10=panw10
 +                  plnest=plnest plorient=plorient
 +                  pld200=pld200 pwd100=pwd100
 +                  rgatemod=rgatemod ngcon=2
 +                  rbodymod=rbodymod rf_rsub=rf_rsub
 +                  rbps=rhorz rbpd=rhorz
 +                  rbsb=rvert rbpb=rvert rbdb=rvert
 *
 rg     g   g1  r=rgate
 cwgd   g1  d   c='1e-18 + cgate*cwire'
 cwgs   g1  s   c='1e-18 + cgate*cwire'
 cwds   d   s   c='1e-18 + (cdsw*cdsl)*cwire'
 *
 .ends pfet_rf
 .include './pfet_rf_psp.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/pfet_rf_psp.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.1 10/10/12 14:45:25
 *
 *>  ibm cmrf8sf  pfetpsp_rf  1.5v pfet rf subcircuit
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) pfetpsp_rf l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.12u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          +    ngcon = 2    <- extrinsic gate connection switch (1->single-ended,
 *                                                                 2->double-ended)
 *          +     gtab = 1    <- m1 gate ring tabs flag (1->tabs present,
 *                                                       0->tabs absent)
 *          +     ring = 2    <- substrate contact type for rf pcell 
 *          +    cwire = 1    <- wiring capacitance multiplier
 *
 *
 * subcircuit schematic:
 *
 *                                ||   drain
 *                            o---||-----o------------------o
 *                            |   ||     |                  |
 *                            |  cwgd    |                  |
 *                            |          |                 ---
 *                            |          |                 ---cwds
 *                            |          |                  |
 *                            |     | |---                  |
 *       gate                 | g1  | |     (psp         )  | bulk
 *         o----/\/\/\--------o-----| |-----(internal    )--)--o
 *                rg          |     | |     (rsub network)  |
 *                            |     | |---                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |  cwgs    |                  |
 *                            |   ||     |                  |
 *                            o---||-----o------------------o
 *                                ||   source
 *
 *         note: the ldd resistance is accounted for within the psp model.
 *
 * ibm confidential
 * (c) 2010 ibm corporation
 *
 ***************************************************************************
 .subckt pfetpsp_rf d g s b
 +		     w=1.0u l=0.12u nf=1 par=1 dtemp=0
 +                    as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                    lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                    panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                    panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                    plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                    rgatemod=3 ngcon=2 gtab=1 rbodymod=1 ring=2
 +                    rf_rsub=1 cwire=1
 .param
 *
 * if monte carlo and "pl*" instance parameter = zero, use values from skew/process file
 +   a_plnest     = limit(-0.5,0.5)
 +   sel_plnest   = '((plnest == 1) || ((a_plnest*plnest) == 1))'
 +   a_plorient   = limit(-0.5,0.5)
 +   sel_plorient = '((plorient == 1) || ((a_plorient*plorient) == 1))' 
 +   a_pld200     = limit(-0.5,0.5)
 +   sel_pld200   = '((pld200 == 1) || ((a_pld200*pld200) == 1))' 
 +   a_pwd100     = limit(-0.5,0.5)
 +   sel_pwd100   = '((pwd100 == 1) || ((a_pwd100*pwd100) == 1))'
 *
 * calculate aclv/acwv and final lint/wint params
 +   aclv_ni_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_nest == 2))/aclv_factor + cnr_p*(1-mc_fet_mm_f)*(pc_nest != 2))'
 +   aclv_or_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_orient == 2))/aclv_factor + cnr_p*(1-mc_fet_mm_f)*(pc_orient != 2))'
 +   aclv_dist_sws = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_dist == 2))/aclv_factor + cnr_p*(1-mc_fet_mm_f)*(pc_dist != 2))'
 +   aclv_ni       = '((fet_aclv_nest*sel_plnest) + (fet_aclv_iso*(1-sel_plnest)))*aclv_ni_sws'
 +   aclv_or       = '((fet_aclv_v*sel_plorient) + (fet_aclv_h*(1-sel_plorient)))*aclv_or_sws'
 +   aclv_dist     = '((fet_aclv_out*sel_pld200) + (fet_aclv_in*(1-sel_pld200)))*aclv_dist_sws'
 +   aclv_ran      = agauss(cnr_p,mc_sw,3)
 *
 +   acwv_dist_sws = '(-mc_sw + ((mc_fet_mm_f != 1) && (rx_dist == 2))/acwv_factor + cnr_p*(1-mc_fet_mm_f)*(rx_dist != 2))'
 +   acwv_dist     = '((fet_acwv_out*sel_pwd100) + (fet_acwv_in*(1-sel_pwd100)))*acwv_dist_sws'
 +   acwv_ran      = agauss('-cnr_p',mc_sw,3)
 *
 .param
 +   xc_lint_1 = '(aclv_ni*aclv_fet_ni + aclv_or*aclv_fet_or)'
 +   xc_lint_2 = '((aclv_dist*aclv_fet_dist) + (aclv_ran + (mc_global == 2))*aclv_fet_ran)'
 +   xx_lint_3 = '(mc_fet_mm_f + (aclv_factor*(1-mc_fet_mm_f)))'
 +   xx_lint_4 = '((mc_global == 2)*(-xlint_p) + (mc_global != 2))'
 +   xc_lint_t = '((xc_lint_1 + xc_lint_2)*xx_lint_3)*xx_lint_4'
 *
 +   xc_wint_1 = '((acwv_dist*acwv_fet_dist) + (acwv_ran + (mc_global == 2))*acwv_fet_ran)'
 +   xx_wint_2 = '(mc_fet_mm_f + (acwv_factor*(1-mc_fet_mm_f)))'
 +   xx_wint_3 = '((mc_global == 2)*(xwint_p) + (mc_global != 2))'
 +   xc_wint_t = '((xc_wint_1)*xx_wint_2)*xx_wint_3'
 *
 *     final =  nominal      +      acv * dist(-1,1)      +        global * dist(-1,1)
 + lint_pfet = 'lint_psp_p + 1.5*total_aclv_fet*xc_lint_t*fet_geo_mm + ltol_p*xlint_p'
 + wint_pfet = 'wint_psp_p + 1.5*total_acwv_fet*xc_wint_t*fet_geo_mm + wtol_p*xwint_p'
 *
 .param
 * switch to turn on or off the sti stress effects
 +  isti = '((gstis==1)&&(lstis==1))||(gstis==2)'
 *
 * switch to turn on or off the nwell proximity effects
 +  inw  = '((gwells==1)&&(lnws==1))||(gwells==2)'
 *
 * nwell proximity effect calculations
 +  proxpre  =  0.015e-06            $ [v-m]
 +  proxlen  = -0.35e-06             $ [m]
 +  proxk1   =  0.375                $ [unitless]
 +  rxwparm1 = -0.28                 $ [unitless]
 +  rxwparm2 =  0.56e-06             $ [unitless]
 +  rxwparm3 =  0.0e-6               $ [m]
 +  nw1b1   = 'panw1 /(band1 -proxlen)'
 +  nw2b2   = 'panw2 /(band2 -proxlen)'
 +  nw3b3   = 'panw3 /(band3 -proxlen)'
 +  nw4b4   = 'panw4 /(band4 -proxlen)'
 +  nw5b5   = 'panw5 /(band5 -proxlen)'
 +  nw6b6   = 'panw6 /(band6 -proxlen)'
 +  nw7b7   = 'panw7 /(band7 -proxlen)'
 +  nw8b8   = 'panw8 /(band8 -proxlen)'
 +  nw9b9   = 'panw9 /(band9 -proxlen)'
 +  nw10b10 = 'panw10/(band10-proxlen)'
 +  prox_term = 'inw*(proxpre/(l*w))*(nw1b1+nw2b2+nw3b3+nw4b4+nw5b5+nw6b6+nw7b7+nw8b8+nw9b9+nw10b10)'
 +  nsub_prox = '1.5e22*sqrt(prox_term)'
 *
 * mis-match calculations: include multiplicity (par)
 .param
 +  kvt  =  8.5e-9
 +  kvtl =  3.6e-8
 +  kvtw = -1.1e-7
 +  kmb  =  2.7e-10
 +  kmbl = -1.0e-7
 +  kmbw = -8.0e-7
 +  sigvth  = 'kvt/sqrt((w-kvtw)*par*(l-kvtl))'
 +  sigbeta = 'kmb/sqrt((w-kmbw)*par*(l-kmbl))'
 *
 +  dvth0 = agauss(0,1,3)               $ local mis-match distributions
 +  dbeta = agauss(0,1,3)
 *                                      $ select local vs global vs corner
 +  d_vth0 = 'dvth0*(mc_global != 2) + xpvth0*(mc_global == 2) - cnr_p'
 +  d_beta = 'dbeta*(mc_global != 2) + dpu0*(mc_global == 2) - cnr_p'
 *
 +  mmvth0 = 'sigvth * d_vth0 * fet_dop_mm'    $ vth0 mis-match
 +  mmbeta = 'sigbeta * d_beta * fet_dop_mm'   $ beta mis-match
 *
 +  pvt_var = 'mmvth0 + prox_term'      $ local vth0 variation
 *
 .param
 * flicker noise calculations: statistics are function of w and l and par
 +  noideva = '10u * 0.12u * 10'        $ device area for extracted variation
 +  noistd  = 1.1513                    $ worst case variation value
 *
 +  noi_scale = 'noistd-min(log(sqrt(w*l*par/noideva)),0)'   $ area scaling
 +  noiamult  = 'exp(dnoi_p*noi_scale)'                  $ gate bias scaliing
 +  noibmult  = 'exp(dnoi_p*noi_scale/1.4307)'
 +  noicmult  = 'exp(dnoi_p*noi_scale/2.5129)'
 *
 * thermal noise scaling equation
 +  tnoitanha = -0.5
 +  tnoitanhb = 6.02e6
 +  tnoitanhc = 3.0e14
 +  ntnoi_pfet = '0.94/tanh(tnoitanha + tnoitanhb*l + tnoitanhc*l*l)'
 *
 * multi-finger sti scaling equation
 +  ratio_a = 'min(3.0, max(0.3,(sd+l)/(sa+0.5*l)))'
 +  delta_a = '5e-3*pow(ratio_a,3)'
 +  sec1a   = '1-0.37*log(nf)*sqrt(ratio_a)'
 +  sec2a   = '5.0/(nf+7)/pow(ratio_a,0.4)'
 +  sa_eff1 = '(sa+0.5*l)/(0.5*(sec1a+sec2a+sqrt((sec1a-sec2a)*(sec1a-sec2a)+delta_a)))-0.5*l' 
 +  sa_eff  = '(sa != 0)*sa_eff1'
 +  ratio_b = 'min(3.0, max(0.3,(sd+l)/(sb+0.5*l)))'
 +  delta_b = '5e-3*pow(ratio_b,3)'
 +  sec1b   = '1-0.37*log(nf)*sqrt(ratio_b)'
 +  sec2b   = '5.0/(nf+7)/pow(ratio_b,0.4)'
 +  sb_eff1 = '(sb+0.5*l)/(0.5*(sec1b+sec2b+sqrt((sec1b-sec2b)*(sec1b-sec2b)+delta_b)))-0.5*l' 
 +  sb_eff  = '(sb != 0)*sb_eff1'
 *
 +  legacy = '(ring==99)'                        $ switch for legacy pcell
 +  nfo    = '(int((nf+1)/2) - int(nf/2))'       $ switch for odd,even fingers
 *
 * extrinsic gate resistance calculations (function of w, l, and nf)
 +  wum    = '(w/nf)*1e6'
 +  lum    = 'l*1e6'
 *
 +  rlen_a = 'lum*(1 + ((nf - 3)/2)) + diff_thn*1e6*((nf - 1)/2)'
 +  rlen_b = '0.5*lum + (diff_thn*1e6 + lum)*((nf/2) - 1)'
 +  rlen   = 'nfo*rlen_a + (1-nfo)*rlen_b'
 *
 +  ra_term1 = '0.81*legacy + 0.91*(1-legacy)'
 +  ra_len   = '(ra_term1 + 0.5*lum + (nf==2)*0.5*lum + (nf>2)*(rlen/3))/(0.4)'
 +  ra_wid   = '(2.5*wum + 1.65)*legacy + (1.25*wum + 0.875)*(1-legacy)'
 +  ra       = 'm1rsi * (ra_len + ra_wid)'
 +  rb       = 'm1rsi * (4.3*legacy + 3.3*(1-legacy))'
 +  rcont    = 'cars * (1/nf)'
 *
 +  rgate  = '0.5*(rb*gtab + (1/ngcon)*(ra+0.5*rcont))'
 *
 +  rg	  = 'pcrsi*(0.15e-6+(w/nf)/(3*ngcon))/ngcon/l + 4.2e-11/(w/nf*l)' 
 *
 * substrate resistance calculations (function of w, l, and nf)
 +  rbulk = '5e-9/((w/nf+0.1e-6)*(l+0.1e-6))'
 +  rw = '300*((nf-1)*0.36e-6+nf*l+3.3e-6)/(w/nf+2.2e-6)'
 +  rl = '50*(w/nf+2.2e-6)/(l+0.01e-6)'
 +  rwell = 'rw*rl/(rw+rl)'
 +  rjuns = '6e3*(l+0.5e-6)/(w/nf+1.0e-6)'
 +  rjund = rjuns
 *
 * gate capacitance calculation (function of w, l, and nf)
 +  cgate = '((5e5*l + 9)*(8e6*l-0.3)/(8.5e6*l + 8.7)*nf + 2e5*w)*0.5e-16'
 *
 * drain-source capacitance calculation (function of w, l, and nf)
 +  cdsw  = '1.721e5*w + 0.198'
 +  cdsl  = '(3.65e-7/l + 0.1058)*3e-16'
 *
 m0 d g1 s b pch w='w/nf' l=l as='as/nf' ad='ad/nf' ps='ps/nf' pd='pd/nf' 
 +               mult=nf sa='isti*sa_eff' sb='isti*sb_eff'
 *
 rg     g   g1  r=rgate
 cwgd   g1  d   c='1e-18 + cgate*cwire'
 cwgs   g1  s   c='1e-18 + cgate*cwire'
 cwds   d   s   c='1e-18 + (cdsw*cdsl)*cwire'
 *
 ***************************************************************************
 * psp fet model
 ***************************************************************************
 .model pch pmos    
 ***************************************************************************
 * rf/nqs parameters
 ***************************************************************************
 + swnqs	    = 5		 munqso	   = 1      	rgo	  = rg	
 + rbulko    = rbulk	 rwello	   = rwell	rjunso	  = rjuns	
 + rjundo    = rjund	
 ***************************************************************************
 * dc parameters
 ***************************************************************************
 + level     = 69         version   = 102.3      tr        = 25        
 ***************************************************************************
 * switch settings
 ***************************************************************************
 + swgidl    = 1          swigate   = 1          swimpact  = 1         
 + swjuncap  = 3         
 ***************************************************************************
 * parameters with process variation
 ***************************************************************************
 + lvaro     = '-2*lint_pfet' 
 + wvaro     = '-2*wint_pfet'
 + toxo      = tox_psp_p  
 + toxovo    = tox_psp_p 
 + uo        = 'uo_psp_p+mmbeta'
 + rsw1      = rsw_psp_p  
 + nsubo     = 'nsubo_psp_p+nsub_prox'
 + vfbo      = 'vfb_psp_p+pvt_var'
 + fol1      = fol1_psp_p 
 + fol2      = fol2_psp_p
 + lov       = 'lint_psp_p+dl_psp_p'
 ***************************************************************************
 * core parameters
 ***************************************************************************
 + a1l       = -0.03845   a1o       = 9.318      a1w       = 0         
 + a2o       = 21.24      a3l       = -0.05599   a3o       = 1.343     
 + a3w       = 0          a4l       = 0          a4o       = 0         
 + a4w       = 0          alp1l1    = 0.01403    alp1l2    = 0.06835   
 + alp1lexp  = 0.4571     alp1w     = 0          alp2l1    = 0.01666   
 + alp2l2    = 6.6e-06    alp2lexp  = 1.366      alp2w     = 0         
 + alpl      = 0.01932    alplexp   = 0.6185     alpw      = 0         
 + axl       = 0.5        axo       = 33.9       betw1     = 0.1683    
 + betw2     = -0.06201   cfbo      = 0.5        cfl       = 6.2e-05   
 + cflexp    = 2.569      cfrw      = 0          cfw       = -80e-3    
 + cgbovl    = 0          csl       = 0.1541     cslexp    = 0.4243    
 + cslw      = 0          cso       = -0.1       csw       = 0         
 + ctl       = 0.005829   ctlexp    = 1.153      ctlw      = 0         
 + cto       = 0.08415    ctw       = 0          dlq       = -3.7e-08  
 + dnsubo    = 0.1322     dphibl    = 0.003396   dphiblexp = 1.666     
 + dphiblw   = 0          dphibo    = -0.05644   dphibw    = 0         
 + dta       = dtemp      dwq       = 0          fbet1     = 0.1378    
 + fbet1w    = 0.7602     fbet2     = 0          fetao     = 2.658     
 + lap       = 0          lp1       = 3.628e-07  lp1w      = 2.624e-07 
 + lp2       = 3.029e-08  lpck      = 4.044e-09  lpckw     = 0         
 + lvarl     = 0          lvarw     = 0          mueo      = 0.5674    
 + muew      = 0          novo      = 2.5e+25    npck      = 9.416e+23 
 + npckw     = 0          npl       = 0          npo       = 7.683e+25 
 + nslpo     = 0.05       nsubw     = -0.0035    qmc       = 1         
 + rsbo      = 0          rsgo      = 0.1315     rsw2      = 0         
 + sta2o     = 0          stbetl    = 0          stbetlw   = 0         
 + stbeto    = 0.766      stbetw    = 0.009527   stcso     = 0         
 + stmueo    = 0.2031     strso     = -0.000105  stthemuo  = 0.6855    
 + stthesatl = 0.08667    stthesatlw= 0          stthesato = 0.573     
 + stthesatw = 0          stvfbl    = 0          stvfblw   = 0         
 + stvfbo    = 0.0006825  stvfbw    = 0.039      stxcoro   = 0         
 + themuo    = 1.156      thesatbo  = 0          thesatgo  = 0         
 + thesatl= thesatl_psp_p thesatlexp= 0.9099     thesatlw  = 4e-3      
 + thesato   = 0.5905     thesatw   = 0          vfbl      = 0.0223    
 + vfblw     = vfblw_p    vfbw      = 0          vnsubo    = 1e-15     
 + vpo       = 0.0528     wbet      = 5.382e-08  wot       = 0         
 + wseg      = 1e-10      wsegp     = 1e-10      wvarl     = 0         
 + wvarw     = 0          xcorl     = 0          xcorlw    = 0         
 + xcoro     = 0.001      xcorw     = 0         
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 + gcoo      = 380.2      iginvlw   = 215.6      igovw     = 25        
 + gc2o      = 0.4555     gc3o      = -0.2515    chibo     = 2.314     
 + stigo     = 2          agidlw    = 0.01       bgidlo    = 24        
 + cgidlo    = 0.325      stbgidlo  = 0         
 ***************************************************************************
 * sti stress model parameters
 ***************************************************************************
 + saref     = 3e-6       sbref     = 3e-6       wlod      = 0         
 + kuo       = 3.5e-8     kvsat     = -0.15      tkuo      = 0         
 + lkuo      = -0.75e-8   wkuo      = 0          llodkuo   = 1         
 + wlodkuo   = 0          kvtho     = -0.96e-9   lkvtho    = -0.5e-9   
 + wkvtho    = 0          pkvtho    = 0          llodvth   = 1         
 + wlodvth   = 1          stetao    = 0          lodetao   = 1         
 ***************************************************************************
 * junction diode parameters
 ***************************************************************************
 + trj       = 25
 ***************************************************************************
 *   capacitance parameters
 ***************************************************************************
 + cjorbot   = cj_p       cjorsti   = cjsw_p     cjorgat   = cjsg_p    
 + vbirbot   = pb_p       vbirsti   = pbsw_p     vbirgat   = pbsg_p    
 + pbot      = mj_p       psti      = mjsw_p     pgat      = mjsg_p    
 ***************************************************************************
 *   ideal current parameters
 ***************************************************************************
 + idsatrbot = js_p       idsatrsti = jsw_p      idsatrgat = jsw_p     
 + phigbot   = 1.14775    phigsti   = 1.14775    phiggat   = 1.14775   
 + csrhbot   = 0          csrhsti   = 0          csrhgat   = 0         
 + xjunsti   = 1e-07      xjungat   = 1e-07     
 ***************************************************************************
 *   trap-assisted tunneling parameters
 ***************************************************************************
 + ctatbot   = 0          ctatsti   = 0          ctatgat   = 0         
 + mefftatbot= 0.25       mefftatsti= 0.25       mefftatgat= 0.25      
 ***************************************************************************
 *   band-to-band tunneling parameters
 ***************************************************************************
 + cbbtbot   = 0          cbbtsti   = 0          cbbtgat   = 0         
 + fbbtrbot  = 1e+09      fbbtrsti  = 1e+09      fbbtrgat  = 1e+09     
 + stfbbtbot = 0          stfbbtsti = 0          stfbbtgat = 0         
 ***************************************************************************
 *   avalanche and breakdown parameters
 ***************************************************************************
 + vbrbot    = 1001       vbrsti    = 1001       vbrgat    = 1001      
 + pbrbot    = 4          pbrsti    = 4          pbrgat    = 4         
 ***************************************************************************
 * noise parameters
 ***************************************************************************
 + nfalw     = '3.8e25*noiamult' 
 + nfblw     = '1.1e9*noibmult'
 + nfclw     = '1.5e-7*noicmult'
 + efo       = 1.15
 + lintnoi   = 0
 + alpnoi    = 2
 + fnto      = ntnoi_pfet
 *
 .ends pfetpsp_rf
 .include './pfet33.inc'
 * path, component, release: cmos8base/rel/hspice/models/pfet33.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.7 08/08/28 20:57:29
 *
 *>  ibm cmrf8sf/bicmos8wl  pfet33  3.3v pfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) pfet33 l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.40u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.3um of nw edge
 *          +    panw2 = 0    <- active area within 0.3um to 0.35um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.4um to 2.0um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 0    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 1    <- gate connection switch (1->single-ended,
 *                                                       2->double-ended)
 *          + rbodymod = 0    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +  rf_rsub = 1    <- body resistance multiplier
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                        drain
 *                          o
 *                          |
 *                          |
 *                          |
 *                     | |---
 *            gate     | |     (bsim4.4     )    bulk
 *              o------| |-----(internal    )-----o
 *                     | |     (rsub network)
 *                     | |---
 *                          |
 *                          |
 *                          |
 *                          o
 *                        source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2008 ibm corporation
 *
 ***************************************************************************
 *
 .subckt pfet33 d g s b w=1.0u l=0.40u nf=1 par=1 dtemp=0
 +                      as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                      lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                      panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                      panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                      plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                      rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1
 +                      rbps=100 rbpd=100 rbsb=1e9 rbpb=50 rbdb=1e9
 .param
 *
 * if monte carlo and "pl*" instance parameter = zero, use values from skew/process file
 +   a_plnest     = limit(-0.5,0.5)
 +   sel_plnest   = '((plnest == 1) || ((a_plnest*plnest) == 1))'
 +   a_plorient   = limit(-0.5,0.5)
 +   sel_plorient = '((plorient == 1) || ((a_plorient*plorient) == 1))'
 +   a_pld200     = limit(-0.5,0.5)
 +   sel_pld200   = '((pld200 == 1) || ((a_pld200*pld200) == 1))'
 +   a_pwd100     = limit(-0.5,0.5)
 +   sel_pwd100   = '((pwd100 == 1) || ((a_pwd100*pwd100) == 1))'
 *
 * calculate aclv/acwv and final lint/wint params
 +   aclv_ni_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_nest == 2))/aclv_dgfactor + cnr_p33*(1-mc_fet_mm_f)*(pc_nest != 2))'
 +   aclv_or_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_orient == 2))/aclv_dgfactor + cnr_p33*(1-mc_fet_mm_f)*(pc_orient != 2))'
 +   aclv_dist_sws = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_dist == 2))/aclv_dgfactor + cnr_p33*(1-mc_fet_mm_f)*(pc_dist != 2))'
 +   aclv_ni       = '((dgfet_aclv_nest*sel_plnest) + (dgfet_aclv_iso*(1-sel_plnest)))*aclv_ni_sws'
 +   aclv_or       = '((dgfet_aclv_v*sel_plorient) + (dgfet_aclv_h*(1-sel_plorient)))*aclv_or_sws'
 +   aclv_dist     = '((dgfet_aclv_out*sel_pld200) + (dgfet_aclv_in*(1-sel_pld200)))*aclv_dist_sws'
 +   aclv_ran      = agauss(cnr_p33,mc_sw,3)
 *
 +   acwv_dist_sws = '(-mc_sw + ((mc_fet_mm_f != 1) && (rx_dist == 2))/acwv_dgfactor + cnr_p33*(1-mc_fet_mm_f)*(rx_dist != 2))'
 +   acwv_dist     = '((dgfet_acwv_out*sel_pwd100) + (dgfet_acwv_in*(1-sel_pwd100)))*acwv_dist_sws'
 +   acwv_ran      = agauss('-cnr_p33',mc_sw,3)
 *
 .param
 +   xc_lint_1 = '(aclv_ni*aclv_dgfet_ni + aclv_or*aclv_dgfet_or)'
 +   xc_lint_2 = '((aclv_dist*aclv_dgfet_dist) + (aclv_ran + (mc_global == 2))*aclv_dgfet_ran)'
 +   xx_lint_3 = '(mc_fet_mm_f + (aclv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_lint_4 = '((mc_global == 2)*(-xlint_p33) + (mc_global != 2))'
 +   xc_lint_t = '((xc_lint_1 + xc_lint_2)*xx_lint_3)*xx_lint_4'
 *
 +   xc_wint_1 = '((acwv_dist*acwv_dgfet_dist) + (acwv_ran + (mc_global == 2))*acwv_dgfet_ran)'
 +   xx_wint_2 = '(mc_fet_mm_f + (acwv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_wint_3 = '((mc_global == 2)*(xwint_p33) + (mc_global != 2))'
 +   xc_wint_t = '((xc_wint_1)*xx_wint_2)*xx_wint_3'
 *
 *     final =  nominal      +      acv * dist(-1,1)      +        global * dist(-1,1)
 + lint_pfet33 = 'lint_p33 + 1.5*total_aclv_dgfet*xc_lint_t*fet_geo_mm + ltol_p33*xlint_p33'
 + wint_pfet33 = 'wint_p33 + 1.5*total_acwv_dgfet*xc_wint_t*fet_geo_mm + wtol_p33*xwint_p33'
 *
 .param
 * switch to turn on or off the sti stress effects
 +  isti = '((gstis==1)&&(lstis==1))||(gstis==2)'
 *
 * switch to turn on or off the nwell proximity effects
 +  inw  = '((gwells==1)&&(lnws==1))||(gwells==2)'
 *
 * nwell proximity effect calculations
 +  proxpre  =  0.07e-06             $ [v-m]
 +  proxlen  = -0.35e-06             $ [m]
 +  proxk1   =  0.375                $ [unitless]
 +  rxwparm1 = -0.28                 $ [unitless]
 +  rxwparm2 =  0.56e-06             $ [unitless]
 +  rxwparm3 =  0.0e-6               $ [m]
 +  nw1b1   = 'panw1 /(band1 -proxlen)'
 +  nw2b2   = 'panw2 /(band2 -proxlen)'
 +  nw3b3   = 'panw3 /(band3 -proxlen)'
 +  nw4b4   = 'panw4 /(band4 -proxlen)'
 +  nw5b5   = 'panw5 /(band5 -proxlen)'
 +  nw6b6   = 'panw6 /(band6 -proxlen)'
 +  nw7b7   = 'panw7 /(band7 -proxlen)'
 +  nw8b8   = 'panw8 /(band8 -proxlen)'
 +  nw9b9   = 'panw9 /(band9 -proxlen)'
 +  nw10b10 = 'panw10/(band10-proxlen)'
 +  prox_term = 'inw*(proxpre/(l*w))*(nw1b1+nw2b2+nw3b3+nw4b4+nw5b5+nw6b6+nw7b7+nw8b8+nw9b9+nw10b10)'
 +  k1_p33_base = 0.74
 +  k1_p33      = 'k1_p33_base+proxk1*prox_term'
 *
 * mis-match calculations: include multiplicity (par)
 .param
 +  kvt  =  8.5e-9
 +  kvtl =  2.5e-7
 +  kvtw = -3.0e-7
 +  kmb  =  7.5e-6
 +  kmbl = -3.6e-6
 +  kmbw = -4.0e-6
 +  sigvth  = 'kvt/sqrt((w-kvtw)*par*(l-kvtl))'
 +  sigbeta = 'kmb/sqrt((w-kmbw)*par*(l-kmbl))'
 *
 +  dvth0 = agauss(0,1,3)               $ local mis-match distributions
 +  dbeta = agauss(0,1,3)
 *                                      $ select local vs global vs corner
 +  d_vth0 = 'dvth0*(mc_global != 2) + xp33vth0*(mc_global == 2) - cnr_p33'
 +  d_beta = 'dbeta*(mc_global != 2) + dp33u0*(mc_global == 2) - cnr_p33'
 *
 +  mmvth0 = 'sigvth * d_vth0 * fet_dop_mm'    $ vth0 mis-match
 +  mmbeta = 'sigbeta * d_beta * fet_dop_mm'   $ beta mis-match
 *
 +  pvt_var = 'mmvth0 - prox_term'      $ local vth0 variation
 *
 .param
 * flicker noise calculations: statistics are function of w and l and par
 +  noideva = '10u * 0.40u * 10'        $ device area for extracted variation
 +  noistd  = 0.7834                    $ worst case variation value
 *
 +  noi_scale = 'noistd-min(log(sqrt(w*l*par/noideva)),0)'   $ area scaling
 +  noiamult  = 'exp(dnoi_p33*noi_scale)'                $ gate bias scaliing
 +  noibmult  = 'exp(dnoi_p33*noi_scale/1.32)'
 +  noicmult  = 'exp(dnoi_p33*noi_scale/2.53)'
 *
 * thermal noise scaling equation
 +  tnoitanha = 0.4
 +  tnoitanhb = 3.2e6
 +  tnoitanhc = 2.5e11
 +  ntnoi_pfet33 = '1.0/tanh(tnoitanha + tnoitanhb*l + tnoitanhc*l*l)'
 *
 * gate resistance scaling equations
 +  xrg1 = 'max(0.1,(3e6*l + 5.78))'
 +  xrg2 = 'max(0.0,((1.7e-6/l + 7)*(-4e4*w + 12.42)/11.22))'
 *
 m0 d g s b  p33ch  w=w l=l nf=nf dtemp=dtemp
 +                  as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                  sa='isti*sa' sb='isti*sb' sd='isti*sd'
 +                  rgatemod=rgatemod rbodymod=rbodymod
 *
 ***************************************************************************
 * 3.3v pfet bsim4v4 model
 ***************************************************************************
 .model p33ch  pmos  (                              level   = 54
 +version = 4.4            binunit = 1              paramchk= 1
 +mobmod  = 0              rdsmod  = 1              permod  = 1
 +epsrox  = 3.9            toxe    = toxe_p33       toxp    = toxp_p33
 +toxm    = 6.15e-9        xj      = 1.2e-7         ndep    = 4e17
 +ngate   = 1.2e20         nsd     = 1e20           phin    = -0.064
 +rsh     = rsh_p33        rshg    = rsh_p33        pvth0   = pvth0_p33
 +vth0    = 'vth0_p33+pvt_var'                      vfb     = -1
 +k1      = k1_p33         k2      = -0.086         k3      = 22
 +k3b     = 13.1           w0      = 3.43e-6        lpe0    = -6.8e-8
 +lpeb    = -5.6e-8        vbm     = -3       
 +dvt0    = 1.3796         dvt1    = 0.3268         dvt2    = -0.16
 +dvtp0   = 2e-7           dvtp1   = -2e-7
 +dvt0w   = 0              dvt1w   = 5.3e6          dvt2w   = -0.032
 +u0    = 'u0_p33+mmbeta'  ua      = 1.96e-9        ub      = 5e-19
 +uc      = 1.6e-11        lu0     = 3.06           lua     = 3.8e-10
 +lub     = 1.4e-19        luc     = 3e-11          wu0     = -14
 +wua     = 2.6e-10        wub     = -3.5e-19       wuc     = 4e-11
 +pu0     = -0.8           pua     = -8e-11         pub     = -1e-19
 +puc     = -2e-11         eu      = 1
 +vsat    = 1e6            a0      = 0.896          la0     = -0.17
 +wa0     = 0.02           ags     = 0.36           lags    = 0.02 
 +b0      = -1.2e-7        b1      = -2e-7          keta    = -0.0475
 +a1      = 0              a2      = 1
 +wint    = 0              lint    = 0              dwg     = 1e-8
 +dwb     = -1.4e-8        voff    = -0.11          voffl   = 1e-8
 +minv    = -0.56          nfactor = 0.34           eta0    = 0.54
 +etab    = 0              dsub    = 1.2            cit     = 1e-3
 +cdsc    = 0              cdscb   = 6.16057e-10    cdscd   = 0
 +pclm    = 1.46           pdiblc1 = 0.01099        pdiblc2 = -2e-4
 +pdiblcb = -0.8           ldrout  = -8e-4          ldelta  = 2e-3
 +drout   = 0.1            pscbe1  = 8e8            pscbe2  = 4.288e-5
 +pvag    = 7.37283e-3     delta   = 7e-3           fprout  = 0
 +pdits   = 2e-3           pditsl  = 0              pditsd  = 0.1
 +lpdits  = 0.017          lc      = 0
 +xn      = 3              rdw     = rdsw_p33       rdwmin  = 0
 +rsw     = rdsw_p33       rswmin  = 0              prwg    = 1
 +prwb    = 0              wr      = 1              alpha0  = 1.0e-9
 +alpha1  = 0.84           beta0   = 25.6
 ***************************************************************************
 * jds/vt temperature parameters
 ***************************************************************************
 +tnom    = 25             ute     = -1.31          lute    = 0.12
 +wute    = 0.04           kt1     = -0.2295        kt1l    = -2e-9
 +kt2     = 0.01           ua1     = -4e-10         ub1     = -2.2e-18
 +uc1     = 1.62181e-11    wua1    = -2e-10         wub1    = 1e-18
 +wuc1    = -4e-14         at      = 7.129e4
 +prt     = 540            tempmod = 0
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 +igcmod  = 0              igbmod  = 0              agidl   = 1e-7
 +bgidl   = 2.3e9          cgidl   = 0.5            egidl   = 0.8
 +aigbacc = 0.43           bigbacc = 0.054          cigbacc = 0.075
 +nigbacc = 1              aigbinv = 0.35           bigbinv = 0.03
 +cigbinv = 6e-3           eigbinv = 1.1            nigbinv = 3
 +aigc    = 0.31           bigc    = 0.024          cigc    = 0.03
 +aigsd   = 0.31           bigsd   = 0.024          cigsd   = 0.03
 +dlcig   = 1.4e-8         nigc    = 1              poxedge = 1
 +pigcd   = 1              ntox    = 1              toxref  = 'toxe_p33-3.15e-9'
 ***************************************************************************
 * sti stress model parameters
 ***************************************************************************
 +saref   = 3e-6           sbref   = 3e-6           wlod    = 0
 +ku0     = 3e-8           kvsat   = 0              tku0    = 0
 +lku0    = 0              wku0    = 0              llodku0 = 0
 +wlodku0 = 0              kvth0   = 0              lkvth0  = 0
 +wkvth0  = 0              pkvth0  = 0              llodvth = 0
 +wlodvth = 0              stk2    = 0              lodk2   = 1
 +steta0  = 0              lodeta0 = 1
 ***************************************************************************
 * source/drain to body junction diode parameters
 ***************************************************************************
 +diomod  = 1             ijthdfwd= 0.1            ijthsfwd= 0.1
 +jss     = js_p33        jsd     = js_p33         jsws    = jsw_p33
 +jswd    = jsw_p33       jswgs   = jsw_p33        jswgd   = jsw_p33
 +cjs     = cj_p33        cjd     = cj_p33         cjsws   = cjsw_p33
 +cjswd   = cjsw_p33      cjswgs  = cjsg_p33       cjswgd  = cjsg_p33
 +mjs     = mj_p33        mjd     = mj_p33         mjsws   = mjsw_p33
 +mjswd   = mjsw_p33      mjswgs  = mjsg_p33       mjswgd  = mjsg_p33
 +pbs     = pb_p33        pbd     = pb_p33         pbsws   = pbsw_p33
 +pbswd   = pbsw_p33      pbswgs  = pbsg_p33       pbswgd  = pbsg_p33
 +njs     = n_p33         njd     = n_p33          xjbvd   = 1
 +bvd     = bd_p          xjbvs   = 1              bvs     = bd_p
 ***************************************************************************
 * junction diode temperature parameters
 ***************************************************************************
 +tcj     = cta_p         tcjsw   = ctp_p          tcjswg  = ctp_p
 +tpb     = pta_p         tpbsw   = ptp_p          tpbswg  = ptp_p
 +xtis    = 3             xtid    = 3
 ***************************************************************************
 * capacitance-voltage (cv) parameters
 ***************************************************************************
 +capmod  = 2             xpart   = 0              dlc     = 20n
 +dwc     = 0             cgdo    = cgdo_p33       cgso    = cgso_p33
 +cgsl    = cgsl_p33      cgdl    = cgdl_p33       ckappas = 3.0
 +ckappad = 3.0           cf      = 0              cgbo    = 1.706e-11
 +acde    = 0.5           moin    = 10             noff    = 2.5
 +voffcv  = -0.05
 ***************************************************************************
 * layout dependence parameters
 ***************************************************************************
 +geomod  = '(1 - int((nf+1)/2) + int(nf/2))'       rgeomod = 1
 +xgl     = lwbpc          xgw     = 0.43e-6        xl    = '-2*lint_pfet33'
 +xw  = '-2*wint_pfet33'   dmcg    = 0.23e-6        dmci    = 0.32e-6
 +dwj     = 0              ngcon   = ngcon
 ***************************************************************************
 * rf model parameters
 ***************************************************************************
 +rgatemod= rgatemod       trnqsmod= 0              rbodymod= rbodymod
 +acnqsmod= 0              xrcrg1  = xrg1           xrcrg2  = xrg2
 +rbps    = 'rbps*rf_rsub' rbpd    = 'rbpd*rf_rsub'
 +rbsb    = 'rbsb*rf_rsub' rbpb    = 'rbpb*rf_rsub' rbdb    = 'rbdb*rf_rsub'
 ***************************************************************************
 * flicker noise parameters
 ***************************************************************************
 +fnoimod = 1            noia = '2.5e41*noiamult'   noib = '6.5e25*noibmult'
 +noic = '8.75e9*noicmult' em      = 4.10e7         af      = 1
 +ef      = 1.15           kf      = 0
 ***************************************************************************
 * channel thermal noise parameters
 ***************************************************************************
 +tnoimod = 0              ntnoi   = ntnoi_pfet33   )
 *
 .ends pfet33
 .include './pfet33_rf.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/pfet33_rf.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.4 06/12/11 17:00:13
 *
 *>  ibm cmrf8sf  pfet33_rf  3.3v pfet rf subcircuit
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) pfet33_rf l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.40u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          +    lstis = 1    <- instance flag to control sti stress effects
 *                               on a local level in conjunction with gstis
 *                               global flag (0-> no sti stress effects,
 *                                            1-> w/ sti stress effects)
 *          +       sa = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sb = 0    <- distance from pc to rx (sti) edge (meters)
 *          +       sd = 0    <- finger to finger spacing for nf>1 (meters)
 *          +     lnws = 0    <- instance flag to control nwell proximity
 *                               effects on a local level in conjunction with
 *                               gwells global flag
 *                                  (0-> no nwell proximity effects,
 *                                   1-> w/ nwell proximity effects)
 *
 *                               nwell proximity parameters
 *          +    panw1 = 0    <- active area within 0 to 0.15um of nw edge
 *          +    panw2 = 0    <- active area within 0.15um to 0.325um of nw edge
 *                 .                       .
 *                 .                       .
 *                 .                       .
 *          +   panw10 = 0    <- active area within 1.2um to 1.7um of nw edge
 *          +   plnest = -1   <- instance flag : nested vs. isolated acv effect
 *                                  (-1 -> random, default
 *                                    1 -> nested
 *                                    0 -> isolated)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          + rgatemod = 3    <- gate resistance flag
 *                                  (0-> no gate resistance,
 *                                   1-> gate resistance w/ no nqs,
 *                                   2-> gate resistance w/ nqs outside cov,
 *                                   3-> gate resistance w/ nqs inside cov)
 *          +    ngcon = 2    <- extrinsic gate connection switch (1->single-ended,
 *                                                                 2->double-ended)
 *          +     gtab = 1    <- m1 gate ring tabs flag (1->tabs present,
 *                                                       0->tabs absent)
 *          + rbodymod = 1    <- body resistance network flag (0-> network off,
 *                                                             1-> network on)
 *          +     ring = 2    <- substrate contact type for rf pcell 
 *          +  rf_rsub = 1    <- body resistance multiplier
 *          +    cwire = 1    <- wiring capacitance multiplier
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                                ||   drain
 *                            o---||-----o------------------o
 *                            |   ||     |                  |
 *                            |  cwgd    |                  |
 *                            |          |                 ---
 *                            |          |                 ---cwds
 *                            |          |                  |
 *                            |     | |---                  |
 *       gate                 | g1  | |     (bsim4.4     )  | bulk
 *         o----/\/\/\--------o-----| |-----(internal    )--)--o
 *                rg          |     | |     (rsub network)  |
 *                            |     | |---                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |          |                  |
 *                            |  cwgs    |                  |
 *                            |   ||     |                  |
 *                            o---||-----o------------------o
 *                                ||   source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2006 ibm corporation
 *
 ***************************************************************************
 *
 .subckt pfet33_rf d g s b w=1.0u l=0.40u nf=1 par=1 dtemp=0
 +                         as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                         lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                         panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                         panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                         plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                         rgatemod=3 ngcon=2 gtab=1 rbodymod=1 ring=2
 +                         rf_rsub=1 cwire=1
 *
 .param
 +  legacy = '(ring==99)'                        $ switch for legacy pcell
 +  nfo    = '(int((nf+1)/2) - int(nf/2))'       $ switch for odd,even fingers
 *
 * extrinsic gate resistance calculations (function of w, l, and nf)
 +  wum    = '(w/nf)*1e6'
 +  lum    = 'l*1e6'
 *
 +  rlen_a = 'lum*(1 + ((nf - 3)/2)) + diff_thn*1e6*((nf - 1)/2)'
 +  rlen_b = '0.5*lum + (diff_thn*1e6 + lum)*((nf/2) - 1)'
 +  rlen   = 'nfo*rlen_a + (1-nfo)*rlen_b'
 *
 +  ra_term1 = '0.81*legacy + 0.91*(1-legacy)'
 +  ra_len   = '(ra_term1 + 0.5*lum + (nf==2)*0.5*lum + (nf>2)*(rlen/3))/(0.4)'
 +  ra_wid   = '(2.5*wum + 1.65)*legacy + (1.25*wum + 0.875)*(1-legacy)'
 +  ra       = 'm1rsi * (ra_len + ra_wid)'
 +  rb       = 'm1rsi * (4.3*legacy + 3.3*(1-legacy))'
 +  rcont    = 'cars * (1/nf)'
 *
 +  rgate  = '0.5*(rb*gtab + (1/ngcon)*(ra+0.5*rcont))'
 *
 .param
 * substrate resistance calculations (function of w, l, and nf)
 +  rhorz  = 50
 +  rvert  = 150
 *
 * gate capacitance calculation (function of w, l, and nf)
 +  cgate = '(7.167e5*l + 1.06e5*w + 0.65)*1e-15'
 *
 * drain-source capacitance calculation (function of w, l, and nf)
 +  cdsw  = '2.12e4*w + 0.7351'
 +  cdsl  = '(9e-8/l + 0.953)*1e-15/1.18'
 *
 x1 d g1 s b pfet33 w=w l=l nf=nf par=par dtemp=dtemp
 +                  as=as ad=ad ps=ps pd=pd nrs=nrs nrd=nrd
 +                  lstis=lstis sa=sa sb=sb sd=sd lnws=lnws
 +                  panw1=panw1 panw2=panw2 panw3=panw3 panw4=panw4
 +                  panw5=panw5 panw6=panw6 panw7=panw7 panw8=panw8
 +                  panw9=panw9 panw10=panw10
 +                  plnest=plnest plorient=plorient
 +                  pld200=pld200 pwd100=pwd100
 +                  rgatemod=rgatemod ngcon=2
 +                  rbodymod=rbodymod rf_rsub=rf_rsub
 +                  rbps=rhorz rbpd=rhorz
 +                  rbsb=rvert rbpb=rvert rbdb=rvert
 *
 rg     g   g1  r=rgate
 cwgd   g1  d   c='1e-18 + cgate*cwire'
 cwgs   g1  s   c='1e-18 + cgate*cwire'
 cwds   d   s   c='1e-18 + (cdsw*cdsl)*cwire'
 *
 .ends pfet33_rf
 .include './rfline.inc'
 * path, component, release: cmrf8sf/reldm/hspice/models/rfline.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.5 08/08/29 13:21:24
 *
 *>  ibm cmrf8sf "rfline" line model (ma metallization options)
 *
 *   licensed materials - property of ibm
 *
 *   ibm confidential
 *   (c) 2008 ibm corporation
 *
 *   us government users restricted rights - use, duplication
 *   or disclosure restricted by gsa adp schedule contract with
 *   ibm corporation.
 *
 ***************************************************************************
 ***************************************************************************
 *
 *  transmission line model for a single straight line over substrate
 *
 ***************************************************************************
 *
 * the transmission line model contains:
 *
 *  1. four r-l-k networks connected in series to represent
 *     the variation in inductance and resistance due to skin effect.
 *     example of one of such a block is shown below.
 *
 *  2. oxide capacitances (coxin, coxmid, and coxout) to simulate the capacitance
 *     between the line and the substrate.
 *
 *  3. substrate capacitances (csxin, csxmid, and csxout) and resistances
 *     (rsxin, rsxmid, and rsxout) to simulate the effect of the conductive
 *     substrate loss.
 *
 *                             ______
 *               (rin3)       |      |
 *           +---/\/\/\/\-----|(lin3)|--+
 *    /      |                |______|  |
 *    |    / |                          |
 *    | k23in|                 ______   |
 *    |    \ |   (rin2)       |      |  |
 *   k13in   +---/\/\/\/\-----|(lin2)|--+
 *    |    / |                |______|  |
 *    | k12in|                          |
 *    |    \ |                 ______   |
 * in \      |   (rin1)       |      |  |                   out
 *  o-----+--+---/\/\/\/\-----|(lin1)|--+------o - - - - - o
 *        |                   |______|  |
 *        |                             |
 *        |                             |
 *        |                             |
 *        |                             |
 *        |                             |
 *      -----                         -----
 *      -----(coxin)          (coxmid)-----
 *        |                             |
 *        +-----+                 +-----+
 *        |     |                 |     |
 *        |     |                 |     |
 *        \     |                 \     |
 * (rsxin)/   -----(csxin)        /   -----
 *        \   -----       (rsxmid)\   -----
 *        /     |                 /     |(csxmid)
 *        |     |                 |     |
 *        |     |                 |     |
 *  o-----+-----+-----------------+-----+------o - - - - - o
 *          gnd (substrate/groundplane)
 *
 ***************************************************************************
 *
 * syntax:
 *
 *  x1 in out gnd rfline
 *  l        =  100u        // overall length of the transmission line
 *  w        =  4u          // width of transmission line
 *  ind      = -1           // inductance of the transmission line
 *                          // if ind==-1 then calculate self inductance internally
 *  tlev1    -->            [3,4,5,6] = [(m1 m2 m3), (m1 m2 m3 m4), (m1 m2 m3 m4 m5), (m1 m2 m3 m4 m5 m6)]
 *  tlev2    -->            [2,3]     = [(mq lm), (mq mg lm)]
 *  bp       = -1           // indicator for grounding scheme under transmission line
 *                          // -1 = dt lattice (default), -2 = n/a
 *  dtemp    =  0           // difference in temperature between line and circuit (c)
 *
 ***************************************************************************
 *
 * notes:
 *
 *  1. length can vary continuously from 100um to 1500um
 *
 *  2. only the top-most metal layer is allowed
 *
 *  3. if parameter "ind" is not passed in, the model will
 *     calculate its value internally from the other parameters.
 *
 *  ibm confidential
 *
 ***************************************************************************
 *
 ** rfline circuit element difinition **************************************
 *
 * {converted to hspice } simulator lang = spectre
 *
 .subckt  rfline ( in out gnd )
 .param
 *
 ***************************************************************************
 *
 * notes:
 *
 ***************************************************************************
 *
 * more notes:
 *
 * this model was created based on the following design manual and beol process assumptions document:
 * design manual                    : cmos8rf (cmrf8sf) design manual: es # 57p9006 ec # j88658, april 24, 2007
 * beol process assumptions document: cmrf8sf beol process           : es # 70p6227 ec # j95133, october 23, 2006
 * the "wireopt" parameter which is internal to this spectre file is set based on tlev1 and tlev2.
 * the internal "wireopt" parameter tells which metal dielectric stack is being used.
 * a list of the wireopt values corresponding to the different beol metal-dielectric
 * stack options and tlev1 and telv2 combinations in cmrf8sf is shown below:
 *
 * "wireopt"     stack         tlev1     tlev2
 * ---------     -----         -----     -----
 * 1             2_1_ly_e1_ma       2         1
 * 2             3_1_ly_e1_ma       3         1
 * 3             2_2_ly_e1_ma       2         2
 * 4             2_3_ly_e1_ma       3         2
 * 5             3_2_ly_e1_ma       4         1
 *
 + l           = 0.0001
 + w           = 4e-06
 + dtemp       = 0
 + tlev1       = 3
 + tlev2       = 2
 + ind         = -1
 + bp          = -1
 *
 ** additional constants and parameters *************************************
 *
 *
 + e0          = 8.8542e-12
 + ratio       = 3.16228
 + denfill     = 0.45
 + tref        = 25
 + condsi      = '1/rsub'
 + patternfill = 1
 + wire_opt = '(tlev1-1 + 2*(tlev1==4))*(tlev2==1) + (tlev1+1)*(tlev2==2)'
 *
 ** calculate effective width **********************************************
 *
 + pw_add  = '+(wire_opt==1)*delma+(wire_opt==2)*delma+(wire_opt==3)*delma+(wire_opt==4)*delma+(wire_opt==5)*delma'
 + pw      = 'w + pw_add'
 + pl      = 'l'
 *
 ** equations used in calculating rsx and csx:
 *
 +  hoverw = 'pmsxt/pw'
 *
 *  fhw is calculated from fhwl and fhwg as follows:
 *
 *     if hoverw<1 then  fhw=fhwl
 *                 else  fhw=fhwg
 *     end if
 *
 +  fhwl='1/((1/hoverw)+2.42-(0.44*hoverw)+(1-hoverw)**6)'
 +  fhwg='1/(2*pi)*log((8*hoverw)+(0.25/hoverw))'
 +  fhw='(hoverw<1)*fhwl+(hoverw>=1)*fhwg'
 +  eeff='((ersi+1)/2)+((ersi-1)/(2*sqrt(1+(10*hoverw))))'
 *
 *  calculate substrate resistance and capacitance *************************
 +  pcsx='l*e0*eeff/fhw'
 +  prsx='1/((l*condsi*(1+(1/sqrt(1+(10*hoverw)))))/(2*fhw))'
 *
 ** calculate the transmission line to substrate total capacitance in f/m **
 *
 + pheff1='(capct+oppcthkf+oppcstif+m1t+m1m2t+m2t+mxmqt+mqt+mqlyt+lyt+lye1t+e1t+e1mat+mat)*(wire_opt==1)'
 + pheff2='(capct+oppcthkf+oppcstif+m1t+m1m2t+m2t+m2m3t+m3t+mxmqt+mqt+mqlyt+lyt+lye1t+e1t+e1mat+mat)*(wire_opt==2)'
 + pheff3='(capct+oppcthkf+oppcstif+m1t+m1m2t+m2t+mxmqt+mqt+mqmgt+mgt+mqlyt+lyt+lye1t+e1t+e1mat+mat)*(wire_opt==3)'
 + pheff4='(capct+oppcthkf+oppcstif+m1t+m1m2t+m2t+m2m3t+m3t+mxmqt+mqt+mqmgt+mgt+mqlyt+lyt+lye1t+e1t+e1mat+mat)*(wire_opt==4)'
 + pheff5='(capct+oppcthkf+oppcstif+m1t+m1m2t+m2t+m2m3t+m3t+m3m4t+m4t+mxmqt+mqt+mqlyt+lyt+lye1t+e1t+e1mat+mat)*(wire_opt==5)'
 *
 + th_yo='mat*(wire_opt==1)+mat*(wire_opt==2)+mat*(wire_opt==3)+mat*(wire_opt==4)+mat*(wire_opt==5)'
 *
 + layer_sig ='11*(wire_opt==1)+11*(wire_opt==2)+11*(wire_opt==3)+11*(wire_opt==4)+11*(wire_opt==5)'
 *
 + pheff1_n='(capct+oppcthkn+oppcstin+m1tn+m1m2tn+m2tn+mxmqtn+mqtn+mqlytn+lytn+lye1tn+e1tn+e1matn+matn)*(wire_opt==1)'
 + pheff2_n='(capct+oppcthkn+oppcstin+m1tn+m1m2tn+m2tn+m2m3tn+m3tn+mxmqtn+mqtn+mqlytn+lytn+lye1tn+e1tn+e1matn+matn)*(wire_opt==2)'
 + pheff3_n='(capct+oppcthkn+oppcstin+m1tn+m1m2tn+m2tn+mxmqtn+mqtn+mqmgtn+mgtn+mqlytn+lytn+lye1tn+e1tn+e1matn+matn)*(wire_opt==3)'
 + pheff4_n='(capct+oppcthkn+oppcstin+m1tn+m1m2tn+m2tn+m2m3tn+m3tn+mxmqtn+mqtn+mqmgtn+mgtn+mqlytn+lytn+lye1tn+e1tn+e1matn+matn)*(wire_opt==4)'
 + pheff5_n='(capct+oppcthkn+oppcstin+m1tn+m1m2tn+m2tn+m2m3tn+m3tn+m3m4tn+m4tn+mxmqtn+mqtn+mqlytn+lytn+lye1tn+e1tn+e1matn+matn)*(wire_opt==5)'
 *
 + th_yo_n='matn*(wire_opt==1)+matn*(wire_opt==2)+matn*(wire_opt==3)+matn*(wire_opt==4)+matn*(wire_opt==5)'
 *
 + pheff='pheff1+pheff2+pheff3+pheff4+pheff5-th_yo'
 *
 + pheff_n='pheff1_n+pheff2_n+pheff3_n+pheff4_n+pheff5_n-th_yo_n'
 *
 *
 * create stack definition variables:
 *
 + ly1  = '(wire_opt==1)'
 + ly2  = '(wire_opt==2)'
 + ly3  = '(wire_opt==3)'
 + ly4  = '(wire_opt==4)'
 + ly5  = '(wire_opt==5)'
 *
 * end stack definition variables:
 *
 *
 + m1_bot_4eps =       'ly1*(1.4129e-07) +    ly2*(1.4129e-07) +    ly3*(1.4129e-07) +    ly4*(1.4129e-07) +    ly5*(1.4129e-07)'
 + m2_bot_4eps =       'ly1*(3.0183e-07) +    ly2*(3.0183e-07) +    ly3*(3.0183e-07) +    ly4*(3.0183e-07) +    ly5*(3.0183e-07)'
 + m3_bot_4eps =                             'ly2*(4.7442e-07) +                          ly4*(4.7442e-07) +    ly5*(4.7442e-07)'
 + m4_bot_4eps =                                                                                               'ly5*(6.4701e-07)'
 + mq_bot_4eps =       'ly1*(5.5505e-07) +    ly2*(7.2764e-07) +    ly3*(5.5505e-07) +    ly4*(7.2764e-07) +    ly5*(9.0023e-07)'
 + mg_bot_4eps =                                                   'ly3*(8.7217e-07) +    ly4*(1.0448e-06)'
 + ly_bot_4eps =       'ly1*(1.0422e-06) +    ly2*(1.2148e-06) +    ly3*(1.3593e-06) +    ly4*(1.5319e-06) +    ly5*(1.3874e-06)'
 + e1_bot_4eps =       'ly1*(1.9622e-06) +    ly2*(2.1348e-06) +    ly3*(2.2793e-06) +    ly4*(2.4519e-06) +    ly5*(2.3074e-06)'
 + ma_bot_4eps =       'ly1*(3.5017e-06) +    ly2*(3.6743e-06) +    ly3*(3.8188e-06) +    ly4*(3.9914e-06) +    ly5*(3.8469e-06)'
 *
 + layer_bot_4eps = 'm1_bot_4eps*(layer_sig==1) + m2_bot_4eps*(layer_sig==2) + m3_bot_4eps*(layer_sig==3) + m4_bot_4eps*(layer_sig==4) + mq_bot_4eps*(layer_sig==7) + mg_bot_4eps*(layer_sig==8) + ly_bot_4eps*(layer_sig==9) + e1_bot_4eps*(layer_sig==10) + ma_bot_4eps*(layer_sig==11)'
 *
 + epsilon_r = 'pheff_n/layer_bot_4eps'
 *
 *
 *
 + m1_top_fill =               'ly1*(m1tn) +          ly2*(m1tn) +          ly3*(m1tn) +          ly4*(m1tn) +          ly5*(m1tn)'
 + m2_top_fill = 'm1_top_fill + ly1*(m2tn) +          ly2*(m2tn) +          ly3*(m2tn) +          ly4*(m2tn) +          ly5*(m2tn)'
 + m3_top_fill = 'm2_top_fill +                       ly2*(m3tn) +                                ly4*(m3tn) +          ly5*(m3tn)'
 + m4_top_fill = 'm3_top_fill +                                                                                         ly5*(m4tn)'
 + mq_top_fill = 'm4_top_fill + ly1*(mqtn) +          ly2*(mqtn) +          ly3*(mqtn) +          ly4*(mqtn) +          ly5*(mqtn)'
 + mg_top_fill = 'mq_top_fill +                                             ly3*(mgtn) +          ly4*(mgtn)'
 + ly_top_fill = 'mg_top_fill + ly1*(lytn) +          ly2*(lytn) +          ly3*(lytn) +          ly4*(lytn) +          ly5*(lytn)'
 + e1_top_fill = 'ly_top_fill + ly1*(e1tn) +          ly2*(e1tn) +          ly3*(e1tn) +          ly4*(e1tn) +          ly5*(e1tn)'
 + ma_top_fill = 'e1_top_fill + ly1*(matn) +          ly2*(matn) +          ly3*(matn) +          ly4*(matn) +          ly5*(matn)'
 *
 + m1_bot_fill = 'm1_top_fill - ly1*(m1tn) -          ly2*(m1tn) -          ly3*(m1tn) -          ly4*(m1tn) -          ly5*(m1tn)'
 + m2_bot_fill = 'm2_top_fill - ly1*(m2tn) -          ly2*(m2tn) -          ly3*(m2tn) -          ly4*(m2tn) -          ly5*(m2tn)'
 + m3_bot_fill = 'm3_top_fill -                       ly2*(m3tn) -                                ly4*(m3tn) -          ly5*(m3tn)'
 + m4_bot_fill = 'm4_top_fill -                                                                                         ly5*(m4tn)'
 + mq_bot_fill = 'mq_top_fill - ly1*(mqtn) -          ly2*(mqtn) -          ly3*(mqtn) -          ly4*(mqtn) -          ly5*(mqtn)'
 + mg_bot_fill = 'mg_top_fill -                                             ly3*(mgtn) -          ly4*(mgtn)'
 + ly_bot_fill = 'ly_top_fill - ly1*(lytn) -          ly2*(lytn) -          ly3*(lytn) -          ly4*(lytn) -          ly5*(lytn)'
 + e1_bot_fill = 'e1_top_fill - ly1*(e1tn) -          ly2*(e1tn) -          ly3*(e1tn) -          ly4*(e1tn) -          ly5*(e1tn)'
 + ma_bot_fill = 'ma_top_fill - ly1*(matn) -          ly2*(matn) -          ly3*(matn) -          ly4*(matn) -          ly5*(matn)'
 *
 + signal_bot_fill      = 'm1_bot_fill*(layer_sig==1) + m2_bot_fill*(layer_sig==2) + m3_bot_fill*(layer_sig==3) + m4_bot_fill*(layer_sig==4) + mq_bot_fill*(layer_sig==7) + mg_bot_fill*(layer_sig==8) + ly_bot_fill*(layer_sig==9) + e1_bot_fill*(layer_sig==10) + ma_bot_fill*(layer_sig==11)'
 * ===============================================
 * ===============================================
 * capacitance calculation for single line over a ground plane (silicon surface at dc):
 *
 + h_microns    = 'pheff*1e+6'
 + h_fill       = 'signal_bot_fill*1e+6'
 + w_microns    = 'pw*1e+6'
 + th_microns   = 'th_yo*1e+6'
 *
 + x11_noshield = 0.9905
 + x12_noshield = 0.8
 + x13_noshield = 0
 + x14_noshield = 0
 *
 + c1_noshield_nofill   = '2*e0*(x11_noshield*0.5*w_microns/h_microns + x12_noshield*(2/(pi-2))*log(0.5*pi) + x13_noshield*(2/pi)*log(1 + th_microns/h_microns))'
 + ht_microns           = 'h_microns + th_microns'
 + c2_noshield_nofill   = '(2*e0*x14_noshield*(2/(3*pi))*log(1 + 1.5*w_microns/ht_microns))'
 + c_noshield_nofill    = '(c1_noshield_nofill + c2_noshield_nofill)*epsilon_r'
 + ctot_noshield_nofill = 'c_noshield_nofill*l'
 *
 * capacitance update due to pattern fill:
 *
 + coefill1           = '(1 - denfill) + denfill * h_microns/(h_microns - h_fill)'
 + coefill2           = '(1 - denfill) + denfill * h_microns/(h_microns - h_fill - denfill*th_microns)'
 + c1_noshield_fill   = 'c1_noshield_nofill*coefill1'
 + c2_noshield_fill   = 'c2_noshield_nofill*coefill2'
 + c_noshield_fill    = '(c1_noshield_fill + c2_noshield_fill)*epsilon_r'
 + ctot_noshield_fill = 'c_noshield_fill*l'
 *
 + ctot_noshield = 'ctot_noshield_nofill*(patternfill == 0) + ctot_noshield_fill*(patternfill == 1)'
 * ===============================================
 + tcr_yo='tmars*(wire_opt==1)+tmars*(wire_opt==2)+tmars*(wire_opt==3)+tmars*(wire_opt==4)+tmars*(wire_opt==5)'
 *
 + delta_wel   = '0.0115*(layer_sig==1) + 0*(layer_sig==2) + 0*(layer_sig==3) + 0*(layer_sig==4) + 0.022*(layer_sig==7) + 0.022*(layer_sig==8) + 0*(layer_sig==9) + 0*(layer_sig==10) + 0*(layer_sig==11)'
 + delta_wphys = '0*(layer_sig==1) + -0.01*(layer_sig==2) + -0.01*(layer_sig==3) + -0.01*(layer_sig==4) + -0.01*(layer_sig==7) + -0.01*(layer_sig==8) + 0.01*(layer_sig==9) + 0*(layer_sig==10) + -0.08*(layer_sig==11)'
 + res_type   = '1*(layer_sig==1) + 2*(layer_sig==2) + 2*(layer_sig==3) + 2*(layer_sig==4) + 3*(layer_sig==7) + 3*(layer_sig==8) + 4*(layer_sig==9) + 5*(layer_sig==10) + 6*(layer_sig==11)'
 + wo_1          = 1.8
 + slot_r_1      = 0.7
 + wc_1          = '(w_microns > wo_1)*( 1.4+slot_r_1*(w_microns-1.4) )+(w_microns<=wo_1)*(w_microns)'
 + w_eff_1       = 'wc_1-2*delta_wphys-2*delta_wel'
 + wo_2          = 1.8
 + slot_r_2      = 0.7
 + wc_2          = '(w_microns > wo_2)*( 1.4+slot_r_2*(w_microns-1.4) )+(w_microns<=wo_2)*(w_microns)'
 + w_eff_2       = 'wc_2-2*delta_wphys-2*delta_wel'
 + wo_3          = 2.4
 + slot_r_3      = 0.7
 + wc_3          = '(w_microns > wo_3)*( 2.4+slot_r_3*(w_microns-2.4) )+(w_microns<=wo_3)*(w_microns)'
 + w_eff_3       = 'wc_3-2*delta_wphys-2*delta_wel'
 + wc_4          = 'w_microns-2*delta_wphys-2*delta_wel'
 + w_eff_4       = 'wc_4'
 + wc_5          = 'w_microns-2*delta_wphys-2*delta_wel'
 + w_eff_5       = 'wc_5'
 + wc_6          = 'w_microns-2*delta_wphys-2*delta_wel'
 + w_eff_6       = 'wc_6'
 *
 + w_eff         = '(res_type==1)*w_eff_1+(res_type==2)*w_eff_2+(res_type==3)*w_eff_3+(res_type==4)*w_eff_4+(res_type==5)*w_eff_5+(res_type==6)*w_eff_6'
 *
 *
 + rs_yo='mars*(wire_opt==1)+mars*(wire_opt==2)+mars*(wire_opt==3)+mars*(wire_opt==4)+mars*(wire_opt==5)'
 *
 + pcox = 'ctot_noshield/l'
 *
 ** calculate the effective dc self inductance of the line *****************
 *
 +  indval='(0.2e-6*pl*(log((2*pl)/(pw+th_yo))+0.50049+((pw+th_yo)/(3*l))))'
 *
 ** if inductance value is passed in, scale final self and mutual **********
 ** inductances appropriately
 +  lscale='(ind>0)*ind/indval+(ind==-1)*1'
 *
 ** calculate parameters to determine skin effect networks *****************
 *
 ** radius of circular cross section with equivalent self inductance *******
 +  prad1='(0.2235*(pw+th_yo)/0.7788)'
 *
 ** maximum frequency of interest is 40ghz *********************************
 +  pwmax='2*pi*40e9'
 +  prho='rs_yo*(w_microns/w_eff)*th_yo'
 *
 ** conductivity of line ***************************************************
 +  pcondtl='1/prho'
 *
 ** dc resistance of rectangular cross-section line ************************
 +  prdcrect='(pl/pw*rs_yo*(w_microns/w_eff))'
 *
 +  tamrs='tcr_yo'
 *  dc resistance of equivalent (for inductance) circular cross-section ****
 +  prdc='prho*pl/(pi*prad1**2)'
 *
 ** skin depth at highest frequency of interest ****************************
 +  pdeltamax='sqrt(2/(pwmax*mu0*pcondtl))'
 *
 ** partitioning coefficient based on skin depth  and equivalent outer radius
 +  palphar='0.53*prad1/pdeltamax'
 *
 ** resistance partitioning coefficient based on palphar and the following relationships:
 ** r1=resistance of outer annulus=palphar*rdc
 ** r2=r1/rr
 ** r3=r2/rr==r1/rr^2 ....
 ** partitioning the cross-section into three subsections requires solving for the roots of:
 ** rr^2+rr+(1-palphar)=0, so that the parallel resistance is equivalent to rdc.
 ** the quadratic equation is used to extract the maximum root of the equation to determine rr
 +  prr='(sqrt(1-4*(1-palphar))-1)/2'
 *
 ** resistance of each partition *******************************************
 +  pres1='palphar*prdc'
 +  pres2='pres1/prr'
 +  pres3='pres2/prr'
 *
 ** areas of two annuli and central cross-section **************************
 +  parea1='prho*pl/pres1'
 +  parea2='prho*pl/pres2'
 +  parea3='prho*pl/pres3'
 *
 ** outer radii of second annulus and inner circular cross-section *********
 +  prad2='sqrt((parea2+parea3)/pi)'
 +  prad3='sqrt(parea3/pi)'
 *
 ** ratios of inner/outer radii for two annuli *****************************
 +  pratio1='prad2/prad1'
 +  pratio2='prad3/prad2'
 *
 ** coefficients used to calculate the self inductance of each annulus *****
 +  plnez1='-0.1067*pratio1**4+0.3742*pratio1**3-0.5160*pratio1**2-0.0017*pratio1+0.2501'
 +  plnez2='-0.1067*pratio2**4+0.3742*pratio2**3-0.5160*pratio2**2-0.0017*pratio2+0.2501'
 *
 ** empirical scale factor to adjust overall inductance ********************
 +  plscale=0.96
 *
 ** self inductance of each partition **************************************
 +  pl1='plscale*2e-7*pl*(log(2*pl/prad1)+plnez1-1)'
 +  pl2='plscale*2e-7*pl*(log(2*pl/prad2)+plnez2-1)'
 +  pl3='plscale*2e-7*pl*(log(2*pl/prad3)-0.75)'
 *
 ** geometric mean distances between the three partitions ******************
 +  pgmd13='exp((prad1**2*log(prad1)-prad2**2*log(prad2))/(prad1**2-prad2**2)-0.5)'
 +  pgmd12='pgmd13'
 +  pgmd23='exp((prad2**2*log(prad2)-prad3**2*log(prad3))/(prad2**2-prad3**2)-0.5)'
 *
 ** mutual inductances between the three partitions ************************
 +  pm12='plscale*2e-7*pl*(log(pl/pgmd12+sqrt(1+pl**2/pgmd12**2))-sqrt(1+pgmd12**2/pl**2)+pgmd12/pl)'
 +  pm13='plscale*2e-7*pl*(log(pl/pgmd13+sqrt(1+pl**2/pgmd13**2))-sqrt(1+pgmd13**2/pl**2)+pgmd13/pl)'
 +  pm23='plscale*2e-7*pl*(log(pl/pgmd23+sqrt(1+pl**2/pgmd23**2))-sqrt(1+pgmd23**2/pl**2)+pgmd23/pl)'
 *
 ** coupling coefficients between the three partitioned inductances ********
 +  pk12t='pm12/sqrt(pl1*pl2)'
 +  pk13t='pm13/sqrt(pl1*pl3)'
 +  pk23t='pm23/sqrt(pl2*pl3)'
 +  pk12='(pk12t<=0.99)*pk12t+(pk12t>0.99)*0.99'
 +  pk13='(pk13t<=0.99)*pk13t+(pk13t>0.99)*0.99'
 +  pk23='(pk23t<=0.99)*pk23t+(pk23t>0.99)*0.99'
 *
 ** resistance of each partition transformed back into cross-sectional shape
 +  pr1='palphar*prdcrect'
 +  pr2='pr1/prr'
 +  pr3='pr2/prr'
 *
 ** skin effect network of the first block *********************************
 rin1f    in f11      r='pr1/4'   tc1='tamrs'   trise='dtemp'
 lin1f    f11 f2      l='pl1/4*lscale'
 rin2f    in f12      r='pr2/4'   tc1='tamrs'   trise='dtemp'
 lin2f    f12 f2      l='pl2/4*lscale'
 rin3f    in f13      r='pr3/4'   tc1='tamrs'   trise='dtemp'
 lin3f    f13 f2      l='pl3/4*lscale'
 k12inf lin1f lin2f k='pk12'
 k23inf lin2f lin3f k='pk23'
 k13inf lin1f lin3f k='pk13'
 *
 ** skin effect network of the second block ********************************
 rout1f   f2 f31      r='pr1/4'   tc1='tamrs'   trise='dtemp'
 lout1f   f31 mid     l='pl1/4*lscale'
 rout2f   f2 f32      r='pr2/4'   tc1='tamrs'   trise='dtemp'
 lout2f   f32 mid     l='pl2/4*lscale'
 rout3f   f2 f33      r='pr3/4'   tc1='tamrs'   trise='dtemp'
 lout3f   f33 mid     l='pl3/4*lscale'
 k12outf lout1f lout2f k='pk12'
 k23outf lout2f lout3f k='pk23'
 k13outf lout1f lout3f k='pk13'
 *
 ** skin effect network of the third block *********************************
 rin1s    mid s11     r='pr1/4'   tc1='tamrs'   trise='dtemp'
 lin1s    s11 s2      l='pl1/4*lscale'
 rin2s    mid s12     r='pr2/4'   tc1='tamrs'   trise='dtemp'
 lin2s    s12 s2      l='pl2/4*lscale'
 rin3s    mid s13     r='pr3/4'   tc1='tamrs'   trise='dtemp'
 lin3s    s13 s2      l='pl3/4*lscale'
 k12ins lin1s lin2s k='pk12'
 k23ins lin2s lin3s k='pk23'
 k13ins lin1s lin3s k='pk13'
 *
 ** skin effect network of the fourth block ********************************
 rout1s   s2 s31      r='pr1/4'   tc1='tamrs'   trise='dtemp'
 lout1s   s31 out     l='pl1/4*lscale'
 rout2s   s2 s32      r='pr2/4'   tc1='tamrs'   trise='dtemp'
 lout2s   s32 out     l='pl2/4*lscale'
 rout3s   s2 s33      r='pr3/4'   tc1='tamrs'   trise='dtemp'
 lout3s   s33 out     l='pl3/4*lscale'
 k12outs lout1s lout2s k='pk12'
 k23outs lout2s lout3s k='pk23'
 k13outs lout1s lout3s k='pk13'
 *
 ** substrate loss network *************************************************
 coxinf   in finsub   c='pcox*l/8'
 csxinf   finsub gnd  c='pcsx/8'
 rsxinf   finsub gnd  r='prsx*8'  tc1='trsub'   trise='dtemp'
 coxmidf  f2 fmidsub  c='pcox*l/4'
 csxmidf  fmidsub gnd c='pcsx/4'
 rsxmidf  fmidsub gnd r='prsx*4'  tc1='trsub'   trise='dtemp'
 coxinc   mid consub  c='pcox*l/4'
 csxinc   consub gnd  c='pcsx/4'
 rsxinc   consub gnd  r='prsx*4'  tc1='trsub'   trise='dtemp'
 coxmids  s2 smidsub  c='pcox*l/4'
 csxmids  smidsub gnd c='pcsx/4'
 rsxmids  smidsub gnd r='prsx*4'  tc1='trsub'   trise='dtemp'
 coxout   out outsub  c='pcox*l/8'
 csxout   outsub gnd  c='pcsx/8'
 rsxout   outsub gnd  r='prsx*8'  tc1='trsub'   trise='dtemp'
 *
 .ends rfline
 .include './sbd.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/sbd.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.5 10/03/16 17:01:28
 *
 *>  ibm cmrf8sf  sbd          schottky barrier diode 
 *
 *******************************************************************************
 *
 *  syntax:  specify anode width, length, and # anodes
 *
 *           xxx ( a c sx) sbd      <- default:  5.0u x 5.0u anode
 *            +         w = 5.0u    <- drawn anode width  (anode only)
 *            +         l = 5.0u    <-   "     "   length      "
 *            +        nf = 1       <- # anode stripes
 *            +       rsx = 50      <- substrate resistance
 *            +         m = 1       <- device implicit multiplicity
 *	     +       par = 1       <- explicit device multiplicity.
 *            +     dtemp = 0       <- device temperature difference with respect to
 *                                     the simulated circuit temperature (deg c).
 *
 * notes:
 *
 *  1. each anode has a wrap-around cathode.
 *
 * subcircuit schematic:
 *
 *               gleak
 *                / \
 *            +--/   \---+
 *            |  \   /   |
 *            |   \ /    |
 *            |          |
 *            |   |\ |   |
 *            +---| >|---+---+ ci
 *            |   |/ |   |   |
 * a       top|   dsbd   |   |
 * o-\/\/\----+          |   |                                 
 *    rma     |          |   |               cii              bot    rmc   c
 *            |   |\ |   |   +----\/\/\-------+-------\/\/\----+----\/\/\--o
 *            +---| >|---+         rci        |        rco
 *                |/ |                        |  
 *                dgr                       __|__
 *                                       dsx / \
 *                                          /___\
 *                                            |
 *                                            |
 *                                            o s
 *
 * physical device layout:  (single stripe device)
 *
 *
 *     +---------------------------------------------+
 *     |                                             |
 *     |                                             |
 *     |    +-----------------------------------+    |
 *     |    |                                   |    |
 *     |    |                                   |    |
 *     |    |     +-----------------------+     |    |
 *     |    |     |                       |     |    |
 *     |    |     |                       |     |    |
 *     |    |     |                       |     |    |
 *     |    |     |       +-------+       |     |    |
 *     |    |     |       | +---+ |       |     |    |
 *     |    |     |       | |   | |       |     |    |
 *     |    |     |       | |   | |       |     |    |
 *     |    |     |       | |   | r       |     r    |
 *     |    |     |       | |   l x       |     n    |
 *     |    |     |       | |   | l       |     o    |
 *     |    |     |       | |   |<-rn2pd->|     l    |
 *     |    |     |       | |   | |       |     |    |
 *     |    |     |       | +-w-+ |       |     |    |
 *     |    |     |       +--rxw--+       |<rnw>|    |
 *     |    |     |                       |     |    |
 *     |    |     |                       |     |    |
 *     |    |     |                       |     |    |
 *     |    |     +-----------------------+     |    |
 *     |    |                                   |    |
 *     |    |                                   |    |
 *     |    +----------------rnow---------------+    |
 *     |                                             |
 *     |                                             |
 *     +---------------------------------------------+
 *                                                  bf
 *
 * ibm confidential
 * (c) 2009 ibm corporation
 *
 ********************************************************************************
 *
 .subckt sbd (a c sx)  w=5.0u  l=5.0u  nf=1  rsx=50  par=1  dtemp=0
 *
 .param
 *---- drawn geometry ----------------------------------------------------------
 +   nspaces = 'nf - 1'
 +       rxw = 'w + 0.56u'                      $ anode rx design width
 +       rxl = 'l + 0.56u'                      $ anode rx design length
 +       rnw = 0.56u                            $ rt rx design width (fixed)
 +      rnol = 'rxl + 2.76u'                    $ rt rx design outer length
 +      rnow = 'rxw + 2.72u'                    $ rt rx design outer width
 +     rn2rx = 0.80u                            $ rt rx to anode rx space (average) 
 +       nsw = 'rnow*nf - ((nf-1)*rnw) + 0.2u'  $ ns subcollector design width
 +       nsl = 'rnol + 0.2u'                    $ ns subcollector design length

 *---- drawn geometry + mask bias ----------------------------------------------
 +        wx = 'w + delbn'
 +        lx = 'l + delbn'
 +      rnwx = 'rnw + delrx'
 +      rxwx = 'rxw + delrx'
 +      rxlx = 'rxl + delrx'
 +     rnowx = 'rnow + delrx'
 +     rnolx = 'rnol + delrx'
 +    rn2rxx = 'rn2rx - delrx'
 +      nswx = 'nsw'
 +      nslx = 'nsl'

 *---- area/perimeter calculations ---------------------------------------------
 +   areasbd = 'w*l*nf'				     $ area for idiality calculation
 +    arearx = 'rxwx*rxlx*nf'                         $ total anode rx area
 +   perimrx = '2*(rxwx+rxlx)*nf'                     $ total anode rx perim
 +    areaan = 'wx*lx*nf'                             $ total anode area
 +    areagr = 'arearx-areaan'                        $ total guardring area
 +   perimgr = '2*(w+l)*nf'                           $ total guardring inside perim
 +    areans = 'nswx*nslx'                            $ total ns area (parasitic)
 +   perimns = '2*(nswx+nslx)'                        $ total ns perim (parasitic)
 +  perimcp = '2* (l + w + 0.88u) * nf'
 *
 *---- sbd diode parameters ----------------------------------------------------
 +     mmphi = '0.7071*sqrt(4.7f/areasbd)'
 +     mmsbd = agauss(0,1,3)
 *
 * calculate idiality
 +      nsbd = 'exp(0.0644)/(areasbd*1e12)^0.0077'
 +   sbdphib = '(-1/38.922872)*log((sbdia + sbdinf*min(nf,10))/(1.18*120e4*298.15*298.15))'
 +  msbdphib = 'sbdphib + mmphi*mmsbd/(sqrt(par))'  $ include mis-match
 +     sbdis = '1.18*120e4*298.15*298.15*exp(-38.922872*msbdphib)' $ sbd is (a/m**2)
 *
 *---- model resistance calculations --------------------------------------------
 +       lsc = 'max(wx,lx)'
 +       wsc = 'min(wx,lx)'
 *
 +     rundr = 'nbnsr*wsc/((12*lsc+20*wsc)*nf)'     
 +     rtrap = 'nbnsr/(4*nf)*log(rnowx/rxwx)*log(rnolx/rxlx)/(log(rnowx/rxwx)+log(rnolx/rxlx))'
 +     rucon = 'nbnsr*rnwx/(6*(rnowx+rnolx)*nf)'             
 +     rcvrt = 'nrnw/(rnwx*(rnowx+rnolx)*2*nf)'           
 +      rm1a = 'm1rs*rxl/(3*(rxw-0.08u)*nf)'      $ pcell m1 res. anode
 +      rm1c = 'm1rs*(rnol-rnw)/(3*0.48u*(nf+1))' $ pcell m1 res. cathode
 +       rav = 'nvepi/areasbd'                  $ ver under anode
 *
 *---- temperature compensation for reverse leakage ----------------------------
 +   pdeltat = 'temper-25+dtemp'
 +  ptkelvin = 'pdeltat + 298.15'
 +  lkprefac = 'sbdlk*exp(-6.863e3/ptkelvin)'
 *---- subcircuit ----------------------------
 rma   a  top   r=rm1a  dtemp=dtemp tc1=tm1rs
 dsbd  top ci   xsbd    dtemp=dtemp area=1 pj=0
 dgr   top ci   grd     dtemp=dtemp area=1 pj=1
 gleak top ci   cur='lkprefac*sinh(0.4*v(top,ci))*areaan'
 dsx   sx  cii  sxd     dtemp=dtemp area=areans pj=perimns
 rci   ci  cii  r='rundr+rtrap+rucon' dtemp=dtemp tc1=tnbnsr
 rco   cii bot  r=rcvrt dtemp=dtemp tc1=tnbnsr
 rmc   bot   c  r=rm1c  dtemp=dtemp tc1=tm1rs

 .model xsbd d
 + level = 1
 +  dcap = 2
 +  tlev = 2
 + tlevc = 1
 +  tref = 25
 +    eg = msbdphib
 +  gap1 = 473u
 +  gap2 = 636
 +   xti = 2.0
 +    js = 'sbdis*areaan'
 +   jsw = 0
 +    rs = 'nvepi/areaan'
 +   trs = tnbnsr
 +     n = nsbd
 +    cj = 'nsbdcj*areaan'
 +   cta = 0.81m
 +    pb = 0.2575
 +   tpb = -0.66m
 +    mj = 0.2714
 +   cjp = 0.0
 +   php = 1.0
 +  mjsw = 0.5
 +    vb = 13.5

 .model grd d
 + level = 1
 +  dcap = 2
 +  tlev = 2
 + tlevc = 1
 +  tref = 25
 +    eg = 1.17
 +  gap1 = 473u
 +  gap2 = 636
 +   xti = 3.0
 +    js = '5*js_p*areagr'
 +   jsw = '5*jsw_p*perimgr'
 +     n = n_p 
 +    cj = 0.0
 +    pb = 1.0
 +    mj = 0.5
 +   cjp = 'nsbdcjp*perimcp'
 +   ctp = 0.7m
 +   php = 0.8862
 +  tphp = 2.0m
 +  mjsw = 0.4039
 +    vb = 12.0

 .model sxd d
 + level = 1
 +  dcap = 2
 +  tlev = 2
 + tlevc = 1
 +  tref = 25
 +    eg = 1.17
 +   xti = 3.0
 +  gap1 = 473u
 +  gap2 = 636
 +    js = js_rns
 +   jsw = jsw_rns
 +     n = n_rns
 +    rs = 'rsx*areans'
 +    cj = ncjsa
 +    pb = pb_rns
 +    mj = mj_rns
 +   cjp = '0.5*ncjsp'
 +   php = pbsw_rns
 +  mjsw = mjsw_rns
 +    vb = bd_rns

 .ends sbd

 .include './sblkndres.inc'
 * path, component, release: cmos8base/rel/hspice/models/sblkndres.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.1 06/02/27 15:42:52
 *
 *>  ibm cmrf8sf/bicmos8wl  sblkndres    one sided n+ s/d resistor for ballasted nfet
 *
 ***********************************************************************
 *
 *  distributed r-c network which accounts for end resistance effects,
 *  parasitic capacitance and includes a fixed substrate resistance.
 *
 *           rend       rmid     eva     evb     rmid       
 *   in  o--/\/\/\--o--/\/\/\--o--l|--o--|l--o--/\/\/\--o--------o  fet
 *                  |                 |                 |
 *                  |                 |                 |
 *                ----              ----              ----
 *                 /\  dsnx          /\  dsnx          /\  dsnx
 *                /  \              /  \              /  \
 *                ----              ----              ----
 *                  |                 |                 |
 *                  |                 |                 |
 *                  \                 \                 \
 *                  /  rg             /  rg             /  rg
 *                  \                 \                 \
 *                  |                 |                 |
 *                  o-----------------o-----------------o
 *                                    |
 *                                    |
 *  parasitic capacitance and         \
 *  resistance is                     / rsub
 *  divided among diodes in           \
 *  1/6 - 2/3 - 1/6 ratios            |
 *                                    o substrate (sx)
 *
 ***********************************************************************
 *
 *  dimensions: w = design width  of rx
 *              l = design length of sblk & op 
 *
 *  syntax:     specify both width and length:
 *              xxx  in fet sx  sblkndres (w=2u  l=5u)
 *
 *       or     specify width and resistance:
 *              xxx  in fet sx  sblkndres (w=2u  r=150)
 *
 *  series:     sbar  --> defined model parameter,   reff = rbar * sbar
 *
 *  parallel:      m  --> implicit hspice parameter, reff = rbar / m
 *
 *               par  --> defined model parameter,   reff = rbar / par
 *
 *  optional:   dtemp --> device temperature difference with respect to
 *                        the simulated circuit temperature (deg c).
 *
 *                rsx --> fixed substrate resistance, default = 50 ohm.
 *
 *  notes:
 *
 *  1. model supports only rectangular resistors with contacts at one
 *     end (in) of the resistor bar. "dogbone" or multiple tap layouts 
 *     are not supported.
 *
 *  2. capacitance is determined from op area and edge alone.
 *
 *
 * ibm confidential
 * (c) 2006 ibm corporation
 *                                
 ***********************************************************************
 *
 .subckt sblkndres  in fet sx  w=2u  l=-1u  r=-1  sbar=1  par=1  dtemp=0  rsx=50

 .param
 * check for minimum width, calculate effective width
 + opwdth = 'max(w,0.28u) + opnddwf'
 + opwdthn = 'max(w,0.28u) + opnddwn'
 + opwrx = 'max(w,0.28u) + tdelrx'

 * calculate op length, assumes w,r and groundrule spacings for contacts
 + pleqn = '((r*opwdthn - opndrenn) / opndrsn)'

 * select op length, user input takes precedence over calculated length
 + plnom = 'max(l,0) + ((l-abs(l))/(2*l))*pleqn'

 * check for minimum length, calculate effective length
 + oplen = 'max(plnom,0.44u)'

 * resistance calculation
 + rmid = 'opndrsf * (oplen / opwdth) / 2'
 + rend = 'opndrenf / opwdth'

 * calculate area, perimeter for capacitance
 * only area and edge of the sblk op is used, 
 * area outside op is handled by extraction
 + opcaplen  = '2 * (oplen + opwrx)'
 + opcaparea = '(oplen * opwrx)'

 * partition capacitance area, perimeter
 + ansx = 'opcaparea / 3'
 + pnsx = 'opcaplen  / 3'

 * mis-match calculation
 + opma   = 'opndma * opndma / (oplen * opwdth * 1e12)'
 + opml   = 'opndml * opndml / (opwdth * oplen * oplen * 1e18)'
 + opmw   = 'opndmw * opndmw / (opwdth * opwdth * 1e12)'
 + op3sig = '0.01 * sqrt(opma + opml + opmw)'
 + opmm   = 'op3sig * 0.7071 / sqrt(sbar*par)'
 + mmres  = agauss(0,1,3)
 + mmatr  = '1 + (opmm * mmres)'

 * effective resistance from local conductance
 + rg = '1/(ndrgw*opwdth + ndrgl*oplen)'

 * resistor network
 rea  in   1  'rend*mmatr*sbar'  dtemp=dtemp  tc1=opndrntc
 rma   1   2  'rmid*mmatr*sbar'  dtemp=dtemp  tc1=opndrstc
 rmb   4   5  'rmid*mmatr*sbar'  dtemp=dtemp  tc1=opndrstc
 reb   5 fet  r=1m  

 eva   2   3  poly(2)  3 sx  in  2  0 0 0 0  opndvcr
 evb   3   4  poly(2)  3 sx  4 fet  0 0 0 0  opndvcr

 dnsa  6   1  dnsxa  area='(ansx/2)*sbar'  pj='(pnsx/2)*sbar' dtemp=dtemp
 dnsb  6   3  dnsxa  area='(2*ansx)*sbar'  pj='(2*pnsx)*sbar' dtemp=dtemp
 dnsc  6   5  dnsxa  area='(ansx/2)*sbar'  pj='(pnsx/2)*sbar' dtemp=dtemp

 rsub  6  sx  r='rsx'

 * n+ to sx diodes
 *
 .model dnsxa d
 + level = 1
 +  dcap = 2
 +  tlev = 0
 + tlevc = 0
 +  tref = 25
 +    eg = 1.11
 +   xti = 3.0
 +    rs = '3*rg*ansx'
 +     n = n_n
 +    js = js_n
 +   jsw = jsw_n
 +    cj = 'cj_n'
 +    pb = pb_n
 +    mj = mj_n
 +   cjp = cjsw_n
 +   php = pbsw_n
 +  mjsw = mjsw_n
 +    vb = 11.5

 .ends sblkndres
 .include './silres.inc'
 * path, component, release: cmos8base/rel/hspice/models/silres.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.2 09/09/30 14:51:30
 *
 *>  ibm 8rf/8wl  silres    silicided poly (ballast) resistor
 *
 ***********************************************************************
 *
 *  distributed r-c network which accounts for end resistance effects,
 *  parasitic capacitance and includes a fixed substrate resistance.
 *
 *          rend        rmid                     rmid        rend
 *  in  o--/\/\/\--o---/\/\/\---------o---------/\/\/\---o--/\/\/\--o  out
 *                 |                  |                  |
 *                 |                  |                  |
 *               ----               -----              -----
 *          cpcx ----          cpcx -----         cpcx -----
 *                 |                  |                  |
 *                 |                  |                  |
 *                 \                  \                  \
 *             rg  /               rg /               rg /
 *                 \                  \                  \
 *                 |                  |                  |
 *                 o------------------o------------------o
 *                                    |
 *   parasitic capacitance is         \
 *   divided among c elements         / rsub
 *   in 1/6 - 2/3 - 1/6 ratios        \
 *                                    |
 *                                    o substrate (sx)
 *
 ***********************************************************************
 *
 *  dimensions: w = design width  of pc
 *              l = design length between ca contacts
 *
 *  syntax:     specify both width and length:
 *              xxx  in out sx  silres (w=2u  l=5u)
 *
 *       or     specify width and resistance:
 *              xxx  in out sx  silres (w=2u  r=520)
 *
 *  series:     sbar  --> defined model parameter,   reff = rbar * sbar
 *
 *  parallel:      m  --> implicit hspice parameter, reff = rbar / m
 *
 *              par  --> explicit spice parameter, reff = rbar / par
 *
 *  optional:   dtemp --> device temperature difference with respect to
 *                        the simulated circuit temperature (deg c).
 *
 *                rsx --> fixed substrate resistance, default = 50 ohm.
 *
 *                 bp --> specify groundplane, default bp=3 (sx)
 *                                                     bp=2 (bb)
 *                                                     bp=1 (nw)
 *
 *  notes:
 *
 *  1. model supports only rectangular resistors with contacts at each
 *     end of the resistor bar. "dogbone" or multiple tap layouts are 
 *     not supported.
 *
 *  2. model assumes minimum groundrule spacings used for placing contacts
 *     to calculate the end resistance effects based on op design length.
 *
 *
 * ibm confidential
 * (c) 2009 ibm corporation
 *                                
 ***********************************************************************
 *
 .subckt silres  in out sx  w=2u l=-1u r=-1  sbar=1 dtemp=0 rsx=50  bp=3 par=1
 *
 .param
 *
 * check for minimum width, calculate effective width
 + silwdth = 'max(w,0.34u) + silrdwf'
 *
 * calculate length, assumes w,r and groundrule spacings for contacts
 + rendn = '1u*(exp(silren) + 1.004)'
 + pleqn = '((r*(w+silrdwn) - 2*rendn) / pcrsin)'
 *
 * select length, user input takes precedence over calculated length
 + plnom = 'max(l,0) + ((l-abs(l))/(2*l))*pleqn'
 * check for minimum length, calculate effective length
 + sillen = 'max(plnom,1.0u) + silrdlf'
 *
 * resistance calculation
 + rmid = 'pcrsi * (sillen / silwdth) / 2'
 + rend = '1u*(exp(silref) + 1.004) / silwdth'
 *
 * calculate area, perimeter for capacitance
 * subtract delta w, delta l to obtain drawn dimensions,
 * then include region of pc overlap from ca
 + silcaplen  = '2 * ((sillen-silrdlf) + (silwdth-silrdwn))'
 + silcaparea = '(sillen-silrdlf) * (silwdth-silrdwn)'
 *
 * partition capacitance area, perimeter
 + apcx = 'silcaparea / 3'
 + ppcx = 'silcaplen / 3'
 *
 * mis-match calculation
 + silma   = 'silrma * silrma / (sillen * silwdth * 1e12)'
 + silml   = 'silrml * silrml / (sillen * sillen * 1e12)'
 + silmw   = 'silrmw * silrmw / (silwdth * silwdth * 1e12)'
 + sil3sig = '0.01 * sqrt(silma + silml + silmw)'
 + silmm   = 'sil3sig * 0.7071 / sqrt(sbar*par)'
 + mmres  = agauss(0,1,3)
 + mmatr  = '1 + (silmm * mmres)'
 *
 * effective resistance from conductance
 * ptnw, ptbb, and ptsx are also used for the capacitance
 + ptnw = '(bp==1)'
 + ptbb = '(bp==2)'
 + ptsx = '(bp==3)'
 + kw = '(ptnw*pcnwrgw + ptbb*pcbbrgw + ptsx*pcsxrgw)'
 + kl = '(ptnw*pcnwrgl + ptbb*pcbbrgl + ptsx*pcsxrgl)'
 + rg = '1/(kw*silwdth + kl*sillen)'

 * resistor network
 rea  in   1  r='rend*mmatr*sbar'  dtemp=dtemp  tc1=silrntc 
 rma   1   3  r='rmid*mmatr*sbar'  dtemp=dtemp  tc1=silrst1 
 rmb   3   5  r='rmid*mmatr*sbar'  dtemp=dtemp  tc1=silrst1 
 reb   5 out  r='rend*mmatr*sbar'  dtemp=dtemp  tc1=silrntc 

 *  factor of 0.8 in fringe term comes from reduced thickness of edge since
 *  current is assumesd to be in silicide region and not entire pc.
 cpca  1  11  c='((ptnw+ptsx+1.0*ptbb)*(apcx*oppcdown + 0.8*ppcx*oppcfrng)/2)*sbar*par'
 cpcb  3  31  c='((ptnw+ptsx+1.0*ptbb)*2*(apcx*oppcdown + 0.8*ppcx*oppcfrng))*sbar*par'
 cpcc  5  51  c='((ptnw+ptsx+1.0*ptbb)*(apcx*oppcdown + 0.8*ppcx*oppcfrng)/2)*sbar*par'

 rga   11  6  r='6*rg/sbar'
 rgb   31  6  r='1.5*rg/sbar'
 rgc   51  6  r='6*rg/sbar'

 rsb   6  sx  r='rsx'

 .ends silres
 .include './singlecpw.inc'
 * path, component, release: cmrf8sf/reldm/hspice/models/singlecpw.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.5 09/03/19 10:37:27
 *
 *>  ibm cmrf8sf "singlecpw" line model (ma metallization options)
 *
 ***************************************************************************
 *
 *   licensed materials - property of ibm
 *
 *
 *   ibm confidential
 *   (c) 2008 ibm corporation
 *
 *   us government users restricted rights - use, duplication
 *   or disclosure restricted by gsa adp schedule contract with
 *   ibm corporation.
 *
 ***************************************************************************
 * {converted to hspice } simulator lang = spectre
 *
 .subckt  singlecpw ( va vb vshield )
 .param
 *
 ***************************************************************************
 *
 * syntax:
 *  x1 va vb singlecpw
 *  l               = 0.0001   // transmission line length [m]
 *  w               = 4e-06    // transmission line width [m]
 *  s               = 6e-06    // distance to left conductor [m]
 *  layerads        = 11        // signal layer:                    see table below
 *  patternfill     = 1        // pattern fill                     0="no metal fill modelled", and 1="metal fill modelled"
 *  dtemper         = 0        // temperature difference between circuit and signal metal layer (c)
 *  temper            = globally defined temperature (c)
 *  tlev1           --> [3,4,5,6] = [(m1 m2 m3), (m1 m2 m3 m4), (m1 m2 m3 m4 m5), (m1 m2 m3 m4 m5 m6)]
 *  tlev2           --> [2,3]   = [(mq lm), (mq mg lm)]
 *
 ***************************************************************************
 *
 * notes:
 *
 ***************************************************************************
 *
 * notes:
 *
 * this model was created based on the following design manual and beol process assumptions document:
 * design manual                    : cmos8rf (cmrf8sf) design manual: es # 57p9006 ec # j88658, april 24, 2007
 * beol process assumptions document: cmrf8sf beol process           : es # 70p6227 ec # j95133, october 23, 2006
 * the "wireopt" parameter which is internal to this spectre file is set based on tlev1 and tlev2.
 * the internal "wireopt" parameter tells which metal dielectric stack is being used.
 * a list of the wireopt values corresponding to the different beol metal-dielectric
 * stack options and tlev1 and telv2 combinations in cmrf8sf is shown below:
 *
 * "wireopt"     stack         tlev1     tlev2
 * ---------     -----         -----     -----
 * 1             2_1_ly_e1_ma       2         1
 * 2             3_1_ly_e1_ma       3         1
 * 3             2_2_ly_e1_ma       2         2
 * 4             2_3_ly_e1_ma       3         2
 * 5             3_2_ly_e1_ma       4         1
 *
 * every possible metal layer in a technology is assigned a unique number which is used
 * to assign the parameters "layer_sig", "layer_bot", and "layer_top"(see cross-section
 * below). for the cmrf8sf technology, the numbers assigned to every possible metal layer
 * are as follows:
 *
 * "layer_sig"/"layer_bot"/"layer_top"      metal layer
 * -----------------------------------      -----------
 * 1                                        m1
 * 2                                        m2
 * 3                                        m3
 * 4                                        m4
 * 7                                        mq
 * 8                                        mg
 * 9                                        ly
 * 10                                        e1
 * 11                                        ma
 *
 * there are four possible cases of metal crossing lines that are possible to be used by
 * this model distinguished by the parameter "plane". "plane"=0="none" means that no metal
 * crosses above or below the signal layer (silicon substrate below the signal layer).
 * "plane"=1="above" means that metal crosses above the signal layer and the signal layer
 * is open to the silicon substrate below. "plane"=2="below" means that metal crosses below
 * below the signal line (between the signa layer and the si substrate). "plane"=both means
 * that metal crosses the signal line both above and below (as shown in the cross-section)
 * below.
 *
 ***************************************************************************
 *
 *single rc-line cross-section
 *============================
 *
 *xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx crossover (optional)
 *
 *    neighbor           signal              neighbor
 *     -----            --------              -----
 *    |     |  spacing |        |  spacing   |     |
 *    |     |<-------->|        |<---------->|     |        signal layer
 *    |     |          |        |            |     |
 *     -----            --------              -----
 *
 *
 * xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx crossunder (optional)
 *
 *  --------------------------------------------------------
 *  /////////////////// silicon  substrate /////////////////
 *  ////////////////////////////////////////////////////////
 *
 ** single_rc default parameters ******************************************
 *
 +  l              = 0.0001
 +  w              = 4e-06
 +  s              = 6e-06
 +  layerads       = 11
 +  patternfill    = 1
 +  dtemper        = 0
 +  tlev1          = 3
 +  tlev2          = 2
 *
 ** additional constants and parameters *************************************
 *
 *
 +  layer_sig      = 'layerads'
 +  layer_top      = 'layer_sig'
 +  layer_bot      = 'layer_sig'
 +  crosstype      = 0
 +  plane          = 0
 +  crosscapfactor = 1
 +  c_cust         = 1e-10
 + eo = 8.8542e-12
 + pattern_fill = 'patternfill'
 + wire_opt = '(tlev1-1 + 2*(tlev1==4))*(tlev2==1) + (tlev1+1)*(tlev2==2)'
 *
 ** metal stack ************************************************************
 *
 *
 * put vertical metal positions in model file:
 *
 *
 * 2_1_ly_e1_ma...wireopt=1
 *
 + m1bot1 = 'capct+oppcthkf+oppcstif'
 + m1top1 = 'm1bot1 + m1t'
 + m2bot1 = 'm1top1 + m1m2t'
 + m2top1 = 'm2bot1 + m2t'
 + mqbot1 = 'm2top1 + mxmqt'
 + mqtop1 = 'mqbot1 + mqt'
 + lybot1 = 'mqtop1 + mqlyt'
 + lytop1 = 'lybot1 + lyt'
 + e1bot1 = 'lytop1 + lye1t'
 + e1top1 = 'e1bot1 + e1t'
 + mabot1 = 'e1top1 + e1mat'
 + matop1 = 'mabot1 + mat'
 *
 * 3_1_ly_e1_ma...wireopt=2
 *
 + m1bot2 = 'capct+oppcthkf+oppcstif'
 + m1top2 = 'm1bot2 + m1t'
 + m2bot2 = 'm1top2 + m1m2t'
 + m2top2 = 'm2bot2 + m2t'
 + m3bot2 = 'm2top2 + m2m3t'
 + m3top2 = 'm3bot2 + m3t'
 + mqbot2 = 'm3top2 + mxmqt'
 + mqtop2 = 'mqbot2 + mqt'
 + lybot2 = 'mqtop2 + mqlyt'
 + lytop2 = 'lybot2 + lyt'
 + e1bot2 = 'lytop2 + lye1t'
 + e1top2 = 'e1bot2 + e1t'
 + mabot2 = 'e1top2 + e1mat'
 + matop2 = 'mabot2 + mat'
 *
 * 2_2_ly_e1_ma...wireopt=3
 *
 + m1bot3 = 'capct+oppcthkf+oppcstif'
 + m1top3 = 'm1bot3 + m1t'
 + m2bot3 = 'm1top3 + m1m2t'
 + m2top3 = 'm2bot3 + m2t'
 + mqbot3 = 'm2top3 + mxmqt'
 + mqtop3 = 'mqbot3 + mqt'
 + mgbot3 = 'mqtop3 + mqmgt'
 + mgtop3 = 'mgbot3 + mgt'
 + lybot3 = 'mgtop3 + mqlyt'
 + lytop3 = 'lybot3 + lyt'
 + e1bot3 = 'lytop3 + lye1t'
 + e1top3 = 'e1bot3 + e1t'
 + mabot3 = 'e1top3 + e1mat'
 + matop3 = 'mabot3 + mat'
 *
 * 2_3_ly_e1_ma...wireopt=4
 *
 + m1bot4 = 'capct+oppcthkf+oppcstif'
 + m1top4 = 'm1bot4 + m1t'
 + m2bot4 = 'm1top4 + m1m2t'
 + m2top4 = 'm2bot4 + m2t'
 + m3bot4 = 'm2top4 + m2m3t'
 + m3top4 = 'm3bot4 + m3t'
 + mqbot4 = 'm3top4 + mxmqt'
 + mqtop4 = 'mqbot4 + mqt'
 + mgbot4 = 'mqtop4 + mqmgt'
 + mgtop4 = 'mgbot4 + mgt'
 + lybot4 = 'mgtop4 + mqlyt'
 + lytop4 = 'lybot4 + lyt'
 + e1bot4 = 'lytop4 + lye1t'
 + e1top4 = 'e1bot4 + e1t'
 + mabot4 = 'e1top4 + e1mat'
 + matop4 = 'mabot4 + mat'
 *
 * 3_2_ly_e1_ma...wireopt=5
 *
 + m1bot5 = 'capct+oppcthkf+oppcstif'
 + m1top5 = 'm1bot5 + m1t'
 + m2bot5 = 'm1top5 + m1m2t'
 + m2top5 = 'm2bot5 + m2t'
 + m3bot5 = 'm2top5 + m2m3t'
 + m3top5 = 'm3bot5 + m3t'
 + m4bot5 = 'm3top5 + m3m4t'
 + m4top5 = 'm4bot5 + m4t'
 + mqbot5 = 'm4top5 + mxmqt'
 + mqtop5 = 'mqbot5 + mqt'
 + lybot5 = 'mqtop5 + mqlyt'
 + lytop5 = 'lybot5 + lyt'
 + e1bot5 = 'lytop5 + lye1t'
 + e1top5 = 'e1bot5 + e1t'
 + mabot5 = 'e1top5 + e1mat'
 + matop5 = 'mabot5 + mat'
 *
 * end of vertical metal position entries:
 *
 *
 * put nominal vertical metal positions in model file:
 *
 *
 * 2_1_ly_e1_ma...wireopt=1
 *
 + m1bot1_n = 'capct+oppcthkn+oppcstin'
 + m1top1_n = 'm1bot1 + m1t'
 + m2bot1_n = 'm1top1 + m1m2t'
 + m2top1_n = 'm2bot1 + m2t'
 + mqbot1_n = 'm2top1 + mxmqt'
 + mqtop1_n = 'mqbot1 + mqt'
 + lybot1_n = 'mqtop1 + mqlyt'
 + lytop1_n = 'lybot1 + lyt'
 + e1bot1_n = 'lytop1 + lye1t'
 + e1top1_n = 'e1bot1 + e1t'
 + mabot1_n = 'e1top1 + e1mat'
 + matop1_n = 'mabot1 + mat'
 *
 * 3_1_ly_e1_ma...wireopt=2
 *
 + m1bot2_n = 'capct+oppcthkn+oppcstin'
 + m1top2_n = 'm1bot2 + m1t'
 + m2bot2_n = 'm1top2 + m1m2t'
 + m2top2_n = 'm2bot2 + m2t'
 + m3bot2_n = 'm2top2 + m2m3t'
 + m3top2_n = 'm3bot2 + m3t'
 + mqbot2_n = 'm3top2 + mxmqt'
 + mqtop2_n = 'mqbot2 + mqt'
 + lybot2_n = 'mqtop2 + mqlyt'
 + lytop2_n = 'lybot2 + lyt'
 + e1bot2_n = 'lytop2 + lye1t'
 + e1top2_n = 'e1bot2 + e1t'
 + mabot2_n = 'e1top2 + e1mat'
 + matop2_n = 'mabot2 + mat'
 *
 * 2_2_ly_e1_ma...wireopt=3
 *
 + m1bot3_n = 'capct+oppcthkn+oppcstin'
 + m1top3_n = 'm1bot3 + m1t'
 + m2bot3_n = 'm1top3 + m1m2t'
 + m2top3_n = 'm2bot3 + m2t'
 + mqbot3_n = 'm2top3 + mxmqt'
 + mqtop3_n = 'mqbot3 + mqt'
 + mgbot3_n = 'mqtop3 + mqmgt'
 + mgtop3_n = 'mgbot3 + mgt'
 + lybot3_n = 'mgtop3 + mqlyt'
 + lytop3_n = 'lybot3 + lyt'
 + e1bot3_n = 'lytop3 + lye1t'
 + e1top3_n = 'e1bot3 + e1t'
 + mabot3_n = 'e1top3 + e1mat'
 + matop3_n = 'mabot3 + mat'
 *
 * 2_3_ly_e1_ma...wireopt=4
 *
 + m1bot4_n = 'capct+oppcthkn+oppcstin'
 + m1top4_n = 'm1bot4 + m1t'
 + m2bot4_n = 'm1top4 + m1m2t'
 + m2top4_n = 'm2bot4 + m2t'
 + m3bot4_n = 'm2top4 + m2m3t'
 + m3top4_n = 'm3bot4 + m3t'
 + mqbot4_n = 'm3top4 + mxmqt'
 + mqtop4_n = 'mqbot4 + mqt'
 + mgbot4_n = 'mqtop4 + mqmgt'
 + mgtop4_n = 'mgbot4 + mgt'
 + lybot4_n = 'mgtop4 + mqlyt'
 + lytop4_n = 'lybot4 + lyt'
 + e1bot4_n = 'lytop4 + lye1t'
 + e1top4_n = 'e1bot4 + e1t'
 + mabot4_n = 'e1top4 + e1mat'
 + matop4_n = 'mabot4 + mat'
 *
 * 3_2_ly_e1_ma...wireopt=5
 *
 + m1bot5_n = 'capct+oppcthkn+oppcstin'
 + m1top5_n = 'm1bot5 + m1t'
 + m2bot5_n = 'm1top5 + m1m2t'
 + m2top5_n = 'm2bot5 + m2t'
 + m3bot5_n = 'm2top5 + m2m3t'
 + m3top5_n = 'm3bot5 + m3t'
 + m4bot5_n = 'm3top5 + m3m4t'
 + m4top5_n = 'm4bot5 + m4t'
 + mqbot5_n = 'm4top5 + mxmqt'
 + mqtop5_n = 'mqbot5 + mqt'
 + lybot5_n = 'mqtop5 + mqlyt'
 + lytop5_n = 'lybot5 + lyt'
 + e1bot5_n = 'lytop5 + lye1t'
 + e1top5_n = 'e1bot5 + e1t'
 + mabot5_n = 'e1top5 + e1mat'
 + matop5_n = 'mabot5 + mat'
 *
 * end of nominal vertical metal position entries:
 *
 *
 * create stack definition variables:
 *
 + ly1  = '(wire_opt==1)'
 + ly2  = '(wire_opt==2)'
 + ly3  = '(wire_opt==3)'
 + ly4  = '(wire_opt==4)'
 + ly5  = '(wire_opt==5)'
 *
 * end stack definition variables:
 *
 + dlw = 'delm1*(layer_sig==1) + delm2*(layer_sig==2) + delm3*(layer_sig==3) + delm4*(layer_sig==4) + delmq*(layer_sig==7) + delmg*(layer_sig==8) + delly*(layer_sig==9) + dele1*(layer_sig==10) + delma*(layer_sig==11)'
 *
 + w_l       = 'w + dlw'
 + s_l       = 'abs(s - dlw)'
 *
 + cf = 'crosscapfactor'
 *
 * begin dielectric stack definition:
 *
 + m1_eps_side = 3.8621
 + m2_eps_side = 3.6
 + m3_eps_side = 3.6
 + m4_eps_side = 3.6
 + mq_eps_side = 3.6
 + mg_eps_side = 3.6
 + ly_eps_side = 4.5413
 + e1_eps_side = 4.1677
 + ma_eps_side = 3.8388
 *
 + layer_eps_side = 'm1_eps_side*(layer_sig==1) + m2_eps_side*(layer_sig==2) + m3_eps_side*(layer_sig==3) + m4_eps_side*(layer_sig==4) + mq_eps_side*(layer_sig==7) + mg_eps_side*(layer_sig==8) + ly_eps_side*(layer_sig==9) + e1_eps_side*(layer_sig==10) + ma_eps_side*(layer_sig==11)'
 + under_eps_side = 'm1_eps_side*(layer_bot==1) + m2_eps_side*(layer_bot==2) + m3_eps_side*(layer_bot==3) + m4_eps_side*(layer_bot==4) + mq_eps_side*(layer_bot==7) + mg_eps_side*(layer_bot==8) + ly_eps_side*(layer_bot==9) + e1_eps_side*(layer_bot==10) + ma_eps_side*(layer_bot==11)'
 + over_eps_side  = 'm1_eps_side*(layer_top==1) + m2_eps_side*(layer_top==2) + m3_eps_side*(layer_top==3) + m4_eps_side*(layer_top==4) + mq_eps_side*(layer_top==7) + mg_eps_side*(layer_top==8) + ly_eps_side*(layer_top==9) + e1_eps_side*(layer_top==10) + ma_eps_side*(layer_top==11)'
 *
 + m1_eps_side_over = 7
 + m2_eps_side_over = 7
 + m3_eps_side_over = 7
 + m4_eps_side_over = 7
 + mq_eps_side_over = 7
 + mg_eps_side_over = 7
 + ly_eps_side_over = 7
 + e1_eps_side_over = 7
 + ma_eps_side_over = 4.1
 *
 + layer_eps_side_over  = 'm1_eps_side_over*(layer_sig==1) + m2_eps_side_over*(layer_sig==2) + m3_eps_side_over*(layer_sig==3) + m4_eps_side_over*(layer_sig==4) + mq_eps_side_over*(layer_sig==7) + mg_eps_side_over*(layer_sig==8) + ly_eps_side_over*(layer_sig==9) + e1_eps_side_over*(layer_sig==10) + ma_eps_side_over*(layer_sig==11)'
 + under_eps_side_over  = 'm1_eps_side_over*(layer_bot==1) + m2_eps_side_over*(layer_bot==2) + m3_eps_side_over*(layer_bot==3) + m4_eps_side_over*(layer_bot==4) + mq_eps_side_over*(layer_bot==7) + mg_eps_side_over*(layer_bot==8) + ly_eps_side_over*(layer_bot==9) + e1_eps_side_over*(layer_bot==10) + ma_eps_side_over*(layer_bot==11)'
 + over_eps_side_over   = 'm1_eps_side_over*(layer_top==1) + m2_eps_side_over*(layer_top==2) + m3_eps_side_over*(layer_top==3) + m4_eps_side_over*(layer_top==4) + mq_eps_side_over*(layer_top==7) + mg_eps_side_over*(layer_top==8) + ly_eps_side_over*(layer_top==9) + e1_eps_side_over*(layer_top==10) + ma_eps_side_over*(layer_top==11)'
 *
 *
 *                     2_1_ly_e1_ma          3_1_ly_e1_ma          2_2_ly_e1_ma          2_3_ly_e1_ma          3_2_ly_e1_ma
 *
 + m1_bot_4eps =       'ly1*(1.4129e-07) +    ly2*(1.4129e-07) +    ly3*(1.4129e-07) +    ly4*(1.4129e-07) +    ly5*(1.4129e-07)'
 + m2_bot_4eps =       'ly1*(3.0183e-07) +    ly2*(3.0183e-07) +    ly3*(3.0183e-07) +    ly4*(3.0183e-07) +    ly5*(3.0183e-07)'
 + m3_bot_4eps =                             'ly2*(4.7442e-07) +                          ly4*(4.7442e-07) +    ly5*(4.7442e-07)'
 + m4_bot_4eps =                                                                                               'ly5*(6.4701e-07)'
 + mq_bot_4eps =       'ly1*(5.5505e-07) +    ly2*(7.2764e-07) +    ly3*(5.5505e-07) +    ly4*(7.2764e-07) +    ly5*(9.0023e-07)'
 + mg_bot_4eps =                                                   'ly3*(8.7217e-07) +    ly4*(1.0448e-06)'
 + ly_bot_4eps =       'ly1*(1.0422e-06) +    ly2*(1.2148e-06) +    ly3*(1.3593e-06) +    ly4*(1.5319e-06) +    ly5*(1.3874e-06)'
 + e1_bot_4eps =       'ly1*(1.9622e-06) +    ly2*(2.1348e-06) +    ly3*(2.2793e-06) +    ly4*(2.4519e-06) +    ly5*(2.3074e-06)'
 + ma_bot_4eps =       'ly1*(3.5017e-06) +    ly2*(3.6743e-06) +    ly3*(3.8188e-06) +    ly4*(3.9914e-06) +    ly5*(3.8469e-06)'
 *
 + layer_bot_4eps = 'm1_bot_4eps*(layer_sig==1) + m2_bot_4eps*(layer_sig==2) + m3_bot_4eps*(layer_sig==3) + m4_bot_4eps*(layer_sig==4) + mq_bot_4eps*(layer_sig==7) + mg_bot_4eps*(layer_sig==8) + ly_bot_4eps*(layer_sig==9) + e1_bot_4eps*(layer_sig==10) + ma_bot_4eps*(layer_sig==11)'
 + under_bot_4eps = 'm1_bot_4eps*(layer_bot==1) + m2_bot_4eps*(layer_bot==2) + m3_bot_4eps*(layer_bot==3) + m4_bot_4eps*(layer_bot==4) + mq_bot_4eps*(layer_bot==7) + mg_bot_4eps*(layer_bot==8) + ly_bot_4eps*(layer_bot==9) + e1_bot_4eps*(layer_bot==10) + ma_bot_4eps*(layer_bot==11)'
 + over_bot_4eps =  'm1_bot_4eps*(layer_top==1) + m2_bot_4eps*(layer_top==2) + m3_bot_4eps*(layer_top==3) + m4_bot_4eps*(layer_top==4) + mq_bot_4eps*(layer_top==7) + mg_bot_4eps*(layer_top==8) + ly_bot_4eps*(layer_top==9) + e1_bot_4eps*(layer_top==10) + ma_bot_4eps*(layer_top==11)'
 *
 *                     2_1_ly_e1_ma          3_1_ly_e1_ma          2_2_ly_e1_ma          2_3_ly_e1_ma          3_2_ly_e1_ma
 *
 + m1_top_4eps =       'ly1*(2.1813e-07) +    ly2*(2.1813e-07) +    ly3*(2.1813e-07) +    ly4*(2.1813e-07) +    ly5*(2.1813e-07)'
 + m2_top_4eps =       'ly1*(3.9072e-07) +    ly2*(3.9072e-07) +    ly3*(3.9072e-07) +    ly4*(3.9072e-07) +    ly5*(3.9072e-07)'
 + m3_top_4eps =                             'ly2*(5.6331e-07) +                          ly4*(5.6331e-07) +    ly5*(5.6331e-07)'
 + m4_top_4eps =                                                                                               'ly5*(7.359e-07)'
 + mq_top_4eps =       'ly1*(7.0783e-07) +    ly2*(8.8042e-07) +    ly3*(7.0783e-07) +    ly4*(8.8042e-07) +    ly5*(1.053e-06)'
 + mg_top_4eps =                                                   'ly3*(1.0249e-06) +    ly4*(1.1975e-06)'
 + ly_top_4eps =       'ly1*(1.1473e-06) +    ly2*(1.3199e-06) +    ly3*(1.4645e-06) +    ly4*(1.637e-06) +     ly5*(1.4925e-06)'
 + e1_top_4eps =       'ly1*(2.6869e-06) +    ly2*(2.8594e-06) +    ly3*(3.004e-06) +     ly4*(3.1766e-06) +    ly5*(3.032e-06)'
 + ma_top_4eps =       'ly1*(4.5951e-06) +    ly2*(4.7677e-06) +    ly3*(4.9122e-06) +    ly4*(5.0848e-06) +    ly5*(4.9403e-06)'
 *                             2_1_ly_e1_ma          3_1_ly_e1_ma          2_2_ly_e1_ma          2_3_ly_e1_ma          3_2_ly_e1_ma
 *
 + m1_top_fill =               'ly1*(m1tn) +          ly2*(m1tn) +          ly3*(m1tn) +          ly4*(m1tn) +          ly5*(m1tn)'
 + m2_top_fill = 'm1_top_fill + ly1*(m2tn) +          ly2*(m2tn) +          ly3*(m2tn) +          ly4*(m2tn) +          ly5*(m2tn)'
 + m3_top_fill = 'm2_top_fill +                       ly2*(m3tn) +                                ly4*(m3tn) +          ly5*(m3tn)'
 + m4_top_fill = 'm3_top_fill +                                                                                         ly5*(m4tn)'
 + mq_top_fill = 'm4_top_fill + ly1*(mqtn) +          ly2*(mqtn) +          ly3*(mqtn) +          ly4*(mqtn) +          ly5*(mqtn)'
 + mg_top_fill = 'mq_top_fill +                                             ly3*(mgtn) +          ly4*(mgtn)'
 + ly_top_fill = 'mg_top_fill + ly1*(lytn) +          ly2*(lytn) +          ly3*(lytn) +          ly4*(lytn) +          ly5*(lytn)'
 + e1_top_fill = 'ly_top_fill + ly1*(e1tn) +          ly2*(e1tn) +          ly3*(e1tn) +          ly4*(e1tn) +          ly5*(e1tn)'
 + ma_top_fill = 'e1_top_fill + ly1*(matn) +          ly2*(matn) +          ly3*(matn) +          ly4*(matn) +          ly5*(matn)'
 *
 *                             2_1_ly_e1_ma          3_1_ly_e1_ma          2_2_ly_e1_ma          2_3_ly_e1_ma          3_2_ly_e1_ma
 *
 + m1_bot_fill = 'm1_top_fill - ly1*(m1tn) -          ly2*(m1tn) -          ly3*(m1tn) -          ly4*(m1tn) -          ly5*(m1tn)'
 + m2_bot_fill = 'm2_top_fill - ly1*(m2tn) -          ly2*(m2tn) -          ly3*(m2tn) -          ly4*(m2tn) -          ly5*(m2tn)'
 + m3_bot_fill = 'm3_top_fill -                       ly2*(m3tn) -                                ly4*(m3tn) -          ly5*(m3tn)'
 + m4_bot_fill = 'm4_top_fill -                                                                                         ly5*(m4tn)'
 + mq_bot_fill = 'mq_top_fill - ly1*(mqtn) -          ly2*(mqtn) -          ly3*(mqtn) -          ly4*(mqtn) -          ly5*(mqtn)'
 + mg_bot_fill = 'mg_top_fill -                                             ly3*(mgtn) -          ly4*(mgtn)'
 + ly_bot_fill = 'ly_top_fill - ly1*(lytn) -          ly2*(lytn) -          ly3*(lytn) -          ly4*(lytn) -          ly5*(lytn)'
 + e1_bot_fill = 'e1_top_fill - ly1*(e1tn) -          ly2*(e1tn) -          ly3*(e1tn) -          ly4*(e1tn) -          ly5*(e1tn)'
 + ma_bot_fill = 'ma_top_fill - ly1*(matn) -          ly2*(matn) -          ly3*(matn) -          ly4*(matn) -          ly5*(matn)'
 *
 + layer_top_4eps = 'm1_top_4eps*(layer_sig==1) + m2_top_4eps*(layer_sig==2) + m3_top_4eps*(layer_sig==3) + m4_top_4eps*(layer_sig==4) + mq_top_4eps*(layer_sig==7) + mg_top_4eps*(layer_sig==8) + ly_top_4eps*(layer_sig==9) + e1_top_4eps*(layer_sig==10) + ma_top_4eps*(layer_sig==11)'
 + under_top_4eps = 'm1_top_4eps*(layer_bot==1) + m2_top_4eps*(layer_bot==2) + m3_top_4eps*(layer_bot==3) + m4_top_4eps*(layer_bot==4) + mq_top_4eps*(layer_bot==7) + mg_top_4eps*(layer_bot==8) + ly_top_4eps*(layer_bot==9) + e1_top_4eps*(layer_bot==10) + ma_top_4eps*(layer_bot==11)'
 + over_top_4eps  = 'm1_top_4eps*(layer_top==1) + m2_top_4eps*(layer_top==2) + m3_top_4eps*(layer_top==3) + m4_top_4eps*(layer_top==4) + mq_top_4eps*(layer_top==7) + mg_top_4eps*(layer_top==8) + ly_top_4eps*(layer_top==9) + e1_top_4eps*(layer_top==10) + ma_top_4eps*(layer_top==11)'
 *
 + crossover_top_fill   = 'm1_top_fill*(layer_top==1) + m2_top_fill*(layer_top==2) + m3_top_fill*(layer_top==3) + m4_top_fill*(layer_top==4) + mq_top_fill*(layer_top==7) + mg_top_fill*(layer_top==8) + ly_top_fill*(layer_top==9) + e1_top_fill*(layer_top==10) + ma_top_fill*(layer_top==11)'
 + signal_top_fill      = 'm1_top_fill*(layer_sig==1) + m2_top_fill*(layer_sig==2) + m3_top_fill*(layer_sig==3) + m4_top_fill*(layer_sig==4) + mq_top_fill*(layer_sig==7) + mg_top_fill*(layer_sig==8) + ly_top_fill*(layer_sig==9) + e1_top_fill*(layer_sig==10) + ma_top_fill*(layer_sig==11)'
 + crossunder_top_fill  = 'm1_top_fill*(layer_bot==1) + m2_top_fill*(layer_bot==2) + m3_top_fill*(layer_bot==3) + m4_top_fill*(layer_bot==4) + mq_top_fill*(layer_bot==7) + mg_top_fill*(layer_bot==8) + ly_top_fill*(layer_bot==9) + e1_top_fill*(layer_bot==10) + ma_top_fill*(layer_bot==11)'
 + crossover_bot_fill   = 'm1_bot_fill*(layer_top==1) + m2_bot_fill*(layer_top==2) + m3_bot_fill*(layer_top==3) + m4_bot_fill*(layer_top==4) + mq_bot_fill*(layer_top==7) + mg_bot_fill*(layer_top==8) + ly_bot_fill*(layer_top==9) + e1_bot_fill*(layer_top==10) + ma_bot_fill*(layer_top==11)'
 + signal_bot_fill      = 'm1_bot_fill*(layer_sig==1) + m2_bot_fill*(layer_sig==2) + m3_bot_fill*(layer_sig==3) + m4_bot_fill*(layer_sig==4) + mq_bot_fill*(layer_sig==7) + mg_bot_fill*(layer_sig==8) + ly_bot_fill*(layer_sig==9) + e1_bot_fill*(layer_sig==10) + ma_bot_fill*(layer_sig==11)'
 + crossunder_bot_fill  = 'm1_bot_fill*(layer_bot==1) + m2_bot_fill*(layer_bot==2) + m3_bot_fill*(layer_bot==3) + m4_bot_fill*(layer_bot==4) + mq_bot_fill*(layer_bot==7) + mg_bot_fill*(layer_bot==8) + ly_bot_fill*(layer_bot==9) + e1_bot_fill*(layer_bot==10) + ma_bot_fill*(layer_bot==11)'
 *
 + h_fill_under = '(signal_bot_fill - crossunder_top_fill)*(plane == 2 || plane == 3) + (0.0)*(plane == 0 || plane == 1)'
 + h_fill_over  = '(crossover_bot_fill - signal_top_fill )*(plane == 1 || plane == 3) + (0.0)*(plane == 0 || plane == 2)'
 *
 + w_fill  = '1e-6*(0.9*(layer_sig==1) + 0.9*(layer_sig==2) + 0.9*(layer_sig==3) + 0.9*(layer_sig==4) + 1.2*(layer_sig==7) + 1.2*(layer_sig==8) + 6*(layer_sig==9) + 6*(layer_sig==10) + 11*(layer_sig==11))'
 + s_fill  = '1e-6*(0.3*(layer_sig==1) + 0.3*(layer_sig==2) + 0.3*(layer_sig==3) + 0.3*(layer_sig==4) + 0.4*(layer_sig==7) + 0.4*(layer_sig==8) + 2*(layer_sig==9) + 2*(layer_sig==10) + 5*(layer_sig==11))'
 + sf2sh   = '1e-6*(0.4*(layer_sig==1) + 0.4*(layer_sig==2) + 0.4*(layer_sig==3) + 0.4*(layer_sig==4) + 0.8*(layer_sig==7) + 0.8*(layer_sig==8) + 4*(layer_sig==9) + 4*(layer_sig==10) + 8*(layer_sig==11))'
 *
 *
 *
 + delta_wel   = '0.0115*(layer_sig==1) + 0*(layer_sig==2) + 0*(layer_sig==3) + 0*(layer_sig==4) + 0.022*(layer_sig==7) + 0.022*(layer_sig==8) + 0*(layer_sig==9) + 0*(layer_sig==10) + 0*(layer_sig==11)'
 + delta_wphys = '0*(layer_sig==1) + -0.01*(layer_sig==2) + -0.01*(layer_sig==3) + -0.01*(layer_sig==4) + -0.01*(layer_sig==7) + -0.01*(layer_sig==8) + 0.01*(layer_sig==9) + 0*(layer_sig==10) + -0.08*(layer_sig==11)'
 + wo          = '2*(layer_sig==1) + 2*(layer_sig==2) + 2*(layer_sig==3) + 2*(layer_sig==4) + 2*(layer_sig==7) + 2*(layer_sig==8) + 2*(layer_sig==9) + 2*(layer_sig==10) + 4*(layer_sig==11)'
 + sopc        = '0.9999*(layer_sig==1) + 0.9999*(layer_sig==2) + 0.9999*(layer_sig==3) + 0.9999*(layer_sig==4) + 0.9999*(layer_sig==7) + 0.9999*(layer_sig==8) + 0.9999*(layer_sig==9) + 0.9999*(layer_sig==10) + 0.9999*(layer_sig==11)'
 + wopc        = '0.9999*(layer_sig==1) + 0.9999*(layer_sig==2) + 0.9999*(layer_sig==3) + 0.9999*(layer_sig==4) + 0.9999*(layer_sig==7) + 0.9999*(layer_sig==8) + 0.9999*(layer_sig==9) + 0.9999*(layer_sig==10) + 0.9999*(layer_sig==11)'
 + wlim        = '2*(layer_sig==1) + 2*(layer_sig==2) + 2*(layer_sig==3) + 2*(layer_sig==4) + 2*(layer_sig==7) + 2*(layer_sig==8) + 2*(layer_sig==9) + 2*(layer_sig==10) + 4*(layer_sig==11)'
 + rsquare     = 'm1rs*(layer_sig==1) + m2rs*(layer_sig==2) + m3rs*(layer_sig==3) + m4rs*(layer_sig==4) + mqrs*(layer_sig==7) + mgrs*(layer_sig==8) + lyrs*(layer_sig==9) + e1rs*(layer_sig==10) + mars*(layer_sig==11)'
 + tcr         = 'tm1rs*(layer_sig==1) + tm2rs*(layer_sig==2) + tm3rs*(layer_sig==3) + tm4rs*(layer_sig==4) + tmqrs*(layer_sig==7) + tmgrs*(layer_sig==8) + tlyrs*(layer_sig==9) + te1rs*(layer_sig==10) + tmars*(layer_sig==11)'
 *
 + si_top = 0
 *
 + layer_bot1 =   'ly1*(m1bot1*(layer_sig==1)      + m2bot1*(layer_sig==2)     + mqbot1*(layer_sig==7)     + lybot1*(layer_sig==9)     + e1bot1*(layer_sig==10)    + mabot1*(layer_sig==11)   )'
 + layer_bot2 =   'ly2*(m1bot2*(layer_sig==1)      + m2bot2*(layer_sig==2)     + m3bot2*(layer_sig==3)     + mqbot2*(layer_sig==7)     + lybot2*(layer_sig==9)     + e1bot2*(layer_sig==10)    + mabot2*(layer_sig==11)   )'
 + layer_bot3 =   'ly3*(m1bot3*(layer_sig==1)      + m2bot3*(layer_sig==2)     + mqbot3*(layer_sig==7)     + mgbot3*(layer_sig==8)     + lybot3*(layer_sig==9)     + e1bot3*(layer_sig==10)    + mabot3*(layer_sig==11)   )'
 + layer_bot4 =   'ly4*(m1bot4*(layer_sig==1)      + m2bot4*(layer_sig==2)     + m3bot4*(layer_sig==3)     + mqbot4*(layer_sig==7)     + mgbot4*(layer_sig==8)     + lybot4*(layer_sig==9)     + e1bot4*(layer_sig==10)    + mabot4*(layer_sig==11)   )'
 + layer_bot5 =   'ly5*(m1bot5*(layer_sig==1)      + m2bot5*(layer_sig==2)     + m3bot5*(layer_sig==3)     + m4bot5*(layer_sig==4)     + mqbot5*(layer_sig==7)     + lybot5*(layer_sig==9)     + e1bot5*(layer_sig==10)    + mabot5*(layer_sig==11)   )'
 *
 + layer_botf = 'layer_bot1 + layer_bot2 + layer_bot3 + layer_bot4 + layer_bot5'
 *
 + over_top1 =   'ly1*(m1top1*(layer_bot==1)      + m2top1*(layer_bot==2)     + mqtop1*(layer_bot==7)     + lytop1*(layer_bot==9)     + e1top1*(layer_bot==10)    + matop1*(layer_bot==11)   )'
 + over_top2 =   'ly2*(m1top2*(layer_bot==1)      + m2top2*(layer_bot==2)     + m3top2*(layer_bot==3)     + mqtop2*(layer_bot==7)     + lytop2*(layer_bot==9)     + e1top2*(layer_bot==10)    + matop2*(layer_bot==11)   )'
 + over_top3 =   'ly3*(m1top3*(layer_bot==1)      + m2top3*(layer_bot==2)     + mqtop3*(layer_bot==7)     + mgtop3*(layer_bot==8)     + lytop3*(layer_bot==9)     + e1top3*(layer_bot==10)    + matop3*(layer_bot==11)   )'
 + over_top4 =   'ly4*(m1top4*(layer_bot==1)      + m2top4*(layer_bot==2)     + m3top4*(layer_bot==3)     + mqtop4*(layer_bot==7)     + mgtop4*(layer_bot==8)     + lytop4*(layer_bot==9)     + e1top4*(layer_bot==10)    + matop4*(layer_bot==11)   )'
 + over_top5 =   'ly5*(m1top5*(layer_bot==1)      + m2top5*(layer_bot==2)     + m3top5*(layer_bot==3)     + m4top5*(layer_bot==4)     + mqtop5*(layer_bot==7)     + lytop5*(layer_bot==9)     + e1top5*(layer_bot==10)    + matop5*(layer_bot==11)   )'
 *
 + over_topf = 'over_top1 + over_top2 + over_top3 + over_top4 + over_top5'
 *
 + under_bot1 =   'ly1*(m1bot1*(layer_top==1)      + m2bot1*(layer_top==2)     + mqbot1*(layer_top==7)     + lybot1*(layer_top==9)     + e1bot1*(layer_top==10)    + mabot1*(layer_top==11)   )'
 + under_bot2 =   'ly2*(m1bot2*(layer_top==1)      + m2bot2*(layer_top==2)     + m3bot2*(layer_top==3)     + mqbot2*(layer_top==7)     + lybot2*(layer_top==9)     + e1bot2*(layer_top==10)    + mabot2*(layer_top==11)   )'
 + under_bot3 =   'ly3*(m1bot3*(layer_top==1)      + m2bot3*(layer_top==2)     + mqbot3*(layer_top==7)     + mgbot3*(layer_top==8)     + lybot3*(layer_top==9)     + e1bot3*(layer_top==10)    + mabot3*(layer_top==11)   )'
 + under_bot4 =   'ly4*(m1bot4*(layer_top==1)      + m2bot4*(layer_top==2)     + m3bot4*(layer_top==3)     + mqbot4*(layer_top==7)     + mgbot4*(layer_top==8)     + lybot4*(layer_top==9)     + e1bot4*(layer_top==10)    + mabot4*(layer_top==11)   )'
 + under_bot5 =   'ly5*(m1bot5*(layer_top==1)      + m2bot5*(layer_top==2)     + m3bot5*(layer_top==3)     + m4bot5*(layer_top==4)     + mqbot5*(layer_top==7)     + lybot5*(layer_top==9)     + e1bot5*(layer_top==10)    + mabot5*(layer_top==11)   )'
 *
 + under_botf = 'under_bot1 + under_bot2 + under_bot3 + under_bot4 + under_bot5'
 *
 + layer_top1 =   'ly1*(m1top1*(layer_sig==1)      + m2top1*(layer_sig==2)     + mqtop1*(layer_sig==7)     + lytop1*(layer_sig==9)     + e1top1*(layer_sig==10)    + matop1*(layer_sig==11)   )'
 + layer_top2 =   'ly2*(m1top2*(layer_sig==1)      + m2top2*(layer_sig==2)     + m3top2*(layer_sig==3)     + mqtop2*(layer_sig==7)     + lytop2*(layer_sig==9)     + e1top2*(layer_sig==10)    + matop2*(layer_sig==11)   )'
 + layer_top3 =   'ly3*(m1top3*(layer_sig==1)      + m2top3*(layer_sig==2)     + mqtop3*(layer_sig==7)     + mgtop3*(layer_sig==8)     + lytop3*(layer_sig==9)     + e1top3*(layer_sig==10)    + matop3*(layer_sig==11)   )'
 + layer_top4 =   'ly4*(m1top4*(layer_sig==1)      + m2top4*(layer_sig==2)     + m3top4*(layer_sig==3)     + mqtop4*(layer_sig==7)     + mgtop4*(layer_sig==8)     + lytop4*(layer_sig==9)     + e1top4*(layer_sig==10)    + matop4*(layer_sig==11)   )'
 + layer_top5 =   'ly5*(m1top5*(layer_sig==1)      + m2top5*(layer_sig==2)     + m3top5*(layer_sig==3)     + m4top5*(layer_sig==4)     + mqtop5*(layer_sig==7)     + lytop5*(layer_sig==9)     + e1top5*(layer_sig==10)    + matop5*(layer_sig==11)   )'
 *
 + layer_topf = 'layer_top1 + layer_top2 + layer_top3 + layer_top4 + layer_top5'
 *
 *
 + h1 = '1e-15*(abs( layer_botf - over_topf  )==0) + abs( layer_botf - over_topf  )'
 + h2 = '1e-15*(abs( under_botf - layer_topf )==0) + abs( under_botf - layer_topf )'
 + th = '1e-15*(abs( layer_topf - layer_botf )==0) + abs( layer_topf - layer_botf )'
 *
 * create nominal versions of vertical dimension computations:
 *
 + layer_bot1_n =   'ly1*(m1bot1_n*(layer_sig==1)      + m2bot1_n*(layer_sig==2)     + mqbot1_n*(layer_sig==7)     + lybot1_n*(layer_sig==9)     + e1bot1_n*(layer_sig==10)    + mabot1_n*(layer_sig==11)   )'
 + layer_bot2_n =   'ly2*(m1bot2_n*(layer_sig==1)      + m2bot2_n*(layer_sig==2)     + m3bot2_n*(layer_sig==3)     + mqbot2_n*(layer_sig==7)     + lybot2_n*(layer_sig==9)     + e1bot2_n*(layer_sig==10)    + mabot2_n*(layer_sig==11)   )'
 + layer_bot3_n =   'ly3*(m1bot3_n*(layer_sig==1)      + m2bot3_n*(layer_sig==2)     + mqbot3_n*(layer_sig==7)     + mgbot3_n*(layer_sig==8)     + lybot3_n*(layer_sig==9)     + e1bot3_n*(layer_sig==10)    + mabot3_n*(layer_sig==11)   )'
 + layer_bot4_n =   'ly4*(m1bot4_n*(layer_sig==1)      + m2bot4_n*(layer_sig==2)     + m3bot4_n*(layer_sig==3)     + mqbot4_n*(layer_sig==7)     + mgbot4_n*(layer_sig==8)     + lybot4_n*(layer_sig==9)     + e1bot4_n*(layer_sig==10)    + mabot4_n*(layer_sig==11)   )'
 + layer_bot5_n =   'ly5*(m1bot5_n*(layer_sig==1)      + m2bot5_n*(layer_sig==2)     + m3bot5_n*(layer_sig==3)     + m4bot5_n*(layer_sig==4)     + mqbot5_n*(layer_sig==7)     + lybot5_n*(layer_sig==9)     + e1bot5_n*(layer_sig==10)    + mabot5_n*(layer_sig==11)   )'
 *
 + layer_botf_n= 'layer_bot1_n + layer_bot2_n + layer_bot3_n + layer_bot4_n + layer_bot5_n'
 *
 + over_top1_n =   'ly1*(m1top1_n*(layer_bot==1)      + m2top1_n*(layer_bot==2)     + mqtop1_n*(layer_bot==7)     + lytop1_n*(layer_bot==9)     + e1top1_n*(layer_bot==10)    + matop1_n*(layer_bot==11)   )'
 + over_top2_n =   'ly2*(m1top2_n*(layer_bot==1)      + m2top2_n*(layer_bot==2)     + m3top2_n*(layer_bot==3)     + mqtop2_n*(layer_bot==7)     + lytop2_n*(layer_bot==9)     + e1top2_n*(layer_bot==10)    + matop2_n*(layer_bot==11)   )'
 + over_top3_n =   'ly3*(m1top3_n*(layer_bot==1)      + m2top3_n*(layer_bot==2)     + mqtop3_n*(layer_bot==7)     + mgtop3_n*(layer_bot==8)     + lytop3_n*(layer_bot==9)     + e1top3_n*(layer_bot==10)    + matop3_n*(layer_bot==11)   )'
 + over_top4_n =   'ly4*(m1top4_n*(layer_bot==1)      + m2top4_n*(layer_bot==2)     + m3top4_n*(layer_bot==3)     + mqtop4_n*(layer_bot==7)     + mgtop4_n*(layer_bot==8)     + lytop4_n*(layer_bot==9)     + e1top4_n*(layer_bot==10)    + matop4_n*(layer_bot==11)   )'
 + over_top5_n =   'ly5*(m1top5_n*(layer_bot==1)      + m2top5_n*(layer_bot==2)     + m3top5_n*(layer_bot==3)     + m4top5_n*(layer_bot==4)     + mqtop5_n*(layer_bot==7)     + lytop5_n*(layer_bot==9)     + e1top5_n*(layer_bot==10)    + matop5_n*(layer_bot==11)   )'
 *
 + over_topf_n= 'over_top1_n + over_top2_n + over_top3_n + over_top4_n + over_top5_n'
 *
 + under_bot1_n =   'ly1*(m1bot1_n*(layer_top==1)      + m2bot1_n*(layer_top==2)     + mqbot1_n*(layer_top==7)     + lybot1_n*(layer_top==9)     + e1bot1_n*(layer_top==10)    + mabot1_n*(layer_top==11)   )'
 + under_bot2_n =   'ly2*(m1bot2_n*(layer_top==1)      + m2bot2_n*(layer_top==2)     + m3bot2_n*(layer_top==3)     + mqbot2_n*(layer_top==7)     + lybot2_n*(layer_top==9)     + e1bot2_n*(layer_top==10)    + mabot2_n*(layer_top==11)   )'
 + under_bot3_n =   'ly3*(m1bot3_n*(layer_top==1)      + m2bot3_n*(layer_top==2)     + mqbot3_n*(layer_top==7)     + mgbot3_n*(layer_top==8)     + lybot3_n*(layer_top==9)     + e1bot3_n*(layer_top==10)    + mabot3_n*(layer_top==11)   )'
 + under_bot4_n =   'ly4*(m1bot4_n*(layer_top==1)      + m2bot4_n*(layer_top==2)     + m3bot4_n*(layer_top==3)     + mqbot4_n*(layer_top==7)     + mgbot4_n*(layer_top==8)     + lybot4_n*(layer_top==9)     + e1bot4_n*(layer_top==10)    + mabot4_n*(layer_top==11)   )'
 + under_bot5_n =   'ly5*(m1bot5_n*(layer_top==1)      + m2bot5_n*(layer_top==2)     + m3bot5_n*(layer_top==3)     + m4bot5_n*(layer_top==4)     + mqbot5_n*(layer_top==7)     + lybot5_n*(layer_top==9)     + e1bot5_n*(layer_top==10)    + mabot5_n*(layer_top==11)   )'
 *
 + under_botf_n= 'under_bot1_n + under_bot2_n + under_bot3_n + under_bot4_n + under_bot5_n'
 *
 + layer_top1_n =   'ly1*(m1top1_n*(layer_sig==1)      + m2top1_n*(layer_sig==2)     + mqtop1_n*(layer_sig==7)     + lytop1_n*(layer_sig==9)     + e1top1_n*(layer_sig==10)    + matop1_n*(layer_sig==11)   )'
 + layer_top2_n =   'ly2*(m1top2_n*(layer_sig==1)      + m2top2_n*(layer_sig==2)     + m3top2_n*(layer_sig==3)     + mqtop2_n*(layer_sig==7)     + lytop2_n*(layer_sig==9)     + e1top2_n*(layer_sig==10)    + matop2_n*(layer_sig==11)   )'
 + layer_top3_n =   'ly3*(m1top3_n*(layer_sig==1)      + m2top3_n*(layer_sig==2)     + mqtop3_n*(layer_sig==7)     + mgtop3_n*(layer_sig==8)     + lytop3_n*(layer_sig==9)     + e1top3_n*(layer_sig==10)    + matop3_n*(layer_sig==11)   )'
 + layer_top4_n =   'ly4*(m1top4_n*(layer_sig==1)      + m2top4_n*(layer_sig==2)     + m3top4_n*(layer_sig==3)     + mqtop4_n*(layer_sig==7)     + mgtop4_n*(layer_sig==8)     + lytop4_n*(layer_sig==9)     + e1top4_n*(layer_sig==10)    + matop4_n*(layer_sig==11)   )'
 + layer_top5_n =   'ly5*(m1top5_n*(layer_sig==1)      + m2top5_n*(layer_sig==2)     + m3top5_n*(layer_sig==3)     + m4top5_n*(layer_sig==4)     + mqtop5_n*(layer_sig==7)     + lytop5_n*(layer_sig==9)     + e1top5_n*(layer_sig==10)    + matop5_n*(layer_sig==11)   )'
 *
 + layer_topf_n = 'layer_top1_n + layer_top2_n + layer_top3_n + layer_top4_n + layer_top5_n'
 *
 *
 + h1_n = '1e-15*(abs( layer_botf_n - over_topf_n  )==0) + abs( layer_botf_n - over_topf_n  )'
 + h2_n = '1e-15*(abs( under_botf_n - layer_topf_n )==0) + abs( under_botf_n - layer_topf_n )'
 + th_n = '1e-15*(abs( layer_topf_n - layer_botf_n )==0) + abs( layer_topf_n - layer_botf_n )'
 *
 *
 * 4 cross-over types possible:
 * signal-substrate (hc,th)
 * crossover-signal-substrate  (h_over, h_under=hc)
 * crossover-signal-crossunder (h_over, h_under)
 * signal-crossunder (h_under, th)
 *
 + hc = 'abs( layer_botf - si_top )'
 + hc_n = 'abs( layer_botf_n - si_top )'
 + h_by_eps = 'layer_bot_4eps'
 + epsilon_r = 'hc_n/h_by_eps'
 + eps_side = 'layer_eps_side'
 + eps_side_over = 'layer_eps_side_over'
 + epsilon_r_side = 'eps_side'
 + epsilon_r_ratio = 'epsilon_r_side/epsilon_r'
 + h_under = '(plane==0)*hc + (plane==1)*hc + (plane==2)*h1 + (plane==3)*h1'
 + h_under_n = '(plane==0)*hc_n + (plane==1)*hc_n + (plane==2)*h1_n + (plane==3)*h1_n'
 + h_by_eps_under = 'abs( layer_bot_4eps - under_top_4eps )'
 + epsilon_r_under = '(plane==0)*h_under_n/h_by_eps + (plane==1)*h_under_n/h_by_eps + (plane==2)*h_under_n/h_by_eps_under + (plane==3)*h_under_n/h_by_eps_under'
 + h_over = '(plane==0)*1e-15 + (plane==1)*h2 + (plane==2)*1e-15 + (plane==3)*h2'
 + h_over_n = '(plane==0)*1e-15 + (plane==1)*h2_n + (plane==2)*1e-15 + (plane==3)*h2_n'
 + h_by_eps_over = 'abs( over_bot_4eps - layer_top_4eps )'
 + epsilon_r_over = '(plane==0)*eps_side_over + (plane==1)*(h_over_n/h_by_eps_over) + (plane==2)*eps_side_over + (plane==3)*(h_over_n/h_by_eps_over)'
 + th1 = 'th*h_over/(h_under+h_over)'
 + th2 = 'th*h_under/(h_under+h_over)'
 *
 * end vertical dimension computation of cross-over types
 *
 * end vertical metal stack definition.
 *
 *
 x_cpwline (va vb vshield) single_cpw
 + l                 = 'l'
 + w                 = 'w_l'
 + s                 = 's_l'
 + top               = '(temper+dtemper)'
 + c_cust            = 'c_cust'
 + layer_sig         = 'layer_sig'
 + layer_bot         = 'layer_bot'
 + layer_top         = 'layer_top'
 + ctype             = 'crosstype'
 + pattern_fill      = 'pattern_fill'
 + plane             = 'plane'
 + ccf               = 'crosscapfactor'
 + th                = 'th'
 + rsqr              = 'rsquare'
 + tcr               = 'tcr'
 + h_sub             = 'hc'
 + h_below           = 'h_under'
 + h_above           = 'h_over'
 + eps_r_side        = 'eps_side'
 + eps_r_under       = 'epsilon_r'
 + eps_r_over        = 'eps_side_over'
 + eps_r_cross_under = 'epsilon_r_under'
 + eps_r_cross_over  = 'epsilon_r_over'
 + h_fill            = 'signal_bot_fill'
 + h_fill_below      = 'h_fill_under'
 + h_fill_above      = 'h_fill_over'
 + wfill             = 'w_fill'
 + sfill             = 's_fill'
 + sf2sh             = 'sf2sh'
 *
 .ends singlecpw
 .include './singlewire.inc'
 * path, component, release: cmrf8sf/reldm/hspice/models/singlewire.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.10 09/10/21 14:03:55
 *
 *>  ibm cmrf8sf "singlewire" line model (ma metallization options)
 *
 *   licensed materials - property of ibm
 *
 *   ibm confidential
 *   (c) 2008 ibm corporation
 *
 *   us government users restricted rights - use, duplication
 *   or disclosure restricted by gsa adp schedule contract with
 *   ibm corporation.
 *
 ***************************************************************************
 *
 *>  ibm "singlewire" transmission line
 *
 ***************************************************************************
 *
 *  singlewire transmission line model
 *
 ***************************************************************************
 *
 * the singlewire model contains:
 *
 *  1. three identical blocks connected in series.
 *     example of one of such a block is shown below.
 *
 *  2. ladder network models frequency dependent skin effect.
 *
 *                   ________
 * va      rtotl/3  |        |       delta_r1/3       delta_r2/3       delta_r3/3         vb
 *  o--+---/\/\/\---|        |---+-----/\/\/\-----+-----/\/\/\-----+----/\/\/\-----+---+---o
 *     |            |________|   |    ________    |    ________    |    _______    |   |
 *     |              ltotl/3    |   |        |   |   |        |   |   |       |   |   |
 *     |                         |---|        |---+---|        |---+---|       |---|   |
 *     |                             |________|       |________|       |_______|       |
 *     |                             delta_l1/3       delta_l2/3      delta_l3/3       |
 *   -----                                                                           -----
 *   -----                                                                           -----
 *     |  ctotl/6                                                            ctotl/6   |
 *     |                                                                               |
 *     |                                                                               |
 *     |                                                                               |
 *     |                                                                               |
 *     |                                                                               |
 *     +--------------------------------------+----------------------------------------+
 *                                            |
 *                                            |
 *                                            o
 *                                         vshield
 *
 * ===============================================
 * description of singlewire model
 *
 * the basic single microstrip t-line structure is
 * a metal signal wire above a metallic bottom shield,
 * with optional side shielding.
 *
 * this model describes the frequency dependent impedance,
 * attenuation and phase shift in a high bandwidth.  the
 * model is implemented in multi-segment rlc filter networks
 * and is therefore passive by construction.  the model
 * works both in time and frequency domains in all simulation
 * analysis types (dc, ac, sp, pss ...).
 *
 * ===============================================
 * singlewire input parameters
 * description of input parameters
 *
 * bwmax       --> maximum signal bandwidth used, in ghz.
 * l           --> length of the singlewire signal line, in meters.
 * w           --> width of the signal line, in meters.
 * s           --> seperation between signal wire and side-shielding, in meters.
 * shieldsads  --> side shielding parameter; off = 0, on = 1.
 * patternfill --> 0 disables pattern fill modeling, 1 enables it.
 * tlev1       --> [3,4,5,6] = [(m1 m2 m3), (m1 m2 m3 m4), (m1 m2 m3 m4 m5), (m1 m2 m3 m4 m5 m6)]
 * tlev2       --> [2,3]   = [(mq lm), (mq mg lm)]
 * layerads    --> metal layer of the single signal wire:  see table below.
 * overads     --> metal layer of the bottom shield:  see table below.
 * dtemp       --> difference between silicon surface and metal layers
 *                 (assumes all metal layers at same temperature)
 *
 ***************************************************************************
 * {converted to hspice } simulator lang = spectre
 *
 .subckt  singlewire ( va vb vshield )
 .param
 *
 ***************************************************************************
 *
 * syntax:
 *  x1 va vb singlewire
 *
 ***************************************************************************
 *
 * notes:
 *
 ***************************************************************************
 *
 * notes:
 *
 * this model was created based on the following design manual and beol process assumptions document:
 * design manual                    : cmos8rf (cmrf8sf) design manual: es # 57p9006 ec # j88658, april 24, 2007
 * beol process assumptions document: cmrf8sf beol process           : es # 70p6227 ec # j95133, october 23, 2006
 * the "wireopt" parameter which is internal to this spectre file is set based on tlev1 and tlev2.
 * the internal "wireopt" parameter tells which metal dielectric stack is being used.
 * a list of the wireopt values corresponding to the different beol metal-dielectric
 * stack options and tlev1 and telv2 combinations in cmrf8sf is shown below:
 *
 * "wireopt"     stack         tlev1     tlev2
 * ---------     -----         -----     -----
 * 1             2_1_ly_e1_ma       2         1
 * 2             3_1_ly_e1_ma       3         1
 * 3             2_2_ly_e1_ma       2         2
 * 4             2_3_ly_e1_ma       3         2
 * 5             3_2_ly_e1_ma       4         1
 *
 * every possible metal layer in a technology is assigned a unique number which is used
 * to assign the parameters "layerads" and "overads"(see cross-section
 * below). for the cmrf8sf technology, the numbers assigned to every possible metal layer
 * are as follows:
 *
 * "layerads"/"overads"                     metal layer
 * -----------------------------------      -----------
 * 1                                        m1
 * 2                                        m2
 * 3                                        m3
 * 4                                        m4
 * 7                                        mq
 * 8                                        mg
 * 9                                        ly
 * 10                                        e1
 * 11                                        ma
 *
 ***************************************************************************
 *
 *singlewire-line cross-section
 *============================
 *
 *
 *
 * optional shield        signal           optional shield
 *     -----            --------              -----
 *    |     |  spacing |        |  spacing   |     |
 *    |     |<-------->|        |<---------->|     |        signal layer
 *    |     |          |        |            |     |
 *     -----            --------              -----
 *
 *
 *     --------------------------------------------
 *    |                                            |
 *    |                                            |        cross under
 *    |                                            |
 *     --------------------------------------------
 *
 *
 *  --------------------------------------------------------
 *  /////////////////// silicon  substrate /////////////////
 *  ////////////////////////////////////////////////////////
 *
 ** singlewire default parameters ******************************************
 *
 + bwmax       = 200
 + l           = 0.0001
 + w           = 4e-06
 + s           = 6e-06
 + shieldsads  = 0
 + patternfill = 1
 + layerads    = 11
 + overads     = 1
 + dtemp       = 0
 + tlev1       = 3
 + tlev2       = 2
 *
 ** additional constants and parameters *************************************
 *
 *
 + customcap   = 0
 + c_cust      = 1e-10
 + eo      = 8.8542e-12
 + e0      = 8.8542e-12
 + ratio   = 3.16228
 + denfill = 0.45
 + tref    = 25
 *
 + layer_sig = 'layerads'
 + layer_top = 'layerads'
 + layer_bot = 'overads'
 + plane     = 2
 + wire_opt = '(tlev1-1 + 2*(tlev1==4))*(tlev2==1) + (tlev1+1)*(tlev2==2)'
 *
 ** metal stack ************************************************************
 *
 *
 * put vertical metal positions in model file:
 *
 *
 * 2_1_ly_e1_ma...wireopt=1
 *
 + m1bot1 = 'capct+oppcthkf+oppcstif'
 + m1top1 = 'm1bot1 + m1t'
 + m2bot1 = 'm1top1 + m1m2t'
 + m2top1 = 'm2bot1 + m2t'
 + mqbot1 = 'm2top1 + mxmqt'
 + mqtop1 = 'mqbot1 + mqt'
 + lybot1 = 'mqtop1 + mqlyt'
 + lytop1 = 'lybot1 + lyt'
 + e1bot1 = 'lytop1 + lye1t'
 + e1top1 = 'e1bot1 + e1t'
 + mabot1 = 'e1top1 + e1mat'
 + matop1 = 'mabot1 + mat'
 *
 * 3_1_ly_e1_ma...wireopt=2
 *
 + m1bot2 = 'capct+oppcthkf+oppcstif'
 + m1top2 = 'm1bot2 + m1t'
 + m2bot2 = 'm1top2 + m1m2t'
 + m2top2 = 'm2bot2 + m2t'
 + m3bot2 = 'm2top2 + m2m3t'
 + m3top2 = 'm3bot2 + m3t'
 + mqbot2 = 'm3top2 + mxmqt'
 + mqtop2 = 'mqbot2 + mqt'
 + lybot2 = 'mqtop2 + mqlyt'
 + lytop2 = 'lybot2 + lyt'
 + e1bot2 = 'lytop2 + lye1t'
 + e1top2 = 'e1bot2 + e1t'
 + mabot2 = 'e1top2 + e1mat'
 + matop2 = 'mabot2 + mat'
 *
 * 2_2_ly_e1_ma...wireopt=3
 *
 + m1bot3 = 'capct+oppcthkf+oppcstif'
 + m1top3 = 'm1bot3 + m1t'
 + m2bot3 = 'm1top3 + m1m2t'
 + m2top3 = 'm2bot3 + m2t'
 + mqbot3 = 'm2top3 + mxmqt'
 + mqtop3 = 'mqbot3 + mqt'
 + mgbot3 = 'mqtop3 + mqmgt'
 + mgtop3 = 'mgbot3 + mgt'
 + lybot3 = 'mgtop3 + mqlyt'
 + lytop3 = 'lybot3 + lyt'
 + e1bot3 = 'lytop3 + lye1t'
 + e1top3 = 'e1bot3 + e1t'
 + mabot3 = 'e1top3 + e1mat'
 + matop3 = 'mabot3 + mat'
 *
 * 2_3_ly_e1_ma...wireopt=4
 *
 + m1bot4 = 'capct+oppcthkf+oppcstif'
 + m1top4 = 'm1bot4 + m1t'
 + m2bot4 = 'm1top4 + m1m2t'
 + m2top4 = 'm2bot4 + m2t'
 + m3bot4 = 'm2top4 + m2m3t'
 + m3top4 = 'm3bot4 + m3t'
 + mqbot4 = 'm3top4 + mxmqt'
 + mqtop4 = 'mqbot4 + mqt'
 + mgbot4 = 'mqtop4 + mqmgt'
 + mgtop4 = 'mgbot4 + mgt'
 + lybot4 = 'mgtop4 + mqlyt'
 + lytop4 = 'lybot4 + lyt'
 + e1bot4 = 'lytop4 + lye1t'
 + e1top4 = 'e1bot4 + e1t'
 + mabot4 = 'e1top4 + e1mat'
 + matop4 = 'mabot4 + mat'
 *
 * 3_2_ly_e1_ma...wireopt=5
 *
 + m1bot5 = 'capct+oppcthkf+oppcstif'
 + m1top5 = 'm1bot5 + m1t'
 + m2bot5 = 'm1top5 + m1m2t'
 + m2top5 = 'm2bot5 + m2t'
 + m3bot5 = 'm2top5 + m2m3t'
 + m3top5 = 'm3bot5 + m3t'
 + m4bot5 = 'm3top5 + m3m4t'
 + m4top5 = 'm4bot5 + m4t'
 + mqbot5 = 'm4top5 + mxmqt'
 + mqtop5 = 'mqbot5 + mqt'
 + lybot5 = 'mqtop5 + mqlyt'
 + lytop5 = 'lybot5 + lyt'
 + e1bot5 = 'lytop5 + lye1t'
 + e1top5 = 'e1bot5 + e1t'
 + mabot5 = 'e1top5 + e1mat'
 + matop5 = 'mabot5 + mat'
 *
 * end of vertical metal position entries:
 *
 *
 * put nominal vertical metal positions in model file:
 *
 *
 * 2_1_ly_e1_ma...wireopt=1
 *
 + m1bot1_n = 'capct+oppcthkn+oppcstin'
 + m1top1_n = 'm1bot1 + m1t'
 + m2bot1_n = 'm1top1 + m1m2t'
 + m2top1_n = 'm2bot1 + m2t'
 + mqbot1_n = 'm2top1 + mxmqt'
 + mqtop1_n = 'mqbot1 + mqt'
 + lybot1_n = 'mqtop1 + mqlyt'
 + lytop1_n = 'lybot1 + lyt'
 + e1bot1_n = 'lytop1 + lye1t'
 + e1top1_n = 'e1bot1 + e1t'
 + mabot1_n = 'e1top1 + e1mat'
 + matop1_n = 'mabot1 + mat'
 *
 * 3_1_ly_e1_ma...wireopt=2
 *
 + m1bot2_n = 'capct+oppcthkn+oppcstin'
 + m1top2_n = 'm1bot2 + m1t'
 + m2bot2_n = 'm1top2 + m1m2t'
 + m2top2_n = 'm2bot2 + m2t'
 + m3bot2_n = 'm2top2 + m2m3t'
 + m3top2_n = 'm3bot2 + m3t'
 + mqbot2_n = 'm3top2 + mxmqt'
 + mqtop2_n = 'mqbot2 + mqt'
 + lybot2_n = 'mqtop2 + mqlyt'
 + lytop2_n = 'lybot2 + lyt'
 + e1bot2_n = 'lytop2 + lye1t'
 + e1top2_n = 'e1bot2 + e1t'
 + mabot2_n = 'e1top2 + e1mat'
 + matop2_n = 'mabot2 + mat'
 *
 * 2_2_ly_e1_ma...wireopt=3
 *
 + m1bot3_n = 'capct+oppcthkn+oppcstin'
 + m1top3_n = 'm1bot3 + m1t'
 + m2bot3_n = 'm1top3 + m1m2t'
 + m2top3_n = 'm2bot3 + m2t'
 + mqbot3_n = 'm2top3 + mxmqt'
 + mqtop3_n = 'mqbot3 + mqt'
 + mgbot3_n = 'mqtop3 + mqmgt'
 + mgtop3_n = 'mgbot3 + mgt'
 + lybot3_n = 'mgtop3 + mqlyt'
 + lytop3_n = 'lybot3 + lyt'
 + e1bot3_n = 'lytop3 + lye1t'
 + e1top3_n = 'e1bot3 + e1t'
 + mabot3_n = 'e1top3 + e1mat'
 + matop3_n = 'mabot3 + mat'
 *
 * 2_3_ly_e1_ma...wireopt=4
 *
 + m1bot4_n = 'capct+oppcthkn+oppcstin'
 + m1top4_n = 'm1bot4 + m1t'
 + m2bot4_n = 'm1top4 + m1m2t'
 + m2top4_n = 'm2bot4 + m2t'
 + m3bot4_n = 'm2top4 + m2m3t'
 + m3top4_n = 'm3bot4 + m3t'
 + mqbot4_n = 'm3top4 + mxmqt'
 + mqtop4_n = 'mqbot4 + mqt'
 + mgbot4_n = 'mqtop4 + mqmgt'
 + mgtop4_n = 'mgbot4 + mgt'
 + lybot4_n = 'mgtop4 + mqlyt'
 + lytop4_n = 'lybot4 + lyt'
 + e1bot4_n = 'lytop4 + lye1t'
 + e1top4_n = 'e1bot4 + e1t'
 + mabot4_n = 'e1top4 + e1mat'
 + matop4_n = 'mabot4 + mat'
 *
 * 3_2_ly_e1_ma...wireopt=5
 *
 + m1bot5_n = 'capct+oppcthkn+oppcstin'
 + m1top5_n = 'm1bot5 + m1t'
 + m2bot5_n = 'm1top5 + m1m2t'
 + m2top5_n = 'm2bot5 + m2t'
 + m3bot5_n = 'm2top5 + m2m3t'
 + m3top5_n = 'm3bot5 + m3t'
 + m4bot5_n = 'm3top5 + m3m4t'
 + m4top5_n = 'm4bot5 + m4t'
 + mqbot5_n = 'm4top5 + mxmqt'
 + mqtop5_n = 'mqbot5 + mqt'
 + lybot5_n = 'mqtop5 + mqlyt'
 + lytop5_n = 'lybot5 + lyt'
 + e1bot5_n = 'lytop5 + lye1t'
 + e1top5_n = 'e1bot5 + e1t'
 + mabot5_n = 'e1top5 + e1mat'
 + matop5_n = 'mabot5 + mat'
 *
 * end of nominal vertical metal position entries:
 *
 *
 * create stack definition variables:
 *
 + ly1  = '(wire_opt==1)'
 + ly2  = '(wire_opt==2)'
 + ly3  = '(wire_opt==3)'
 + ly4  = '(wire_opt==4)'
 + ly5  = '(wire_opt==5)'
 *
 * end stack definition variables:
 *
 + dlw   = 'delm1*(layer_sig==1) + delm2*(layer_sig==2) + delm3*(layer_sig==3) + delm4*(layer_sig==4) + delmq*(layer_sig==7) + delmg*(layer_sig==8) + delly*(layer_sig==9) + dele1*(layer_sig==10) + delma*(layer_sig==11)'
 + dlw_g = 'delm1*(layer_bot==1) + delm2*(layer_bot==2) + delm3*(layer_bot==3) + delm4*(layer_bot==4) + delmq*(layer_bot==7) + delmg*(layer_bot==8) + delly*(layer_bot==9) + dele1*(layer_bot==10) + delma*(layer_bot==11)'
 *
 + w_l = 'w + dlw'
 + s_l = 'abs(s - dlw)'
 *
 * begin dielectric stack definition:
 *
 + m1_eps_side = 3.8621
 + m2_eps_side = 3.6
 + m3_eps_side = 3.6
 + m4_eps_side = 3.6
 + mq_eps_side = 3.6
 + mg_eps_side = 3.6
 + ly_eps_side = 4.5413
 + e1_eps_side = 4.1677
 + ma_eps_side = 3.8388
 *
 + layer_eps_side = 'm1_eps_side*(layer_sig==1) + m2_eps_side*(layer_sig==2) + m3_eps_side*(layer_sig==3) + m4_eps_side*(layer_sig==4) + mq_eps_side*(layer_sig==7) + mg_eps_side*(layer_sig==8) + ly_eps_side*(layer_sig==9) + e1_eps_side*(layer_sig==10) + ma_eps_side*(layer_sig==11)'
 + under_eps_side = 'm1_eps_side*(layer_bot==1) + m2_eps_side*(layer_bot==2) + m3_eps_side*(layer_bot==3) + m4_eps_side*(layer_bot==4) + mq_eps_side*(layer_bot==7) + mg_eps_side*(layer_bot==8) + ly_eps_side*(layer_bot==9) + e1_eps_side*(layer_bot==10) + ma_eps_side*(layer_bot==11)'
 + over_eps_side  = 'm1_eps_side*(layer_top==1) + m2_eps_side*(layer_top==2) + m3_eps_side*(layer_top==3) + m4_eps_side*(layer_top==4) + mq_eps_side*(layer_top==7) + mg_eps_side*(layer_top==8) + ly_eps_side*(layer_top==9) + e1_eps_side*(layer_top==10) + ma_eps_side*(layer_top==11)'
 *
 + m1_eps_side_over = 7
 + m2_eps_side_over = 7
 + m3_eps_side_over = 7
 + m4_eps_side_over = 7
 + mq_eps_side_over = 7
 + mg_eps_side_over = 7
 + ly_eps_side_over = 7
 + e1_eps_side_over = 7
 + ma_eps_side_over = 4.1
 *
 + layer_eps_side_over  = 'm1_eps_side_over*(layer_sig==1) + m2_eps_side_over*(layer_sig==2) + m3_eps_side_over*(layer_sig==3) + m4_eps_side_over*(layer_sig==4) + mq_eps_side_over*(layer_sig==7) + mg_eps_side_over*(layer_sig==8) + ly_eps_side_over*(layer_sig==9) + e1_eps_side_over*(layer_sig==10) + ma_eps_side_over*(layer_sig==11)'
 + under_eps_side_over  = 'm1_eps_side_over*(layer_bot==1) + m2_eps_side_over*(layer_bot==2) + m3_eps_side_over*(layer_bot==3) + m4_eps_side_over*(layer_bot==4) + mq_eps_side_over*(layer_bot==7) + mg_eps_side_over*(layer_bot==8) + ly_eps_side_over*(layer_bot==9) + e1_eps_side_over*(layer_bot==10) + ma_eps_side_over*(layer_bot==11)'
 + over_eps_side_over   = 'm1_eps_side_over*(layer_top==1) + m2_eps_side_over*(layer_top==2) + m3_eps_side_over*(layer_top==3) + m4_eps_side_over*(layer_top==4) + mq_eps_side_over*(layer_top==7) + mg_eps_side_over*(layer_top==8) + ly_eps_side_over*(layer_top==9) + e1_eps_side_over*(layer_top==10) + ma_eps_side_over*(layer_top==11)'
 *
 *
 *                     2_1_ly_e1_ma          3_1_ly_e1_ma          2_2_ly_e1_ma          2_3_ly_e1_ma          3_2_ly_e1_ma
 *
 + m1_bot_4eps =       'ly1*(1.4129e-07) +    ly2*(1.4129e-07) +    ly3*(1.4129e-07) +    ly4*(1.4129e-07) +    ly5*(1.4129e-07)'
 + m2_bot_4eps =       'ly1*(3.0183e-07) +    ly2*(3.0183e-07) +    ly3*(3.0183e-07) +    ly4*(3.0183e-07) +    ly5*(3.0183e-07)'
 + m3_bot_4eps =                             'ly2*(4.7442e-07) +                          ly4*(4.7442e-07) +    ly5*(4.7442e-07)'
 + m4_bot_4eps =                                                                                               'ly5*(6.4701e-07)'
 + mq_bot_4eps =       'ly1*(5.5505e-07) +    ly2*(7.2764e-07) +    ly3*(5.5505e-07) +    ly4*(7.2764e-07) +    ly5*(9.0023e-07)'
 + mg_bot_4eps =                                                   'ly3*(8.7217e-07) +    ly4*(1.0448e-06)'
 + ly_bot_4eps =       'ly1*(1.0422e-06) +    ly2*(1.2148e-06) +    ly3*(1.3593e-06) +    ly4*(1.5319e-06) +    ly5*(1.3874e-06)'
 + e1_bot_4eps =       'ly1*(1.9622e-06) +    ly2*(2.1348e-06) +    ly3*(2.2793e-06) +    ly4*(2.4519e-06) +    ly5*(2.3074e-06)'
 + ma_bot_4eps =       'ly1*(3.5017e-06) +    ly2*(3.6743e-06) +    ly3*(3.8188e-06) +    ly4*(3.9914e-06) +    ly5*(3.8469e-06)'
 *
 + layer_bot_4eps = 'm1_bot_4eps*(layer_sig==1) + m2_bot_4eps*(layer_sig==2) + m3_bot_4eps*(layer_sig==3) + m4_bot_4eps*(layer_sig==4) + mq_bot_4eps*(layer_sig==7) + mg_bot_4eps*(layer_sig==8) + ly_bot_4eps*(layer_sig==9) + e1_bot_4eps*(layer_sig==10) + ma_bot_4eps*(layer_sig==11)'
 + under_bot_4eps = 'm1_bot_4eps*(layer_bot==1) + m2_bot_4eps*(layer_bot==2) + m3_bot_4eps*(layer_bot==3) + m4_bot_4eps*(layer_bot==4) + mq_bot_4eps*(layer_bot==7) + mg_bot_4eps*(layer_bot==8) + ly_bot_4eps*(layer_bot==9) + e1_bot_4eps*(layer_bot==10) + ma_bot_4eps*(layer_bot==11)'
 + over_bot_4eps =  'm1_bot_4eps*(layer_top==1) + m2_bot_4eps*(layer_top==2) + m3_bot_4eps*(layer_top==3) + m4_bot_4eps*(layer_top==4) + mq_bot_4eps*(layer_top==7) + mg_bot_4eps*(layer_top==8) + ly_bot_4eps*(layer_top==9) + e1_bot_4eps*(layer_top==10) + ma_bot_4eps*(layer_top==11)'
 *
 *                     2_1_ly_e1_ma          3_1_ly_e1_ma          2_2_ly_e1_ma          2_3_ly_e1_ma          3_2_ly_e1_ma
 *
 + m1_top_4eps =       'ly1*(2.1813e-07) +    ly2*(2.1813e-07) +    ly3*(2.1813e-07) +    ly4*(2.1813e-07) +    ly5*(2.1813e-07)'
 + m2_top_4eps =       'ly1*(3.9072e-07) +    ly2*(3.9072e-07) +    ly3*(3.9072e-07) +    ly4*(3.9072e-07) +    ly5*(3.9072e-07)'
 + m3_top_4eps =                             'ly2*(5.6331e-07) +                          ly4*(5.6331e-07) +    ly5*(5.6331e-07)'
 + m4_top_4eps =                                                                                               'ly5*(7.359e-07)'
 + mq_top_4eps =       'ly1*(7.0783e-07) +    ly2*(8.8042e-07) +    ly3*(7.0783e-07) +    ly4*(8.8042e-07) +    ly5*(1.053e-06)'
 + mg_top_4eps =                                                   'ly3*(1.0249e-06) +    ly4*(1.1975e-06)'
 + ly_top_4eps =       'ly1*(1.1473e-06) +    ly2*(1.3199e-06) +    ly3*(1.4645e-06) +    ly4*(1.637e-06) +     ly5*(1.4925e-06)'
 + e1_top_4eps =       'ly1*(2.6869e-06) +    ly2*(2.8594e-06) +    ly3*(3.004e-06) +     ly4*(3.1766e-06) +    ly5*(3.032e-06)'
 + ma_top_4eps =       'ly1*(4.5951e-06) +    ly2*(4.7677e-06) +    ly3*(4.9122e-06) +    ly4*(5.0848e-06) +    ly5*(4.9403e-06)'
 *                             2_1_ly_e1_ma          3_1_ly_e1_ma          2_2_ly_e1_ma          2_3_ly_e1_ma          3_2_ly_e1_ma
 *
 + m1_top_fill =               'ly1*(m1tn) +          ly2*(m1tn) +          ly3*(m1tn) +          ly4*(m1tn) +          ly5*(m1tn)'
 + m2_top_fill = 'm1_top_fill + ly1*(m2tn) +          ly2*(m2tn) +          ly3*(m2tn) +          ly4*(m2tn) +          ly5*(m2tn)'
 + m3_top_fill = 'm2_top_fill +                       ly2*(m3tn) +                                ly4*(m3tn) +          ly5*(m3tn)'
 + m4_top_fill = 'm3_top_fill +                                                                                         ly5*(m4tn)'
 + mq_top_fill = 'm4_top_fill + ly1*(mqtn) +          ly2*(mqtn) +          ly3*(mqtn) +          ly4*(mqtn) +          ly5*(mqtn)'
 + mg_top_fill = 'mq_top_fill +                                             ly3*(mgtn) +          ly4*(mgtn)'
 + ly_top_fill = 'mg_top_fill + ly1*(lytn) +          ly2*(lytn) +          ly3*(lytn) +          ly4*(lytn) +          ly5*(lytn)'
 + e1_top_fill = 'ly_top_fill + ly1*(e1tn) +          ly2*(e1tn) +          ly3*(e1tn) +          ly4*(e1tn) +          ly5*(e1tn)'
 + ma_top_fill = 'e1_top_fill + ly1*(matn) +          ly2*(matn) +          ly3*(matn) +          ly4*(matn) +          ly5*(matn)'
 *
 *                             2_1_ly_e1_ma          3_1_ly_e1_ma          2_2_ly_e1_ma          2_3_ly_e1_ma          3_2_ly_e1_ma
 *
 + m1_bot_fill = 'm1_top_fill - ly1*(m1tn) -          ly2*(m1tn) -          ly3*(m1tn) -          ly4*(m1tn) -          ly5*(m1tn)'
 + m2_bot_fill = 'm2_top_fill - ly1*(m2tn) -          ly2*(m2tn) -          ly3*(m2tn) -          ly4*(m2tn) -          ly5*(m2tn)'
 + m3_bot_fill = 'm3_top_fill -                       ly2*(m3tn) -                                ly4*(m3tn) -          ly5*(m3tn)'
 + m4_bot_fill = 'm4_top_fill -                                                                                         ly5*(m4tn)'
 + mq_bot_fill = 'mq_top_fill - ly1*(mqtn) -          ly2*(mqtn) -          ly3*(mqtn) -          ly4*(mqtn) -          ly5*(mqtn)'
 + mg_bot_fill = 'mg_top_fill -                                             ly3*(mgtn) -          ly4*(mgtn)'
 + ly_bot_fill = 'ly_top_fill - ly1*(lytn) -          ly2*(lytn) -          ly3*(lytn) -          ly4*(lytn) -          ly5*(lytn)'
 + e1_bot_fill = 'e1_top_fill - ly1*(e1tn) -          ly2*(e1tn) -          ly3*(e1tn) -          ly4*(e1tn) -          ly5*(e1tn)'
 + ma_bot_fill = 'ma_top_fill - ly1*(matn) -          ly2*(matn) -          ly3*(matn) -          ly4*(matn) -          ly5*(matn)'
 *
 + layer_top_4eps = 'm1_top_4eps*(layer_sig==1) + m2_top_4eps*(layer_sig==2) + m3_top_4eps*(layer_sig==3) + m4_top_4eps*(layer_sig==4) + mq_top_4eps*(layer_sig==7) + mg_top_4eps*(layer_sig==8) + ly_top_4eps*(layer_sig==9) + e1_top_4eps*(layer_sig==10) + ma_top_4eps*(layer_sig==11)'
 + under_top_4eps = 'm1_top_4eps*(layer_bot==1) + m2_top_4eps*(layer_bot==2) + m3_top_4eps*(layer_bot==3) + m4_top_4eps*(layer_bot==4) + mq_top_4eps*(layer_bot==7) + mg_top_4eps*(layer_bot==8) + ly_top_4eps*(layer_bot==9) + e1_top_4eps*(layer_bot==10) + ma_top_4eps*(layer_bot==11)'
 + over_top_4eps  = 'm1_top_4eps*(layer_top==1) + m2_top_4eps*(layer_top==2) + m3_top_4eps*(layer_top==3) + m4_top_4eps*(layer_top==4) + mq_top_4eps*(layer_top==7) + mg_top_4eps*(layer_top==8) + ly_top_4eps*(layer_top==9) + e1_top_4eps*(layer_top==10) + ma_top_4eps*(layer_top==11)'
 *
 + crossover_top_fill   = 'm1_top_fill*(layer_top==1) + m2_top_fill*(layer_top==2) + m3_top_fill*(layer_top==3) + m4_top_fill*(layer_top==4) + mq_top_fill*(layer_top==7) + mg_top_fill*(layer_top==8) + ly_top_fill*(layer_top==9) + e1_top_fill*(layer_top==10) + ma_top_fill*(layer_top==11)'
 + signal_top_fill      = 'm1_top_fill*(layer_sig==1) + m2_top_fill*(layer_sig==2) + m3_top_fill*(layer_sig==3) + m4_top_fill*(layer_sig==4) + mq_top_fill*(layer_sig==7) + mg_top_fill*(layer_sig==8) + ly_top_fill*(layer_sig==9) + e1_top_fill*(layer_sig==10) + ma_top_fill*(layer_sig==11)'
 + crossunder_top_fill  = 'm1_top_fill*(layer_bot==1) + m2_top_fill*(layer_bot==2) + m3_top_fill*(layer_bot==3) + m4_top_fill*(layer_bot==4) + mq_top_fill*(layer_bot==7) + mg_top_fill*(layer_bot==8) + ly_top_fill*(layer_bot==9) + e1_top_fill*(layer_bot==10) + ma_top_fill*(layer_bot==11)'
 + crossover_bot_fill   = 'm1_bot_fill*(layer_top==1) + m2_bot_fill*(layer_top==2) + m3_bot_fill*(layer_top==3) + m4_bot_fill*(layer_top==4) + mq_bot_fill*(layer_top==7) + mg_bot_fill*(layer_top==8) + ly_bot_fill*(layer_top==9) + e1_bot_fill*(layer_top==10) + ma_bot_fill*(layer_top==11)'
 + signal_bot_fill      = 'm1_bot_fill*(layer_sig==1) + m2_bot_fill*(layer_sig==2) + m3_bot_fill*(layer_sig==3) + m4_bot_fill*(layer_sig==4) + mq_bot_fill*(layer_sig==7) + mg_bot_fill*(layer_sig==8) + ly_bot_fill*(layer_sig==9) + e1_bot_fill*(layer_sig==10) + ma_bot_fill*(layer_sig==11)'
 + crossunder_bot_fill  = 'm1_bot_fill*(layer_bot==1) + m2_bot_fill*(layer_bot==2) + m3_bot_fill*(layer_bot==3) + m4_bot_fill*(layer_bot==4) + mq_bot_fill*(layer_bot==7) + mg_bot_fill*(layer_bot==8) + ly_bot_fill*(layer_bot==9) + e1_bot_fill*(layer_bot==10) + ma_bot_fill*(layer_bot==11)'
 *
 + h_fill_under = '(signal_bot_fill - crossunder_top_fill)*(plane == 2 || plane == 3) + (0.0)*(plane == 0 || plane == 1)'
 + h_fill_over  = '(crossover_bot_fill - signal_top_fill )*(plane == 1 || plane == 3) + (0.0)*(plane == 0 || plane == 2)'
 *
 + w_fill  = '1e-6*(0.9*(layer_sig==1) + 0.9*(layer_sig==2) + 0.9*(layer_sig==3) + 0.9*(layer_sig==4) + 1.2*(layer_sig==7) + 1.2*(layer_sig==8) + 6*(layer_sig==9) + 6*(layer_sig==10) + 11*(layer_sig==11))'
 + s_fill  = '1e-6*(0.3*(layer_sig==1) + 0.3*(layer_sig==2) + 0.3*(layer_sig==3) + 0.3*(layer_sig==4) + 0.4*(layer_sig==7) + 0.4*(layer_sig==8) + 2*(layer_sig==9) + 2*(layer_sig==10) + 5*(layer_sig==11))'
 + sf2sh   = '1e-6*(0.4*(layer_sig==1) + 0.4*(layer_sig==2) + 0.4*(layer_sig==3) + 0.4*(layer_sig==4) + 0.8*(layer_sig==7) + 0.8*(layer_sig==8) + 4*(layer_sig==9) + 4*(layer_sig==10) + 8*(layer_sig==11))'
 *
 + denfillc = 'denfill*(1-s_fill/w_fill)'
 *
 *
 + si_top = 0
 *
 + layer_bot1 =   'ly1*(m1bot1*(layer_sig==1)      + m2bot1*(layer_sig==2)     + mqbot1*(layer_sig==7)     + lybot1*(layer_sig==9)     + e1bot1*(layer_sig==10)    + mabot1*(layer_sig==11)   )'
 + layer_bot2 =   'ly2*(m1bot2*(layer_sig==1)      + m2bot2*(layer_sig==2)     + m3bot2*(layer_sig==3)     + mqbot2*(layer_sig==7)     + lybot2*(layer_sig==9)     + e1bot2*(layer_sig==10)    + mabot2*(layer_sig==11)   )'
 + layer_bot3 =   'ly3*(m1bot3*(layer_sig==1)      + m2bot3*(layer_sig==2)     + mqbot3*(layer_sig==7)     + mgbot3*(layer_sig==8)     + lybot3*(layer_sig==9)     + e1bot3*(layer_sig==10)    + mabot3*(layer_sig==11)   )'
 + layer_bot4 =   'ly4*(m1bot4*(layer_sig==1)      + m2bot4*(layer_sig==2)     + m3bot4*(layer_sig==3)     + mqbot4*(layer_sig==7)     + mgbot4*(layer_sig==8)     + lybot4*(layer_sig==9)     + e1bot4*(layer_sig==10)    + mabot4*(layer_sig==11)   )'
 + layer_bot5 =   'ly5*(m1bot5*(layer_sig==1)      + m2bot5*(layer_sig==2)     + m3bot5*(layer_sig==3)     + m4bot5*(layer_sig==4)     + mqbot5*(layer_sig==7)     + lybot5*(layer_sig==9)     + e1bot5*(layer_sig==10)    + mabot5*(layer_sig==11)   )'
 *
 + layer_botf = 'layer_bot1 + layer_bot2 + layer_bot3 + layer_bot4 + layer_bot5'
 *
 + over_bot1 =   'ly1*(m1bot1*(layer_bot==1)      + m2bot1*(layer_bot==2)     + mqbot1*(layer_bot==7)     + lybot1*(layer_bot==9)     + e1bot1*(layer_bot==10)    + mabot1*(layer_bot==11)   )'
 + over_bot2 =   'ly2*(m1bot2*(layer_bot==1)      + m2bot2*(layer_bot==2)     + m3bot2*(layer_bot==3)     + mqbot2*(layer_bot==7)     + lybot2*(layer_bot==9)     + e1bot2*(layer_bot==10)    + mabot2*(layer_bot==11)   )'
 + over_bot3 =   'ly3*(m1bot3*(layer_bot==1)      + m2bot3*(layer_bot==2)     + mqbot3*(layer_bot==7)     + mgbot3*(layer_bot==8)     + lybot3*(layer_bot==9)     + e1bot3*(layer_bot==10)    + mabot3*(layer_bot==11)   )'
 + over_bot4 =   'ly4*(m1bot4*(layer_bot==1)      + m2bot4*(layer_bot==2)     + m3bot4*(layer_bot==3)     + mqbot4*(layer_bot==7)     + mgbot4*(layer_bot==8)     + lybot4*(layer_bot==9)     + e1bot4*(layer_bot==10)    + mabot4*(layer_bot==11)   )'
 + over_bot5 =   'ly5*(m1bot5*(layer_bot==1)      + m2bot5*(layer_bot==2)     + m3bot5*(layer_bot==3)     + m4bot5*(layer_bot==4)     + mqbot5*(layer_bot==7)     + lybot5*(layer_bot==9)     + e1bot5*(layer_bot==10)    + mabot5*(layer_bot==11)   )'
 *
 + over_botf = 'over_bot1 + over_bot2 + over_bot3 + over_bot4 + over_bot5'
 *
 + over_top1 =   'ly1*(m1top1*(layer_bot==1)      + m2top1*(layer_bot==2)     + mqtop1*(layer_bot==7)     + lytop1*(layer_bot==9)     + e1top1*(layer_bot==10)    + matop1*(layer_bot==11)   )'
 + over_top2 =   'ly2*(m1top2*(layer_bot==1)      + m2top2*(layer_bot==2)     + m3top2*(layer_bot==3)     + mqtop2*(layer_bot==7)     + lytop2*(layer_bot==9)     + e1top2*(layer_bot==10)    + matop2*(layer_bot==11)   )'
 + over_top3 =   'ly3*(m1top3*(layer_bot==1)      + m2top3*(layer_bot==2)     + mqtop3*(layer_bot==7)     + mgtop3*(layer_bot==8)     + lytop3*(layer_bot==9)     + e1top3*(layer_bot==10)    + matop3*(layer_bot==11)   )'
 + over_top4 =   'ly4*(m1top4*(layer_bot==1)      + m2top4*(layer_bot==2)     + m3top4*(layer_bot==3)     + mqtop4*(layer_bot==7)     + mgtop4*(layer_bot==8)     + lytop4*(layer_bot==9)     + e1top4*(layer_bot==10)    + matop4*(layer_bot==11)   )'
 + over_top5 =   'ly5*(m1top5*(layer_bot==1)      + m2top5*(layer_bot==2)     + m3top5*(layer_bot==3)     + m4top5*(layer_bot==4)     + mqtop5*(layer_bot==7)     + lytop5*(layer_bot==9)     + e1top5*(layer_bot==10)    + matop5*(layer_bot==11)   )'
 *
 + over_topf = 'over_top1 + over_top2 + over_top3 + over_top4 + over_top5'
 *
 + under_bot1 =   'ly1*(m1bot1*(layer_top==1)      + m2bot1*(layer_top==2)     + mqbot1*(layer_top==7)     + lybot1*(layer_top==9)     + e1bot1*(layer_top==10)    + mabot1*(layer_top==11)   )'
 + under_bot2 =   'ly2*(m1bot2*(layer_top==1)      + m2bot2*(layer_top==2)     + m3bot2*(layer_top==3)     + mqbot2*(layer_top==7)     + lybot2*(layer_top==9)     + e1bot2*(layer_top==10)    + mabot2*(layer_top==11)   )'
 + under_bot3 =   'ly3*(m1bot3*(layer_top==1)      + m2bot3*(layer_top==2)     + mqbot3*(layer_top==7)     + mgbot3*(layer_top==8)     + lybot3*(layer_top==9)     + e1bot3*(layer_top==10)    + mabot3*(layer_top==11)   )'
 + under_bot4 =   'ly4*(m1bot4*(layer_top==1)      + m2bot4*(layer_top==2)     + m3bot4*(layer_top==3)     + mqbot4*(layer_top==7)     + mgbot4*(layer_top==8)     + lybot4*(layer_top==9)     + e1bot4*(layer_top==10)    + mabot4*(layer_top==11)   )'
 + under_bot5 =   'ly5*(m1bot5*(layer_top==1)      + m2bot5*(layer_top==2)     + m3bot5*(layer_top==3)     + m4bot5*(layer_top==4)     + mqbot5*(layer_top==7)     + lybot5*(layer_top==9)     + e1bot5*(layer_top==10)    + mabot5*(layer_top==11)   )'
 *
 + under_botf = 'under_bot1 + under_bot2 + under_bot3 + under_bot4 + under_bot5'
 *
 + layer_top1 =   'ly1*(m1top1*(layer_sig==1)      + m2top1*(layer_sig==2)     + mqtop1*(layer_sig==7)     + lytop1*(layer_sig==9)     + e1top1*(layer_sig==10)    + matop1*(layer_sig==11)   )'
 + layer_top2 =   'ly2*(m1top2*(layer_sig==1)      + m2top2*(layer_sig==2)     + m3top2*(layer_sig==3)     + mqtop2*(layer_sig==7)     + lytop2*(layer_sig==9)     + e1top2*(layer_sig==10)    + matop2*(layer_sig==11)   )'
 + layer_top3 =   'ly3*(m1top3*(layer_sig==1)      + m2top3*(layer_sig==2)     + mqtop3*(layer_sig==7)     + mgtop3*(layer_sig==8)     + lytop3*(layer_sig==9)     + e1top3*(layer_sig==10)    + matop3*(layer_sig==11)   )'
 + layer_top4 =   'ly4*(m1top4*(layer_sig==1)      + m2top4*(layer_sig==2)     + m3top4*(layer_sig==3)     + mqtop4*(layer_sig==7)     + mgtop4*(layer_sig==8)     + lytop4*(layer_sig==9)     + e1top4*(layer_sig==10)    + matop4*(layer_sig==11)   )'
 + layer_top5 =   'ly5*(m1top5*(layer_sig==1)      + m2top5*(layer_sig==2)     + m3top5*(layer_sig==3)     + m4top5*(layer_sig==4)     + mqtop5*(layer_sig==7)     + lytop5*(layer_sig==9)     + e1top5*(layer_sig==10)    + matop5*(layer_sig==11)   )'
 *
 + layer_topf = 'layer_top1 + layer_top2 + layer_top3 + layer_top4 + layer_top5'
 *
 *
 + h1 = '1e-15*(abs( layer_botf - over_topf  )==0) + abs( layer_botf - over_topf  )'
 + th = '1e-15*(abs( layer_topf - layer_botf )==0) + abs( layer_topf - layer_botf )'
 *
 * create nominal versions of vertical dimension computations:
 *
 + layer_bot1_n =   'ly1*(m1bot1_n*(layer_sig==1)      + m2bot1_n*(layer_sig==2)     + mqbot1_n*(layer_sig==7)     + lybot1_n*(layer_sig==9)     + e1bot1_n*(layer_sig==10)    + mabot1_n*(layer_sig==11)   )'
 + layer_bot2_n =   'ly2*(m1bot2_n*(layer_sig==1)      + m2bot2_n*(layer_sig==2)     + m3bot2_n*(layer_sig==3)     + mqbot2_n*(layer_sig==7)     + lybot2_n*(layer_sig==9)     + e1bot2_n*(layer_sig==10)    + mabot2_n*(layer_sig==11)   )'
 + layer_bot3_n =   'ly3*(m1bot3_n*(layer_sig==1)      + m2bot3_n*(layer_sig==2)     + mqbot3_n*(layer_sig==7)     + mgbot3_n*(layer_sig==8)     + lybot3_n*(layer_sig==9)     + e1bot3_n*(layer_sig==10)    + mabot3_n*(layer_sig==11)   )'
 + layer_bot4_n =   'ly4*(m1bot4_n*(layer_sig==1)      + m2bot4_n*(layer_sig==2)     + m3bot4_n*(layer_sig==3)     + mqbot4_n*(layer_sig==7)     + mgbot4_n*(layer_sig==8)     + lybot4_n*(layer_sig==9)     + e1bot4_n*(layer_sig==10)    + mabot4_n*(layer_sig==11)   )'
 + layer_bot5_n =   'ly5*(m1bot5_n*(layer_sig==1)      + m2bot5_n*(layer_sig==2)     + m3bot5_n*(layer_sig==3)     + m4bot5_n*(layer_sig==4)     + mqbot5_n*(layer_sig==7)     + lybot5_n*(layer_sig==9)     + e1bot5_n*(layer_sig==10)    + mabot5_n*(layer_sig==11)   )'
 *
 + layer_botf_n= 'layer_bot1_n + layer_bot2_n + layer_bot3_n + layer_bot4_n + layer_bot5_n'
 *
 + over_top1_n =   'ly1*(m1top1_n*(layer_bot==1)      + m2top1_n*(layer_bot==2)     + mqtop1_n*(layer_bot==7)     + lytop1_n*(layer_bot==9)     + e1top1_n*(layer_bot==10)    + matop1_n*(layer_bot==11)   )'
 + over_top2_n =   'ly2*(m1top2_n*(layer_bot==1)      + m2top2_n*(layer_bot==2)     + m3top2_n*(layer_bot==3)     + mqtop2_n*(layer_bot==7)     + lytop2_n*(layer_bot==9)     + e1top2_n*(layer_bot==10)    + matop2_n*(layer_bot==11)   )'
 + over_top3_n =   'ly3*(m1top3_n*(layer_bot==1)      + m2top3_n*(layer_bot==2)     + mqtop3_n*(layer_bot==7)     + mgtop3_n*(layer_bot==8)     + lytop3_n*(layer_bot==9)     + e1top3_n*(layer_bot==10)    + matop3_n*(layer_bot==11)   )'
 + over_top4_n =   'ly4*(m1top4_n*(layer_bot==1)      + m2top4_n*(layer_bot==2)     + m3top4_n*(layer_bot==3)     + mqtop4_n*(layer_bot==7)     + mgtop4_n*(layer_bot==8)     + lytop4_n*(layer_bot==9)     + e1top4_n*(layer_bot==10)    + matop4_n*(layer_bot==11)   )'
 + over_top5_n =   'ly5*(m1top5_n*(layer_bot==1)      + m2top5_n*(layer_bot==2)     + m3top5_n*(layer_bot==3)     + m4top5_n*(layer_bot==4)     + mqtop5_n*(layer_bot==7)     + lytop5_n*(layer_bot==9)     + e1top5_n*(layer_bot==10)    + matop5_n*(layer_bot==11)   )'
 *
 + over_topf_n= 'over_top1_n + over_top2_n + over_top3_n + over_top4_n + over_top5_n'
 *
 *
 + over_bot1_n =   'ly1*(m1bot1_n*(layer_bot==1)    + m2bot1_n*(layer_bot==2)   + mqbot1_n*(layer_bot==7)   + lybot1_n*(layer_bot==9)   + e1bot1_n*(layer_bot==10)  + mabot1_n*(layer_bot==11) )'
 + over_bot2_n =   'ly2*(m1bot2_n*(layer_bot==1)    + m2bot2_n*(layer_bot==2)   + m3bot2_n*(layer_bot==3)   + mqbot2_n*(layer_bot==7)   + lybot2_n*(layer_bot==9)   + e1bot2_n*(layer_bot==10)  + mabot2_n*(layer_bot==11) )'
 + over_bot3_n =   'ly3*(m1bot3_n*(layer_bot==1)    + m2bot3_n*(layer_bot==2)   + mqbot3_n*(layer_bot==7)   + mgbot3_n*(layer_bot==8)   + lybot3_n*(layer_bot==9)   + e1bot3_n*(layer_bot==10)  + mabot3_n*(layer_bot==11) )'
 + over_bot4_n =   'ly4*(m1bot4_n*(layer_bot==1)    + m2bot4_n*(layer_bot==2)   + m3bot4_n*(layer_bot==3)   + mqbot4_n*(layer_bot==7)   + mgbot4_n*(layer_bot==8)   + lybot4_n*(layer_bot==9)   + e1bot4_n*(layer_bot==10)  + mabot4_n*(layer_bot==11) )'
 + over_bot5_n =   'ly5*(m1bot5_n*(layer_bot==1)    + m2bot5_n*(layer_bot==2)   + m3bot5_n*(layer_bot==3)   + m4bot5_n*(layer_bot==4)   + mqbot5_n*(layer_bot==7)   + lybot5_n*(layer_bot==9)   + e1bot5_n*(layer_bot==10)  + mabot5_n*(layer_bot==11) )'
 *
 + over_botf_n = 'over_bot1_n + over_bot2_n + over_bot3_n + over_bot4_n + over_bot5_n'
 *
 + under_bot1_n =   'ly1*(m1bot1_n*(layer_top==1)      + m2bot1_n*(layer_top==2)     + mqbot1_n*(layer_top==7)     + lybot1_n*(layer_top==9)     + e1bot1_n*(layer_top==10)    + mabot1_n*(layer_top==11)   )'
 + under_bot2_n =   'ly2*(m1bot2_n*(layer_top==1)      + m2bot2_n*(layer_top==2)     + m3bot2_n*(layer_top==3)     + mqbot2_n*(layer_top==7)     + lybot2_n*(layer_top==9)     + e1bot2_n*(layer_top==10)    + mabot2_n*(layer_top==11)   )'
 + under_bot3_n =   'ly3*(m1bot3_n*(layer_top==1)      + m2bot3_n*(layer_top==2)     + mqbot3_n*(layer_top==7)     + mgbot3_n*(layer_top==8)     + lybot3_n*(layer_top==9)     + e1bot3_n*(layer_top==10)    + mabot3_n*(layer_top==11)   )'
 + under_bot4_n =   'ly4*(m1bot4_n*(layer_top==1)      + m2bot4_n*(layer_top==2)     + m3bot4_n*(layer_top==3)     + mqbot4_n*(layer_top==7)     + mgbot4_n*(layer_top==8)     + lybot4_n*(layer_top==9)     + e1bot4_n*(layer_top==10)    + mabot4_n*(layer_top==11)   )'
 + under_bot5_n =   'ly5*(m1bot5_n*(layer_top==1)      + m2bot5_n*(layer_top==2)     + m3bot5_n*(layer_top==3)     + m4bot5_n*(layer_top==4)     + mqbot5_n*(layer_top==7)     + lybot5_n*(layer_top==9)     + e1bot5_n*(layer_top==10)    + mabot5_n*(layer_top==11)   )'
 *
 + under_botf_n= 'under_bot1_n + under_bot2_n + under_bot3_n + under_bot4_n + under_bot5_n'
 *
 + layer_top1_n =   'ly1*(m1top1_n*(layer_sig==1)      + m2top1_n*(layer_sig==2)     + mqtop1_n*(layer_sig==7)     + lytop1_n*(layer_sig==9)     + e1top1_n*(layer_sig==10)    + matop1_n*(layer_sig==11)   )'
 + layer_top2_n =   'ly2*(m1top2_n*(layer_sig==1)      + m2top2_n*(layer_sig==2)     + m3top2_n*(layer_sig==3)     + mqtop2_n*(layer_sig==7)     + lytop2_n*(layer_sig==9)     + e1top2_n*(layer_sig==10)    + matop2_n*(layer_sig==11)   )'
 + layer_top3_n =   'ly3*(m1top3_n*(layer_sig==1)      + m2top3_n*(layer_sig==2)     + mqtop3_n*(layer_sig==7)     + mgtop3_n*(layer_sig==8)     + lytop3_n*(layer_sig==9)     + e1top3_n*(layer_sig==10)    + matop3_n*(layer_sig==11)   )'
 + layer_top4_n =   'ly4*(m1top4_n*(layer_sig==1)      + m2top4_n*(layer_sig==2)     + m3top4_n*(layer_sig==3)     + mqtop4_n*(layer_sig==7)     + mgtop4_n*(layer_sig==8)     + lytop4_n*(layer_sig==9)     + e1top4_n*(layer_sig==10)    + matop4_n*(layer_sig==11)   )'
 + layer_top5_n =   'ly5*(m1top5_n*(layer_sig==1)      + m2top5_n*(layer_sig==2)     + m3top5_n*(layer_sig==3)     + m4top5_n*(layer_sig==4)     + mqtop5_n*(layer_sig==7)     + lytop5_n*(layer_sig==9)     + e1top5_n*(layer_sig==10)    + matop5_n*(layer_sig==11)   )'
 *
 + layer_topf_n = 'layer_top1_n + layer_top2_n + layer_top3_n + layer_top4_n + layer_top5_n'
 *
 *
 + h1_n = '1e-15*(abs( layer_botf_n - over_topf_n  )==0) + abs( layer_botf_n - over_topf_n  )'
 + th_n = '1e-15*(abs( layer_topf_n - layer_botf_n )==0) + abs( layer_topf_n - layer_botf_n )'
 *
 *
 * 4 cross-over types possible:
 * signal-substrate (hc,th)
 * crossover-signal-substrate  (h_over, h_under=hc)
 * crossover-signal-crossunder (h_over, h_under)
 * signal-crossunder (h_under, th)
 *
 + hc = 'abs( layer_botf - si_top )'
 + hc_n = 'abs( layer_botf_n - si_top )'
 + h_by_eps = 'layer_bot_4eps - under_top_4eps'
 *
 * end vertical dimension computation of cross-over types
 *
 * end vertical metal stack definition.
 *
 *
 *
 *
 * effective width and resistance calculations:
 *
 + delta_wel   = '0.0115*(layer_sig==1) + 0*(layer_sig==2) + 0*(layer_sig==3) + 0*(layer_sig==4) + 0.022*(layer_sig==7) + 0.022*(layer_sig==8) + 0*(layer_sig==9) + 0*(layer_sig==10) + 0*(layer_sig==11)'
 + delta_wphys = '0*(layer_sig==1) + -0.01*(layer_sig==2) + -0.01*(layer_sig==3) + -0.01*(layer_sig==4) + -0.01*(layer_sig==7) + -0.01*(layer_sig==8) + 0.01*(layer_sig==9) + 0*(layer_sig==10) + -0.08*(layer_sig==11)'
 + wo          = '2*(layer_sig==1) + 2*(layer_sig==2) + 2*(layer_sig==3) + 2*(layer_sig==4) + 2*(layer_sig==7) + 2*(layer_sig==8) + 2*(layer_sig==9) + 2*(layer_sig==10) + 4*(layer_sig==11)'
 + delta_phys   = '0*(layer_sig==1) + -0.01*(layer_sig==2) + -0.01*(layer_sig==3) + -0.01*(layer_sig==4) + -0.01*(layer_sig==7) + -0.01*(layer_sig==8) + 0.01*(layer_sig==9) + 0*(layer_sig==10) + -0.08*(layer_sig==11)'
 + l_min   = '0.16*(layer_sig==1) + 0.2*(layer_sig==2) + 0.2*(layer_sig==3) + 0.2*(layer_sig==4) + 0.4*(layer_sig==7) + 0.4*(layer_sig==8) + 0.6*(layer_sig==9) + 1.5*(layer_sig==10) + 4*(layer_sig==11)'
 + delta_wo   = '2*(layer_sig==1) + 2*(layer_sig==2) + 2*(layer_sig==3) + 2*(layer_sig==4) + 2*(layer_sig==7) + 2*(layer_sig==8) + 2*(layer_sig==9) + 2*(layer_sig==10) + 4*(layer_sig==11)'
 + res_type   = '1*(layer_sig==1) + 2*(layer_sig==2) + 2*(layer_sig==3) + 2*(layer_sig==4) + 3*(layer_sig==7) + 3*(layer_sig==8) + 4*(layer_sig==9) + 5*(layer_sig==10) + 6*(layer_sig==11)'
 + delta_phys_g   = '0*(layer_bot==1) + -0.01*(layer_bot==2) + -0.01*(layer_bot==3) + -0.01*(layer_bot==4) + -0.01*(layer_bot==7) + -0.01*(layer_bot==8) + 0.01*(layer_bot==9) + 0*(layer_bot==10) + -0.08*(layer_bot==11)'
 + l_min_g   = '0.16*(layer_bot==1) + 0.2*(layer_bot==2) + 0.2*(layer_bot==3) + 0.2*(layer_bot==4) + 0.4*(layer_bot==7) + 0.4*(layer_bot==8) + 0.6*(layer_bot==9) + 1.5*(layer_bot==10) + 4*(layer_bot==11)'
 + delta_wo_g   = '2*(layer_bot==1) + 2*(layer_bot==2) + 2*(layer_bot==3) + 2*(layer_bot==4) + 2*(layer_bot==7) + 2*(layer_bot==8) + 2*(layer_bot==9) + 2*(layer_bot==10) + 4*(layer_bot==11)'
 + res_type_g   = '1*(layer_bot==1) + 2*(layer_bot==2) + 2*(layer_bot==3) + 2*(layer_bot==4) + 3*(layer_bot==7) + 3*(layer_bot==8) + 4*(layer_bot==9) + 5*(layer_bot==10) + 6*(layer_bot==11)'
 + wlim        = '2*(layer_sig==1) + 2*(layer_sig==2) + 2*(layer_sig==3) + 2*(layer_sig==4) + 2*(layer_sig==7) + 2*(layer_sig==8) + 2*(layer_sig==9) + 2*(layer_sig==10) + 4*(layer_sig==11)'
 + rsquare     = 'm1rs*(layer_sig==1) + m2rs*(layer_sig==2) + m3rs*(layer_sig==3) + m4rs*(layer_sig==4) + mqrs*(layer_sig==7) + mgrs*(layer_sig==8) + lyrs*(layer_sig==9) + e1rs*(layer_sig==10) + mars*(layer_sig==11)'
 + tcr         = 'tm1rs*(layer_sig==1) + tm2rs*(layer_sig==2) + tm3rs*(layer_sig==3) + tm4rs*(layer_sig==4) + tmqrs*(layer_sig==7) + tmgrs*(layer_sig==8) + tlyrs*(layer_sig==9) + te1rs*(layer_sig==10) + tmars*(layer_sig==11)'
 + wmin        = '0.16*(layer_sig==1) + 0.2*(layer_sig==2) + 0.2*(layer_sig==3) + 0.2*(layer_sig==4) + 0.4*(layer_sig==7) + 0.4*(layer_sig==8) + 0.6*(layer_sig==9) + 1.5*(layer_sig==10) + 4*(layer_sig==11)'
 + ws = 'wmin + dlw*1e6'
 *
 + delta_wel_g   = '0.0115*(layer_bot==1) + 0*(layer_bot==2) + 0*(layer_bot==3) + 0*(layer_bot==4) + 0.022*(layer_bot==7) + 0.022*(layer_bot==8) + 0*(layer_bot==9) + 0*(layer_bot==10) + 0*(layer_bot==11)'
 + delta_wphys_g = '0*(layer_bot==1) + -0.01*(layer_bot==2) + -0.01*(layer_bot==3) + -0.01*(layer_bot==4) + -0.01*(layer_bot==7) + -0.01*(layer_bot==8) + 0.01*(layer_bot==9) + 0*(layer_bot==10) + -0.08*(layer_bot==11)'
 + wo_g          = '2*(layer_bot==1) + 2*(layer_bot==2) + 2*(layer_bot==3) + 2*(layer_bot==4) + 2*(layer_bot==7) + 2*(layer_bot==8) + 2*(layer_bot==9) + 2*(layer_bot==10) + 4*(layer_bot==11)'
 + wlim_g        = '2*(layer_bot==1) + 2*(layer_bot==2) + 2*(layer_bot==3) + 2*(layer_bot==4) + 2*(layer_bot==7) + 2*(layer_bot==8) + 2*(layer_bot==9) + 2*(layer_bot==10) + 4*(layer_bot==11)'
 + rsquare_g     = 'm1rs*(layer_bot==1) + m2rs*(layer_bot==2) + m3rs*(layer_bot==3) + m4rs*(layer_bot==4) + mqrs*(layer_bot==7) + mgrs*(layer_bot==8) + lyrs*(layer_bot==9) + e1rs*(layer_bot==10) + mars*(layer_bot==11)'
 + tcr_g         = 'tm1rs*(layer_bot==1) + tm2rs*(layer_bot==2) + tm3rs*(layer_bot==3) + tm4rs*(layer_bot==4) + tmqrs*(layer_bot==7) + tmgrs*(layer_bot==8) + tlyrs*(layer_bot==9) + te1rs*(layer_bot==10) + tmars*(layer_bot==11)'
 + wmin_g        = '0.16*(layer_bot==1) + 0.2*(layer_bot==2) + 0.2*(layer_bot==3) + 0.2*(layer_bot==4) + 0.4*(layer_bot==7) + 0.4*(layer_bot==8) + 0.6*(layer_bot==9) + 1.5*(layer_bot==10) + 4*(layer_bot==11)'
 *
 ************************************************************************
 * assign needed variable names for equations to come:
 *
 + h_microns    = '(layer_botf - over_topf)*1e+6'
 + th_microns   = '(layer_topf - layer_botf)*1e+6'
 + th_g_microns = '(over_topf  - over_botf)*1e+6'
 *
 + h_microns_n    = '(layer_botf_n - over_topf_n)*1e+6'
 + th_microns_n   = '(layer_topf_n - layer_botf_n)*1e+6'
 + th_g_microns_n = '(over_topf_n - over_botf_n)*1e+6'
 *
 + w_microns        = 'w_l*1e+6'
 + s_microns        = '(s_l*(s_l>0) + (s_l==0)*6)*1e+6'
 + l_microns        = 'l*1e6'
 + s_left_microns   = 's*1e6'
 + s_right_microns  = 's*1e6'
 *
 + w_microns_g   = '(shieldsads==0)*(w_microns + 2*h_microns + 2*th_microns + dlw_g*1e+6) + (shieldsads==1)*(w_microns + 2*s_microns + 2*wmin + dlw_g*1e+6)'
 + wg_microns    = 'w_microns_g'
 *
 + layerads_bot_4eps = 'layer_bot_4eps'
 + overads_top_4eps  = 'under_top_4eps'
 *
 + epsilon_r           = 'h_microns_n/(h_by_eps*1e+6)'
 + eps_side            = 'layer_eps_side'
 + eps_side_over       = 'layer_eps_side_over'
 + epsilon_r_side      = 'eps_side'
 + epsilon_r_side_over = 'eps_side_over'
 *
 + layerads_bot_fill   = 'signal_bot_fill'
 + overads_top_fill    = 'crossunder_top_fill'
 *
 + h_fill = '(layerads_bot_fill - overads_top_fill)*1e+6'
 *
 + wfill    = 'w_fill*1e+6'
 + sfill    = 's_fill*1e+6'
 *
 + s_microns_yo = '(shieldsads==0)*10 + (shieldsads==1)*s_microns'
 *
 + wo_1          = 1.8
 + slot_r_1      = 0.7
 + wc_1          = '(w_microns > wo_1)*( 1.4+slot_r_1*(w_microns-1.4) )+(w_microns<=wo_1)*(w_microns)'
 + w_eff_1       = 'wc_1-2*delta_wphys-2*delta_wel'
 + wo_2          = 1.8
 + slot_r_2      = 0.7
 + wc_2          = '(w_microns > wo_2)*( 1.4+slot_r_2*(w_microns-1.4) )+(w_microns<=wo_2)*(w_microns)'
 + w_eff_2       = 'wc_2-2*delta_wphys-2*delta_wel'
 + wo_3          = 2.4
 + slot_r_3      = 0.7
 + wc_3          = '(w_microns > wo_3)*( 2.4+slot_r_3*(w_microns-2.4) )+(w_microns<=wo_3)*(w_microns)'
 + w_eff_3       = 'wc_3-2*delta_wphys-2*delta_wel'
 + wc_4          = 'w_microns-2*delta_wphys-2*delta_wel'
 + w_eff_4       = 'wc_4'
 + wc_5          = 'w_microns-2*delta_wphys-2*delta_wel'
 + w_eff_5       = 'wc_5'
 + wc_6          = 'w_microns-2*delta_wphys-2*delta_wel'
 + w_eff_6       = 'wc_6'
 *
 + wo_1_g        = 1.8
 + slot_r_1_g    = 0.7
 + w_c_1_g       = '(w_microns_g > wo_1_g)*( 1.4+slot_r_1_g*(w_microns_g-1.4) )+(w_microns_g<=wo_1_g)*(w_microns_g)'
 + w_eff_1_g     = 'w_c_1_g-2*delta_wphys_g-2*delta_wel_g'
 + wo_2_g        = 1.8
 + slot_r_2_g    = 0.7
 + w_c_2_g       = '(w_microns_g > wo_2_g)*( 1.4+slot_r_2_g*(w_microns_g-1.4) )+(w_microns_g<=wo_2_g)*(w_microns_g)'
 + w_eff_2_g     = 'w_c_2_g-2*delta_wphys_g-2*delta_wel_g'
 + wo_3_g        = 2.4
 + slot_r_3_g    = 0.7
 + w_c_3_g       = '(w_microns_g > wo_3_g)*( 2.4+slot_r_3_g*(w_microns_g-2.4) )+(w_microns_g<=wo_3_g)*(w_microns_g)'
 + w_eff_3_g     = 'w_c_3_g-2*delta_wphys_g-2*delta_wel_g'
 + wc_4_g        = 'w_microns_g-2*delta_wphys_g-2*delta_wel_g'
 + w_eff_4_g     = 'wc_4_g'
 + wc_5_g        = 'w_microns_g-2*delta_wphys_g-2*delta_wel_g'
 + w_eff_5_g     = 'wc_5_g'
 + wc_6_g        = 'w_microns_g-2*delta_wphys_g-2*delta_wel_g'
 + w_eff_6_g     = 'wc_6_g'
 *
 *
 + w_eff         = '(res_type==1)*w_eff_1+(res_type==2)*w_eff_2+(res_type==3)*w_eff_3+(res_type==4)*w_eff_4+(res_type==5)*w_eff_5+(res_type==6)*w_eff_6'
 + r_sh          = '(1e15)*(shieldsads == 0) +(l*1e6*(rsquare/ws)*(1+tcr*(temper + dtemp -tref)))*(shieldsads == 1)'
 + rpath         = '(l*1e6*(rsquare/w_eff)*(1+tcr*(temper + dtemp -tref)))'
 *
 + w_eff_g       = '(res_type_g==1)*w_eff_1_g+(res_type_g==2)*w_eff_2_g+(res_type_g==3)*w_eff_3_g+(res_type_g==4)*w_eff_4_g+(res_type_g==5)*w_eff_5_g+(res_type_g==6)*w_eff_6_g'
 + r_g           = 'l_microns*(rsquare_g/w_eff_g)*(1 + tcr_g*(temper + dtemp - tref))'
 + rret          = 'r_g/(1 + 2*r_g/r_sh)'
 *
 ***************************************************************************************
 * <<< resistance equation using for testing (comparing to z2d field solver data) >>>
 * <<< if dc resistance is desired...use extraction or design manual equations    >>>
 * <<< to determine the resistance. this model includes ground return paths in    >>>
 * <<< calculation of resistance.                                                 >>>
 *
 + rtot = 'rpath + rret'
 ***************************************************************************************
 *
 ***************************************************************************************
 * end common
 * ===============================================
 * ===============================================
 * custom capacitance for single wire
 *
 + ctot_cust = 'c_cust*l'
 * ===============================================
 * ===============================================
 * capacitance calculation for single wire without side shielding
 *
 + x11_noshield = 0.9905
 + x12_noshield = 0.9210
 + x13_noshield = 1.1851
 + x14_noshield = 0.9477
 *
 + c1_noshield_nofill   = '2*e0*(x11_noshield*0.5*w_microns/h_microns + x12_noshield*(2/(pi-2))*log(0.5*pi) + x13_noshield*(2/pi)*log(1 + th_microns/h_microns))'
 + ht_microns           = 'h_microns + th_microns'
 + c2_noshield_nofill   = '(2*e0*x14_noshield*(2/(3*pi))*log(1 + 1.5*w_microns/ht_microns))*(w_microns < 2*th_g_microns) + 2*e0*x14_noshield*((2/(3*pi))*log(1 + 3*th_g_microns/ht_microns) + (0.5/pi)*log(1 + (w_microns - 2*th_g_microns)/(0.5*ht_microns + 1.5*th_g_microns)))*(w_microns >= 2*th_g_microns)'
 + c_noshield_nofill    = '(c1_noshield_nofill + c2_noshield_nofill)*epsilon_r'
 + ctot_noshield_nofill = 'c_noshield_nofill*l'
 *
 * capacitance update due to pattern fill:
 *
 + coefill1           = '(1 - denfill) + denfill * h_microns/(h_microns - h_fill)'
 + coefill2           = '(1 - denfill) + denfill * h_microns/(h_microns - h_fill - denfill*th_microns)'
 + c1_noshield_fill   = 'c1_noshield_nofill*coefill1'
 + c2_noshield_fill   = 'c2_noshield_nofill*coefill2'
 + c_noshield_fill    = '(c1_noshield_fill + c2_noshield_fill)*epsilon_r'
 + ctot_noshield_fill = 'c_noshield_fill*l'
 *
 + ctot_noshield = 'ctot_noshield_nofill*(patternfill == 0) + ctot_noshield_fill*(patternfill == 1)'
 * ===============================================
 * ===============================================
 * capacitance calculation for single wire with side shielding
 *
 + epsilon_r_ratio_shield = '0.5*(epsilon_r + epsilon_r_side_over)/epsilon_r_side'
 + x31_shield = 1.0544
 + x32_shield = 0.6172
 + x33_shield = 1.2419
 + x34_shield = '0.8353*epsilon_r_ratio_shield'
 + x35_shield = 1.0279
 + x36_shield = 1.0536
 + x37_shield = 1.1063
 *
 + alfa_shield = '2*atan(0.5*s_microns/h_microns)'
 + beta_shield = 'pi/2 - alfa_shield'
 *
 + cpl_shield_1 = 'e0*(x31_shield*0.5*w_microns/h_microns + x32_shield*(2/(pi-2))*log(0.5*pi) + x33_shield*(2/pi)*log(1 + th_microns/h_microns))'
 + cpl_shield_2 = 'e0*(x31_shield*0.5*w_microns/h_microns + x32_shield*(2/(pi-2))*log(0.5*pi) + x33_shield*(2/pi)*log(0.5*s_microns/h_microns))'
 + cpl_shield_3 = 'e0*(x31_shield*0.5*w_microns/h_microns + x32_shield*(1-cos(alfa_shield))/(alfa_shield-sin(alfa_shield))*log(alfa_shield/sin(alfa_shield)))'
 + cpl_shield_nofill = 'cpl_shield_1*(s_microns >= 2*(h_microns + th_microns)) + cpl_shield_2*(s_microns >= 2*h_microns && s_microns < 2*(h_microns + th_microns)) + cpl_shield_3*(s_microns < 2*h_microns)'
 *
 + cc_shield_1 = 'e0*(x34_shield*(1/pi)*log(1 + w_microns/s_microns) + x35_shield*(1/(pi-2))*log(0.5*pi))'
 + cc_shield_2 = 'e0*(x34_shield*(1/pi)*log(1 + w_microns/s_microns) + x35_shield*(1/(pi-2))*log(0.5*pi) + x36_shield*(th_microns + h_microns - 0.5*s_microns)/s_microns)'
 + cc_shield_3 = 'e0*(x34_shield*(1/pi)*log(1 + w_microns/s_microns) + x35_shield*(1/(pi-2))*log(0.5*pi) + x36_shield*th_microns/s_microns + x37_shield*0.5*(1-cos(beta_shield))/(beta_shield-sin(beta_shield))*log(beta_shield/sin(beta_shield)))'
 + cc_shield_nofill = 'cc_shield_1*(s_microns >= 2*(h_microns + th_microns)) + cc_shield_2*(s_microns >= 2*h_microns && s_microns < 2*(h_microns + th_microns)) + cc_shield_3*(s_microns < 2*h_microns)'
 *
 + c_shield_nofill = '2*cpl_shield_nofill*epsilon_r + 2*cc_shield_nofill*epsilon_r_side'
 + ctot_shield_nofill = 'c_shield_nofill*l'
 *
 + ctot_nofill = 'ctot_noshield_nofill*(shieldsads == 0 && customcap == 0) + ctot_shield_nofill*(shieldsads == 1 && customcap == 0) + ctot_cust*(customcap == 1)'
 *
 * capacitance update due to pattern fill:
 *
 + coefill =  '(1 - denfill) + denfill*h_microns/(h_microns - h_fill)'
 + cpl_shield_fill = 'cpl_shield_nofill*coefill'
 *
 + delta = 1.0e-10
 + num_side_fill = '(s_microns - 2*sf2sh - sfill)/(wfill - sfill)'
 *+ num_side_fill_alpha = (s_microns - 2*sf2sh - sfill)/(wfill - sfill)
 *+ num_side_fill       = (num_side_fill_alpha < 0)*0 + (num_side_fill_alpha >= 0)*num_side_fill_alpha
 + num_fill            = 'int(num_side_fill + delta)'
 + coefill_side        = 's_microns/(s_microns - num_fill*wfill*denfillc)'
 + cc_shield_fill      = 'cc_shield_nofill*coefill_side'
 *
 + cpl_shield = 'cpl_shield_nofill*(patternfill == 0) + cpl_shield_fill*(patternfill == 1)'
 *+ cc_shield = cc_shield_nofill*(patternfill == 0) + cc_shield_fill*(patternfill == 1 && wfill > 0 && num_fill >= 1)
 + cc_shield = 'cc_shield_nofill*(patternfill == 0) + cc_shield_fill*(patternfill == 1 && wfill > 0 && num_fill >= 1) + cc_shield_nofill*(patternfill == 1 && wfill > 0 && num_fill < 1) + cc_shield_nofill*(patternfill == 1 && wfill == 0 && num_fill >= 1) + cc_shield_nofill*(patternfill == 1 && wfill == 0 && num_fill < 1)'
 *
 + c_shield_fill = '2*cpl_shield*epsilon_r + 2*cc_shield*epsilon_r_side'
 + ctot_shield_fill = 'c_shield_fill*l'
 *
 + ctot_shield = 'ctot_shield_nofill*(patternfill == 0) + ctot_shield_fill*(patternfill == 1)'
 *
 + ctot = 'ctot_noshield*(shieldsads == 0 && customcap == 0) + ctot_shield*(shieldsads == 1 && customcap == 0) + ctot_cust*(customcap == 1)'
 * ===============================================
 * ===============================================
 * calculation of feedback parameters for the microstrip t-lines
 *
 + fi   = 'rsquare/(pi*mu0*th_microns*1e-6)'
 + tof  = 'l*(sqrt((epsilon_r))/3e8)'
 + ltot = '(tof*tof)/ctot_nofill'
 + z0   = 'sqrt((ltot)/ctot_nofill)'
 * ===============================================
 * ===============================================
 * capacitance derivatives calculation for single wire without side shielding
 *
 + x11_d_noshield = 0.9905
 + x12_d_noshield = 0.9210
 + x13_d_noshield = 1.1851
 + x14_d_noshield = 0.9477
 *
 + hh     = 'h_microns*h_microns'
 + dc1dw  = 'e0/h_microns'
 + dc1dh  = 'e0*(-w_microns)/hh'
 + dc3dt  = '2.0*e0*(2.0/pi)/(h_microns + th_microns)'
 + dc3dh  = '-2.0*e0*(2.0/pi)*th_microns/(hh + h_microns*th_microns)'
 + dv1    = '2*(h_microns + th_microns) + 3*w_microns'
 + dv2    = 'dv1*(h_microns + th_microns)'
 + dv3    = '0.5*(h_microns+th_microns - th_g_microns) + w_microns'
 + dv4    = 'dv3*(0.5*(h_microns+th_microns) + 1.5*th_g_microns)'
 + dv5    = '(h_microns+th_microns) + 3*th_g_microns'
 + dv6    = 'dv5*(h_microns + th_microns)'
 *
 + dc4dw  = '((2.0*e0)*(2.0/pi)/dv1)*(w_microns <= 2*th_g_microns) + ((2.0*e0)*(0.5/pi)/dv3)*(w_microns > 2*th_g_microns)'
 + dc4dt  = '((2.0*e0)*(-2.0/pi)*(3*w/dv2))*(w_microns <= 2*th_g_microns) + ((2.0*e0)*((-2/pi)*th_g_microns/dv6 - (0.5/pi)*0.5*(w_microns - 2*th_g_microns)/dv4))*(w_microns > 2*th_g_microns)'
 + dc4dh  = 'dc4dt'
 + dc4dtg = '(0.0)*(w_microns <= 2*th_g_microns) + ((2.0*e0)*((2/pi)/dv5 - (0.5/pi)*(h_microns + th_microns + 1.5*w_microns)/dv4))*(w_microns > 2*th_g_microns)'
 *
 + dcdw_noshield = 'x11_d_noshield*dc1dw + x14_d_noshield*dc4dw'
 + dcdt_noshield = 'x13_d_noshield*dc3dt + x14_d_noshield*dc4dt'
 + dcdh_noshield = 'x11_d_noshield*dc1dh + x13_d_noshield*dc3dh + x14_d_noshield*dc4dh'
 + dcdtg_noshield = 'x14_d_noshield*dc4dtg'
 *
 + dcap_noshield = '-2.0*dcdw_noshield - 2.0*dcdt_noshield + 2.0*dcdh_noshield - 2.0*dcdtg_noshield'
 + dcaps_temp_noshield = '-2.0*dcdw_noshield - 2.0*dcdt_noshield + dcdh_noshield'
 + dcapg_temp_noshield = 'dcap_noshield - dcaps_temp_noshield'
 *
 + dcaps_noshield = 'dcaps_temp_noshield*1e6'
 + dcapg_noshield = 'dcapg_temp_noshield*1e6'
 * ===============================================
 * ===============================================
 * capacitance derivatives calculation for single wire with side shielding
 *
 + x31_d_shield = 1.0544
 + x32_d_shield = 0.6172
 + x33_d_shield = 1.2419
 + x34_d_shield = 0.8353
 + x35_d_shield = 1.0279
 + x36_d_shield = 1.0536
 + x37_d_shield = 1.1063
 *
 + alfa_d_shield = '2*atan(0.5*s_microns/h_microns)'
 + beta_d_shield = 'pi/2 - alfa_d_shield'
 *
 + sna = 'sin(alfa_d_shield)'
 + csa = 'cos(alfa_d_shield)'
 + diffa = 'alfa_d_shield - sna'
 + diffa2 = 'diffa*diffa'
 *
 + dcplda = 'x32_d_shield*(((sna*diffa-(1.0-csa)*(1.0-csa))/diffa2)*log(alfa_d_shield/sna)+(1.0-csa)*(sna-alfa_d_shield*csa)/(diffa*alfa_d_shield*sna))'
 + dcpldw = 'x31_d_shield*e0*0.5/h_microns'
 + dcpldt = '(x33_d_shield*e0*(2/pi)/(h_microns + th_microns))*(s_microns >= 2*(h_microns + th_microns)) + (0.0)*(s_microns < 2*(h_microns + th_microns))'
 *
 + h2 = '2*h_microns'
 + h2s = 'h2*h2 + s_microns*s_microns'
 *
 + dcpldh_1 = '(e0*(- x31_d_shield*0.5*w_microns/hh + x33_d_shield*(2/pi)*(-th_microns)/(hh + h_microns*th_microns)))'
 + dcpldh_2 = '(e0*(- x31_d_shield*0.5*w_microns/hh - x33_d_shield*(2/pi)/h_microns))'
 + dcpldh_3 = '(e0*(- x31_d_shield*0.5*w_microns/hh + dcplda*(-4*s_microns/h2s)))'
 + dcpldh = 'dcpldh_1*(s_microns >= 2*(h_microns + th_microns)) + dcpldh_2*(s_microns < 2*(h_microns + th_microns) && s_microns >= 2*h_microns) + dcpldh_3*(s_microns < 2*h_microns)'
 *
 + dcplds_1 = 0.0
 + dcplds_2 = 'x33_d_shield*e0*(2/pi)/s_microns'
 + dcplds_3 = 'e0*dcplda*4*h_microns/h2s'
 + dcplds = 'dcplds_1*(s_microns >= 2*(h_microns + th_microns)) + dcplds_2*(s_microns < 2*(h_microns + th_microns) && s_microns >= 2*h_microns) + dcplds_3*(s_microns < 2*h_microns)'
 *
 + snb = 'sin(beta_d_shield)'
 + csb = 'cos(beta_d_shield)'
 + diffb = 'beta_d_shield - snb'
 + diffb2 = 'diffb * diffb'
 + ss = 's_microns*s_microns'
 *
 + dccdb = 'x37_d_shield*0.5*(((snb*diffb - (1.0 - csb)*(1.0 - csb))/diffb2)*log(beta_d_shield/snb) + (1.0 - csb)*(snb - beta_d_shield*csb)/(diffb*beta_d_shield*snb))'
 + dccdw = 'x34_d_shield*e0*(1/pi)/(s_microns + w_microns)'
 *+ dccdt = (0.0)*(s_microns >= 2*(h_microns + th_microns)) + (x36_d_shield*e0/s)*(s_microns < 2*(h_microns + th_microns))
 + dccdt = '(0.0)*(s_microns >= 2*(h_microns + th_microns)) + (x36_d_shield*e0/s_microns)*(s_microns < 2*(h_microns + th_microns))'
 *
 + dccdh_1 = 0.0
 + dccdh_2 = 'x36_d_shield*e0/s_microns'
 + dccdh_3 = 'e0*dccdb*4*s_microns/h2s'
 + dccdh   = 'dccdh_1*(s_microns >= 2*(h_microns + th_microns)) + dccdh_2*(s_microns < 2*(h_microns + th_microns) && s_microns >= 2*h_microns) + dccdh_3*(s_microns < 2*h_microns)'
 *
 + dccds_1 = 'x34_d_shield*e0*(1/pi)*(-w_microns/(ss + s_microns*w_microns))'
 + dccds_2 = 'e0*(x34_d_shield*(1/pi)*(-w_microns/(ss + s_microns*w_microns)) - x36_d_shield*(th_microns + h_microns)/ss)'
 + dccds_3 = 'e0*(x34_d_shield*(1/pi)*(-w_microns/(ss + s_microns*w_microns)) - x36_d_shield*th_microns/ss + dccdb*(-4*h_microns/h2s))'
 + dccds   = 'dccds_1*(s_microns >= 2*(h_microns + th_microns)) + dccds_2*(s_microns < 2*(h_microns + th_microns) && s_microns >= 2*h_microns) + dccds_3*(s_microns < 2*h_microns)'
 *
 + dcdw_shield = 'dcpldw + dccdw'
 + dcdt_shield = 'dcpldt + dccdt'
 + dcdh_shield = 'dcpldh + dccdh'
 + dcds_shield = 'dcplds + dccds'
 *
 + dcap_shield       = '2*(-2.0*dcdw_shield - 2.0*dcdt_shield + 2.0*dcdh_shield + 2.0*dcds_shield)'
 + dcaps_temp_shield = '2*(-2.0*dcdw_shield - 2.0*dcdt_shield + dcdh_shield + 2.0*dcds_shield)'
 + dcapg_temp_shield = 'dcap_shield - dcaps_temp_shield'
 *
 + dcaps_shield = 'dcaps_temp_shield*1e6'
 + dcapg_shield = 'dcapg_temp_shield*1e6'
 *
 + dcap  = 'dcap_noshield *(shieldsads == 0) + dcap_shield *(shieldsads == 1)'
 + dcaps = 'dcaps_noshield*(shieldsads == 0) + dcaps_shield*(shieldsads == 1)'
 + dcapg = 'dcapg_noshield*(shieldsads == 0) + dcapg_shield*(shieldsads == 1)'
 * ===============================================
 * ===============================================
 * delta_l and delta_r calculations for single wire model
 *
 * mm is equal to mu0/(2*pi)
 + mm    = 2e-07
 + thl   = 'th_microns'
 + th_gl = 'th_g_microns'
 + wl    = 'w_microns'
 + wgl   = 'wg_microns'
 + hl    = 'h_microns'
 + wsl   = 'ws'
 + sl    = 's_microns'
 + ml    = 'mm'
 *
 * no shield ...
 + g1          = '3-log((thl + wl)*(th_gl + wgl))'
 + aa_1        = 'thl'
 + bb_1        = 'th_gl'
 + cc_1        = 'hl'
 + dd_1        = 'wl + thl + hl'
 + abc_d_1     = '(aa_1 + bb_1 + cc_1)*(aa_1 + bb_1 + cc_1)*log(aa_1 + bb_1 + cc_1 + dd_1)'
 + ac_d_1      = '(aa_1 + cc_1)*(aa_1 + cc_1)*log(aa_1 + cc_1 + dd_1)'
 + bc_d_1      = '(bb_1 + cc_1)*(bb_1 + cc_1)*log(bb_1 + cc_1 + dd_1)'
 + c_d_1       = 'cc_1*cc_1*log(cc_1 + dd_1)'
 + g2          = 'dd_1*dd_1*(abc_d_1 - ac_d_1 - bc_d_1 + c_d_1 - 3*aa_1*bb_1)'
 + dd_2        = 'thl + hl'
 + abc_d_2     = '(aa_1 + bb_1 + cc_1)*(aa_1 + bb_1 + cc_1)*log(aa_1 + bb_1 + cc_1 + dd_2)'
 + ac_d_2      = '(aa_1 + cc_1)*(aa_1 + cc_1)*log(aa_1 + cc_1 + dd_2)'
 + bc_d_2      = '(bb_1 + cc_1)*(bb_1 + cc_1)*log(bb_1 + cc_1 + dd_2)'
 + c_d_2       = 'cc_1*cc_1*log(cc_1 + dd_2)'
 + g3          = 'dd_2*dd_2*(abc_d_2 - ac_d_2 - bc_d_2 + c_d_2 - 3*aa_1*bb_1)'
 + l0_noshield = 'l*ml*(g1 + (g2 - g3)/(th_gl*wgl*thl*wl))'
 *
 * shield ...
 + cond_g      = '1.0/(r_g*wgl*th_gl)'
 + cond_sh     = '1.0/(r_sh*wsl*thl)'
 + kappa       = 'cond_g/cond_sh'
 + shf         = 'wsl + sl'
 + aa_2        = 'thl'
 + bb_2        = 'th_gl'
 + cc_2        = 'hl'
 + dd_3        = 'wl+shf'
 + abc_d_3     = '(aa_2 + bb_2 + cc_2)*(aa_2 + bb_2 + cc_2)*log(aa_2 + bb_2 + cc_2 + dd_3)'
 + ac_d_3      = '(aa_2 + cc_2)*(aa_2 + cc_2)*log(aa_2 + cc_2 + dd_3)'
 + bc_d_3      = '(bb_2 + cc_2)*(bb_2 + cc_2)*log(bb_2 + cc_2 + dd_3)'
 + c_d_3       = 'cc_2*cc_2*log(cc_2 + dd_3)'
 + f_ss11      = 'dd_3*dd_3*(abc_d_3 - ac_d_3 - bc_d_3 + c_d_3 - 3*aa_2*bb_2)'
 + dd_4        = 'shf'
 + abc_d_4     = '(aa_2 + bb_2 + cc_2)*(aa_2 + bb_2 + cc_2)*log(aa_2 + bb_2 + cc_2 + dd_4)'
 + ac_d_4      = '(aa_2 + cc_2)*(aa_2 + cc_2)*log(aa_2 + cc_2 + dd_4)'
 + bc_d_4      = '(bb_2 + cc_2)*(bb_2 + cc_2)*log(bb_2 + cc_2 + dd_4)'
 + c_d_4       = 'cc_2*cc_2*log(cc_2 + dd_4)'
 + f_ss12      = 'dd_4*dd_4*(abc_d_4 - ac_d_4 - bc_d_4 + c_d_4 - 3*aa_2*bb_2)'
 + f_ss1       = '(f_ss11-f_ss12)*0.5'
 *
 + aa_3        = 'wl'
 + bb_3        = 'wsl'
 + cc_3        = 'sl'
 + dd_5        = 'thl'
 + abc_d_5     = '(aa_3 + bb_3 + cc_3)*(aa_3 + bb_3 + cc_3)*log(aa_3 + bb_3 + cc_3 + dd_5)'
 + ac_d_5      = '(aa_3 + cc_3)*(aa_3 + cc_3)*log(aa_3 +cc_3 + dd_5)'
 + bc_d_5      = '(bb_3 + cc_3)*(bb_3 + cc_3)*log(bb_3 + cc_3 + dd_5)'
 + c_d_5       = 'cc_3*cc_3*log(cc_3 + dd_5)'
 + f_ss2       = 'dd_5*dd_5*(abc_d_5 - ac_d_5 - bc_d_5 + c_d_5 - 3*aa_3*bb_3)'
 + s_eq        = 'wgl*th_gl*kappa+2*wsl*thl'
 + f_ss3       = '(f_ss2+f_ss1*kappa)/wl/thl/s_eq'
 *
 + aa_4        = 'thl'
 + bb_4        = 'th_gl'
 + cc_4        = 'hl'
 + dd_6        = 'wsl'
 + abc_d_6     = '(aa_4 + bb_4 + cc_4)*(aa_4 + bb_4 + cc_4)*log(aa_4 + bb_4 + cc_4 + dd_6)'
 + ac_d_6      = '(aa_4 + cc_4)*(aa_4 + cc_4)*log(aa_4 + cc_4 + dd_6)'
 + bc_d_6      = '(bb_4 + cc_4)*(bb_4 + cc_4)*log(bb_4 + cc_4 + dd_6)'
 + c_d_6       = 'cc_4*cc_4*log(cc_4 + dd_6)'
 + f_ss41      = 'dd_6*dd_6*(abc_d_6 - ac_d_6 - bc_d_6 + c_d_6 - 3*aa_4*bb_4)'
 + dd_7        = 'wgl'
 + abc_d_7     = '(aa_4 + bb_4 + cc_4)*(aa_4 + bb_4 + cc_4)*log(aa_4 + bb_4 + cc_4 + dd_7)'
 + ac_d_7      = '(aa_4 + cc_4)*(aa_4 + cc_4)*log(aa_4 + cc_4 + dd_7)'
 + bc_d_7      = '(bb_4 + cc_4)*(bb_4 + cc_4)*log(bb_4 + cc_4 + dd_7)'
 + c_d_7       = 'cc_4*cc_4*log(cc_4 + dd_7)'
 + f_ss42      = 'dd_7*dd_7*(abc_d_7 - ac_d_7 - bc_d_7 + c_d_7 - 3*aa_4*bb_4)'
 + dd_8        = 'wgl-wsl'
 + abc_d_8     = '(aa_4 + bb_4 + cc_4)*(aa_4 + bb_4 + cc_4)*log(aa_4 + bb_4 + cc_4 + dd_8)'
 + ac_d_8      = '(aa_4 + cc_4)*(aa_4 + cc_4)*log(aa_4 + cc_4 + dd_8)'
 + bc_d_8      = '(bb_4 + cc_4)*(bb_4 + cc_4)*log(bb_4 + cc_4 + dd_8)'
 + c_d_8       = 'cc_4*cc_4*log(cc_4 + dd_8)'
 + f_ss43      = 'dd_8*dd_8*(abc_d_8 - ac_d_8 - bc_d_8 + c_d_8 - 3*aa_4*bb_4)'
 + f_ss4       = 'f_ss41 + f_ss42 - f_ss43'
 *
 + aa_5      = 'wsl'
 + bb_5      = 'wsl'
 + cc_5      = 'wl + 2*sl'
 + dd_9      = 'thl'
 + abc_d_9   = '(aa_5 + bb_5 + cc_5)*(aa_5 + bb_5 + cc_5)*log(aa_5 + bb_5 + cc_5 + dd_9)'
 + ac_d_9    = '(aa_5 + cc_5)*(aa_5 + cc_5)*log(aa_5 + cc_5 + dd_9)'
 + bc_d_9    = '(bb_5 + cc_5)*(bb_5 + cc_5)*log(bb_5 + cc_5 + dd_9)'
 + c_d_9     = 'cc_5*cc_5*log(cc_5 + dd_9)'
 + f_ss5     = 'dd_9*dd_9*(abc_d_9 - ac_d_9 - bc_d_9 + c_d_9 - 3*aa_5*bb_5)*0.5'
 + f_ss61    = 'wgl*wgl*th_gl*th_gl*(log(wgl + th_gl) - 1.5)'
 + f_ss62    = 'wsl*wsl*thl*thl*(log(wsl + thl) - 1.5)'
 + f_ss6     = '(f_ss61*kappa*kappa + 2*f_ss62 + 2*f_ss5 + f_ss4*kappa)/s_eq/s_eq'
 + l0_shield = 'l*ml*(1.5 - log(wl + thl) + 2*f_ss3 - f_ss6)'
 *
 + lo = 'l0_noshield*(shieldsads == 0) + l0_shield*(shieldsads == 1)'
 *
 + rtot1      = '(rpath + rret)'
 + sigmas     = '1e6/(rsquare*th_microns)'
 + sigmag     = '1e6/(rsquare_g*th_g_microns)'
 + dcs        = 'dcaps*epsilon_r*l'
 + dcg        = 'dcapg*epsilon_r*l'
 + k_infinite = '-((tof/ctot_nofill)**2)*(sqrt(pi/(mu0*sigmas))*dcs + sqrt(pi/(mu0*sigmag))*dcg)'
 *
 + k    = 'ratio'
 + sk   = 'sqrt(k)'
 + k2   = 'k*k'
 + k3   = 'k2*k'
 + k4   = 'k3*k'
 + k5   = 'k4*k'
 + k2sk = 'k2-2.0*sk+1.0'
 + fi1  = '(((k3 - 2.0*k + 1.0)/k2sk)*(rtot1/(k*k_infinite)))**2'
 *
 + delta_r3 = '2.0*sk*rtot1*(k4 - 2.0*k3 + k2*sk - 2.0*k2 + 3.0*k + sk-2.0)/k2sk'
 + delta_l3 = 'delta_r3/(2.0*pi*fi1*k5)'
 + delta_r2 = '2.0*sk*rtot1*(k3 - k2*sk - sk + 1.0)/k2sk'
 + delta_l2 = 'delta_r2/(2.0*pi*fi1*k3)'
 + delta_r1 = '(k-1)*rtot1'
 + delta_l1 = 'lo - ltot - delta_l2 - delta_l3'
 *
 * ===============================================
 * ===============================================
 *
 c85 vb vshield c='ctot/6'
 c74 net115 vshield c='ctot/3'
 c75 net117 vshield c='ctot/3'
 c84 va vshield c='ctot/6'
 l152 va net109 l='ltot/3'
 l153 net193 net111 l='delta_l1/3'
 l154 net111 net113 l='delta_l2/3'
 l155 net113 net115 l='delta_l3/3'
 l156 net119 net117 l='delta_l3/3'
 l157 net121 net119 l='delta_l2/3'
 l158 net199 net121 l='delta_l1/3'
 l159 net115 net123 l='ltot/3'
 l160 net117 net125 l='ltot/3'
 l161 net209 net127 l='delta_l1/3'
 l162 net127 net129 l='delta_l2/3'
 l163 net129 vb l='delta_l3/3'
 r152 net113 net115 r='delta_r3/3'
 r153 net111 net113 r='delta_r2/3'
 r154 net109 net193 r='rtot/3'
 r155 net193 net111 r='delta_r1/3'
 r156 net199 net121 r='delta_r1/3'
 r157 net123 net199 r='rtot/3'
 r158 net121 net119 r='delta_r2/3'
 r159 net119 net117 r='delta_r3/3'
 r160 net129 vb r='delta_r3/3'
 r161 net127 net129 r='delta_r2/3'
 r162 net125 net209 r='rtot/3'
 r163 net209 net127 r='delta_r1/3'
 *
 .ends singlewire
 .include './subc.inc'
 * path, component, release: cmos8base/rel/hspice/models/subc.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.1 06/02/28 16:20:33
 *
 *>  ibm cmrf8sf/bicmos8wl  subc       substrate contact
 *
 *******************************************************************************
 *
 *  a single resistor is used to simulate a substrate contact.
 *
 *                                  rsubc
 *                          in  o--/\/\/\/--o  out
 *
 *
 *  syntax:     specify both width and length:
 *              xxx  in out  subc (w=2u  l=5u)
 *
 *  optional:   dtemp --> device temperature difference with respect to
 *                        the simulated circuit temperature (deg c).
 *
 *  notes:
 *
 *  1. if the substrate contact length is not provided, then the
 *     length defaults to 4.0 microns.
 *
 *  2. if the substrate contact width is not provided, then the
 *     width defaults to 2.0 microns.
 *
 *
 * ibm confidential
 * (c) 2006 ibm corporation
 *
 *******************************************************************************
 *
 .subckt subc  in out  
 +       l = 4.0u
 +       w = 2.0u
 +   dtemp = 0
 *
   r1  in out  r='rsubc/((l+delrx)*(w+delrx))'  tc1=trsubc  dtemp=dtemp
 .ends  subc
 *.include './symindp.inc'
 .include './tdndsx.inc'
 * path, component, release: cmos8base/rel/hspice/models/tdndsx.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.1 06/02/27 19:32:21
 *
 *>  ibm cmrf8sf/bicmos8wl tdndsx    n+ tiedown
 *
 ***********************************************************************
 *
 *  model can be used in conjunction with the design system extraction
 *  program which calculates/combines junction parasitic capacitance
 *  per node.
 *
 *                  o  n+ (nd)  
 *                  |                
 *                  |
 *                  |
 *                ----
 *                 /\   xnsx
 *                /  \                                             
 *                ----                                                 
 *                  |
 *                  |
 *                  |
 *                  o  substrate (sx)
 *
 ***********************************************************************
 *
 *  syntax:     specify both area and perimeter:
 *              xxx  sx nd  tdndsx (area=1p  perim=1u  dtemp=0)
 *
 *
 *  notes:
 *
 *  1. node order must be as specified.
 *
 *  2. units for input parameters are meters**2 (area) and meters (perim).
 *
 *
 * ibm confidential
 * (c) 2006 ibm corporation
 *                                
 ***********************************************************************
 *
 .subckt tdndsx  sx nd  area=1p  perim=1u dtemp=0

 xnsx   sx nd  diodenx  area=area  perim=perim  dtemp=dtemp

 .ends tdndsx
 .include './tdpdnw.inc'
 * path, component, release: cmos8base/rel/hspice/models/tdpdnw.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.1 06/02/27 19:32:24
 *
 *>  ibm cmrf8sf/bicmos8wl tdpdnw    p+ tiedown
 *
 ***********************************************************************
 *
 *  model can be used in conjunction with the design system extraction
 *  program which calculates/combines junction parasitic capacitance
 *  per node.
 *
 *                  o  p+ (pd)
 *                  |
 *                  |
 *                  |
 *                ----
 *                \  /   xpnw
 *                 \/                                             
 *                ----                                             
 *                  |
 *                  |  
 *                  |
 *                  o  n well (nw)
 *
 ***********************************************************************
 *
 *  syntax:     specify both area and perimeter:
 *              xxx  pd nw  tdpdnw (area=1p  perim=1u  dtemp=0)
 *
 *
 *  notes:
 *
 *  1. node order must be as specified.
 *
 *  2. units for input parameters are meters**2 (area) and meters (perim).
 *
 *
 * ibm confidential
 * (c) 2006 ibm corporation
 *                                
 ***********************************************************************
 *
 .subckt tdpdnw  pd nw  area=1p  perim=1u dtemp=0

 xpnw   pd nw  diodepnw  area=area  perim=perim  dtemp=dtemp

 .ends tdpdnw
 .include './vncap.inc'
 * path, component, release: cmos8base/rel/hspice/models/vncap.inc, tech8_models, mod_cmos8base
 * cmvc revision: 1.1.1.1 09/10/08 14:25:18
 *
 *>  ibm 8rf/8wl  vncap           vncap capacitor
 *
 ***********************************************************************
 *
 * the model is comprised of a capacitor and series resistances and inductance.
 * the input (lower plate) has losses to substrate characterized by capacitors
 * and series resistor.
 *
 *
 *            r1           c     |------|        r2
 *                        | |    |  l1  |     
 *  o ------/\  /\--------| |----|      |------/\  /\-----o
 * in    |    \/          | |    |------|        \/    |  out
 *       |                                             |
 *     -----                                         ------
 *     -----  c1                               c2    ------
 *       |                                             |
 *       |                                             |
 *       -----------------|-----------------------------
 *                        |    
 *                        \     
 *                        /  r3
 *                        \            
 *                        |
 *                        |  reference plane
 *                        | 
 *                o-------|---------------------------o
 *
 *
 ***********************************************************************
 *
 *  dimensions: 
 *              w --> desired width.
 *
 *              l --> length of the vncap.
 *
 *  syntax:     specify both length and width:
 *              xxx  in out ref  vncap (l=100u w=100u botlev=1 toplev=6)
 *
 *  optional:   
 *              botlev  --> indicates lowest thin metal level of the device.
 *                          default value = 1.
 *
 *              toplev  --> indicates top thin level metal of the vncap,
 *                          default value = 4. 
 *
 *              setind  --> user determined value for the parasitic inductance.
 *                          the default value of -2, which is used as a switch,
 *                          forces the calculated inductance to be used.
 *
 *              est     --> include estimated bottom plate to substrate
 *                          capacitance (default, est=1). turn
 *                          switch off (est=0) for extracted layout.
 *
 *              par     --> explicit multiplicity. default value = 1.
 *
 *              dtemp   --> device temp rise from ambient (deg c)
 *
 *	       rsx     --> specifies the substrate resistance
 *
 *  notes:
 *
 *  1. node assignment  - node "in"  
 *                      - node "out"
 *                      - node "ref" typically substrate contact node. 
 *
 *  2. metal levels comprising the vncap capacitor must be adjacent to each
 *     other in the back end of the line stack.  for example, a vncap built
 *     using only levels m1, m2, and m4 is not allowed.  
 *
 *  3. estimated bottom plate parasitic capacitance calculation assumes
 *     device only over substrate or n-well. accurate parasitic
 *     capacitance value for case with devices under vncap can only be
 *     obtained from extracted layout.
 *
 *  4. the parasitic inductance included in this model is for the vncap only,
 *     it does not include any connections to the vncap.
 *     the inductance assumes the wiring is into the vncap centered on one side
 *     and out of the vncap centered on the opposite side. these two sides are
 *     assumed to be sides defined by the parameter w. for any other connection
 *     the inductance would be different than the model indicates.
 *
 *
 * ibm confidential
 * (c) 2009 ibm corporation
 *
 ***********************************************************************
 .subckt vncap  in out ref  w=100u l=100u botlev=1 toplev=4 est=1 setind=-2 par=1 dtemp=0 rsx=50
 *
 ******************************************************************
 +      mwx0  =  0.28u 		$ metal finger width
 +      mspx0 =  0.20u 		$ metal finger spacing
 +      mspx1 = '0.20u-tdelm1'	$ metal finger spacing
 +      mspx2 = '0.20u-tdelm2'	$ metal finger spacing
 +      mspx3 = '0.20u-tdelm3'	$ metal finger spacing
 +      mspx4 = '0.20u-tdelm4'	$ metal finger spacing
 +      mspx5 = '0.20u-tdelm5'	$ metal finger spacing
 +      mspx6 = '0.20u-tdelm6'	$ metal finger spacing
 +      mwtab =  2.80u 		$ tab width
 +      mdend =  0.36u 		$ distance from finger end to tab
 ******************************************************************
 * determine the total number of fingers from the width
 +    fingtot = '(int(((w-((2*mwx0)+mspx0))/(2*(mwx0+mspx0)))+1e-5)*2)+2'
 * calculate fingers per plate.  each plate has to have the same number 
 * of fingers. thus an even number of total fingers, the int function
 * prevents fractional finger in case this rule was somehow violated
 +       fing = 'int(fingtot/2)'
 * determine the actual finger lengths
 +       lfng = 'l-2*mwtab-2*mdend'
 * determine number of vias present for each finger
 +       viax = 'int((lfng-0.58u)/.60u)+2'
 *
 ************* logic calculations ****************************
 ******************************************************************
 * vncap capacitance it has a length component and an end component
 * first, figure out which levels are being used.
 * note how the following variables work:  if botlev=2 and toplev=5
 * then b2t2=b2t3=b2t4=b2t5=1, all others =0. but
 * tb2t5=1, all others =0.
 ******************************************************************
 +       b1t1 = '(botlev == 1)*(toplev >= 1)'
 +       b1t2 = '(botlev == 1)*(toplev >= 2)'
 +       b1t3 = '(botlev == 1)*(toplev >= 3)'
 +       b1t4 = '(botlev == 1)*(toplev >= 4)'
 +       b1t5 = '(botlev == 1)*(toplev >= 5)'
 +       b1t6 = '(botlev == 1)*(toplev == 6)'
 +       b2t2 = '(botlev == 2)*(toplev >= 2)'
 +       b2t3 = '(botlev == 2)*(toplev >= 3)'
 +       b2t4 = '(botlev == 2)*(toplev >= 4)'
 +       b2t5 = '(botlev == 2)*(toplev >= 5)'
 +       b2t6 = '(botlev == 2)*(toplev == 6)'
 +       b3t3 = '(botlev == 3)*(toplev >= 3)'
 +       b3t4 = '(botlev == 3)*(toplev >= 4)'
 +       b3t5 = '(botlev == 3)*(toplev >= 5)'
 +       b3t6 = '(botlev == 3)*(toplev == 6)'
 +       b4t4 = '(botlev == 4)*(toplev >= 4)'
 +       b4t5 = '(botlev == 4)*(toplev >= 5)'
 +       b4t6 = '(botlev == 4)*(toplev == 6)'
 +       b5t5 = '(botlev == 5)*(toplev >= 5)'
 +       b5t6 = '(botlev == 5)*(toplev == 6)'
 +       b6t6 = '(botlev == 6)*(toplev == 6)'
 *
 *** define via levels that are present***********************
 +      via1  = '(botlev == 1)*(toplev > 1)'
 +      via2  = '(botlev <= 2)*(toplev > 2)'
 +      via3  = '(botlev <= 3)*(toplev > 3)'
 +      via4  = '(botlev <= 4)*(toplev > 4)'
 +      via5  = '(botlev <= 5)*(toplev > 5)'
 *
 ***** define bottom and top plates***************************
 +      tb1t1 = '(botlev == 1)*(toplev == 1)'
 +      tb1t2 = '(botlev == 1)*(toplev == 2)'
 +      tb1t3 = '(botlev == 1)*(toplev == 3)'
 +      tb1t4 = '(botlev == 1)*(toplev == 4)'
 +      tb1t5 = '(botlev == 1)*(toplev == 5)'
 +      tb1t6 = '(botlev == 1)*(toplev == 6)'
 +      tb2t2 = '(botlev == 2)*(toplev == 2)'
 +      tb2t3 = '(botlev == 2)*(toplev == 3)'
 +      tb2t4 = '(botlev == 2)*(toplev == 4)'
 +      tb2t5 = '(botlev == 2)*(toplev == 5)'
 +      tb2t6 = '(botlev == 2)*(toplev == 6)'
 +      tb3t3 = '(botlev == 3)*(toplev == 3)'
 +      tb3t4 = '(botlev == 3)*(toplev == 4)'
 +      tb3t5 = '(botlev == 3)*(toplev == 5)'
 +      tb3t6 = '(botlev == 3)*(toplev == 6)'
 +      tb4t4 = '(botlev == 4)*(toplev == 4)'
 +      tb4t5 = '(botlev == 4)*(toplev == 5)'
 +      tb4t6 = '(botlev == 4)*(toplev == 6)'
 +      tb5t5 = '(botlev == 5)*(toplev == 5)'
 +      tb5t6 = '(botlev == 5)*(toplev == 6)'
 +      tb6t6 = '(botlev == 6)*(toplev == 6)'
 *****************************************************************
 * define rough estimate of relative dielectric constant
 +        er1 = 6.20
 +         er = 6.80
 *****************************************************************
 * define finger to finger capacitance where vias are not present (f/m)
 ****************************************************************
 * calculate fringe scaled length for each finger length
 +  fingercfx = 1.0000
 +      cb1t1 = '(m1ti*e0*er1*fingercfx/mspx1)'
 +      cb1t2 = '(m2t*e0*er*fingercfx/mspx2)'
 +      cb1t3 = '(m3t*e0*er*fingercfx/mspx3)'
 +      cb1t4 = '(m4t*e0*er*fingercfx/mspx4)'
 +      cb1t5 = '(m5t*e0*er*fingercfx/mspx5)'
 +      cb1t6 = '(m6t*e0*er*fingercfx/mspx6)'
 +      cb2t2 = '(m2t*e0*er*fingercfx/mspx2)'
 +      cb2t3 = '(m3t*e0*er*fingercfx/mspx3)'
 +      cb2t4 = '(m4t*e0*er*fingercfx/mspx4)'
 +      cb2t5 = '(m5t*e0*er*fingercfx/mspx5)'
 +      cb2t6 = '(m6t*e0*er*fingercfx/mspx6)'
 +      cb3t3 = '(m3t*e0*er*fingercfx/mspx3)'
 +      cb3t4 = '(m4t*e0*er*fingercfx/mspx4)'
 +      cb3t5 = '(m5t*e0*er*fingercfx/mspx5)'
 +      cb3t6 = '(m6t*e0*er*fingercfx/mspx6)'
 +      cb4t4 = '(m4t*e0*er*fingercfx/mspx4)'
 +      cb4t5 = '(m5t*e0*er*fingercfx/mspx5)'
 +      cb4t6 = '(m6t*e0*er*fingercfx/mspx6)'
 +      cb5t5 = '(m5t*e0*er*fingercfx/mspx5)'
 +      cb5t6 = '(m6t*e0*er*fingercfx/mspx6)'
 +      cb6t6 = '(m6t*e0*er*fingercfx/mspx6)'
 **************************************************************************
 * define additive finger to finger capacitance where vias are present (f/m)
 **************************************************************************
 * calculate fringe scaling for each via
 +     viacfx = 3.2
 +    capvia1 = '(m1m2t/m1m2tn)*(0.0120n*viacfx)'
 +    capvia2 = '(m2m3t/m2m3tn)*(0.0120n*viacfx)'
 +    capvia3 = '(m3m4t/m3m4tn)*(0.0120n*viacfx)'
 +    capvia4 = '(m4m5t/m4m5tn)*(0.0120n*viacfx)'
 +    capvia5 = '(m5m6t/m5m6tn)*(0.0120n*viacfx)'
 *
 ******************************************************************
 * define end component of each possible set of levels in f per finger.
 ******************************************************************
 * calculate fringe scaled length for each finger end
 +     endcfx = '1.0000'
 +      cwan1 = '(2/pi)*((mspx1/mdend)*atan(1/(mspx1/mdend)) + atan(mspx1/mdend)/(mspx1/mdend) + log(4*((mspx1/mdend)**2 + 1)/(mspx1/mdend)))'
 +      cwan2 = '(2/pi)*((mspx2/mdend)*atan(1/(mspx2/mdend)) + atan(mspx2/mdend)/(mspx2/mdend) + log(4*((mspx2/mdend)**2 + 1)/(mspx2/mdend)))'
 +      cwan3 = '(2/pi)*((mspx3/mdend)*atan(1/(mspx3/mdend)) + atan(mspx3/mdend)/(mspx3/mdend) + log(4*((mspx3/mdend)**2 + 1)/(mspx3/mdend)))'
 +      cwan4 = '(2/pi)*((mspx4/mdend)*atan(1/(mspx4/mdend)) + atan(mspx4/mdend)/(mspx4/mdend) + log(4*((mspx4/mdend)**2 + 1)/(mspx4/mdend)))'
 +      cwan5 = '(2/pi)*((mspx5/mdend)*atan(1/(mspx5/mdend)) + atan(mspx5/mdend)/(mspx5/mdend) + log(4*((mspx5/mdend)**2 + 1)/(mspx5/mdend)))'
 +      cwan6 = '(2/pi)*((mspx6/mdend)*atan(1/(mspx6/mdend)) + atan(mspx6/mdend)/(mspx6/mdend) + log(4*((mspx6/mdend)**2 + 1)/(mspx6/mdend)))'
 * calculate capacitance per finger end
 +     ecb1t1 = 'm1ti*e0*er1*endcfx*(mwx0/mdend + 2*cwan1)'
 +     ecb1t2 = 'm2t*e0*er*endcfx*(mwx0/mdend + 2*cwan2)'
 +     ecb1t3 = 'm3t*e0*er*endcfx*(mwx0/mdend + 2*cwan3)'
 +     ecb1t4 = 'm4t*e0*er*endcfx*(mwx0/mdend + 2*cwan4)'
 +     ecb1t5 = 'm5t*e0*er*endcfx*(mwx0/mdend + 2*cwan5)'
 +     ecb1t6 = 'm6t*e0*er*endcfx*(mwx0/mdend + 2*cwan6)'
 +     ecb2t2 = 'm2t*e0*er*endcfx*(mwx0/mdend + 2*cwan2)'
 +     ecb2t3 = 'm3t*e0*er*endcfx*(mwx0/mdend + 2*cwan3)'
 +     ecb2t4 = 'm4t*e0*er*endcfx*(mwx0/mdend + 2*cwan4)'
 +     ecb2t5 = 'm5t*e0*er*endcfx*(mwx0/mdend + 2*cwan5)'
 +     ecb2t6 = 'm6t*e0*er*endcfx*(mwx0/mdend + 2*cwan6)'
 +     ecb3t3 = 'm3t*e0*er*endcfx*(mwx0/mdend + 2*cwan3)'
 +     ecb3t4 = 'm4t*e0*er*endcfx*(mwx0/mdend + 2*cwan4)'
 +     ecb3t5 = 'm5t*e0*er*endcfx*(mwx0/mdend + 2*cwan5)'
 +     ecb3t6 = 'm6t*e0*er*endcfx*(mwx0/mdend + 2*cwan6)'
 +     ecb4t4 = 'm4t*e0*er*endcfx*(mwx0/mdend + 2*cwan4)'
 +     ecb4t5 = 'm5t*e0*er*endcfx*(mwx0/mdend + 2*cwan5)'
 +     ecb4t6 = 'm6t*e0*er*endcfx*(mwx0/mdend + 2*cwan6)'
 +     ecb5t5 = 'm5t*e0*er*endcfx*(mwx0/mdend + 2*cwan5)'
 +     ecb5t6 = 'm6t*e0*er*endcfx*(mwx0/mdend + 2*cwan6)'
 +     ecb6t6 = 'm6t*e0*er*endcfx*(mwx0/mdend + 2*cwan6)'
 *
 ******************************************************************
 * calculate end and length components of capacitance for thin levels
 * and accumulate.
 ******************************************************************
 *
 **** capacitance per unit length for portion of finger with no vias
 +   capxlnv1 = 'b1t1*cb1t1+b1t2*cb1t2+b1t3*cb1t3+b1t4*cb1t4+b1t5*cb1t5+b1t6*cb1t6+b2t2*cb2t2'
 +   capxlnv2 = 'b2t3*cb2t3+b2t4*cb2t4+b2t5*cb2t5+b2t6*cb2t6+b3t3*cb3t3+b3t4*cb3t4+b3t5*cb3t5'
 +   capxlnv3 = 'b3t6*cb3t6+b4t4*cb4t4+b4t5*cb4t5+b4t6*cb4t6+b5t5*cb5t5+b5t6*cb5t6+b6t6*cb6t6'
 +   capxlnv  = 'capxlnv1+capxlnv2+capxlnv3'
 **** add in capacitance per unit length due to vias
 +    capxlv  = 'via1*capvia1+via2*capvia2+via3*capvia3+via4*capvia4+via5*capvia5'
 *
 **** capacitance of end component per finger
 +     capxe1 = 'b1t1*ecb1t1+b1t2*ecb1t2+b1t3*ecb1t3+b1t4*ecb1t4+b1t5*ecb1t5+b1t6*ecb1t6+b2t2*ecb2t2'
 +     capxe2 = 'b2t3*ecb2t3+b2t4*ecb2t4+b2t5*ecb2t5+b2t6*ecb2t6+b3t3*ecb3t3+b3t4*ecb3t4+b3t5*ecb3t5'
 +     capxe3 = 'b3t6*ecb3t6+b4t4*ecb4t4+b4t5*ecb4t5+b4t6*ecb4t6+b5t5*ecb5t5+b5t6*ecb5t6+b6t6*ecb6t6'
 +     capxe  = 'capxe1+capxe2+capxe3'
 *
 **** calculate capacitances for each portion of finger
 +    capxnv  = 'lfng*capxlnv*(fingtot-1)'
 +    capxv   = 'viax*.20u*capxlv*(fingtot-1)'
 * two outermost fingers have 1/2 of the end capacitance of inner fingers
 +    capxet  = '(fingtot-1)*capxe'
 +    capxtot = 'capxnv+capxv+capxet'
 *****************************************************************
 ** mis-match calculation
 + m3sig='(0.01*0.25*(pwr((1+(1/((w*l*1e12)*pwr(3,(toplev-botlev))*2e-4))),1.25))*0.7071)/sqrt(par)'
 + mmcap = agauss(0,1,3)
 + mmatc = '1 + (m3sig * mmcap)'
 *
 +  capxtotal = 'capxtot * mmatc'
 ******************************************************************
 * temperature calculation
 +       ptcc = '1 + 1.3e-5 * (temper + dtemp - 25)'
 ******************************************************************
 * vncap resistance has a length component.  define it for each level.
 * r1-re are in ohms/m.
 ******************************************************************
 +         r1 = '(m1tin/m1ti)*(m1rsi/mwx0)/((mwx0+delm1)/mwx0)'
 +         r2 = '(m2tn/m2t)*(m2rs/mwx0)/((mwx0+delm2)/mwx0)'
 +         r3 = '(m3tn/m3t)*(m3rs/mwx0)/((mwx0+delm3)/mwx0)'
 +         r4 = '(m4tn/m4t)*(m4rs/mwx0)/((mwx0+delm4)/mwx0)'
 +         r5 = '(m5tn/m5t)*(m5rs/mwx0)/((mwx0+delm5)/mwx0)'
 +         r6 = '(m6tn/m6t)*(m6rs/mwx0)/((mwx0+delm6)/mwx0)'
 *****************************************************************************
 * resistance scaling from presence of vias up this level
 * (from emsim simulations). the vias contribute very little 
 * reduction in resistance due to the current flow being primarily
 * in a lateral direction through the fingers.
 *****************************************************************************
 +     vscale = 0.95
 ******************************************************************
 * vncap resistance has a length component.  each finger is a bunch
 * of wires in parallel, with the vias providing a little
 * reduction in resistance.
 ******************************************************************
 +      rb1t1 = r1
 +      rb1t2 = 'rb1t1*r2*vscale/(rb1t1+r2*vscale)'
 +      rb1t3 = 'rb1t2*r3*vscale/(rb1t2+r3*vscale)'
 +      rb1t4 = 'rb1t3*r4*vscale/(rb1t3+r4*vscale)'
 +      rb1t5 = 'rb1t4*r5*vscale/(rb1t4+r5*vscale)'
 +      rb1t6 = 'rb1t5*r6*vscale/(rb1t5+r6*vscale)'
 +      rb2t2 = r2
 +      rb2t3 = 'rb2t2*r3*vscale/(rb2t2+r3*vscale)'
 +      rb2t4 = 'rb2t3*r4*vscale/(rb2t3+r4*vscale)'
 +      rb2t5 = 'rb2t4*r5*vscale/(rb2t4+r5*vscale)'
 +      rb2t6 = 'rb2t5*r6*vscale/(rb2t5+r6*vscale)'
 +      rb3t3 = r3
 +      rb3t4 = 'rb3t3*r4*vscale/(rb3t3+r4*vscale)'
 +      rb3t5 = 'rb3t4*r5*vscale/(rb3t4+r5*vscale)'
 +      rb3t6 = 'rb3t5*r6*vscale/(rb3t5+r6*vscale)'
 +      rb4t4 = r4
 +      rb4t5 = 'rb4t4*r5*vscale/(rb4t4+r5*vscale)'
 +      rb4t6 = 'rb4t5*r6*vscale/(rb4t5+r6*vscale)'
 +      rb5t5 = r5
 +      rb5t6 = 'rb5t5*r6*vscale/(rb5t5+r6*vscale)'
 +      rb6t6 = r6
 ******************************************************************
 * resistance per finger (ohms).  notice that we are switching 
 * to the tb1t5 type variables now.
 ******************************************************************
 +     fres1  = 'tb1t1*rb1t1+tb1t2*rb1t2+tb1t3*rb1t3+tb1t4*rb1t4+tb1t5*rb1t5+tb1t6*rb1t6'
 +     fres2  = 'tb2t2*rb2t2+tb2t3*rb2t3+tb2t4*rb2t4+tb2t5*rb2t5+tb2t6*rb2t6'
 +     fres3  = 'tb3t3*rb3t3+tb3t4*rb3t4+tb3t5*rb3t5+tb3t6*rb3t6'
 +     fres4  = 'tb4t4*rb4t4+tb4t5*rb4t5+tb4t6*rb4t6'
 +     fres5  = 'tb5t5*rb5t5+tb5t6*rb5t6'
 +     fres6  = 'tb6t6*rb6t6'
 +     fresxl = 'fres1+fres2+fres3+fres4+fres5+fres6'
 ******************************************************************
 * now the resistance of the bar that connects the fingers.
 * the finger resistance is scaled by the proper ratio
 * ex, if the tab width is 2.8u and the finger width is .28u then
 * the resistance per unit length of the tab is 1/10 that of a finger
 ******************************************************************
 +     rbb1t1 = 'rb1t1/(mwtab/mwx0)'
 +     rbb1t2 = 'rb1t2/(mwtab/mwx0)'
 +     rbb1t3 = 'rb1t3/(mwtab/mwx0)'
 +     rbb1t4 = 'rb1t4/(mwtab/mwx0)'
 +     rbb1t5 = 'rb1t5/(mwtab/mwx0)'
 +     rbb1t6 = 'rb1t6/(mwtab/mwx0)'
 +     rbb2t2 = 'rb2t2/(mwtab/mwx0)'
 +     rbb2t3 = 'rb2t3/(mwtab/mwx0)'
 +     rbb2t4 = 'rb2t4/(mwtab/mwx0)'
 +     rbb2t5 = 'rb2t5/(mwtab/mwx0)'
 +     rbb2t6 = 'rb2t6/(mwtab/mwx0)'
 +     rbb3t3 = 'rb3t3/(mwtab/mwx0)'
 +     rbb3t4 = 'rb3t4/(mwtab/mwx0)'
 +     rbb3t5 = 'rb3t5/(mwtab/mwx0)'
 +     rbb3t6 = 'rb3t6/(mwtab/mwx0)'
 +     rbb4t4 = 'rb4t4/(mwtab/mwx0)'
 +     rbb4t5 = 'rb4t5/(mwtab/mwx0)'
 +     rbb4t6 = 'rb4t6/(mwtab/mwx0)'
 +     rbb5t5 = 'rb5t5/(mwtab/mwx0)'
 +     rbb5t6 = 'rb5t6/(mwtab/mwx0)'
 +     rbb6t6 = 'rb6t6/(mwtab/mwx0)'
 ******************************************************************
 * resistance per bar.
 * this expression comes from emsim simulations where the connection
 * to the bar is in the center of the bar.
 ******************************************************************
 +     bres1  = 'tb1t1*rbb1t1+tb1t2*rbb1t2+tb1t3*rbb1t3+tb1t4*rbb1t4+tb1t5*rbb1t5+tb1t6*rbb1t6'
 +     bres2  = 'tb2t2*rbb2t2+tb2t3*rbb2t3+tb2t4*rbb2t4+tb2t5*rbb2t5+tb2t6*rbb2t6'
 +     bres3  = 'tb3t3*rbb3t3+tb3t4*rbb3t4+tb3t5*rbb3t5+tb3t6*rbb3t6'
 +     bres4  = 'tb4t4*rbb4t4+tb4t5*rbb4t5+tb4t6*rbb4t6'
 +     bres5  = 'tb5t5*rbb5t5+tb5t6*rbb5t6'
 +     bres6  = 'tb6t6*rbb6t6'
 +     bresxl = 'bres1+bres2+bres3+bres4+bres5+bres6'
 +     rbarx  = 'bresxl*w/5'
 *
 ******************************************************************
 * there is '2' in the fres calculation because we are splitting
 * fres up between the two sets of fingers.
 ******************************************************************
 +      fres  = 'fresxl*lfng/(2*1.5*fing)+rbarx/2'
 ******************************************************************
 * inductance per finger: use the grover formula with the wire
 * length and width values obtained by adding finger widths and 
 * lengths.  first define the effective thicknesses based on the
 * metal levels used.
 ******************************************************************
 +      windx = '2*fing*mwx0'
 +     tindx1 = 'b1t1*m1ti+b1t2*m2t+b1t3*m3t+b1t4*m4t+b1t5*m5t+b1t6*m6t+b2t2*m2t'
 +     tindx2 = 'b2t3*m3t+b2t4*m4t+b2t5*m5t+b2t6*m6t+b3t3*m3t+b3t4*m4t+b3t5*m5t'
 +     tindx3 = 'b3t6*m6t+b4t4*m4t+b4t5*m5t+b4t6*m6t+b5t5*m5t+b5t6*m6t+b6t6*m6t'
 +     tindx  = 'tindx1+tindx2+tindx3'
 ******************************************************************
 * grover's formula, suitably scaled (based on emsim simulations)
 ******************************************************************
 +     ratx   = '2*lfng/(windx+tindx)'
 +     findx  = '(l*2e-7)*(log(ratx)+0.5+0.447/ratx)'
 +     plind  = 'findx/2'
 * check to see if the user has overridden the inductance value
 +    indval  = '(setind!=-2)*setind + (setind==-2)*(plind)'
 ******************************************************************
 * parasitic capacitance to substrate calculations
 ******************************************************************
 * determine which metal level forms the bottom plate
 +       bot1 = 'botlev==1'
 +       bot2 = 'botlev==2'
 +       bot3 = 'botlev==3'
 +       bot4 = 'botlev==4'
 +       bot5 = 'botlev==5'
 +       bot6 = 'botlev==6'
 * determine which metal level forms the top plate
 +       top1 = 'toplev==1'
 +       top2 = 'toplev==2'
 +       top3 = 'toplev==3'
 +       top4 = 'toplev==4'
 +       top5 = 'toplev==5'
 +       top6 = 'toplev==6'
 * find what tolerance we need
 +      bdelw = 'bot1*tdelm1+bot2*tdelm2+bot3*tdelm3+bot4*tdelm4+bot5*tdelm5+bot6*tdelm6'
 * calculate the finger widths of the bottom plate
 +      botwx = 'mwx0+bdelw'
 * calculate the area of the fingers
 +      farea = '2*lfng*(fing*botwx)'
 * calculate area of tabs
 +      barea = '2*(mwtab+bdelw)*w'
 *
 * calculate thickness of dielectric below each metal layer
 * 45pct of vncap groundplane area is pc and 45pct is rx.  the rest is over sti
 +    m1thkn  = 'oppcthkf+oppcstie+capctin'
 +    m1thk   = 'm1thkn-(2*.25*oppcthkf)-(2*.45*oppcstie)'
 +    m2thk   = 'm1thk+m1ti+m1m2t'
 +    m3thk   = 'm2thk+m2t+m2m3t'
 +    m4thk   = 'm3thk+m3t+m3m4t'
 +    m5thk   = 'm4thk+m4t+m4m5t'
 +    m6thk   = 'm5thk+m5t+m5m6t'
 * calculate effective dielectric height
 +    heffec  = 'bot1*m1thk+bot2*m2thk+bot3*m3thk+bot4*m4thk+bot5*m5thk+bot6*m6thk'
 * total area
 +      tarea = 'farea+barea'
 * area term of parasitic capacitance
 +      carea = 'eoxdepo*e0*tarea/heffec'
 *
 *****************************************************************
 *perimeter term of capacitance to substrate
 *****************************************************************
 * total perimeter
 +     tperim = '2*((l+bdelw)+(w+bdelw))'
 +       weff = 'fingtot*(mwx0+bdelw)'
 +       htop = 'top1*m1thk+top2*m2thk+top3*m3thk+top4*m4thk+top5*m5thk+top6*m6thk'
 +       mtop = 'top1*m1ti+top2*m2t+top3*m3t+top4*m4t+top5*m5t+top6*m6t'
 *
 * calculate the singularity term of the fringe capacitance
 +  csingp    = 'eoxdepo*e0*(2/(pi-2)*log(pi/2))'
 *
 * calculate the terms of the top plate
 +  ctopedgp  = 'eoxdepo*e0*(2/pi)*log(1+mtop/htop)'        $ edge term
 +  ctoplp    = 'eoxdepo*e0*log(1+(weff/(htop+mtop)))'      $ top length term
 +  ctopwp    = 'eoxdepo*e0*log(1+((l+bdelw)/(htop+mtop)))' $ top width  term
 *
 * calculate the edge and top terms for the lower plates
 +  cf1       = 'eoxdepo*e0*((2/pi)*log(1+m1ti/m1thk)+(1/pi)*log(1+(2*m1m2t/(m1ti+m1thk))))'
 +  cf2       = 'eoxdepo*e0*((2/pi)*log(1+m2t/m2thk)+(1/pi)*log(1+(2*m2m3t/(m2t+m2thk))))'
 +  cf3       = 'eoxdepo*e0*((2/pi)*log(1+m3t/m3thk)+(1/pi)*log(1+(2*m3m4t/(m3t+m3thk))))'
 +  cf4       = 'eoxdepo*e0*((2/pi)*log(1+m4t/m4thk)+(1/pi)*log(1+(2*m4m5t/(m4t+m4thk))))'
 +  cf5       = 'eoxdepo*e0*((2/pi)*log(1+m5t/m5thk)+(1/pi)*log(1+(2*m5m6t/(m5t+m5thk))))'
 *
 * calculate the sum of the lower plate capacitances
 +   clowerp1 = 'cf1*((botlev==1)*(toplev>=2))+cf2*((botlev<=2)*(toplev>=3))'
 +   clowerp2 = 'cf3*((botlev<=3)*(toplev>=4))*cf4*((botlev<=4)*(toplev>=5))'
 +   clowerp3 = 'cf5*((botlev<=5)*(toplev>=6))'
 +   clowerp  = 'clowerp1+clowerp2+clowerp3'
 *
 * calculate fringe term of parasitic capacitance
 +  cperim    = '2*(w+bdelw)*ctopwp + 2*(l+bdelw)*ctoplp + tperim*(csingp+ctopedgp+clowerp)'
 * calculate total parasitic cap, divide by 2 for distrib
 +     csx    = '(cperim+carea)/2'
 *
 **********vncap subcircuit****************************************
  r1  in   1   r='max(0.001,fres)'       tc1=0.004    dtemp=dtemp
  l1  1    2   l=indval            		     dtemp=dtemp	
  c   2    3   c='capxtotal*ptcc'                    
  r2  3    out r='max(0.001,fres)'       tc1=0.004    dtemp=dtemp
  c1  1    4   c='max(0.01f,(csx*est))'               dtemp=dtemp
  c2  3    4   c='max(0.01f,(csx*est))'               dtemp=dtemp
  r3  4    ref r=rsx        		             dtemp=dtemp

 .ends vncap
 .include './zvtdgnfet.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/zvtdgnfet.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.8 08/08/28 21:13:28
 *
 *>  ibm cmrf8sf  zvtdgnfet  2.5v zvt dgnfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) zvtdgnfet l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.56u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          +    ngcon = 1    <- gate connection switch (1->single-ended,
 *                                                       2->double-ended)
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                   drain
 *                     o
 *                     |
 *                     |
 *                     |_________
 *                     |         |
 *            zvtnfet  |         |
 *               | |----     |----
 *      gate     | |       | |       |     (bsim4.4     )    bulk
 *        o------| |    ---| | nfet  |-----(internal    )-----o
 *           |   | |    |  | |       |     (rsub network)
 *           |   | |--- |    |----
 *           |         ||        |
 *           |_________||________|
 *                     |
 *                     |
 *                     o
 *                   source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2008 ibm corporation
 *
 ***************************************************************************
 *
 .subckt zvtdgnfet d g s b w=1.0u l=0.56u nf=1 par=1 dtemp=0
 +                         as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                         lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                         panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                         panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                         plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                         rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1
 .param
 *
 * if monte carlo and "pl*" instance parameter = zero, use values from skew/process file
 +   a_plnest     = limit(-0.5,0.5)
 +   sel_plnest   = '((plnest == 1) || ((a_plnest*plnest) == 1))'
 +   a_plorient   = limit(-0.5,0.5)
 +   sel_plorient = '((plorient == 1) || ((a_plorient*plorient) == 1))'
 +   a_pld200     = limit(-0.5,0.5)
 +   sel_pld200   = '((pld200 == 1) || ((a_pld200*pld200) == 1))'
 +   a_pwd100     = limit(-0.5,0.5)
 +   sel_pwd100   = '((pwd100 == 1) || ((a_pwd100*pwd100) == 1))'
 *
 * calculate aclv/acwv and final lint/wint params
 +   aclv_ni_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_nest == 2))/aclv_dgfactor + cnr_zdg*(1-mc_fet_mm_f)*(pc_nest != 2))'
 +   aclv_or_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_orient == 2))/aclv_dgfactor + cnr_zdg*(1-mc_fet_mm_f)*(pc_orient != 2))'
 +   aclv_dist_sws = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_dist == 2))/aclv_dgfactor + cnr_zdg*(1-mc_fet_mm_f)*(pc_dist != 2))'
 +   aclv_ni       = '((dgfet_aclv_nest*sel_plnest) + (dgfet_aclv_iso*(1-sel_plnest)))*aclv_ni_sws'
 +   aclv_or       = '((dgfet_aclv_v*sel_plorient) + (dgfet_aclv_h*(1-sel_plorient)))*aclv_or_sws'
 +   aclv_dist     = '((dgfet_aclv_out*sel_pld200) + (dgfet_aclv_in*(1-sel_pld200)))*aclv_dist_sws'
 +   aclv_ran      = agauss(cnr_zdg,mc_sw,3)
 *
 +   acwv_dist_sws = '(-mc_sw + ((mc_fet_mm_f != 1) && (rx_dist == 2))/acwv_dgfactor + cnr_zdg*(1-mc_fet_mm_f)*(rx_dist != 2))'
 +   acwv_dist     = '((dgfet_acwv_out*sel_pwd100) + (dgfet_acwv_in*(1-sel_pwd100)))*acwv_dist_sws'
 +   acwv_ran      = agauss('-cnr_zdg',mc_sw,3)
 *
 .param
 +   xc_lint_1 = '(aclv_ni*aclv_dgfet_ni + aclv_or*aclv_dgfet_or)'
 +   xc_lint_2 = '((aclv_dist*aclv_dgfet_dist) + (aclv_ran + (mc_global == 2))*aclv_dgfet_ran)'
 +   xx_lint_3 = '(mc_fet_mm_f + (aclv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_lint_4 = '((mc_global == 2)*(-xlint_zdg) + (mc_global != 2))'
 +   xc_lint_t = '((xc_lint_1 + xc_lint_2)*xx_lint_3)*xx_lint_4'
 *
 +   xc_wint_1 = '((acwv_dist*acwv_dgfet_dist) + (acwv_ran + (mc_global == 2))*acwv_dgfet_ran)'
 +   xx_wint_2 = '(mc_fet_mm_f + (acwv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_wint_3 = '((mc_global == 2)*(xwint_zdg) + (mc_global != 2))'
 +   xc_wint_t = '((xc_wint_1)*xx_wint_2)*xx_wint_3'
 *
 *     final =  nominal      +      acv * dist(-1,1)      +        global * dist(-1,1)
 + lint_zdgnfet = 'lint_zdg + 1.5*total_aclv_dgfet*xc_lint_t*fet_geo_mm + ltol_zdg*xlint_zdg'
 + wint_zdgnfet = 'wint_zdg + 1.5*total_acwv_dgfet*xc_wint_t*fet_geo_mm + wtol_zdg*xwint_zdg'
 *
 + lint_dgnfet  = '0.014u + (lint_zdgnfet - lint_zdg)'
 + wint_dgnfet  = '0.0u + (wtol_dgn*xwint_dgn) - (wint_zdgnfet - wint_zdg)'
 *
 .param
 * switch to turn on or off the sti stress effects
 +  isti = '((gstis==1)&&(lstis==1))||(gstis==2)'
 *
 * switch to turn on or off the nwell proximity effects
 +  inw  = '((gwells==1)&&(lnws==1))||(gwells==2)'
 *
 * mis-match calculations: include multiplicity (par)
 .param
 +  kvt  =  1.0e-8
 +  kvtl =  3.5e-7
 +  kvtw = -5.0e-7
 +  kmb  =  2.0e-5
 +  kmbl =  1.0e-7
 +  kmbw = -9.0e-5
 +  sigvth  = 'kvt/sqrt((w-kvtw)*par*(l-kvtl))'
 +  sigbeta = 'kmb/sqrt((w-kmbw)*par*(l-kmbl))'
 *
 +  dvth0 = agauss(0,1,3)               $ local mis-match distributions
 +  dbeta = agauss(0,1,3)
 *                                      $ select local vs global vs corner
 +  d_vth0 = 'dvth0*(mc_global != 2) + xzdgvth0*(mc_global == 2) - cnr_zdg'
 +  d_beta = 'dbeta*(mc_global != 2) + dzdgu0*(mc_global == 2) - cnr_zdg'
 *
 +  mmvth0 = 'sigvth * d_vth0 * fet_dop_mm'    $ vth0 mis-match
 +  mmbeta = 'sigbeta * d_beta * fet_dop_mm'   $ beta mis-match
 *
 +  pvt_var = 'mmvth0'                  $ local vth0 variation
 *
 .param
 * flicker noise calculations: statistics are function of w and l and par
 +  noideva = '10u * 0.42u * 10'        $ device area for extracted variation
 +  noistd  = 0.9412                    $ worst case variation value
 *
 +  noi_scale = 'noistd-min(log(sqrt(w*l*par/noideva)),0)'   $ area scaling
 +  noiamult  = 'exp(dnoi_zdg*noi_scale)'                $ gate bias scaliing
 +  noibmult  = 'exp(dnoi_zdg*noi_scale/1.10)'
 +  noicmult  = 'exp(dnoi_zdg*noi_scale/1.21)'
 *
 .param
 * separate main and parallel device s/d area, perimeter terms
 +  zad=ad zas=as zpd=pd zps=ps
 *
 +  dzvtw = 0.3u                              $ rx width under pc without zvt
 *
 +  pgate    = '(2*dzvtw+ndelrx)*nf'          $ gate bounded perimeter
 +  pzvtgate = '(w-2*dzvtw*nf)'
 *
 +  pstis = 'max(0,(zps-(pzvtgate+pgate)))'   $ sti bounded perimeter
 +  pstid = 'max(0,(zpd-(pzvtgate+pgate)))'
 *
 +  nfo = '(int((nf+1)/2) - int(nf/2))'       $ switch for odd,even fingers
 *
 +  nade = 'zad-(0.22u*pzvtgate)'             $ drain area calculations
 +  nado = 'zad-((0.66u*pzvtgate)+(0.22u*pzvtgate*(nf-1)))/nf'
 +  nad  = 'max(0,(nade*(1-nfo)+(nado*nfo)))'
 *
 *                                            $ source area calculations
 +  nase = 'zas-((2*0.66u*pzvtgate)+((0.22u*pzvtgate)*max(0,(nf-3))))/nf'
 +  naso = 'zas-((0.66u*pzvtgate)+(0.22u*pzvtgate*(nf-1)))/nf'
 +  nas  = 'max(0,(nase*(1-nfo)+(naso*nfo)))'
 *
 m0 d g s b  zdgnch  w=pzvtgate l=l nf=nf dtemp=dtemp
 +                   as='zas-nas' ad='zad-nad' ps=pzvtgate pd=pzvtgate
 +                   nrs=nrs nrd=nrd
 +                   sa=0 sb=0 sd=0 rgatemod=1 rbodymod=0
 *
 m1 d g s b  dgnzch  w='0.6u*nf' l=l nf=nf dtemp=dtemp
 +                   as=nas ad=nad ps='pstis+pgate' pd='pstid+pgate'
 +                   nrs=0 nrd=0
 +                   sa=0 sb=0 sd=0 rgatemod=1 rbodymod=0
 *
 ***************************************************************************
 * zvt nfet bsim4v4 model
 ***************************************************************************
 .model zdgnch nmos  (                              level   = 54
 +version = 4.4            binunit = 1              paramchk= 1
 +mobmod  = 0              rdsmod  = 1              permod  = 1
 +epsrox  = 3.9            toxe    = toxe_zdg       toxp    = toxp_zdg
 +toxm    = 5.71e-9        xj      = 2e-7           ndep    = 1.18e17
 +ngate   = 1.7e20         nsd     = 1.18e17
 +rsh     = rsh_zdg        rshg    = rsh_zdg        pvth0   = pvth0_zdg
 +vth0 = 'vth0_zdg+pvt_var' vfb    = -1             phin    = 0
 +lvth0   = -0.017         wvth0   = 0.12           lk1     = -0.03
 +k1      = 0.25           wk1     = 0.12           k2      = -0.055
 +k3      = -6.7           k3b     = 1.5            w0      = 0
 +lpe0    = 1.02e-6        lpeb    = 1.34e-8        vbm     = -3
 +dvt0    = 2.2            dvt1    = 4.67           dvt2    = -0.5
 +dvtp0   = 0              dvtp1   = 0.25           dvt0w   = 0.3
 +dvt1w   = 3.02e5         dvt2w   = -0.12
 +u0    = 'u0_zdg+mmbeta'  wu0     = -140 
 +ua      = 1.7e-12        ub      = 1.8e-18        uc      = 1e-12
 +eu      = 1.67           vsat    = 6.92e4         a0      = 0.5
 +ags     = 1              b0      = 3.5e-7         b1      = 1.74e-6
 +keta    = 0.01           a1      = 0.10           a2      = 0.7
 +wint    = 0              lint    = 0              dwg     = -8e-9
 +dwb     = 0              voff    = -0.024         voffl   = 0
 +minv    = 0.70           nfactor = 0.90           eta0    = 2
 +etab    = -0.07          dsub    = 0.44           cit     = 0
 +cdsc    = 0              cdscb   = 0              cdscd   = 0
 +pclm    = 7              pdiblc1 = 6e-3           pdiblc2 = 1.808e-4
 +pdiblcb = 0.38           drout   = 0.1            pscbe1  = 4.3e10
 +pscbe2  = 3.19e-9        pvag    = 14             delta   = 0.015
 +fprout  = 0              pdits   = 4.6e-11        pditsl  = 0.01
 +pditsd  = -1
 +lc      = 5e-9           xn      = 3              rdw     = rdsw_zdg
 +rdwmin  = 0              rsw     = rdsw_zdg       rswmin  = 0
 +prwg    = 1.812          prwb    = 0.021          wr      = 1
 +alpha0  = 6.5e-9         alpha1  = 0.046          beta0   = 9.7
 ***************************************************************************
 * jds/vt temperature parameters
 ***************************************************************************
 +tnom    = 25             ute     = -1.5           kt1     = -0.25
 +kt1l    = 0              kt2     = -0.015         ua1     = 1e-9
 +ub1     = -1e-18         uc1     = -1.84e-10      at      = 3.3e4
 +prt     = 0              tempmod = 0
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 +igcmod  = 0              igbmod  = 0              agidl   = 0
 +bgidl   = 2.3e9          cgidl   = 0.5            egidl   = 0.8
 +aigbacc = 0.43           bigbacc = 0.054          cigbacc = 0.075
 +nigbacc = 1              aigbinv = 0.35           bigbinv = 0.03
 +cigbinv = 6e-3           eigbinv = 1.1            nigbinv = 3
 +aigc    = 0.054          bigc    = 0.054          cigc    = 0.075
 +aigsd   = 0.43           bigsd   = 0.054          cigsd   = 0.075
 +dlcig   = 1.4e-8         nigc    = 1              poxedge = 1
 +pigcd   = 1              ntox    = 1              toxref  = toxe_zdg
 ***************************************************************************
 * source/drain to body junction diode parameters
 ***************************************************************************
 +diomod  = 1             ijthdfwd= 0.1            ijthsfwd= 0.1
 +jss     = js_zdg        jsd     = js_zdg         jsws    = jsw_zdg
 +jswd    = jsw_zdg       jswgs   = jsw_zdg        jswgd   = jsw_zdg
 +cjs     = cj_zdg        cjd     = cj_zdg         cjsws   = cjsw_zdg
 +cjswd   = cjsw_zdg      cjswgs  = cjsg_zdg       cjswgd  = cjsg_zdg
 +mjs     = mj_zdg        mjd     = mj_zdg         mjsws   = mjsw_zdg
 +mjswd   = mjsw_zdg      mjswgs  = mjsg_zdg       mjswgd  = mjsg_zdg
 +pbs     = pb_zdg        pbd     = pb_zdg         pbsws   = pbsw_zdg
 +pbswd   = pbsw_zdg      pbswgs  = pbsg_zdg       pbswgd  = pbsg_zdg
 +njs     = n_zdg         njd     = n_zdg          xjbvd   = 1
 +bvd     = bd_n          xjbvs   = 1              bvs     = bd_n
 ***************************************************************************
 * junction diode temperature parameters
 ***************************************************************************
 +tcj     = cta_zn        tcjsw   = ctp_zn         tcjswg  = ctp_zn
 +tpb     = pta_zn        tpbsw   = ptp_zn         tpbswg  = ptp_zn
 +xtis    = 3             xtid    = 3
 ***************************************************************************
 * capacitance-voltage (cv) parameters
 ***************************************************************************
 +capmod  = 2             xpart   = 0              dlc     = 50n
 +dwc     = 0             cgdo    = cgdo_zdg       cgso    = cgso_zdg
 +cgsl    = cgsl_zdg      cgdl    = cgdl_zdg       ckappas = 1.3
 +ckappad = 1.3           cf      = 0              cgbo    = 1.706e-11
 +acde    = 0.4           moin    = 6              noff    = 2.3
 +voffcv  = 0.08
 ***************************************************************************
 * layout dependence parameters
 ***************************************************************************
 +geomod  = '(1 - int((nf+1)/2) + int(nf/2))'       rgeomod = 1
 +xgl     = lwbpc          xgw     = 0.43e-6        xl = '-2*lint_zdgnfet'
 +xw = '-2*wint_zdgnfet'   dmcg    = 0.23e-6        dmci    = 0.32e-6
 +dwj     = 0              ngcon   = ngcon
 ***************************************************************************
 * flicker noise parameters
 ***************************************************************************
 +fnoimod = 1           noia = '2.5e41*noiamult'    noib = '1.5e24*noibmult'
 +noic = '1.15e8*noicmult' em      = 4.10e7         af      = 1
 +ef      = 0.87           kf      = 0
 ***************************************************************************
 * channel thermal noise parameters
 ***************************************************************************
 +tnoimod = 0              ntnoi   = 3.7            )
 *
 ***************************************************************************
 * parallel dg nfet bsim4v4 model
 ***************************************************************************
 .model dgnzch nmos  (                              level   = 54
 +version = 4.4            binunit = 1              paramchk= 1
 +mobmod  = 0              rdsmod  = 1              permod  = 1
 +epsrox  = 3.9            toxe    = toxe_dgn       toxp    = toxp_dgn
 +toxm    = 6e-9           xj      = 1.5e-7         ndep    = 7.5e17
 +ngate   = 3e20           nsd     = 1e20
 +rsh     = rsh_zdg        rshg    = rsh_zdg
 +vth0    = 0.43           vfb     = -0.17          phin    = 0.112
 +k1      = 0.80           k2      = -0.03          k3      = 42
 +k3b     = 27.8           w0      = 5.04e-6        lpe0    = 9.91e-8
 +lpeb    = -1.25e-7       vbm     = -3             dvt0    = 15.2457
 +dvt1    = 0.425156       dvt2    = -0.0110109     dvtp0   = 4e-7
 +dvtp1   = 1.2e-6         dvt0w   = 0              dvt1w   = 9.14e5
 +dvt2w   = -0.032         u0      = 523            ua      = -2e-10
 +ub      = 2.36e-18       uc      = 9.8e-11        lu0     = 0
 +lua     = -2.4e-11       lub     = 4.4e-19        luc     = 1.45e-11
 +wu0     = 0              wua     = 2e-10          wub     = 3.6e-19
 +wuc     = 1.2e-11        pu0     = 0              pua     = 0
 +pub     = 0              puc     = 0              eu      = 1.67
 +vsat    = 7.79e4         a0      = 2.2            la0     = -1.43
 +pa0     = 0.08           ags     = 0.44           lags    = 0.36
 +pags    = 0.18           b0      = 8.2e-7         b1      = 1.08e-6
 +keta    = -0.052         a1      = 3.75169e-4     a2      = 0.902855
 +wint    = -8e-9          lint    = -3.8e-8        dwg     = -2e-8
 +dwb     = -1.2e-8        voff    = -0.1           voffl   = -8.1e-9
 +minv    = -0.5           nfactor = 0.4            eta0    = 0.098
 +etab    = -0.09          dsub    = 0.199          cit     = 3.51e-4
 +cdsc    = 2e-11          cdscb   = 1.6e-3         cdscd   = 1e-5
 +pclm    = 0.5            pdiblc1 = 0.39           pdiblc2 = 3.2e-3
 +wpdiblc2= 2.2e-3         ppdiblc2= -8e-4          pdiblcb = 0
 +drout   = 0.38           pscbe1  = 4.24e8         pscbe2  = 1e-5
 +pvag    = 0.3            delta   = 0.0109         fprout  = 0
 +pdits   = 0              pditsl  = 0              pditsd  = 0
 +lc      = 0              xn      = 3              wr      = 1
 +rdw     = 105            rdwmin  = 0              rsw     = 105
 +rswmin  = 0              prwg    = 1              prwb    = 0
 ***************************************************************************
 * jds/vt temperature parameters
 ***************************************************************************
 +tnom    = 25             ute     = -2.03          kt1     = -0.2755
 +kt1l    = -4e-9          kt2     = -0.052         ua1     = 4e-10
 +ub1     = -1.4e-18       uc1     = 4.47e-11       at      = 1e3
 +prt     = -180           tempmod = 0
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 +igcmod  = 0              igbmod  = 0              agidl   = 0
 +bgidl   = 2.3e9          cgidl   = 0.5            egidl   = 0.8
 +aigbacc = 0.43           bigbacc = 0.054          cigbacc = 0.075
 +nigbacc = 1              aigbinv = 0.35           bigbinv = 0.03
 +cigbinv = 6e-3           eigbinv = 1.1            nigbinv = 3
 +aigc    = 0.054          bigc    = 0.054          cigc    = 0.075
 +aigsd   = 0.43           bigsd   = 0.054          cigsd   = 0.075
 +dlcig   = 1.4e-8         nigc    = 1              poxedge = 1
 +pigcd   = 1              ntox    = 1              toxref  = toxe_dgn
 ***************************************************************************
 * source/drain to body junction diode parameters
 ***************************************************************************
 +diomod  = 1             ijthdfwd= 0.1            ijthsfwd= 0.1
 +jss     = js_dgn        jsd     = js_dgn         jsws    = jsw_dgn
 +jswd    = jsw_dgn       jswgs   = jsw_dgn        jswgd   = jsw_dgn
 +cjs     = cj_dgn        cjd     = cj_dgn         cjsws   = cjsw_dgn
 +cjswd   = cjsw_dgn      cjswgs  = cjsg_dgn       cjswgd  = cjsg_dgn
 +mjs     = mj_dgn        mjd     = mj_dgn         mjsws   = mjsw_dgn
 +mjswd   = mjsw_dgn      mjswgs  = mjsg_dgn       mjswgd  = mjsg_dgn
 +pbs     = pb_dgn        pbd     = pb_dgn         pbsws   = pbsw_dgn
 +pbswd   = pbsw_dgn      pbswgs  = pbsg_dgn       pbswgd  = pbsg_dgn
 +njs     = n_dgn         njd     = n_dgn          xjbvd   = 1
 +bvd     = bd_n          xjbvs   = 1              bvs     = bd_n
 ***************************************************************************
 * junction diode temperature parameters
 ***************************************************************************
 +tcj     = cta_n         tcjsw   = ctp_n          tcjswg  = ctp_n
 +tpb     = pta_n         tpbsw   = ptp_n          tpbswg  = ptp_n
 +xtis    = 3             xtid    = 3
 ***************************************************************************
 * capacitance-voltage (cv) parameters
 ***************************************************************************
 +capmod  = 2             xpart   = 0              dlc     = 14n
 +dwc     = 0             cgdo    = cgdo_dgn       cgso    = cgso_dgn
 +cgsl    = cgsl_dgn      cgdl    = cgdl_dgn       ckappas = 5.0
 +ckappad = 5.0           cf      = 0              cgbo    = 1.706e-11
 +acde    = 0.45          moin    = 10             noff    = 1.5
 +voffcv  = -0.08
 ***************************************************************************
 * layout dependence parameters
 ***************************************************************************
 +geomod  = '(1 - int((nf+1)/2) + int(nf/2))'       rgeomod = 1
 +xgl     = lwbpc          xgw     = 0.43e-6        xl = '-2*lint_dgnfet'
 +xw = '-2*wint_dgnfet'    dmcg    = 0.23e-6        dmci    = 0.32e-6
 +dwj     = 0              ngcon   = ngcon
 ***************************************************************************
 * channel thermal noise parameters
 ***************************************************************************
 +tnoimod = 0              ntnoi   = 3.7            )
 *
 .ends zvtdgnfet
 .include './zvtnfet.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/zvtnfet.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.7 08/08/28 21:13:35
 *
 *>  ibm cmrf8sf  zvtnfet  1.5v zvt nfet
 *
 ***************************************************************************
 *
 *  syntax:  xxx ( d g s b ) zvtnfet l=nnn w=nnn 
 *
 *  required:
 *          +        w = 1.0u <- total device width (meters)
 *          +        l = 0.42u<- device length (meters)
 *  optional:
 *          +       nf = 1    <- number of gate stripes or "fingers" in device
 *          +  m (par) = 1    <- number of parallel instances (multiplicity)
 *          +       as = 0    <- source diffusion area (meters^2)
 *          +       ad = 0    <- drain diffusion area (meters^2)
 *          +       ps = 0    <- source diffusion perimeter in (meters)
 *          +       pd = 0    <- drain diffusion perimeter in (meters)
 *          +      nrd = 0    <- number of squares of drain diffusion
 *          +      nrs = 0    <- number of squares of source diffusion
 *          +    dtemp = 0    <- device temp rise from ambient (deg c)
 *          + plorient = -1   <- instance flag : horizontal vs. vertical acv
 *                                  (-1 -> random, default
 *                                    1 -> vertical
 *                                    0 -> horizontal)
 *          +   pld200 = -1   <- instance flag : aclv effect within 200um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 200um x 200um square)
 *          +   pwd100 = -1   <- instance flag : acwv effect within 100um square
 *                                  (-1 -> random, default
 *                                    1 -> outside
 *                                    0 -> inside 100um x 100um square)
 *          +    ngcon = 1    <- gate connection switch (1->single-ended,
 *                                                       2->double-ended)
 *
 *  notes:
 *
 *  1. if nrd or nrs are not passed to the model they will default to 0.
 *     this will result in 0 ohms of silicided s/d resistance being placed 
 *     in series with the device model.
 *
 * subcircuit schematic:
 *
 *                   drain
 *                     o
 *                     |
 *                     |
 *                     |_________
 *                     |         |
 *            zvtnfet  |         |
 *               | |----     |----
 *      gate     | |       | |       |     (bsim4.4     )    bulk
 *        o------| |    ---| | nfet  |-----(internal    )-----o
 *           |   | |    |  | |       |     (rsub network)
 *           |   | |--- |    |----
 *           |         ||        |
 *           |_________||________|
 *                     |
 *                     |
 *                     o
 *                   source
 *
 *         note: the ldd resistance is accounted for within the bsim4 model.
 *
 * ibm confidential
 * (c) 2008 ibm corporation
 *
 ***************************************************************************
 *
 .subckt zvtnfet d g s b w=1.0u l=0.42u nf=1 par=1 dtemp=0
 +                       as=0 ps=0 ad=0 pd=0 nrs=0 nrd=0
 +                       lstis=1 sa=0 sb=0 sd=0 lnws=0
 +                       panw1=0 panw2=0 panw3=0 panw4=0 panw5=0
 +                       panw6=0 panw7=0 panw8=0 panw9=0 panw10=0
 +                       plnest=-1 plorient=-1 pld200=-1 pwd100=-1
 +                       rgatemod=0 ngcon=1 rbodymod=0 rf_rsub=1
 .param
 *
 * if monte carlo and "pl*" instance parameter = zero, use values from skew/process file
 +   a_plnest     = limit(-0.5,0.5)
 +   sel_plnest   = '((plnest == 1) || ((a_plnest*plnest) == 1))'
 +   a_plorient   = limit(-0.5,0.5)
 +   sel_plorient = '((plorient == 1) || ((a_plorient*plorient) == 1))'
 +   a_pld200     = limit(-0.5,0.5)
 +   sel_pld200   = '((pld200 == 1) || ((a_pld200*pld200) == 1))'
 +   a_pwd100     = limit(-0.5,0.5)
 +   sel_pwd100   = '((pwd100 == 1) || ((a_pwd100*pwd100) == 1))'
 *
 * calculate aclv/acwv and final lint/wint params
 +   aclv_ni_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_nest == 2))/aclv_dgfactor + cnr_zn*(1-mc_fet_mm_f)*(pc_nest != 2))'
 +   aclv_or_sws   = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_orient == 2))/aclv_dgfactor + cnr_zn*(1-mc_fet_mm_f)*(pc_orient != 2))'
 +   aclv_dist_sws = '(mc_sw + ((mc_fet_mm_f != 1) && (pc_dist == 2))/aclv_dgfactor + cnr_zn*(1-mc_fet_mm_f)*(pc_dist != 2))'
 +   aclv_ni       = '((dgfet_aclv_nest*sel_plnest) + (dgfet_aclv_iso*(1-sel_plnest)))*aclv_ni_sws'
 +   aclv_or       = '((dgfet_aclv_v*sel_plorient) + (dgfet_aclv_h*(1-sel_plorient)))*aclv_or_sws'
 +   aclv_dist     = '((dgfet_aclv_out*sel_pld200) + (dgfet_aclv_in*(1-sel_pld200)))*aclv_dist_sws'
 +   aclv_ran      = agauss(cnr_zn,mc_sw,3)
 *
 +   acwv_dist_sws = '(-mc_sw + ((mc_fet_mm_f != 1) && (rx_dist == 2))/acwv_factor + cnr_zn*(1-mc_fet_mm_f)*(rx_dist != 2))'
 +   acwv_dist     = '((fet_acwv_out*sel_pwd100) + (fet_acwv_in*(1-sel_pwd100)))*acwv_dist_sws'
 +   acwv_ran      = agauss('-cnr_zn',mc_sw,3)
 *
 .param
 +   xc_lint_1 = '(aclv_ni*aclv_dgfet_ni + aclv_or*aclv_dgfet_or)'
 +   xc_lint_2 = '((aclv_dist*aclv_dgfet_dist) + (aclv_ran + (mc_global == 2))*aclv_dgfet_ran)'
 +   xx_lint_3 = '(mc_fet_mm_f + (aclv_dgfactor*(1-mc_fet_mm_f)))'
 +   xx_lint_4 = '((mc_global == 2)*(-xlint_zn) + (mc_global != 2))'
 +   xc_lint_t = '((xc_lint_1 + xc_lint_2)*xx_lint_3)*xx_lint_4'
 *
 +   xc_wint_1 = '((acwv_dist*acwv_fet_dist) + (acwv_ran + (mc_global == 2))*acwv_fet_ran)'
 +   xx_wint_2 = '(mc_fet_mm_f + (acwv_factor*(1-mc_fet_mm_f)))'
 +   xx_wint_3 = '((mc_global == 2)*(xwint_zn) + (mc_global != 2))'
 +   xc_wint_t = '((xc_wint_1)*xx_wint_2)*xx_wint_3'
 *
 *     final =  nominal      +      acv * dist(-1,1)      +        global * dist(-1,1)
 + lint_zvtnfet = 'lint_zn + 1.5*total_aclv_dgfet*xc_lint_t*fet_geo_mm + ltol_zn*xlint_zn'
 + wint_zvtnfet = 'wint_zn + 1.5*total_acwv_dgfet*xc_wint_t*fet_geo_mm + wtol_zn*xwint_zn'
 *
 + lint_nfet    = '0.014u + (lint_zvtnfet - lint_zn)'
 + wint_nfet    = '0.005u + (wtol_n*xwint_n) - (wint_zvtnfet - wint_zn)'
 *
 .param
 * switch to turn on or off the sti stress effects
 +  isti = '((gstis==1)&&(lstis==1))||(gstis==2)'
 *
 * switch to turn on or off the nwell proximity effects
 +  inw  = '((gwells==1)&&(lnws==1))||(gwells==2)'
 *
 * mis-match calculations: include multiplicity (par)
 .param
 +  kvt  =  5.5e-9
 +  kvtl =  2.0e-7
 +  kvtw =  1.0e-6
 +  kmb  =  8.0e-6
 +  kmbl =  0
 +  kmbw = -1.0e-6
 +  sigvth  = 'kvt/sqrt((w-kvtw)*par*(l-kvtl))'
 +  sigbeta = 'kmb/sqrt((w-kmbw)*par*(l-kmbl))'
 *
 +  dvth0 = agauss(0,1,3)               $ local mis-match distributions
 +  dbeta = agauss(0,1,3)
 *                                      $ select local vs global vs corner
 +  d_vth0 = 'dvth0*(mc_global != 2) + xznvth0*(mc_global == 2) - cnr_zn'
 +  d_beta = 'dbeta*(mc_global != 2) + dznu0*(mc_global == 2) - cnr_zn'
 *
 +  mmvth0 = 'sigvth * d_vth0 * fet_dop_mm'    $ vth0 mis-match
 +  mmbeta = 'sigbeta * d_beta * fet_dop_mm'   $ beta mis-match
 *
 +  pvt_var = 'mmvth0'                  $ local vth0 variation
 *
 .param
 * flicker noise calculations: statistics are function of w and l and par
 +  noideva = '10u * 0.42u * 10'        $ device area for extracted variation
 +  noistd  = 0.7041                    $ worst case variation value
 *
 +  noi_scale = 'noistd-min(log(sqrt(w*l*par/noideva)),0)'   $ area scaling
 +  noiamult  = 'exp(dnoi_zn*noi_scale)'                 $ gate bias scaliing
 +  noibmult  = 'exp(dnoi_zn*noi_scale/1.3)'
 +  noicmult  = 'exp(dnoi_zn*noi_scale/2.4)'
 *
 .param
 * separate main and parallel device s/d area, perimeter terms
 +  zad=ad zas=as zpd=pd zps=ps
 *
 +  dzvtw = 0.3u                              $ rx width under pc without zvt
 *
 +  pgate    = '(2*dzvtw+ndelrx)*nf'          $ gate bounded perimeter
 +  pzvtgate = '(w-2*dzvtw*nf)'
 *
 +  pstis = 'max(0,(zps-(pzvtgate+pgate)))'   $ sti bounded perimeter
 +  pstid = 'max(0,(zpd-(pzvtgate+pgate)))'
 *
 +  nfo = '(int((nf+1)/2) - int(nf/2))'       $ switch for odd,even fingers
 *
 +  nade = 'zad-(0.22u*pzvtgate)'             $ drain area calculations
 +  nado = 'zad-((0.66u*pzvtgate)+(0.22u*pzvtgate*(nf-1)))/nf'
 +  nad  = 'max(0,(nade*(1-nfo)+(nado*nfo)))'
 *
 *                                            $ source area calculations
 +  nase = 'zas-((2*0.66u*pzvtgate)+((0.22u*pzvtgate)*max(0,(nf-3))))/nf'
 +  naso = 'zas-((0.66u*pzvtgate)+(0.22u*pzvtgate*(nf-1)))/nf'
 +  nas  = 'max(0,(nase*(1-nfo)+(naso*nfo)))'
 *
 m0 d g s b  znch  w=pzvtgate l=l nf=nf dtemp=dtemp
 +                 as='zas-nas' ad='zad-nad' ps=pzvtgate pd=pzvtgate
 +                 nrs=nrs nrd=nrd
 +                 sa=0 sb=0 sd=0 rgatemod=1 rbodymod=0
 *
 m1 d g s b  nzch  w='0.6u*nf' l=l nf=nf dtemp=dtemp
 +                 as=nas ad=nad ps='pstis+pgate' pd='pstid+pgate'
 +                 nrs=0 nrd=0
 +                 sa=0 sb=0 sd=0 rgatemod=1 rbodymod=0
 *
 ***************************************************************************
 * zvt nfet bsim4v4 model
 ***************************************************************************
 .model znch nmos  (                                level   = 54
 +version = 4.4            binunit = 1              paramchk= 1
 +mobmod  = 0              rdsmod  = 1              permod  = 1
 +epsrox  = 3.9            toxe    = toxe_zn        toxp    = toxp_zn
 +toxm    = 3.2e-9         xj      = 2e-7           ndep    = 5.33e17
 +ngate   = 2.5e20         nsd     = 1e20
 +rsh     = rsh_zn         rshg    = rsh_zn         pvth0   = pvth0_zn
 +vth0 = 'vth0_zn+pvt_var' vfb     = -1             phin    = 0
 +k1      = 0.075          k2      = -4.34383e-3    k3      = 37
 +k3b     = -6             w0      = 0              lpe0    = 2.021e-6
 +lpeb    = -2e-7          vbm     = -3             dvt0    = 0
 +dvt1    = 0.0971998      dvt2    = -7.54949e-4    dvtp0   = 2.49652e-8
 +dvtp1   = 1.99612e-8
 +dvt0w   = 0              dvt1w   = 6e5            dvt2w   = 0.1
 +u0    = 'u0_zn+mmbeta'   ua      = 2.51459e-10    ub      = 1.7e-18
 +uc      = -3.79257e-12   vsat    = 2.627e5        a0      = 2
 +ags     = 1.4322675      b0      = 4.0676e-7      b1      = 2.96185e-7
 +keta    = 0.01           a1      = -0.0625351     a2      = 0.302895
 +wint    = 0              lint    = 0              dwg     = -1e-8
 +dwb     = 1e-8           voff    = -0.105         voffl   = -7.93269e-9
 +minv    = -0.85          nfactor = 0.132624       eta0    = 6.687602e-5
 +etab    = 0.077992       dsub    = 2              cit     = 1.466e-4
 +cdsc    = 1.36784e-3     cdscb   = 0              cdscd   = 1.473e-4
 +pclm    = 5.6692258      pdiblc1 = 0.0215103      pdiblc2 = 7.283512e-4
 +pdiblcb = 0.32           drout   = 0.0411519      pscbe1  = 1.403768e8
 +pscbe2  = 1.607163e-7    pvag    = 50             delta   = 0.01191
 +fprout  = 80             pdits   = 0              pditsl  = 0
 +pditsd  = 0              lc      = 0              xn      = 3
 +rdw     = rdsw_zn        rdwmin  = 0              rsw     = rdsw_zn
 +rswmin  = 0              prwg    = 0.5            prwb    = -1e-3
 +alpha0  = 6.5e-9         alpha1  = 0.046          beta0   = 12
 +wr      = 1              lk2     = -0.002         lminv   = 0.05
 +lu0     = 15             lub     = 2.7e-19        wu0     = 30
 +wub     = -4e-19         wvoff   = -0.03
 ***************************************************************************
 * jds/vt temperature parameters
 ***************************************************************************
 +tnom    = 25             ute     = -2.25          lute    = 0.05
 +kt1     = -0.18792       kt1l    = -6.0e-9        kt2     = -3.53844e-3
 +ua1     = -4.41315e-11   ub1     = -2.51237e-18   uc1     = -1.13886e-10
 +at      = 1.0e5          prt     = 0
 +tempmod = 0
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 +igcmod  = 1              igbmod  = 1              agidl   = 1e-7
 +bgidl   = 3e9            cgidl   = 4              egidl   = 0.3
 +aigbacc = 0.0111         bigbacc = 1.486e-3       cigbacc = 0.0758
 +nigbacc = 2.285          aigbinv = 0.0089         bigbinv = 1.28e-3
 +cigbinv = 0.063          eigbinv = 1.46           nigbinv = 2.997
 +aigc    = 0.0105         bigc    = 1.0579e-3      cigc    = 3.27567e-3
 +aigsd   = 9.75e-3        bigsd   = 1.28e-3        cigsd   = 0.1705029
 +dlcig   = 1.555e-8       nigc    = 1              poxedge = 1
 +pigcd   = 2.7            ntox    = 1              toxref  = toxe_zn
 +lbigbacc= -4.69e-5       lcigbacc= -3.6e-3        laigbinv= -2.5e-5
 +lbigbinv= -1.4e-6        lcigbinv= -7e-4          leigbinv= -0.0196
 +laigc   = -8.4e-5        lbigc   = -6.54e-5       lcigc   = -2.8e-4
 +lnigc   = 0              laigsd  = 2e-4           lbigsd  = -2.1e-5
 +lcigsd  = -4.62e-3       lpoxedge= 0              lpigcd  = -5e-3
 +laigbacc= 2.5e-4
 ***************************************************************************
 * source/drain to body junction diode parameters
 ***************************************************************************
 +diomod  = 1             ijthdfwd= 0.1            ijthsfwd= 0.1
 +jss     = js_zn         jsd     = js_zn          jsws    = jsw_zn
 +jswd    = jsw_zn        jswgs   = jsw_zn         jswgd   = jsw_zn
 +cjs     = cj_zn         cjd     = cj_zn          cjsws   = cjsw_zn
 +cjswd   = cjsw_zn       cjswgs  = cjsg_zn        cjswgd  = cjsg_zn
 +mjs     = mj_zn         mjd     = mj_zn          mjsws   = mjsw_zn
 +mjswd   = mjsw_zn       mjswgs  = mjsg_zn        mjswgd  = mjsg_zn
 +pbs     = pb_zn         pbd     = pb_zn          pbsws   = pbsw_zn
 +pbswd   = pbsw_zn       pbswgs  = pbsg_zn        pbswgd  = pbsg_zn
 +njs     = n_zn          njd     = n_zn           xjbvd   = 1
 +bvd     = bd_n          xjbvs   = 1              bvs     = bd_n
 ***************************************************************************
 * junction diode temperature parameters
 ***************************************************************************
 +tcj     = cta_zn        tcjsw   = ctp_zn         tcjswg  = ctp_zn
 +tpb     = pta_zn        tpbsw   = ptp_zn         tpbswg  = ptp_zn
 +xtis    = 3             xtid    = 3
 ***************************************************************************
 * capacitance-voltage (cv) parameters
 ***************************************************************************
 +capmod  = 2             xpart   = 0              dlc     = 30n
 +dwc     = 0             cgdo    = cgdo_zn        cgso    = cgso_zn
 +cgsl    = cgsl_zn       cgdl    = cgdl_zn        ckappas = 0.8848
 +ckappad = 0.8848        cf      = 0              cgbo    = 1.706e-11
 +acde    = 0.4           moin    = 5              noff    = 3.5
 +voffcv  = -0.03651
 ***************************************************************************
 * layout dependence parameters
 ***************************************************************************
 +geomod  = '(1 - int((nf+1)/2) + int(nf/2))'       rgeomod = 1
 +xgl     = lwbpc          xgw     = 0.35e-6        xl = '-2*lint_zvtnfet'
 +xw = '-2*wint_zvtnfet'   dmcg    = 0.22e-6        dmci    = 0.74e-6
 +dwj     = 0              ngcon   = ngcon          dmdg    = 0.22e-6
 ***************************************************************************
 * flicker noise parameters
 ***************************************************************************
 +fnoimod = 1           noia = '1e41*noiamult'      noib = '3e10*noibmult'
 +noic = '0.5e6*noicmult'  em      = 4.10e7         af      = 1
 +ef      = 0.87           kf      = 0
 ***************************************************************************
 * channel thermal noise parameters
 ***************************************************************************
 +tnoimod = 0              ntnoi   = 3.7              )
 *
 ***************************************************************************
 * parallel nfet bsim4v4 model
 ***************************************************************************
 .model nzch nmos  (                                level   = 54
 +version = 4.4            binunit = 1              paramchk= 1
 +mobmod  = 0              rdsmod  = 1              permod  = 1
 +epsrox  = 3.9            toxe    = toxe_n         toxp    = toxp_n
 +toxm    = 3.12e-9        xj      = 1.5e-7         ndep    = 6e17
 +ngate   = 3e20           nsd     = 1e20           rsh     = rsh_zn
 +rshg    = rsh_zn         vth0    = 0.076          vfb     = -1
 +k1      = 0.35           lk1     = 3.3e-3         wk1     = -4e-3
 +k2      = 0.015          k3      = 335
 +k3b     = 20             w0      = 6.23e-6        lpe0    = 2.15e-7
 +lpeb    = -9.7e-9        dvt0    = 3              dvt1    = 0.98
 +dvt2    = -0.0485        dvtp0   = 3e-8           pvth0   = 2.9e-4
 +dvtp1   = 1.96e-8        pdvtp0  = 5e-10          dvt0w   = 0.08
 +dvt1w   = 9.93e5         dvt2w   = 0.5
 +u0      = 530.2          pu0     = 1              wu0     = -25
 +ua      = 5.8e-10        ub      = 2.84e-18       uc      = 6.79e-10
 +luc     = -3.3e-11       vsat    = 1.12e5         pvsat   = 500
 +a0      = 2              la0     = -0.1
 +ags     = 1.1            b0      = 3e-7           b1      = 7.23e-7
 +keta    = -0.13          a1      = 0              a2      = 0.8
 +wint    = 5e-9           lint    = 8.19e-9        dwg     = 1.6e-9
 +dwb     = 5e-9           voff    = -0.055         voffl   = -7.07e-9
 +minv    = -0.24          nfactor = 1.82           eta0    = 0.12
 +pnfactor= 5.5e-3
 +etab    = 0.075          dsub    = 0.54           cit     = 0
 +cdsc    = 2e-11          cdscb   = 2e-11          cdscd   = 0
 +pclm    = 0.3            pdiblc1 = 1e-3           pdiblc2 = 0.0225
 +pdiblcb = -1             drout   = 0.41           pscbe1  = 8e8
 +pscbe2  = 1e-5           pvag    = 1.65           delta   = 5e-3
 +fprout  = 0              pdits   = 0.33           pditsl  = 1.09e-5
 +pditsd  = 0.8
 +rdw     = 55             rdwmin  = 0              rsw     = 55
 +rswmin  = 0              prwg    = 0              prwb    = 0
 +alpha0  = 0              alpha1  = 0              beta0   = 0
 +wr      = 1
 ***************************************************************************
 * jds/vt temperature parameters
 ***************************************************************************
 +tnom    = 25             ute     = -2             kt1     = -0.32
 +kt1l    = 1.1e-8         kt2     = -0.1           lkt2    = 0.01
 +ua1     = 1e-9           ub1     = -1.8e-18       lub1    = -2.5e-19
 +wub1    = -5e-19         pub1    = 3.5e-20        uc1     = 2e-10
 +wuc1    = -1e-10         at      = 5e4            prt     = 0
 +tempmod = 0
 ***************************************************************************
 * gate and gidl current model parameters
 ***************************************************************************
 +igcmod  = 1              igbmod  = 1              agidl   = 0
 +bgidl   = 3.00995e9      cgidl   = 1.09817        egidl   = 0.2592
 +aigbacc = 0.01098        bigbacc = 1.486e-3       cigbacc = 0.0758
 +nigbacc = 1.085          aigbinv = 0.010334       bigbinv = 1.38e-3
 +cigbinv = 0.033          eigbinv = 1.46           nigbinv = 0.997
 +aigc    = 0.01104        bigc    = 1.0579e-3      cigc    = 3.27567e-3
 +aigsd   = 9.75e-3        bigsd   = 9.58e-4        cigsd   = 0.0705029
 +dlcig   = 4.36516e-9     nigc    = 0.419          poxedge = 1
 +pigcd   = 2.7            ntox    = 1.035          toxref  = 'toxe_n-0.07e-9'
 +lbigbacc= -4.69e-5       lcigbacc= -3.6e-3        laigbinv= -2.5e-5
 +lbigbinv= -1.4e-6        lcigbinv= -7e-4          leigbinv= -0.0196
 +laigc   = -4.2e-5        lbigc   = -1.54e-5       lcigc   = -2.8e-4
 +lnigc   = 0              laigsd  = 9e-5           lbigsd  = -2.1e-5
 +lcigsd  = -4.62e-3       lpoxedge= 0              lpigcd  = -5e-3
 +laigbacc= 1.4e-4
 ***************************************************************************
 * source/drain to body junction diode parameters
 ***************************************************************************
 +diomod  = 1             ijthdfwd= 0.1            ijthsfwd= 0.1
 +jss     = js_n          jsd     = js_n           jsws    = jsw_n
 +jswd    = jsw_n         jswgs   = jsw_n          jswgd   = jsw_n
 +cjs     = cj_n          cjd     = cj_n           cjsws   = cjsw_n
 +cjswd   = cjsw_n        cjswgs  = cjsg_n         cjswgd  = cjsg_n
 +mjs     = mj_n          mjd     = mj_n           mjsws   = mjsw_n
 +mjswd   = mjsw_n        mjswgs  = mjsg_n         mjswgd  = mjsg_n
 +pbs     = pb_n          pbd     = pb_n           pbsws   = pbsw_n
 +pbswd   = pbsw_n        pbswgs  = pbsg_n         pbswgd  = pbsg_n
 +njs     = n_n           njd     = n_n            xjbvd   = 1
 +bvd     = bd_n          xjbvs   = 1              bvs     = bd_n
 ***************************************************************************
 * junction diode temperature parameters
 ***************************************************************************
 +tcj     = cta_n         tcjsw   = ctp_n          tcjswg  = ctp_n
 +tpb     = pta_n         tpbsw   = ptp_n          tpbswg  = ptp_n
 +xtis    = 3             xtid    = 3
 ***************************************************************************
 * capacitance-voltage (cv) parameters
 ***************************************************************************
 +capmod  = 2             xpart   = 0              dlc     = 14n
 +dwc     = 0             cgdo    = cgdo_n         cgso    = cgso_n
 +cgsl    = cgsl_n        cgdl    = cgdl_n         ckappas = 9.3524
 +ckappad = 9.3524        cf      = 0              cgbo    = 1.706e-11
 +acde    = 0.65          moin    = 15             noff    = 1.3
 +voffcv  = -0.07
 ***************************************************************************
 * layout dependence parameters
 ***************************************************************************
 +geomod  = '(1 - int((nf+1)/2) + int(nf/2))'       rgeomod = 1
 +xgl     = lwbpc          xgw     = 0.35e-6        xl = '-2*lint_nfet'
 +xw = '-2*wint_nfet'      dmcg    = 0.22e-6        dmci    = 0.74e-6
 +dwj     = 0              ngcon   = ngcon          dmdg    = 0.22e-6
 ***************************************************************************
 * channel thermal noise parameters
 ***************************************************************************
 +tnoimod = 0              ntnoi   = 3.7            )
 *
 .ends zvtnfet
 .endl tt
 .include '/tools2/courses/ee6321/share/ibm_pdk/cmrf8sf/reldm/hspice/models/design.inc'
 * path, component, release: cmrf8sf/rel/hspice/models/design.inc, rf8sf_models, mod_cmrf8sf
 * cmvc revision: 1.1 10/01/27 12:12:39
 *
 * *****************************************************************************
 *
 *>  ibm cmrf8sf  hspice file for global switches, corner
 *                parameters and other user-defined setttings
 *
 * ibm confidential
 * (c) 2010 ibm corporation
 *
 * licensed materials - property of ibm
 * us government users restricted rights - use, duplication or disclosure
 * restricted by gsa adp schedule contract with ibm corporation.
 *
 * *****************************************************************************
 *
 * monte carlo, corner and mosfet mis-match controls:
 * -------------------------------------------------
 *
 * mc_global   determines what combination of global and matching parameters
 *             will vary randomly during a monte carlo run.
 *
 *       = 1   (default) -- provides the most complete representation of the
 *             statistical variations during chip manufacturing. the global
 *             process variations are determined by monte carlo distributions.
 *
 *             passive mis-match is determined by monte carlo distributions with
 *             a unique set of values for each instance of the model.
 *
 *             mosfet doping and geometric mis-match effects, if enabled, are
 *             determined by monte carlo distributions with a unique set of
 *             values for each instance of the model.
 *
 *       = 0   allows evaluation of the effect of cross-chip variation with the
 *             global process set at a particular corner. useful for evaluating
 *             the worst case cell on the worst case chip for designs containing
 *             an sram, for example.
 *
 *             global process variation skewed by corner parameters (cor_*).
 *
 *             passive mis-match is determined by monte carlo distributions with
 *             a unique set of values for each instance of the model.
 *
 *             mosfet doping and geometric mis-match effects, if enabled, are
 *             determined by monte carlo distributions with a unique set of
 *             values for each instance of the model.
 *
 *       = 2   provides another approach to finding the worst cell on the worst
 *             chip. all devices of a given type have the same global and
 *             mis-match parameters so that the mis-match effects are not
 *             simulated. but, a 3-sigma chip mean condition combined with a
 *             3-sigma cross chip variation occurs with 3-sigma probability
 *             rather than 6-sigma probability.
 *
 *             global process variation determined by monte carlo distributions.
 *
 *             passive mis-match is determined by monte carlo distributions with
 *             a unique set of values for each instance of the model.
 *
 *             mosfet doping and geometric mis-match effects, if enabled, are
 *             determined by the monte carlo distributions for the corresponding
 *             global effects. specifically, aclv and acwv are determined by the
 *             chip mean delta-l and delta-w for that mosfet type and the dopant
 *             density matching is determined by chip mean vt variation for that
 *             mosfet type.
 *
 * fet_dop_mis enables variation of mosfet vt and conductance due to random
 *             variation in the number of dopant atoms under the channel between
 *             instances of the same device type.
 *
 *       = 1   (default) -- dopant mis-match is enabled.
 *
 *       = 0   dopant mis-match is disabled.
 *
 * fet_geo_mis enables variation of mosfet length(aclv) and width(acwv) between
 *             instances of the same device type. the design manual specifies
 *             maximum mosfet geometric mis-match values due to several layout
 *             conditions. for a given effect to be enabled, both fet_geo_mis
 *             and the particular switch for that effect must be enabled.
 *
 *             in addition, random variation is specified for identical
 *             instances and is enabled whenever fet_geo_mis is enabled.
 *
 *       = 1   (default) -- geometric mis-match is enabled.
 *
 *       = 0   geometric mis-match is disabled.
 *
 * pc_nest     controls aclv due to differences in printing nested vs. isolated
 *             poly lines. "nested" lines are surrounded by closely spaced poly
 *             lines and "isolated" lines are far from any other poly shapes.
 *
 *       = 1   (default) -- enabled.
 *
 *       = 0   disabled.
 *
 *       = 2   enabled with the difference between a nested and an isolated
 *             mosfet is specified by pc_nest_add. useful for model-to-hardware
 *             correlation when this value is known for a particular wafer and
 *             plnest is specified on the mosfet instances.
 *
 *             note:  pc_nest_add = ((leff_plnest=0 - leff_plnest=1)/2)
 *
 * pc_orient   controls aclv due to differences in printing vertical vs.
 *             horizontal poly lines.
 *
 *       = 1   (default) -- enabled.
 *
 *       = 0   disabled.
 *
 *       = 2   enabled with the difference between a vertical and a horizontal
 *             mosfet is specified by pc_orient_add. useful for model-to-hardware
 *             correlation when this value is known for a particular wafer and
 *             plorient is specified on the mosfet instances.
 *
 * pc_dist     controls aclv due to mosfet instances being widely separated on
 *             the chip.
 *
 *       = 1   (default) -- enabled.
 *
 *       = 0   disabled.
 *
 *       = 2   enabled with the difference between a near and a distant mosfet
 *             is specified by pc_dist_add. useful for model-to-hardware
 *             correlation when this value is known for a particular wafer and
 *             pld200 is specified on the mosfet instances.
 *
 *             note:  pc_dist_add = ((leff_pld200=0 - leff_pld200=1)/2)
 *
 * rx_dist     controls acwv due to mosfet instances being widely separated on
 *             the chip.
 *
 *       = 1   (default) -- enabled.
 *
 *       = 0   disabled.
 *
 *       = 2   enabled with the difference between a near and a distant mosfet
 *             is specified by rx_dist_add. useful for model-to-hardware
 *             correlation when this value is known for a particular wafer and
 *             pwd100 is specified on the mosfet instances.
 *
 *             note:  rx_dist_add = ((weff_pwd100=0 - weff_pwd100=1)/2)
 *
 * *****************************************************************************
 *
 * custom process corner parameters:
 * --------------------------------
 *
 * the following corner parameter flags affect the skew parameters for a group
 * of devices. if a skew parameter is shared between different groups, it is
 * varied only in one group (where it is expected to have a dominant effect) to
 * keep it physical.
 *
 * set the following cor_* flags between -3 and +3 to get the corresponding
 * sigma variations in the skew parameters of the devices affected.
 *
 * note: defining a custom corner also requires these switch settings:
 *  mc_global = 0
 *
 * corner parameters affect a group of devices in a dominant manner.
 * positive values of the corner parameter give following characteristics:
 *  cor_nmos: high current, high speed for nmos devices
 *  cor_pmos: high current, high speed for pmos devices
 *  cor_res : high resistance for resistors
 *  cor_cap : high capacitance for capacitors
 *  cor_ind : high quality factor for inductors & transmission lines
 *
 * the following corner parameters affect more than one group of devices in a
 * dominant manner. a positive value for these corner parameters gives these
 * characteristics:
 *  cor_rx   : large width for all mosfets (high current)
 *  cor_pc   : small gate length for all mosfets (high current)
 *  cor_tox  : small thickness - thin oxide mosfets, ncaps (high current, cap)
 *  cor_toxd : small thickness - thick oxide mosfets, ncaps (high current, cap)
 *  cor_noin : low flicker (1/f) noise for nmos devices
 *  cor_noip : low flicker (1/f) noise for pmos devices
 *
 * set these parameters to +3 (or -3) for 3-sigma variations in process
 * parameters to skew device characteristics as mentioned above.
 *
 * *****************************************************************************
 *
 * mosfet sti stress and nwell proximity:
 * -------------------------------------
 *
 * gstis     switch to enable the sti stress effect.
 *
 *     = 2   (default) -- stress effect enabled and calculated for all devices
 *           based on the value of netlist parameters (sa, sb, sd).
 *
 *     = 0   stress effect disabled independent of any instance parameters.
 *
 *     = 1   stress effect is included based on setting of local (lstis)
 *           parameter for each device instance; lstis = 1, enabled (default).
 *
 * gwells    switch to enable the nwell proximity effect.
 *
 *     = 2   (default) -- proximity effect enabled and calculated for all
 *           devices based on the value of netlist parameters (panw1-panw10).
 *
 *     = 0   proximity effect disabled independent of any instance parameters.
 *
 *     = 1   proximity effect is included based on setting of local (lnws)
 *           parameter for each device instance; lnws = 1, enabled (default).
 *
 * *****************************************************************************
 *
 * resistor self-heating:
 * ----------------------
 *
 * gsh       switch to enable resistor self-heating effect.
 *
 *     = 2   (default) -- self-heating enabled for resistors with this effect.
 *
 *     = 1   self-heating effect controlled by instance parameter 'sh' setting.
 *
 *     = 0   self-heating effect disabled independent of any instance parameter.
 *
 *
 * wafer thickness:
 * ---------------
 *
 * waferthk : wirebond parts have various backside grind thicknesses available.
 *            this parameter is provided for the user to over-ride the default
 *            setting of 737 microns for the p- wafer thickness and is used in
 *            the inductor models.
 *
 * ****************************************************************************
 *
 * esd model switches:
 * ------------------
 *
 * esd_event   switch to specify esd event switching
 *
 *     = 0   (default) -- esd high current features disabled
 *
 *     = 1     esd high current features enabled for human body model (hbm)
 *
 *     = 2     esd high current features enabled for machine model (mm)
 *
 *     = 3     esd high current features enabled for charge device model (cdm)
 * 
 * esd_exit    switch to stop simulation if esd failure occurs
 *
 *     = 1   (default) -- simulation ends if esd failure is encountered
 *
 *     = 0     continue with simulation even if esd failure occurs
 * 
 * esd_extr    switch to include wiring parasitics for pre-layout simulation
 *
 *     = 0   (default) -- do not include estimated wiring resistance/capacitance
 *
 *     = 1     include estimated wiring parasitic resistance/capacitance
 *
 * ****************************************************************************
 .param
 +  mc_global        = 1
 +     cor_nmos      = 0
 +     cor_pmos      = 0
 +     cor_res       = 0
 +     cor_cap       = 0
 +     cor_ind       = 0
 +     cor_rx        = 0
 +     cor_pc        = 0
 +     cor_tox       = 0
 +     cor_toxd      = 0
 +     cor_noin      = 0
 +     cor_noip      = 0
 +  fet_dop_mis      = 1
 +  fet_geo_mis      = 1
 +     pc_nest       = 1
 +     pc_orient     = 1
 +     pc_dist       = 1
 +     rx_dist       = 1
 +     pc_nest_add   = 0.00
 +     pc_orient_add = 0.00
 +     pc_dist_add   = 0.00
 +     rx_dist_add   = 0.00
 +  gstis            = 2
 +  gwells           = 2
 +  gsh              = 2
 +  waferthk         = 737.0
 +  esd_event        = 0
 +  esd_exit         = 1
 +  esd_extr         = 0
 .include '/user4/spring13/jy2525/lib/subckts.sp'
 *.global vdd vss vss1 
 *.scale meter 

 **** 
 *.subckt accshcinx2ts co0 co1 a b ci0n ci1n 
 .subckt accshcinx2ts co0 co1 a b ci0n ci1n vss vdd
 x0 co1 net124 net137 vdd lppfet w=1.3u l=0.12u m=1 
 x1 co1 net118 nmcin1n vdd lppfet w=1.3u l=0.12u m=1 
 x10 co0 net118 net125 vss lpnfet w=0.92u l=0.12u m=1 
 x11 co0 net124 nmcin0n vss lpnfet w=0.92u l=0.12u m=1 
 x12 net118 b net135 vss lpnfet w=0.9u l=0.12u m=1 
 x13 net118 nmb nma vss lpnfet w=0.84u l=0.12u m=1 
 x14 net124 b nma vss lpnfet w=0.86u l=0.12u m=1 
 x15 net124 nmb net135 vss lpnfet w=0.92u l=0.12u m=1 
 x16 vdd nmb net125 vdd lppfet w=1.3u l=0.12u m=1 
 x17 net125 nmb vss vss lpnfet w=0.92u l=0.12u m=1 
 x18 vdd ci1n nmcin1n vdd lppfet w=1.3u l=0.12u m=1 
 x19 nmcin1n ci1n vss vss lpnfet w=0.92u l=0.12u m=1
 x2 co0 net124 net125 vdd lppfet w=1.3u l=0.12u m=1 
 x20 vdd ci0n nmcin0n vdd lppfet w=1.3u l=0.12u m=1 
 x21 nmcin0n ci0n vss vss lpnfet w=0.92u l=0.12u m=1 
 x22 vdd b nmb vdd lppfet w=1.28u l=0.12u m=1 
 x23 nmb b vss vss lpnfet w=0.92u l=0.12u m=1 
 x24 vdd a nma vdd lppfet w=1.3u l=0.12u m=1 
 x25 nma a vss vss lpnfet w=0.9u l=0.12u m=1 
 x26 vdd nma net135 vdd lppfet w=1.24u l=0.12u m=1 
 x27 net135 nma vss vss lpnfet w=0.9u l=0.12u m=1 
 x28 vdd nma net137 vdd lppfet w=1.24u l=0.12u m=1 
 x29 net137 nma vss vss lpnfet w=0.9u l=0.12u m=1 
 x3 co0 net118 nmcin0n vdd lppfet w=1.3u l=0.12u m=1 
 x4 net118 nmb net135 vdd lppfet w=1.24u l=0.12u m=1 
 x5 net118 b nma vdd lppfet w=1.28u l=0.12u m=1 
 x6 net124 nmb nma vdd lppfet w=1.28u l=0.12u m=1 
 x7 net124 b net135 vdd lppfet w=1.28u l=0.12u m=1 
 x8 co1 net118 net137 vss lpnfet w=0.86u l=0.12u m=1 
 x9 co1 net124 nmcin1n vss lpnfet w=0.86u l=0.12u m=1 
 .ends accshcinx2ts 

 **** 
 *.subckt accshcinx4ts co0 co1 a b ci0n ci1n 
 .subckt accshcinx4ts co0 co1 a b ci0n ci1n vss vdd
 x0 co1 net126 net139 vdd lppfet w=1.2u l=0.12u m=1 
 x1 co1 net120 net129 vdd lppfet w=2.6u l=0.12u m=1 
 x10 co0 net120 net127 vss lpnfet w=0.92u l=0.12u m=1 
 x11 co0 net126 net131 vss lpnfet w=1.84u l=0.12u m=1 
 x12 net120 b net137 vss lpnfet w=0.9u l=0.12u m=1 
 x13 net120 net133 net140 vss lpnfet w=0.84u l=0.12u m=1 
 x14 net126 b net140 vss lpnfet w=0.86u l=0.12u m=1 
 x15 net126 net133 net137 vss lpnfet w=0.92u l=0.12u m=1 
 x16 vdd net133 net127 vdd lppfet w=1.3u l=0.12u m=1 
 x17 net127 net133 vss vss lpnfet w=0.92u l=0.12u m=1 
 x18 vdd ci1n net129 vdd lppfet w=2.6u l=0.12u m=1 
 x19 net129 ci1n vss vss lpnfet w=1.84u l=0.12u m=1 
 x2 co0 net126 net127 vdd lppfet w=1.2u l=0.12u m=1 
 x20 vdd ci0n net131 vdd lppfet w=2.6u l=0.12u m=1 
 x21 net131 ci0n vss vss lpnfet w=1.84u l=0.12u m=1 
 x22 vdd b net133 vdd lppfet w=1.28u l=0.12u m=1 
 x23 net133 b vss vss lpnfet w=0.92u l=0.12u m=1 
 x24 vdd a net140 vdd lppfet w=1.3u l=0.12u m=1 
 x25 net140 a vss vss lpnfet w=0.9u l=0.12u m=1 
 x26 vdd net140 net137 vdd lppfet w=1.24u l=0.12u m=1 
 x27 net137 net140 vss vss lpnfet w=0.9u l=0.12u m=1 
 x28 vdd net140 net139 vdd lppfet w=1.24u l=0.12u m=1 
 x29 net139 net140 vss vss lpnfet w=0.9u l=0.12u m=1 
 x3 co0 net120 net131 vdd lppfet w=2.34u l=0.12u m=1 
 x4 net120 net133 net137 vdd lppfet w=1.24u l=0.12u m=1 
 x5 net120 b net140 vdd lppfet w=1.28u l=0.12u m=1 
 x6 net126 net133 net140 vdd lppfet w=1.28u l=0.12u m=1 
 x7 net126 b net137 vdd lppfet w=1.28u l=0.12u m=1 
 x8 co1 net120 net139 vss lpnfet w=0.92u l=0.12u m=1 
 x9 co1 net126 net129 vss lpnfet w=1.72u l=0.12u m=1 
 .ends accshcinx4ts 

 **** 
 *.subckt accshconx2ts co0n co1n a b ci0 ci1 
 .subckt accshconx2ts co0n co1n a b ci0 ci1 vss vdd
 x0 co1n net99 net97 vdd lppfet w=1.3u l=0.12u m=1 
 x1 co1n net96 nmcin1 vdd lppfet w=1.28u l=0.12u m=1 
 x10 net96 b net109 vss lpnfet w=0.86u l=0.12u m=1 
 x11 net96 nmb nma vss lpnfet w=0.92u l=0.12u m=1 
 x12 vdd b net97 vdd lppfet w=1.3u l=0.12u m=1 
 x13 net97 b vss vss lpnfet w=0.88u l=0.12u m=1 
 x14 vdd net96 net99 vdd lppfet w=1.28u l=0.12u m=1 
 x15 net99 net96 vss vss lpnfet w=0.9u l=0.12u m=1 
 x16 vdd ci1 nmcin1 vdd lppfet w=1.3u l=0.12u m=1 
 x17 nmcin1 ci1 vss vss lpnfet w=0.86u l=0.12u m=1 
 x18 vdd ci0 nmcin0 vdd lppfet w=1.3u l=0.12u m=1 
 x19 nmcin0 ci0 vss vss lpnfet w=0.86u l=0.12u m=1 
 x2 co0n net99 net111 vdd lppfet w=1.28u l=0.12u m=1 
 x20 vdd b nmb vdd lppfet w=1.3u l=0.12u m=1 
 x21 nmb b vss vss lpnfet w=0.88u l=0.12u m=1 
 x22 vdd a nma vdd lppfet w=1.3u l=0.12u m=1 
 x23 nma a vss vss lpnfet w=0.86u l=0.12u m=1 
 x24 vdd nma net109 vdd lppfet w=1.3u l=0.12u m=1 
 x25 net109 nma vss vss lpnfet w=0.86u l=0.12u m=1 
 x26 vdd a net111 vdd lppfet w=1.3u l=0.12u m=1 
 x27 net111 a vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 co0n net96 nmcin0 vdd lppfet w=1.2u l=0.12u m=1 
 x4 net96 nmb net109 vdd lppfet w=1.3u l=0.12u m=1 
 x5 net96 b nma vdd lppfet w=1.3u l=0.12u m=1 
 x6 co1n net96 net97 vss lpnfet w=0.92u l=0.12u m=1 
 x7 co1n net99 nmcin1 vss lpnfet w=0.88u l=0.12u m=1 
 x8 co0n net96 net111 vss lpnfet w=0.88u l=0.12u m=1 
 x9 co0n net99 nmcin0 vss lpnfet w=0.86u l=0.12u m=1 
 .ends accshconx2ts 

 **** 
 *.subckt accshconx4ts co0n co1n a b ci0 ci1 
 .subckt accshconx4ts co0n co1n a b ci0 ci1 vss vdd
 x0 co1n net99 net97 vdd lppfet w=1.3u l=0.12u m=1 
 x1 co1n net96 nmcin1 vdd lppfet w=2.5u l=0.12u m=1 
 x10 net96 b net109 vss lpnfet w=0.86u l=0.12u m=1 
 x11 net96 nmb nma vss lpnfet w=0.92u l=0.12u m=1 
 x12 vdd b net97 vdd lppfet w=1.3u l=0.12u m=1 
 x13 net97 b vss vss lpnfet w=0.88u l=0.12u m=1 
 x14 vdd net96 net99 vdd lppfet w=1.24u l=0.12u m=1 
 x15 net99 net96 vss vss lpnfet w=0.9u l=0.12u m=1 
 x16 vdd ci1 nmcin1 vdd lppfet w=2.6u l=0.12u m=1 
 x17 nmcin1 ci1 vss vss lpnfet w=1.84u l=0.12u m=1 
 x18 vdd ci0 nmcin0 vdd lppfet w=2.6u l=0.12u m=1 
 x19 nmcin0 ci0 vss vss lpnfet w=1.84u l=0.12u m=1 
 x2 co0n net99 net111 vdd lppfet w=1.22u l=0.12u m=1 
 x20 vdd b nmb vdd lppfet w=1.3u l=0.12u m=1 
 x21 nmb b vss vss lpnfet w=0.88u l=0.12u m=1 
 x22 vdd a nma vdd lppfet w=1.3u l=0.12u m=1 
 x23 nma a vss vss lpnfet w=0.86u l=0.12u m=1 
 x24 vdd nma net109 vdd lppfet w=1.3u l=0.12u m=1 
 x25 net109 nma vss vss lpnfet w=0.86u l=0.12u m=1 
 x26 vdd a net111 vdd lppfet w=1.3u l=0.12u m=1 
 x27 net111 a vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 co0n net96 nmcin0 vdd lppfet w=2.5u l=0.12u m=1 
 x4 net96 nmb net109 vdd lppfet w=1.3u l=0.12u m=1 
 x5 net96 b nma vdd lppfet w=1.3u l=0.12u m=1 
 x6 co1n net96 net97 vss lpnfet w=0.92u l=0.12u m=1 
 x7 co1n net99 nmcin1 vss lpnfet w=1.82u l=0.12u m=1 
 x8 co0n net96 net111 vss lpnfet w=0.88u l=0.12u m=1 
 x9 co0n net99 nmcin0 vss lpnfet w=1.82u l=0.12u m=1 
 .ends accshconx4ts 

 **** 
 *.subckt accsihconx2ts co0n co1n a b 
 .subckt accsihconx2ts co0n co1n a b vss vdd
 x0 co1n b vss vss lpnfet w=0.72u l=0.12u m=1 
 x1 co1n a vss vss lpnfet w=0.72u l=0.12u m=1 
 x2 vdd b hnet8 vdd lppfet w=1.3u l=0.12u m=1 
 x3 hnet8 a co1n vdd lppfet w=1.3u l=0.12u m=1 
 x4 hnet16 a vss vss lpnfet w=0.92u l=0.12u m=1 
 x5 co0n b hnet16 vss lpnfet w=0.92u l=0.12u m=1 
 x6 vdd a co0n vdd lppfet w=0.96u l=0.12u m=1 
 x7 vdd b co0n vdd lppfet w=0.96u l=0.12u m=1 
 .ends accsihconx2ts 

 **** 
 *.subckt accsihconx4ts co0n co1n a b 
 .subckt accsihconx4ts co0n co1n a b vss vdd
 x0 co1n b vss vss lpnfet w=1.32u l=0.12u m=1 
 x1 co1n a vss vss lpnfet w=1.32u l=0.12u m=1 
 x10 vdd a co0n vdd lppfet w=1.88u l=0.12u m=1 
 x11 vdd b co0n vdd lppfet w=1.88u l=0.12u m=1 
 x2 vdd b hnet9 vdd lppfet w=1.3u l=0.12u m=1 
 x3 hnet9 a co1n vdd lppfet w=1.3u l=0.12u m=1 
 x4 vdd b hnet7 vdd lppfet w=1.3u l=0.12u m=1 
 x5 hnet7 a co1n vdd lppfet w=1.3u l=0.12u m=1 
 x6 hnet18 a vss vss lpnfet w=0.9u l=0.12u m=1 
 x7 co0n b hnet18 vss lpnfet w=0.9u l=0.12u m=1 
 x8 hnet14 a vss vss lpnfet w=0.9u l=0.12u m=1 
 x9 co0n b hnet14 vss lpnfet w=0.9u l=0.12u m=1 
 .ends accsihconx4ts 

 **** 
 *.subckt achcinx2ts co a b cin 
 .subckt achcinx2ts co a b cin vss vdd
 x0 vdd nmb net59 vdd lppfet w=1.3u l=0.12u m=1 
 x1 net59 nmb vss vss lpnfet w=0.92u l=0.12u m=1 
 x10 co net104 net59 vdd lppfet w=1.3u l=0.12u m=1 
 x11 co net98 nmcinn vdd lppfet w=1.22u l=0.12u m=1 
 x12 net98 nmb net67 vdd lppfet w=1.02u l=0.12u m=1 
 x13 net98 b nma vdd lppfet w=1.3u l=0.12u m=1 
 x14 net104 nmb nma vdd lppfet w=1.16u l=0.12u m=1 
 x15 net104 b net67 vdd lppfet w=1.02u l=0.12u m=1 
 x16 co net98 net59 vss lpnfet w=0.92u l=0.12u m=1 
 x17 co net104 nmcinn vss lpnfet w=0.92u l=0.12u m=1 
 x18 net98 b net67 vss lpnfet w=0.74u l=0.12u m=1 
 x19 net98 nmb nma vss lpnfet w=0.84u l=0.12u m=1 
 x2 vdd cin nmcinn vdd lppfet w=1.22u l=0.12u m=1 
 x20 net104 b nma vss lpnfet w=0.88u l=0.12u m=1 
 x21 net104 nmb net67 vss lpnfet w=0.76u l=0.12u m=1 
 x3 nmcinn cin vss vss lpnfet w=0.92u l=0.12u m=1 
 x4 vdd b nmb vdd lppfet w=1.3u l=0.12u m=1 
 x5 nmb b vss vss lpnfet w=0.92u l=0.12u m=1 
 x6 vdd a nma vdd lppfet w=1.3u l=0.12u m=1 
 x7 nma a vss vss lpnfet w=0.92u l=0.12u m=1 
 x8 vdd nma net67 vdd lppfet w=1.02u l=0.12u m=1 
 x9 net67 nma vss vss lpnfet w=0.74u l=0.12u m=1 
 .ends achcinx2ts 

 **** 
 *.subckt achcinx4ts co a b cin 
 .subckt achcinx4ts co a b cin vss vdd
 x0 vdd net64 net60 vdd lppfet w=1.3u l=0.12u m=1 
 x1 net60 net64 vss vss lpnfet w=0.92u l=0.12u m=1 
 x10 co net105 net60 vdd lppfet w=1.3u l=0.12u m=1 
 x11 co net99 net62 vdd lppfet w=2.36u l=0.12u m=1 
 x12 net99 net64 net68 vdd lppfet w=1.24u l=0.12u m=1 
 x13 net99 b net66 vdd lppfet w=1.3u l=0.12u m=1 
 x14 net105 net64 net66 vdd lppfet w=1.28u l=0.12u m=1 
 x15 net105 b net68 vdd lppfet w=1.28u l=0.12u m=1 
 x16 co net99 net60 vss lpnfet w=0.92u l=0.12u m=1 
 x17 co net105 net62 vss lpnfet w=1.84u l=0.12u m=1 
 x18 net99 b net68 vss lpnfet w=0.92u l=0.12u m=1 
 x19 net99 net64 net66 vss lpnfet w=0.88u l=0.12u m=1 
 x2 vdd cin net62 vdd lppfet w=2.36u l=0.12u m=1 
 x20 net105 b net66 vss lpnfet w=0.86u l=0.12u m=1 
 x21 net105 net64 net68 vss lpnfet w=0.92u l=0.12u m=1 
 x3 net62 cin vss vss lpnfet w=1.84u l=0.12u m=1 
 x4 vdd b net64 vdd lppfet w=1.3u l=0.12u m=1 
 x5 net64 b vss vss lpnfet w=0.92u l=0.12u m=1 
 x6 vdd a net66 vdd lppfet w=1.3u l=0.12u m=1 
 x7 net66 a vss vss lpnfet w=0.92u l=0.12u m=1 
 x8 vdd net66 net68 vdd lppfet w=1.24u l=0.12u m=1 
 x9 net68 net66 vss vss lpnfet w=0.92u l=0.12u m=1 
 .ends achcinx4ts 

 **** 
 *.subckt achconx2ts con a b ci 
 .subckt achconx2ts con a b ci vss vdd
 x0 vdd b nmb vdd lppfet w=1.3u l=0.12u m=1 
 x1 nmb b vss vss lpnfet w=0.92u l=0.12u m=1 
 x10 con net104 net63 vdd lppfet w=1.3u l=0.12u m=1 
 x11 con net98 nmcin vdd lppfet w=1.22u l=0.12u m=1 
 x12 net98 nmb net67 vdd lppfet w=1.02u l=0.12u m=1 
 x13 net98 b nma vdd lppfet w=1.3u l=0.12u m=1 
 x14 net104 nmb nma vdd lppfet w=1.16u l=0.12u m=1 
 x15 net104 b net67 vdd lppfet w=1.02u l=0.12u m=1 
 x16 con net98 net63 vss lpnfet w=0.92u l=0.12u m=1 
 x17 con net104 nmcin vss lpnfet w=0.92u l=0.12u m=1 
 x18 net98 b net67 vss lpnfet w=0.74u l=0.12u m=1 
 x19 net98 nmb nma vss lpnfet w=0.84u l=0.12u m=1 
 x2 vdd ci nmcin vdd lppfet w=1.22u l=0.12u m=1 
 x20 net104 b nma vss lpnfet w=0.88u l=0.12u m=1 
 x21 net104 nmb net67 vss lpnfet w=0.76u l=0.12u m=1 
 x3 nmcin ci vss vss lpnfet w=0.92u l=0.12u m=1 
 x4 vdd b net63 vdd lppfet w=1.3u l=0.12u m=1 
 x5 net63 b vss vss lpnfet w=0.92u l=0.12u m=1 
 x6 vdd a nma vdd lppfet w=1.3u l=0.12u m=1 
 x7 nma a vss vss lpnfet w=0.92u l=0.12u m=1 
 x8 vdd nma net67 vdd lppfet w=1.02u l=0.12u m=1 
 x9 net67 nma vss vss lpnfet w=0.74u l=0.12u m=1 
 .ends achconx2ts 

 **** 
 *.subckt achconx4ts con a b ci 
 .subckt achconx4ts con a b ci vss vdd
 x0 vdd b net60 vdd lppfet w=1.3u l=0.12u m=1 
 x1 net60 b vss vss lpnfet w=0.92u l=0.12u m=1 
 x10 con net105 net64 vdd lppfet w=1.3u l=0.12u m=1 
 x11 con net99 net62 vdd lppfet w=2.36u l=0.12u m=1 
 x12 net99 net60 net68 vdd lppfet w=1.24u l=0.12u m=1 
 x13 net99 b net66 vdd lppfet w=1.3u l=0.12u m=1 
 x14 net105 net60 net66 vdd lppfet w=1.28u l=0.12u m=1 
 x15 net105 b net68 vdd lppfet w=1.28u l=0.12u m=1 
 x16 con net99 net64 vss lpnfet w=0.92u l=0.12u m=1 
 x17 con net105 net62 vss lpnfet w=1.84u l=0.12u m=1 
 x18 net99 b net68 vss lpnfet w=0.92u l=0.12u m=1 
 x19 net99 net60 net66 vss lpnfet w=0.88u l=0.12u m=1 
 x2 vdd ci net62 vdd lppfet w=2.36u l=0.12u m=1 
 x20 net105 b net66 vss lpnfet w=0.86u l=0.12u m=1 
 x21 net105 net60 net68 vss lpnfet w=0.92u l=0.12u m=1 
 x3 net62 ci vss vss lpnfet w=1.84u l=0.12u m=1 
 x4 vdd b net64 vdd lppfet w=1.3u l=0.12u m=1 
 x5 net64 b vss vss lpnfet w=0.92u l=0.12u m=1 
 x6 vdd a net66 vdd lppfet w=1.3u l=0.12u m=1 
 x7 net66 a vss vss lpnfet w=0.92u l=0.12u m=1 
 x8 vdd net66 net68 vdd lppfet w=1.24u l=0.12u m=1 
 x9 net68 net66 vss vss lpnfet w=0.92u l=0.12u m=1 
 .ends achconx4ts 

 **** 
 *.subckt addfhx1ts co s a b ci 
 .subckt addfhx1ts co s a b ci vss vdd
 x0 net103 net121 nmb vdd lppfet w=0.5u l=0.12u m=1 
 x1 net103 net115 nmcin vdd lppfet w=0.5u l=0.12u m=1 
 x10 net109 net115 nmcin vss lpnfet w=0.36u l=0.12u m=1 
 x11 net109 net121 net122 vss lpnfet w=0.36u l=0.12u m=1 
 x12 net115 b net134 vss lpnfet w=0.52u l=0.12u m=1 
 x13 net115 nmb nma vss lpnfet w=0.52u l=0.12u m=1 
 x14 net121 b nma vss lpnfet w=0.52u l=0.12u m=1 
 x15 net121 nmb net134 vss lpnfet w=0.52u l=0.12u m=1 
 x16 vdd nmcin net122 vdd lppfet w=0.5u l=0.12u m=1 
 x17 net122 nmcin vss vss lpnfet w=0.36u l=0.12u m=1 
 x18 vdd net103 co vdd lppfet w=0.64u l=0.12u m=1 
 x19 co net103 vss vss lpnfet w=0.46u l=0.12u m=1 
 x2 net109 net121 nmcin vdd lppfet w=0.5u l=0.12u m=1 
 x20 vdd net109 s vdd lppfet w=0.64u l=0.12u m=1 
 x21 s net109 vss vss lpnfet w=0.46u l=0.12u m=1 
 x22 vdd ci nmcin vdd lppfet w=0.72u l=0.12u m=1 
 x23 nmcin ci vss vss lpnfet w=0.52u l=0.12u m=1 
 x24 vdd b nmb vdd lppfet w=1.14u l=0.12u m=1 
 x25 nmb b vss vss lpnfet w=0.82u l=0.12u m=1 
 x26 vdd a net132 vdd lppfet w=0.32u l=0.12u m=1 
 x27 net132 a vss vss lpnfet w=0.24u l=0.12u m=1 
 x28 vdd net132 net134 vdd lppfet w=0.76u l=0.12u m=1 
 x29 net134 net132 vss vss lpnfet w=0.52u l=0.12u m=1 
 x3 net109 net115 net122 vdd lppfet w=0.5u l=0.12u m=1 
 x30 vdd a nma vdd lppfet w=0.8u l=0.12u m=1 
 x31 nma a vss vss lpnfet w=0.58u l=0.12u m=1 
 x4 net115 nmb net134 vdd lppfet w=0.72u l=0.12u m=1 
 x5 net115 b nma vdd lppfet w=0.72u l=0.12u m=1 
 x6 net121 nmb nma vdd lppfet w=0.72u l=0.12u m=1 
 x7 net121 b net134 vdd lppfet w=0.72u l=0.12u m=1 
 x8 net103 net115 nmb vss lpnfet w=0.36u l=0.12u m=1 
 x9 net103 net121 nmcin vss lpnfet w=0.36u l=0.12u m=1 
 .ends addfhx1ts 

 **** 
 *.subckt addfhx2ts co s a b ci 
 .subckt addfhx2ts co s a b ci vss vdd
 x0 net104 net122 nmb vdd lppfet w=0.96u l=0.12u m=1 
 x1 net104 net92 nmcin vdd lppfet w=0.94u l=0.12u m=1 
 x10 net110 net92 nmcin vss lpnfet w=0.6u l=0.12u m=1 
 x11 net110 net122 net123 vss lpnfet w=0.6u l=0.12u m=1 
 x12 net92 b net135 vss lpnfet w=1.1u l=0.12u m=1 
 x13 net92 nmb nma vss lpnfet w=1.1u l=0.12u m=1 
 x14 net122 b nma vss lpnfet w=1.1u l=0.12u m=1 
 x15 net122 nmb net135 vss lpnfet w=1.1u l=0.12u m=1 
 x16 vdd nmcin net123 vdd lppfet w=1.02u l=0.12u m=1 
 x17 net123 nmcin vss vss lpnfet w=0.66u l=0.12u m=1 
 x18 vdd net104 co vdd lppfet w=1.28u l=0.12u m=1 
 x19 co net104 vss vss lpnfet w=0.92u l=0.12u m=1 
 x2 net110 net122 nmcin vdd lppfet w=0.92u l=0.12u m=1 
 x20 vdd net110 s vdd lppfet w=1.28u l=0.12u m=1 
 x21 s net110 vss vss lpnfet w=0.92u l=0.12u m=1 
 x22 vdd ci nmcin vdd lppfet w=1.3u l=0.12u m=1 
 x23 nmcin ci vss vss lpnfet w=0.92u l=0.12u m=1 
 x24 vdd b nmb vdd lppfet w=2.12u l=0.12u m=1 
 x25 nmb b vss vss lpnfet w=1.52u l=0.12u m=1 
 x26 vdd a net133 vdd lppfet w=0.66u l=0.12u m=1 
 x27 net133 a vss vss lpnfet w=0.48u l=0.12u m=1 
 x28 vdd net133 net135 vdd lppfet w=1.64u l=0.12u m=1 
 x29 net135 net133 vss vss lpnfet w=1.06u l=0.12u m=1 
 x3 net110 net92 net123 vdd lppfet w=1.02u l=0.12u m=1 
 x30 vdd a nma vdd lppfet w=1.64u l=0.12u m=1 
 x31 nma a vss vss lpnfet w=1.18u l=0.12u m=1 
 x4 net92 nmb net135 vdd lppfet w=1.64u l=0.12u m=1 
 x5 net92 b nma vdd lppfet w=1.64u l=0.12u m=1 
 x6 net122 nmb nma vdd lppfet w=1.64u l=0.12u m=1 
 x7 net122 b net135 vdd lppfet w=1.64u l=0.12u m=1 
 x8 net104 net92 nmb vss lpnfet w=0.6u l=0.12u m=1 
 x9 net104 net122 nmcin vss lpnfet w=0.6u l=0.12u m=1 
 .ends addfhx2ts 

 **** 
 *.subckt addfhx4ts co s a b ci 
 .subckt addfhx4ts co s a b ci vss vdd
 x0 net103 net121 nmb vdd lppfet w=1.86u l=0.12u m=1 
 x1 net103 net115 nmcin vdd lppfet w=1.86u l=0.12u m=1 
 x10 net109 net115 nmcin vss lpnfet w=1.48u l=0.12u m=1 
 x11 net109 net121 net122 vss lpnfet w=1.4u l=0.12u m=1 
 x12 net115 b net134 vss lpnfet w=2.22u l=0.12u m=1 
 x13 net115 nmb nma vss lpnfet w=2.22u l=0.12u m=1 
 x14 net121 b nma vss lpnfet w=2.22u l=0.12u m=1 
 x15 net121 nmb net134 vss lpnfet w=2.22u l=0.12u m=1 
 x16 vdd nmcin net122 vdd lppfet w=1.96u l=0.12u m=1 
 x17 net122 nmcin vss vss lpnfet w=1.34u l=0.12u m=1 
 x18 vdd net103 co vdd lppfet w=2.56u l=0.12u m=1 
 x19 co net103 vss vss lpnfet w=1.82u l=0.12u m=1 
 x2 net109 net121 nmcin vdd lppfet w=1.86u l=0.12u m=1 
 x20 vdd net109 s vdd lppfet w=2.56u l=0.12u m=1 
 x21 s net109 vss vss lpnfet w=1.82u l=0.12u m=1 
 x22 vdd ci nmcin vdd lppfet w=2.58u l=0.12u m=1 
 x23 nmcin ci vss vss lpnfet w=1.84u l=0.12u m=1 
 x24 vdd b nmb vdd lppfet w=4.32u l=0.12u m=1 
 x25 nmb b vss vss lpnfet w=3.24u l=0.12u m=1 
 x26 vdd a net132 vdd lppfet w=1.3u l=0.12u m=1 
 x27 net132 a vss vss lpnfet w=0.8u l=0.12u m=1 
 x28 vdd net132 net134 vdd lppfet w=3.24u l=0.12u m=1 
 x29 net134 net132 vss vss lpnfet w=2.26u l=0.12u m=1 
 x3 net109 net115 net122 vdd lppfet w=1.86u l=0.12u m=1 
 x30 vdd a nma vdd lppfet w=3.24u l=0.12u m=1 
 x31 nma a vss vss lpnfet w=2.34u l=0.12u m=1 
 x4 net115 nmb net134 vdd lppfet w=3.18u l=0.12u m=1 
 x5 net115 b nma vdd lppfet w=3.18u l=0.12u m=1 
 x6 net121 nmb nma vdd lppfet w=3.18u l=0.12u m=1 
 x7 net121 b net134 vdd lppfet w=3.18u l=0.12u m=1 
 x8 net103 net115 nmb vss lpnfet w=1.48u l=0.12u m=1 
 x9 net103 net121 nmcin vss lpnfet w=1.52u l=0.12u m=1 
 .ends addfhx4ts 

 **** 
 *.subckt addfhxlts co s a b ci 
 .subckt addfhxlts co s a b ci vss vdd
 x0 net103 net121 nmb vdd lppfet w=0.56u l=0.12u m=1 
 x1 net103 net115 nmcin vdd lppfet w=0.56u l=0.12u m=1 
 x10 net109 net115 nmcin vss lpnfet w=0.32u l=0.12u m=1 
 x11 net109 net121 net122 vss lpnfet w=0.32u l=0.12u m=1 
 x12 net115 b net134 vss lpnfet w=0.32u l=0.12u m=1 
 x13 net115 nmb nma vss lpnfet w=0.32u l=0.12u m=1 
 x14 net121 b nma vss lpnfet w=0.32u l=0.12u m=1 
 x15 net121 nmb net134 vss lpnfet w=0.32u l=0.12u m=1 
 x16 vdd nmcin net122 vdd lppfet w=0.28u l=0.12u m=1 
 x17 net122 nmcin vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 vdd net103 co vdd lppfet w=0.42u l=0.12u m=1 
 x19 co net103 vss vss lpnfet w=0.24u l=0.12u m=1 
 x2 net109 net121 nmcin vdd lppfet w=0.56u l=0.12u m=1 
 x20 vdd net109 s vdd lppfet w=0.42u l=0.12u m=1 
 x21 s net109 vss vss lpnfet w=0.24u l=0.12u m=1 
 x22 vdd ci nmcin vdd lppfet w=0.28u l=0.12u m=1 
 x23 nmcin ci vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 vdd b nmb vdd lppfet w=0.28u l=0.12u m=1 
 x25 nmb b vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 vdd a net132 vdd lppfet w=0.28u l=0.12u m=1 
 x27 net132 a vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 vdd net132 net134 vdd lppfet w=0.28u l=0.12u m=1 
 x29 net134 net132 vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 net109 net115 net122 vdd lppfet w=0.56u l=0.12u m=1 
 x30 vdd a nma vdd lppfet w=0.28u l=0.12u m=1 
 x31 nma a vss vss lpnfet w=0.2u l=0.12u m=1 
 x4 net115 nmb net134 vdd lppfet w=0.56u l=0.12u m=1 
 x5 net115 b nma vdd lppfet w=0.56u l=0.12u m=1 
 x6 net121 nmb nma vdd lppfet w=0.56u l=0.12u m=1 
 x7 net121 b net134 vdd lppfet w=0.56u l=0.12u m=1 
 x8 net103 net115 nmb vss lpnfet w=0.32u l=0.12u m=1 
 x9 net103 net121 nmcin vss lpnfet w=0.32u l=0.12u m=1 
 .ends addfhxlts 

 **** 
 *.subckt addfx1ts co s a b ci 
 .subckt addfx1ts co s a b ci vss vdd
 x0 xo nmb nma vdd lppfet w=0.5u l=0.12u m=1 
 x1 xn net111 nma vdd lppfet w=0.5u l=0.12u m=1 
 x10 xo nma net111 vss lpnfet w=0.54u l=0.12u m=1 
 x11 xn nma nmb vss lpnfet w=0.54u l=0.12u m=1 
 x12 nmcin xo net80 vss lpnfet w=0.36u l=0.12u m=1 
 x13 net80 xn nmb vss lpnfet w=0.36u l=0.12u m=1 
 x14 net110 nmcin xn vss lpnfet w=0.36u l=0.12u m=1 
 x15 net110 ci xo vss lpnfet w=0.36u l=0.12u m=1 
 x16 vdd nmb net111 vdd lppfet w=0.9u l=0.12u m=1 
 x17 net111 nmb vss vss lpnfet w=0.64u l=0.12u m=1 
 x18 vdd net110 s vdd lppfet w=0.64u l=0.12u m=1 
 x19 s net110 vss vss lpnfet w=0.46u l=0.12u m=1 
 x2 xn nma net111 vdd lppfet w=0.76u l=0.12u m=1 
 x20 vdd net80 co vdd lppfet w=0.64u l=0.12u m=1 
 x21 co net80 vss vss lpnfet w=0.46u l=0.12u m=1 
 x22 vdd ci nmcin vdd lppfet w=0.5u l=0.12u m=1 
 x23 nmcin ci vss vss lpnfet w=0.36u l=0.12u m=1 
 x24 vdd b nmb vdd lppfet w=1.28u l=0.12u m=1 
 x25 nmb b vss vss lpnfet w=0.92u l=0.12u m=1 
 x26 vdd a nma vdd lppfet w=1.28u l=0.12u m=1 
 x27 nma a vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 xo nma nmb vdd lppfet w=0.76u l=0.12u m=1 
 x4 nmcin xn net80 vdd lppfet w=0.5u l=0.12u m=1 
 x5 net80 xo nmb vdd lppfet w=0.5u l=0.12u m=1 
 x6 net110 ci xn vdd lppfet w=0.5u l=0.12u m=1 
 x7 net110 nmcin xo vdd lppfet w=0.5u l=0.12u m=1 
 x8 xo net111 nma vss lpnfet w=0.36u l=0.12u m=1 
 x9 xn nmb nma vss lpnfet w=0.36u l=0.12u m=1 
 .ends addfx1ts 

 **** 
 *.subckt addfx2ts co s a b ci 
 .subckt addfx2ts co s a b ci vss vdd
 x0 xo nmb nma vdd lppfet w=0.5u l=0.12u m=1 
 x1 xn net111 nma vdd lppfet w=0.5u l=0.12u m=1 
 x10 xo nma net111 vss lpnfet w=0.54u l=0.12u m=1 
 x11 xn nma nmb vss lpnfet w=0.54u l=0.12u m=1 
 x12 nmcin xo net80 vss lpnfet w=0.36u l=0.12u m=1 
 x13 net80 xn nmb vss lpnfet w=0.36u l=0.12u m=1 
 x14 net110 nmcin xn vss lpnfet w=0.36u l=0.12u m=1 
 x15 net110 ci xo vss lpnfet w=0.36u l=0.12u m=1 
 x16 vdd nmb net111 vdd lppfet w=0.9u l=0.12u m=1 
 x17 net111 nmb vss vss lpnfet w=0.64u l=0.12u m=1 
 x18 vdd net110 s vdd lppfet w=1.28u l=0.12u m=1 
 x19 s net110 vss vss lpnfet w=0.92u l=0.12u m=1 
 x2 xn nma net111 vdd lppfet w=0.76u l=0.12u m=1 
 x20 vdd net80 co vdd lppfet w=1.28u l=0.12u m=1 
 x21 co net80 vss vss lpnfet w=0.92u l=0.12u m=1 
 x22 vdd ci nmcin vdd lppfet w=0.5u l=0.12u m=1 
 x23 nmcin ci vss vss lpnfet w=0.36u l=0.12u m=1 
 x24 vdd b nmb vdd lppfet w=1.28u l=0.12u m=1 
 x25 nmb b vss vss lpnfet w=0.92u l=0.12u m=1 
 x26 vdd a nma vdd lppfet w=1.28u l=0.12u m=1 
 x27 nma a vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 xo nma nmb vdd lppfet w=0.76u l=0.12u m=1 
 x4 nmcin xn net80 vdd lppfet w=0.5u l=0.12u m=1 
 x5 net80 xo nmb vdd lppfet w=0.5u l=0.12u m=1 
 x6 net110 ci xn vdd lppfet w=0.5u l=0.12u m=1 
 x7 net110 nmcin xo vdd lppfet w=0.5u l=0.12u m=1 
 x8 xo net111 nma vss lpnfet w=0.36u l=0.12u m=1 
 x9 xn nmb nma vss lpnfet w=0.36u l=0.12u m=1 
 .ends addfx2ts 

 **** 
 *.subckt addfx4ts co s a b ci 
 .subckt addfx4ts co s a b ci vss vdd
 x0 xo nmb nma vdd lppfet w=0.5u l=0.12u m=1 
 x1 xn net111 nma vdd lppfet w=0.5u l=0.12u m=1 
 x10 xo nma net111 vss lpnfet w=0.54u l=0.12u m=1 
 x11 xn nma nmb vss lpnfet w=0.54u l=0.12u m=1 
 x12 nmcin xo net80 vss lpnfet w=0.36u l=0.12u m=1 
 x13 net80 xn nmb vss lpnfet w=0.36u l=0.12u m=1 
 x14 net110 nmcin xn vss lpnfet w=0.36u l=0.12u m=1 
 x15 net110 ci xo vss lpnfet w=0.36u l=0.12u m=1 
 x16 vdd nmb net111 vdd lppfet w=0.9u l=0.12u m=1 
 x17 net111 nmb vss vss lpnfet w=0.64u l=0.12u m=1 
 x18 vdd net110 s vdd lppfet w=2.56u l=0.12u m=1 
 x19 s net110 vss vss lpnfet w=1.84u l=0.12u m=1 
 x2 xn nma net111 vdd lppfet w=0.68u l=0.12u m=1 
 x20 vdd net80 co vdd lppfet w=2.56u l=0.12u m=1 
 x21 co net80 vss vss lpnfet w=1.84u l=0.12u m=1 
 x22 vdd ci nmcin vdd lppfet w=0.5u l=0.12u m=1 
 x23 nmcin ci vss vss lpnfet w=0.36u l=0.12u m=1 
 x24 vdd b nmb vdd lppfet w=1.28u l=0.12u m=1 
 x25 nmb b vss vss lpnfet w=0.9u l=0.12u m=1 
 x26 vdd a nma vdd lppfet w=1.28u l=0.12u m=1 
 x27 nma a vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 xo nma nmb vdd lppfet w=0.76u l=0.12u m=1 
 x4 nmcin xn net80 vdd lppfet w=0.5u l=0.12u m=1 
 x5 net80 xo nmb vdd lppfet w=0.5u l=0.12u m=1 
 x6 net110 ci xn vdd lppfet w=0.5u l=0.12u m=1 
 x7 net110 nmcin xo vdd lppfet w=0.5u l=0.12u m=1 
 x8 xo net111 nma vss lpnfet w=0.36u l=0.12u m=1 
 x9 xn nmb nma vss lpnfet w=0.36u l=0.12u m=1 
 .ends addfx4ts 

 **** 
 *.subckt addfxlts co s a b ci 
 .subckt addfxlts co s a b ci vss vdd
 x0 xo nmb nma vdd lppfet w=0.56u l=0.12u m=1 
 x1 xn net111 nma vdd lppfet w=0.56u l=0.12u m=1 
 x10 xo nma net111 vss lpnfet w=0.32u l=0.12u m=1 
 x11 xn nma nmb vss lpnfet w=0.32u l=0.12u m=1 
 x12 nmcin xo net80 vss lpnfet w=0.32u l=0.12u m=1 
 x13 net80 xn nmb vss lpnfet w=0.32u l=0.12u m=1 
 x14 net110 nmcin xn vss lpnfet w=0.32u l=0.12u m=1 
 x15 net110 ci xo vss lpnfet w=0.32u l=0.12u m=1 
 x16 vdd nmb net111 vdd lppfet w=0.56u l=0.12u m=1 
 x17 net111 nmb vss vss lpnfet w=0.32u l=0.12u m=1 
 x18 vdd net110 s vdd lppfet w=0.42u l=0.12u m=1 
 x19 s net110 vss vss lpnfet w=0.24u l=0.12u m=1 
 x2 xn nma net111 vdd lppfet w=0.56u l=0.12u m=1 
 x20 vdd net80 co vdd lppfet w=0.42u l=0.12u m=1 
 x21 co net80 vss vss lpnfet w=0.24u l=0.12u m=1 
 x22 vdd ci nmcin vdd lppfet w=0.28u l=0.12u m=1 
 x23 nmcin ci vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 vdd b nmb vdd lppfet w=0.56u l=0.12u m=1 
 x25 nmb b vss vss lpnfet w=0.32u l=0.12u m=1 
 x26 vdd a nma vdd lppfet w=0.56u l=0.12u m=1 
 x27 nma a vss vss lpnfet w=0.32u l=0.12u m=1 
 x3 xo nma nmb vdd lppfet w=0.56u l=0.12u m=1 
 x4 nmcin xn net80 vdd lppfet w=0.56u l=0.12u m=1 
 x5 net80 xo nmb vdd lppfet w=0.56u l=0.12u m=1 
 x6 net110 ci xn vdd lppfet w=0.56u l=0.12u m=1 
 x7 net110 nmcin xo vdd lppfet w=0.56u l=0.12u m=1 
 x8 xo net111 nma vss lpnfet w=0.32u l=0.12u m=1 
 x9 xn nmb nma vss lpnfet w=0.32u l=0.12u m=1 
 .ends addfxlts 

 **** 
 *.subckt addhx1ts co s a b 
 .subckt addhx1ts co s a b vss vdd
 x0 hnet16 a vss vss lpnfet w=0.24u l=0.12u m=1 
 x1 net27 b hnet16 vss lpnfet w=0.24u l=0.12u m=1 
 x10 vdd b nmb vdd lppfet w=0.5u l=0.12u m=1 
 x11 nmb b vss vss lpnfet w=0.36u l=0.12u m=1 
 x12 vdd net46 net45 vdd lppfet w=1.28u l=0.12u m=1 
 x13 net45 net46 vss vss lpnfet w=0.92u l=0.12u m=1 
 x14 vdd a net46 vdd lppfet w=1.78u l=0.12u m=1 
 x15 net46 a vss vss lpnfet w=1.28u l=0.12u m=1 
 x2 vdd a net27 vdd lppfet w=0.28u l=0.12u m=1 
 x3 vdd b net27 vdd lppfet w=0.28u l=0.12u m=1 
 x4 s b net45 vdd lppfet w=1.24u l=0.12u m=1 
 x5 s nmb net46 vdd lppfet w=1.24u l=0.12u m=1 
 x6 s nmb net45 vss lpnfet w=0.92u l=0.12u m=1 
 x7 s b net46 vss lpnfet w=0.92u l=0.12u m=1 
 x8 vdd net27 co vdd lppfet w=0.64u l=0.12u m=1 
 x9 co net27 vss vss lpnfet w=0.46u l=0.12u m=1 
 .ends addhx1ts 

 **** 
 *.subckt addhx2ts co s a b 
 .subckt addhx2ts co s a b vss vdd
 x0 hnet16 a vss vss lpnfet w=0.48u l=0.12u m=1 
 x1 net27 b hnet16 vss lpnfet w=0.48u l=0.12u m=1 
 x10 vdd b nmb vdd lppfet w=1u l=0.12u m=1 
 x11 nmb b vss vss lpnfet w=0.74u l=0.12u m=1 
 x12 vdd net46 net45 vdd lppfet w=2.56u l=0.12u m=1 
 x13 net45 net46 vss vss lpnfet w=1.78u l=0.12u m=1 
 x14 vdd a net46 vdd lppfet w=3.6u l=0.12u m=1 
 x15 net46 a vss vss lpnfet w=2.58u l=0.12u m=1 
 x2 vdd a net27 vdd lppfet w=0.5u l=0.12u m=1 
 x3 vdd b net27 vdd lppfet w=0.5u l=0.12u m=1 
 x4 s b net45 vdd lppfet w=2.54u l=0.12u m=1 
 x5 s nmb net46 vdd lppfet w=2.54u l=0.12u m=1 
 x6 s nmb net45 vss lpnfet w=1.72u l=0.12u m=1 
 x7 s b net46 vss lpnfet w=1.78u l=0.12u m=1 
 x8 vdd net27 co vdd lppfet w=1.28u l=0.12u m=1 
 x9 co net27 vss vss lpnfet w=0.92u l=0.12u m=1 
 .ends addhx2ts 

 **** 
 *.subckt addhx4ts co s a b 
 .subckt addhx4ts co s a b vss vdd
 x0 hnet16 a vss vss lpnfet w=0.92u l=0.12u m=1 
 x1 net27 b hnet16 vss lpnfet w=0.92u l=0.12u m=1 
 x10 vdd b nmb vdd lppfet w=1.96u l=0.12u m=1 
 x11 nmb b vss vss lpnfet w=1.44u l=0.12u m=1 
 x12 vdd net46 net45 vdd lppfet w=5.12u l=0.12u m=1 
 x13 net45 net46 vss vss lpnfet w=3.68u l=0.12u m=1 
 x14 vdd a net46 vdd lppfet w=7.18u l=0.12u m=1 
 x15 net46 a vss vss lpnfet w=4.6u l=0.12u m=1 
 x2 vdd a net27 vdd lppfet w=0.92u l=0.12u m=1 
 x3 vdd b net27 vdd lppfet w=0.92u l=0.12u m=1 
 x4 s b net45 vdd lppfet w=4.96u l=0.12u m=1 
 x5 s nmb net46 vdd lppfet w=4.96u l=0.12u m=1 
 x6 s nmb net45 vss lpnfet w=3.68u l=0.12u m=1 
 x7 s b net46 vss lpnfet w=3.68u l=0.12u m=1 
 x8 vdd net27 co vdd lppfet w=2.56u l=0.12u m=1 
 x9 co net27 vss vss lpnfet w=1.84u l=0.12u m=1 
 .ends addhx4ts 

 **** 
 *.subckt addhxlts co s a b 
 .subckt addhxlts co s a b vss vdd
 x0 hnet16 a vss vss lpnfet w=0.26u l=0.12u m=1 
 x1 net27 b hnet16 vss lpnfet w=0.26u l=0.12u m=1 
 x10 vdd b nmb vdd lppfet w=0.28u l=0.12u m=1 
 x11 nmb b vss vss lpnfet w=0.2u l=0.12u m=1 
 x12 vdd net46 net45 vdd lppfet w=0.42u l=0.12u m=1 
 x13 net45 net46 vss vss lpnfet w=0.24u l=0.12u m=1 
 x14 vdd a net46 vdd lppfet w=0.42u l=0.12u m=1 
 x15 net46 a vss vss lpnfet w=0.24u l=0.12u m=1 
 x2 vdd a net27 vdd lppfet w=0.28u l=0.12u m=1 
 x3 vdd b net27 vdd lppfet w=0.28u l=0.12u m=1 
 x4 s b net45 vdd lppfet w=0.56u l=0.12u m=1 
 x5 s nmb net46 vdd lppfet w=0.56u l=0.12u m=1 
 x6 s nmb net45 vss lpnfet w=0.32u l=0.12u m=1 
 x7 s b net46 vss lpnfet w=0.32u l=0.12u m=1 
 x8 vdd net27 co vdd lppfet w=0.42u l=0.12u m=1 
 x9 co net27 vss vss lpnfet w=0.24u l=0.12u m=1 
 .ends addhxlts 

 **** 
 *.subckt afcshcinx2ts co0 co1 s a b ci0n ci1n cs 
 .subckt afcshcinx2ts co0 co1 s a b ci0n ci1n cs vss vdd
 x0 net178 cs net233 vdd lppfet w=0.96u l=0.12u m=1 
 x1 net178 net134 net227 vdd lppfet w=1.02u l=0.12u m=1 
 x10 net208 net237 net241 vdd lppfet w=1.22u l=0.12u m=1 
 x11 net208 b net239 vdd lppfet w=0.98u l=0.12u m=1 
 x12 net214 net237 net239 vdd lppfet w=0.9u l=0.12u m=1 
 x13 net214 b net241 vdd lppfet w=1.22u l=0.12u m=1 
 x14 net178 net134 net233 vss lpnfet w=0.66u l=0.12u m=1 
 x15 net178 cs net227 vss lpnfet w=0.74u l=0.12u m=1 
 x16 co1 net208 net243 vss lpnfet w=0.6u l=0.12u m=1 
 x17 co1 net214 net229 vss lpnfet w=0.82u l=0.12u m=1 
 x18 net190 net208 net229 vss lpnfet w=0.58u l=0.12u m=1 
 x19 net190 net214 net225 vss lpnfet w=0.58u l=0.12u m=1 
 x2 co1 net214 net243 vdd lppfet w=0.98u l=0.12u m=1 
 x20 co0 net208 net219 vss lpnfet w=0.6u l=0.12u m=1 
 x21 co0 net214 net235 vss lpnfet w=0.68u l=0.12u m=1 
 x22 net202 net208 net235 vss lpnfet w=0.58u l=0.12u m=1 
 x23 net202 net214 net231 vss lpnfet w=0.58u l=0.12u m=1 
 x24 net208 b net241 vss lpnfet w=0.84u l=0.12u m=1 
 x25 net208 net237 net239 vss lpnfet w=0.66u l=0.12u m=1 
 x26 net214 b net239 vss lpnfet w=0.92u l=0.12u m=1 
 x27 net214 net237 net241 vss lpnfet w=0.58u l=0.12u m=1 
 x28 vdd ci1n net215 vdd lppfet w=0.34u l=0.12u m=1 
 x29 net215 ci1n vss vss lpnfet w=0.24u l=0.12u m=1 
 x3 co1 net208 net229 vdd lppfet w=1.3u l=0.12u m=1 
 x30 vdd ci0n net217 vdd lppfet w=0.34u l=0.12u m=1 
 x31 net217 ci0n vss vss lpnfet w=0.24u l=0.12u m=1 
 x32 vdd net237 net219 vdd lppfet w=1.3u l=0.12u m=1 
 x33 net219 net237 vss vss lpnfet w=0.92u l=0.12u m=1 
 x34 vdd cs net134 vdd lppfet w=0.42u l=0.12u m=1 
 x35 net134 cs vss vss lpnfet w=0.3u l=0.12u m=1 
 x36 vdd net178 s vdd lppfet w=1.24u l=0.12u m=1 
 x37 s net178 vss vss lpnfet w=0.92u l=0.12u m=1 
 x38 vdd net215 net225 vdd lppfet w=0.72u l=0.12u m=1 
 x39 net225 net215 vss vss lpnfet w=0.58u l=0.12u m=1 
 x4 net190 net214 net229 vdd lppfet w=0.72u l=0.12u m=1 
 x40 vdd net190 net227 vdd lppfet w=1.02u l=0.12u m=1 
 x41 net227 net190 vss vss lpnfet w=0.74u l=0.12u m=1 
 x42 vdd ci1n net229 vdd lppfet w=1.16u l=0.12u m=1 
 x43 net229 ci1n vss vss lpnfet w=0.78u l=0.12u m=1 
 x44 vdd net217 net231 vdd lppfet w=0.76u l=0.12u m=1 
 x45 net231 net217 vss vss lpnfet w=0.58u l=0.12u m=1 
 x46 vdd net202 net233 vdd lppfet w=0.9u l=0.12u m=1 
 x47 net233 net202 vss vss lpnfet w=0.66u l=0.12u m=1 
 x48 vdd ci0n net235 vdd lppfet w=1.3u l=0.12u m=1 
 x49 net235 ci0n vss vss lpnfet w=0.92u l=0.12u m=1 
 x5 net190 net208 net225 vdd lppfet w=0.72u l=0.12u m=1 
 x50 vdd b net237 vdd lppfet w=1.3u l=0.12u m=1 
 x51 net237 b vss vss lpnfet w=0.92u l=0.12u m=1 
 x52 vdd a net239 vdd lppfet w=1.3u l=0.12u m=1 
 x53 net239 a vss vss lpnfet w=0.92u l=0.12u m=1 
 x54 vdd net239 net241 vdd lppfet w=1.22u l=0.12u m=1 
 x55 net241 net239 vss vss lpnfet w=0.84u l=0.12u m=1 
 x56 vdd net239 net243 vdd lppfet w=1.3u l=0.12u m=1 
 x57 net243 net239 vss vss lpnfet w=0.92u l=0.12u m=1 
 x6 co0 net214 net219 vdd lppfet w=0.98u l=0.12u m=1 
 x7 co0 net208 net235 vdd lppfet w=1.3u l=0.12u m=1 
 x8 net202 net214 net235 vdd lppfet w=0.8u l=0.12u m=1 
 x9 net202 net208 net231 vdd lppfet w=0.8u l=0.12u m=1 
 .ends afcshcinx2ts 

 **** 
 *.subckt afcshcinx4ts co0 co1 s a b ci0n ci1n cs 
 .subckt afcshcinx4ts co0 co1 s a b ci0n ci1n cs vss vdd
 x0 net178 cs net233 vdd lppfet w=1u l=0.12u m=1 
 x1 net178 net134 net227 vdd lppfet w=1.1u l=0.12u m=1 
 x10 net208 net237 net241 vdd lppfet w=1.28u l=0.12u m=1 
 x11 net208 b net239 vdd lppfet w=0.96u l=0.12u m=1 
 x12 net214 net237 net239 vdd lppfet w=0.92u l=0.12u m=1 
 x13 net214 b net241 vdd lppfet w=1.22u l=0.12u m=1 
 x14 net178 net134 net233 vss lpnfet w=0.6u l=0.12u m=1 
 x15 net178 cs net227 vss lpnfet w=0.58u l=0.12u m=1 
 x16 co1 net208 net243 vss lpnfet w=1.86u l=0.12u m=1 
 x17 co1 net214 net229 vss lpnfet w=1.6u l=0.12u m=1 
 x18 net190 net208 net229 vss lpnfet w=0.46u l=0.12u m=1 
 x19 net190 net214 net225 vss lpnfet w=0.46u l=0.12u m=1 
 x2 co1 net214 net243 vdd lppfet w=2.4u l=0.12u m=1 
 x20 co0 net208 net219 vss lpnfet w=1.8u l=0.12u m=1 
 x21 co0 net214 net235 vss lpnfet w=1.72u l=0.12u m=1 
 x22 net202 net208 net235 vss lpnfet w=0.52u l=0.12u m=1 
 x23 net202 net214 net231 vss lpnfet w=0.52u l=0.12u m=1 
 x24 net208 b net241 vss lpnfet w=0.86u l=0.12u m=1 
 x25 net208 net237 net239 vss lpnfet w=0.58u l=0.12u m=1 
 x26 net214 b net239 vss lpnfet w=0.9u l=0.12u m=1 
 x27 net214 net237 net241 vss lpnfet w=0.58u l=0.12u m=1 
 x28 vdd ci1n net215 vdd lppfet w=0.38u l=0.12u m=1 
 x29 net215 ci1n vss vss lpnfet w=0.26u l=0.12u m=1 
 x3 co1 net208 net229 vdd lppfet w=1.74u l=0.12u m=1 
 x30 vdd ci0n net217 vdd lppfet w=0.38u l=0.12u m=1 
 x31 net217 ci0n vss vss lpnfet w=0.28u l=0.12u m=1 
 x32 vdd net237 net219 vdd lppfet w=1.24u l=0.12u m=1 
 x33 net219 net237 vss vss lpnfet w=0.82u l=0.12u m=1 
 x34 vdd cs net134 vdd lppfet w=0.38u l=0.12u m=1 
 x35 net134 cs vss vss lpnfet w=0.26u l=0.12u m=1 
 x36 vdd net178 s vdd lppfet w=1.3u l=0.12u m=1 
 x37 s net178 vss vss lpnfet w=0.86u l=0.12u m=1 
 x38 vdd net215 net225 vdd lppfet w=0.74u l=0.12u m=1 
 x39 net225 net215 vss vss lpnfet w=0.52u l=0.12u m=1 
 x4 net190 net214 net229 vdd lppfet w=0.74u l=0.12u m=1 
 x40 vdd net190 net227 vdd lppfet w=1.1u l=0.12u m=1 
 x41 net227 net190 vss vss lpnfet w=0.76u l=0.12u m=1 
 x42 vdd ci1n net229 vdd lppfet w=2.2u l=0.12u m=1 
 x43 net229 ci1n vss vss lpnfet w=2.06u l=0.12u m=1 
 x44 vdd net217 net231 vdd lppfet w=0.78u l=0.12u m=1 
 x45 net231 net217 vss vss lpnfet w=0.52u l=0.12u m=1 
 x46 vdd net202 net233 vdd lppfet w=0.98u l=0.12u m=1 
 x47 net233 net202 vss vss lpnfet w=0.6u l=0.12u m=1 
 x48 vdd ci0n net235 vdd lppfet w=2.92u l=0.12u m=1 
 x49 net235 ci0n vss vss lpnfet w=1.8u l=0.12u m=1 
 x5 net190 net208 net225 vdd lppfet w=0.74u l=0.12u m=1 
 x50 vdd b net237 vdd lppfet w=1.24u l=0.12u m=1 
 x51 net237 b vss vss lpnfet w=0.74u l=0.12u m=1 
 x52 vdd a net239 vdd lppfet w=1.28u l=0.12u m=1 
 x53 net239 a vss vss lpnfet w=0.84u l=0.12u m=1 
 x54 vdd net239 net241 vdd lppfet w=1.28u l=0.12u m=1 
 x55 net241 net239 vss vss lpnfet w=0.92u l=0.12u m=1 
 x56 vdd net239 net243 vdd lppfet w=1.28u l=0.12u m=1 
 x57 net243 net239 vss vss lpnfet w=0.84u l=0.12u m=1 
 x6 co0 net214 net219 vdd lppfet w=2.76u l=0.12u m=1 
 x7 co0 net208 net235 vdd lppfet w=2.6u l=0.12u m=1 
 x8 net202 net214 net235 vdd lppfet w=0.66u l=0.12u m=1 
 x9 net202 net208 net231 vdd lppfet w=0.78u l=0.12u m=1 
 .ends afcshcinx4ts 

 **** 
 *.subckt afcshconx2ts co0n co1n s a b ci0 ci1 cs 
 .subckt afcshconx2ts co0n co1n s a b ci0 ci1 cs vss vdd
 x0 net156 cs net207 vdd lppfet w=1.02u l=0.12u m=1 
 x1 net156 net118 net201 vdd lppfet w=1.02u l=0.12u m=1 
 x10 net186 net211 net215 vdd lppfet w=1.3u l=0.12u m=1 
 x11 net186 b net213 vdd lppfet w=1.3u l=0.12u m=1 
 x12 net156 net118 net207 vss lpnfet w=0.66u l=0.12u m=1 
 x13 net156 cs net201 vss lpnfet w=0.74u l=0.12u m=1 
 x14 co1n net186 net191 vss lpnfet w=0.86u l=0.12u m=1 
 x15 co1n net193 net187 vss lpnfet w=0.86u l=0.12u m=1 
 x16 net168 net186 net199 vss lpnfet w=0.58u l=0.12u m=1 
 x17 net168 net193 net203 vss lpnfet w=0.58u l=0.12u m=1 
 x18 co0n net186 net217 vss lpnfet w=0.92u l=0.12u m=1 
 x19 co0n net193 net189 vss lpnfet w=0.92u l=0.12u m=1 
 x2 co1n net193 net191 vdd lppfet w=1.3u l=0.12u m=1 
 x20 net180 net186 net205 vss lpnfet w=0.58u l=0.12u m=1 
 x21 net180 net193 net209 vss lpnfet w=0.58u l=0.12u m=1 
 x22 net186 b net215 vss lpnfet w=0.88u l=0.12u m=1 
 x23 net186 net211 net213 vss lpnfet w=0.92u l=0.12u m=1 
 x24 vdd ci1 net187 vdd lppfet w=1.16u l=0.12u m=1 
 x25 net187 ci1 vss vss lpnfet w=0.92u l=0.12u m=1 
 x26 vdd ci0 net189 vdd lppfet w=1.3u l=0.12u m=1 
 x27 net189 ci0 vss vss lpnfet w=0.92u l=0.12u m=1 
 x28 vdd b net191 vdd lppfet w=1.3u l=0.12u m=1 
 x29 net191 b vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 co1n net186 net187 vdd lppfet w=1.18u l=0.12u m=1 
 x30 vdd net186 net193 vdd lppfet w=1.3u l=0.12u m=1 
 x31 net193 net186 vss vss lpnfet w=0.92u l=0.12u m=1 
 x32 vdd cs net118 vdd lppfet w=0.42u l=0.12u m=1 
 x33 net118 cs vss vss lpnfet w=0.3u l=0.12u m=1 
 x34 vdd net156 s vdd lppfet w=1.28u l=0.12u m=1 
 x35 s net156 vss vss lpnfet w=0.92u l=0.12u m=1 
 x36 vdd net203 net199 vdd lppfet w=0.8u l=0.12u m=1 
 x37 net199 net203 vss vss lpnfet w=0.58u l=0.12u m=1 
 x38 vdd net168 net201 vdd lppfet w=1.02u l=0.12u m=1 
 x39 net201 net168 vss vss lpnfet w=0.74u l=0.12u m=1 
 x4 net168 net193 net199 vdd lppfet w=0.8u l=0.12u m=1 
 x40 vdd ci1 net203 vdd lppfet w=1.16u l=0.12u m=1 
 x41 net203 ci1 vss vss lpnfet w=0.84u l=0.12u m=1 
 x42 vdd net209 net205 vdd lppfet w=0.8u l=0.12u m=1 
 x43 net205 net209 vss vss lpnfet w=0.58u l=0.12u m=1 
 x44 vdd net180 net207 vdd lppfet w=0.92u l=0.12u m=1 
 x45 net207 net180 vss vss lpnfet w=0.66u l=0.12u m=1 
 x46 vdd ci0 net209 vdd lppfet w=1.26u l=0.12u m=1 
 x47 net209 ci0 vss vss lpnfet w=0.92u l=0.12u m=1 
 x48 vdd b net211 vdd lppfet w=1.3u l=0.12u m=1 
 x49 net211 b vss vss lpnfet w=0.92u l=0.12u m=1 
 x5 net168 net186 net203 vdd lppfet w=0.8u l=0.12u m=1 
 x50 vdd a net213 vdd lppfet w=1.3u l=0.12u m=1 
 x51 net213 a vss vss lpnfet w=0.92u l=0.12u m=1 
 x52 vdd net213 net215 vdd lppfet w=1.3u l=0.12u m=1 
 x53 net215 net213 vss vss lpnfet w=0.88u l=0.12u m=1 
 x54 vdd a net217 vdd lppfet w=1.3u l=0.12u m=1 
 x55 net217 a vss vss lpnfet w=0.92u l=0.12u m=1 
 x6 co0n net193 net217 vdd lppfet w=1.2u l=0.12u m=1 
 x7 co0n net186 net189 vdd lppfet w=1.3u l=0.12u m=1 
 x8 net180 net193 net205 vdd lppfet w=0.8u l=0.12u m=1 
 x9 net180 net186 net209 vdd lppfet w=0.8u l=0.12u m=1 
 .ends afcshconx2ts 

 **** 
 *.subckt afcshconx4ts co0n co1n s a b ci0 ci1 cs 
 .subckt afcshconx4ts co0n co1n s a b ci0 ci1 cs vss vdd
 x0 net156 cs net207 vdd lppfet w=1.02u l=0.12u m=1 
 x1 net156 net118 net201 vdd lppfet w=1.02u l=0.12u m=1 
 x10 net186 net211 net215 vdd lppfet w=1.12u l=0.12u m=1 
 x11 net186 b net213 vdd lppfet w=1.06u l=0.12u m=1 
 x12 net156 net118 net207 vss lpnfet w=0.6u l=0.12u m=1 
 x13 net156 cs net201 vss lpnfet w=0.74u l=0.12u m=1 
 x14 co1n net186 net191 vss lpnfet w=0.84u l=0.12u m=1 
 x15 co1n net193 net187 vss lpnfet w=0.92u l=0.12u m=1 
 x16 net168 net186 net199 vss lpnfet w=0.58u l=0.12u m=1 
 x17 net168 net193 net203 vss lpnfet w=0.58u l=0.12u m=1 
 x18 co0n net186 net217 vss lpnfet w=0.86u l=0.12u m=1 
 x19 co0n net193 net189 vss lpnfet w=0.9u l=0.12u m=1 
 x2 co1n net193 net191 vdd lppfet w=1.3u l=0.12u m=1 
 x20 net180 net186 net205 vss lpnfet w=0.5u l=0.12u m=1 
 x21 net180 net193 net209 vss lpnfet w=0.5u l=0.12u m=1 
 x22 net186 b net215 vss lpnfet w=0.72u l=0.12u m=1 
 x23 net186 net211 net213 vss lpnfet w=0.78u l=0.12u m=1 
 x24 vdd ci1 net187 vdd lppfet w=2.2u l=0.12u m=1 
 x25 net187 ci1 vss vss lpnfet w=1.48u l=0.12u m=1 
 x26 vdd ci0 net189 vdd lppfet w=2.16u l=0.12u m=1 
 x27 net189 ci0 vss vss lpnfet w=1.82u l=0.12u m=1 
 x28 vdd b net191 vdd lppfet w=1.3u l=0.12u m=1 
 x29 net191 b vss vss lpnfet w=0.84u l=0.12u m=1 
 x3 co1n net186 net187 vdd lppfet w=1.3u l=0.12u m=1 
 x30 vdd net186 net193 vdd lppfet w=1.3u l=0.12u m=1 
 x31 net193 net186 vss vss lpnfet w=0.84u l=0.12u m=1 
 x32 vdd cs net118 vdd lppfet w=0.38u l=0.12u m=1 
 x33 net118 cs vss vss lpnfet w=0.3u l=0.12u m=1 
 x34 vdd net156 s vdd lppfet w=1.28u l=0.12u m=1 
 x35 s net156 vss vss lpnfet w=0.92u l=0.12u m=1 
 x36 vdd net203 net199 vdd lppfet w=0.8u l=0.12u m=1 
 x37 net199 net203 vss vss lpnfet w=0.58u l=0.12u m=1 
 x38 vdd net168 net201 vdd lppfet w=1.02u l=0.12u m=1 
 x39 net201 net168 vss vss lpnfet w=0.74u l=0.12u m=1 
 x4 net168 net193 net199 vdd lppfet w=0.78u l=0.12u m=1 
 x40 vdd ci1 net203 vdd lppfet w=2.2u l=0.12u m=1 
 x41 net203 ci1 vss vss lpnfet w=1.48u l=0.12u m=1 
 x42 vdd net209 net205 vdd lppfet w=0.78u l=0.12u m=1 
 x43 net205 net209 vss vss lpnfet w=0.5u l=0.12u m=1 
 x44 vdd net180 net207 vdd lppfet w=0.98u l=0.12u m=1 
 x45 net207 net180 vss vss lpnfet w=0.6u l=0.12u m=1 
 x46 vdd ci0 net209 vdd lppfet w=2.16u l=0.12u m=1 
 x47 net209 ci0 vss vss lpnfet w=1.84u l=0.12u m=1 
 x48 vdd b net211 vdd lppfet w=1.3u l=0.12u m=1 
 x49 net211 b vss vss lpnfet w=0.84u l=0.12u m=1 
 x5 net168 net186 net203 vdd lppfet w=0.78u l=0.12u m=1 
 x50 vdd a net213 vdd lppfet w=1.3u l=0.12u m=1 
 x51 net213 a vss vss lpnfet w=0.92u l=0.12u m=1 
 x52 vdd net213 net215 vdd lppfet w=1.12u l=0.12u m=1 
 x53 net215 net213 vss vss lpnfet w=0.76u l=0.12u m=1 
 x54 vdd a net217 vdd lppfet w=1.3u l=0.12u m=1 
 x55 net217 a vss vss lpnfet w=0.92u l=0.12u m=1 
 x6 co0n net193 net217 vdd lppfet w=1.22u l=0.12u m=1 
 x7 co0n net186 net189 vdd lppfet w=1.3u l=0.12u m=1 
 x8 net180 net193 net205 vdd lppfet w=0.78u l=0.12u m=1 
 x9 net180 net186 net209 vdd lppfet w=0.78u l=0.12u m=1 
 .ends afcshconx4ts 

 **** 
 *.subckt afcsihconx2ts co0n co1n s a b cs 
 .subckt afcsihconx2ts co0n co1n s a b cs vss vdd
 x0 co1n b vss vss lpnfet w=0.72u l=0.12u m=1 
 x1 co1n a vss vss lpnfet w=0.72u l=0.12u m=1 
 x10 vdd nma net61 vdd lppfet w=0.8u l=0.12u m=1 
 x11 net61 nma vss vss lpnfet w=0.52u l=0.12u m=1 
 x12 vdd net88 s vdd lppfet w=1.3u l=0.12u m=1 
 x13 s net88 vss vss lpnfet w=0.92u l=0.12u m=1 
 x14 vdd cs nmsel vdd lppfet w=0.42u l=0.12u m=1 
 x15 nmsel cs vss vss lpnfet w=0.3u l=0.12u m=1 
 x16 vdd b nmb vdd lppfet w=0.38u l=0.12u m=1 
 x17 nmb b vss vss lpnfet w=0.28u l=0.12u m=1 
 x18 vdd a nma vdd lppfet w=1.04u l=0.12u m=1 
 x19 nma a vss vss lpnfet w=0.8u l=0.12u m=1 
 x2 vdd b hnet17 vdd lppfet w=1.3u l=0.12u m=1 
 x20 net88 cs net59 vdd lppfet w=1.02u l=0.12u m=1 
 x21 net88 nmsel net94 vdd lppfet w=0.96u l=0.12u m=1 
 x22 net94 nmb nma vdd lppfet w=1.04u l=0.12u m=1 
 x23 net94 b net61 vdd lppfet w=0.72u l=0.12u m=1 
 x24 net88 nmsel net59 vss lpnfet w=0.74u l=0.12u m=1 
 x25 net88 cs net94 vss lpnfet w=0.74u l=0.12u m=1 
 x26 net94 b nma vss lpnfet w=0.8u l=0.12u m=1 
 x27 net94 nmb net61 vss lpnfet w=0.52u l=0.12u m=1 
 x3 hnet17 a co1n vdd lppfet w=1.3u l=0.12u m=1 
 x4 hnet25 b vss vss lpnfet w=0.82u l=0.12u m=1 
 x5 co0n a hnet25 vss lpnfet w=0.82u l=0.12u m=1 
 x6 vdd b co0n vdd lppfet w=0.96u l=0.12u m=1 
 x7 vdd a co0n vdd lppfet w=0.96u l=0.12u m=1 
 x8 vdd net94 net59 vdd lppfet w=1.02u l=0.12u m=1 
 x9 net59 net94 vss vss lpnfet w=0.74u l=0.12u m=1 
 .ends afcsihconx2ts 

 **** 
 *.subckt afcsihconx4ts co0n co1n s a b cs 
 .subckt afcsihconx4ts co0n co1n s a b cs vss vdd
 x0 co1n b vss vss lpnfet w=1.42u l=0.12u m=1 
 x1 co1n a vss vss lpnfet w=1.42u l=0.12u m=1 
 x10 vdd b co0n vdd lppfet w=1.94u l=0.12u m=1 
 x11 vdd a co0n vdd lppfet w=1.94u l=0.12u m=1 
 x12 vdd net94 net59 vdd lppfet w=1.02u l=0.12u m=1 
 x13 net59 net94 vss vss lpnfet w=0.74u l=0.12u m=1 
 x14 vdd nma net61 vdd lppfet w=0.8u l=0.12u m=1 
 x15 net61 nma vss vss lpnfet w=0.52u l=0.12u m=1 
 x16 vdd net88 s vdd lppfet w=1.3u l=0.12u m=1 
 x17 s net88 vss vss lpnfet w=0.92u l=0.12u m=1 
 x18 vdd cs nmsel vdd lppfet w=0.42u l=0.12u m=1 
 x19 nmsel cs vss vss lpnfet w=0.3u l=0.12u m=1 
 x2 vdd b hnet18 vdd lppfet w=1.3u l=0.12u m=1 
 x20 vdd b nmb vdd lppfet w=0.38u l=0.12u m=1 
 x21 nmb b vss vss lpnfet w=0.28u l=0.12u m=1 
 x22 vdd a nma vdd lppfet w=1.04u l=0.12u m=1 
 x23 nma a vss vss lpnfet w=0.8u l=0.12u m=1 
 x24 net88 cs net59 vdd lppfet w=1.02u l=0.12u m=1 
 x25 net88 nmsel net94 vdd lppfet w=0.96u l=0.12u m=1 
 x26 net94 nmb nma vdd lppfet w=1.04u l=0.12u m=1 
 x27 net94 b net61 vdd lppfet w=0.72u l=0.12u m=1 
 x28 net88 nmsel net59 vss lpnfet w=0.74u l=0.12u m=1 
 x29 net88 cs net94 vss lpnfet w=0.74u l=0.12u m=1 
 x3 hnet18 a co1n vdd lppfet w=1.3u l=0.12u m=1 
 x30 net94 b nma vss lpnfet w=0.8u l=0.12u m=1 
 x31 net94 nmb net61 vss lpnfet w=0.52u l=0.12u m=1 
 x4 vdd b hnet16 vdd lppfet w=1.3u l=0.12u m=1 
 x5 hnet16 a co1n vdd lppfet w=1.3u l=0.12u m=1 
 x6 hnet27 b vss vss lpnfet w=0.82u l=0.12u m=1 
 x7 co0n a hnet27 vss lpnfet w=0.82u l=0.12u m=1 
 x8 hnet23 b vss vss lpnfet w=0.82u l=0.12u m=1 
 x9 co0n a hnet23 vss lpnfet w=0.82u l=0.12u m=1 
 .ends afcsihconx4ts 

 **** 
 *.subckt afhcinx2ts co s a b cin 
 .subckt afhcinx2ts co s a b cin vss vdd
 x0 vdd cin net75 vdd lppfet w=1.3u l=0.12u m=1 
 x1 net75 cin vss vss lpnfet w=0.92u l=0.12u m=1 
 x10 vdd b net85 vdd lppfet w=1.12u l=0.12u m=1 
 x11 net85 b vss vss lpnfet w=0.92u l=0.12u m=1 
 x12 vdd a net87 vdd lppfet w=1.24u l=0.12u m=1 
 x13 net87 a vss vss lpnfet w=0.92u l=0.12u m=1 
 x14 vdd net87 net89 vdd lppfet w=1.24u l=0.12u m=1 
 x15 net89 net87 vss vss lpnfet w=0.92u l=0.12u m=1 
 x16 co net138 net77 vdd lppfet w=1.12u l=0.12u m=1 
 x17 co net132 net75 vdd lppfet w=1.3u l=0.12u m=1 
 x18 net126 net138 net79 vdd lppfet w=1.02u l=0.12u m=1 
 x19 net126 net132 net83 vdd lppfet w=1.3u l=0.12u m=1 
 x2 vdd net85 net77 vdd lppfet w=1.12u l=0.12u m=1 
 x20 net132 net85 net89 vdd lppfet w=1.24u l=0.12u m=1 
 x21 net132 b net87 vdd lppfet w=1.26u l=0.12u m=1 
 x22 net138 net85 net87 vdd lppfet w=1.22u l=0.12u m=1 
 x23 net138 b net89 vdd lppfet w=1.08u l=0.12u m=1 
 x24 co net132 net77 vss lpnfet w=0.78u l=0.12u m=1 
 x25 co net138 net75 vss lpnfet w=0.92u l=0.12u m=1 
 x26 net126 net132 net79 vss lpnfet w=0.74u l=0.12u m=1 
 x27 net126 net138 net83 vss lpnfet w=0.92u l=0.12u m=1 
 x28 net132 b net89 vss lpnfet w=0.92u l=0.12u m=1 
 x29 net132 net85 net87 vss lpnfet w=0.92u l=0.12u m=1 
 x3 net77 net85 vss vss lpnfet w=0.9u l=0.12u m=1 
 x30 net138 b net87 vss lpnfet w=0.92u l=0.12u m=1 
 x31 net138 net85 net89 vss lpnfet w=0.78u l=0.12u m=1 
 x4 vdd net83 net79 vdd lppfet w=1.02u l=0.12u m=1 
 x5 net79 net83 vss vss lpnfet w=0.74u l=0.12u m=1 
 x6 vdd net126 s vdd lppfet w=1.18u l=0.12u m=1 
 x7 s net126 vss vss lpnfet w=0.92u l=0.12u m=1 
 x8 vdd cin net83 vdd lppfet w=1.3u l=0.12u m=1 
 x9 net83 cin vss vss lpnfet w=0.92u l=0.12u m=1 
 .ends afhcinx2ts 

 **** 
 *.subckt afhcinx4ts co s a b cin 
 .subckt afhcinx4ts co s a b cin vss vdd
 x0 vdd cin net75 vdd lppfet w=2.6u l=0.12u m=1 
 x1 net75 cin vss vss lpnfet w=1.8u l=0.12u m=1 
 x10 vdd b net85 vdd lppfet w=1.3u l=0.12u m=1 
 x11 net85 b vss vss lpnfet w=0.92u l=0.12u m=1 
 x12 vdd a net87 vdd lppfet w=1.3u l=0.12u m=1 
 x13 net87 a vss vss lpnfet w=0.92u l=0.12u m=1 
 x14 vdd net87 net89 vdd lppfet w=1.3u l=0.12u m=1 
 x15 net89 net87 vss vss lpnfet w=0.92u l=0.12u m=1 
 x16 co net138 net77 vdd lppfet w=2.6u l=0.12u m=1 
 x17 co net132 net75 vdd lppfet w=2.58u l=0.12u m=1 
 x18 net126 net138 net79 vdd lppfet w=1.02u l=0.12u m=1 
 x19 net126 net132 net83 vdd lppfet w=2.58u l=0.12u m=1 
 x2 vdd net85 net77 vdd lppfet w=1.3u l=0.12u m=1 
 x20 net132 net85 net89 vdd lppfet w=1.28u l=0.12u m=1 
 x21 net132 b net87 vdd lppfet w=1.3u l=0.12u m=1 
 x22 net138 net85 net87 vdd lppfet w=1.3u l=0.12u m=1 
 x23 net138 b net89 vdd lppfet w=1.3u l=0.12u m=1 
 x24 co net132 net77 vss lpnfet w=1.8u l=0.12u m=1 
 x25 co net138 net75 vss lpnfet w=1.7u l=0.12u m=1 
 x26 net126 net132 net79 vss lpnfet w=0.68u l=0.12u m=1 
 x27 net126 net138 net83 vss lpnfet w=1.82u l=0.12u m=1 
 x28 net132 b net89 vss lpnfet w=0.9u l=0.12u m=1 
 x29 net132 net85 net87 vss lpnfet w=0.92u l=0.12u m=1 
 x3 net77 net85 vss vss lpnfet w=0.92u l=0.12u m=1 
 x30 net138 b net87 vss lpnfet w=0.92u l=0.12u m=1 
 x31 net138 net85 net89 vss lpnfet w=0.8u l=0.12u m=1 
 x4 vdd net83 net79 vdd lppfet w=1.02u l=0.12u m=1 
 x5 net79 net83 vss vss lpnfet w=0.68u l=0.12u m=1 
 x6 vdd net126 s vdd lppfet w=1.22u l=0.12u m=1 
 x7 s net126 vss vss lpnfet w=0.92u l=0.12u m=1 
 x8 vdd cin net83 vdd lppfet w=2.6u l=0.12u m=1 
 x9 net83 cin vss vss lpnfet w=1.8u l=0.12u m=1 
 .ends afhcinx4ts 

 **** 
 *.subckt afhconx2ts con s a b ci 
 .subckt afhconx2ts con s a b ci vss vdd
 x0 vdd ci net78 vdd lppfet w=1.3u l=0.12u m=1 
 x1 net78 ci vss vss lpnfet w=0.92u l=0.12u m=1 
 x10 vdd b net88 vdd lppfet w=1.3u l=0.12u m=1 
 x11 net88 b vss vss lpnfet w=0.84u l=0.12u m=1 
 x12 vdd a net90 vdd lppfet w=1.3u l=0.12u m=1 
 x13 net90 a vss vss lpnfet w=0.92u l=0.12u m=1 
 x14 vdd net90 net92 vdd lppfet w=1.3u l=0.12u m=1 
 x15 net92 net90 vss vss lpnfet w=0.92u l=0.12u m=1 
 x16 con net141 net88 vdd lppfet w=1.02u l=0.12u m=1 
 x17 con net135 net78 vdd lppfet w=1.26u l=0.12u m=1 
 x18 net129 net141 net86 vdd lppfet w=1.02u l=0.12u m=1 
 x19 net129 net135 net82 vdd lppfet w=1.02u l=0.12u m=1 
 x2 vdd b net80 vdd lppfet w=1.3u l=0.12u m=1 
 x20 net135 net80 net92 vdd lppfet w=1.3u l=0.12u m=1 
 x21 net135 b net90 vdd lppfet w=1.3u l=0.12u m=1 
 x22 net141 net80 net90 vdd lppfet w=1.1u l=0.12u m=1 
 x23 net141 b net92 vdd lppfet w=1.24u l=0.12u m=1 
 x24 con net135 net88 vss lpnfet w=0.74u l=0.12u m=1 
 x25 con net141 net78 vss lpnfet w=0.84u l=0.12u m=1 
 x26 net129 net135 net86 vss lpnfet w=0.74u l=0.12u m=1 
 x27 net129 net141 net82 vss lpnfet w=0.74u l=0.12u m=1 
 x28 net135 b net92 vss lpnfet w=0.92u l=0.12u m=1 
 x29 net135 net80 net90 vss lpnfet w=0.86u l=0.12u m=1 
 x3 net80 b vss vss lpnfet w=0.84u l=0.12u m=1 
 x30 net141 b net90 vss lpnfet w=0.78u l=0.12u m=1 
 x31 net141 net80 net92 vss lpnfet w=0.92u l=0.12u m=1 
 x4 vdd net86 net82 vdd lppfet w=1.02u l=0.12u m=1 
 x5 net82 net86 vss vss lpnfet w=0.72u l=0.12u m=1 
 x6 vdd net129 s vdd lppfet w=1.3u l=0.12u m=1 
 x7 s net129 vss vss lpnfet w=0.92u l=0.12u m=1 
 x8 vdd ci net86 vdd lppfet w=1.3u l=0.12u m=1 
 x9 net86 ci vss vss lpnfet w=0.92u l=0.12u m=1 
 .ends afhconx2ts 

 **** 
 *.subckt afhconx4ts con s a b ci 
 .subckt afhconx4ts con s a b ci vss vdd
 x0 vdd ci net78 vdd lppfet w=2.6u l=0.12u m=1 
 x1 net78 ci vss vss lpnfet w=1.84u l=0.12u m=1 
 x10 vdd b net88 vdd lppfet w=1.3u l=0.12u m=1 
 x11 net88 b vss vss lpnfet w=0.84u l=0.12u m=1 
 x12 vdd a net90 vdd lppfet w=1.3u l=0.12u m=1 
 x13 net90 a vss vss lpnfet w=0.92u l=0.12u m=1 
 x14 vdd net90 net92 vdd lppfet w=1.3u l=0.12u m=1 
 x15 net92 net90 vss vss lpnfet w=0.92u l=0.12u m=1 
 x16 con net141 net88 vdd lppfet w=1.02u l=0.12u m=1 
 x17 con net135 net78 vdd lppfet w=2.52u l=0.12u m=1 
 x18 net129 net141 net86 vdd lppfet w=1.02u l=0.12u m=1 
 x19 net129 net135 net82 vdd lppfet w=1.02u l=0.12u m=1 
 x2 vdd b net80 vdd lppfet w=1.3u l=0.12u m=1 
 x20 net135 net80 net92 vdd lppfet w=1.3u l=0.12u m=1 
 x21 net135 b net90 vdd lppfet w=1.3u l=0.12u m=1 
 x22 net141 net80 net90 vdd lppfet w=1.1u l=0.12u m=1 
 x23 net141 b net92 vdd lppfet w=1.24u l=0.12u m=1 
 x24 con net135 net88 vss lpnfet w=0.74u l=0.12u m=1 
 x25 con net141 net78 vss lpnfet w=1.76u l=0.12u m=1 
 x26 net129 net135 net86 vss lpnfet w=0.74u l=0.12u m=1 
 x27 net129 net141 net82 vss lpnfet w=0.74u l=0.12u m=1 
 x28 net135 b net92 vss lpnfet w=0.92u l=0.12u m=1 
 x29 net135 net80 net90 vss lpnfet w=0.86u l=0.12u m=1 
 x3 net80 b vss vss lpnfet w=0.84u l=0.12u m=1 
 x30 net141 b net90 vss lpnfet w=0.78u l=0.12u m=1 
 x31 net141 net80 net92 vss lpnfet w=0.92u l=0.12u m=1 
 x4 vdd net86 net82 vdd lppfet w=1.02u l=0.12u m=1 
 x5 net82 net86 vss vss lpnfet w=0.72u l=0.12u m=1 
 x6 vdd net129 s vdd lppfet w=1.3u l=0.12u m=1 
 x7 s net129 vss vss lpnfet w=0.92u l=0.12u m=1 
 x8 vdd ci net86 vdd lppfet w=2.6u l=0.12u m=1 
 x9 net86 ci vss vss lpnfet w=1.84u l=0.12u m=1 
 .ends afhconx4ts 

 **** 
 *.subckt ahcshcinx2ts co s a cin cs 
 .subckt ahcshcinx2ts co s a cin cs vss vdd
 x0 co nma vss vss lpnfet w=0.72u l=0.12u m=1 
 x1 co cin vss vss lpnfet w=0.72u l=0.12u m=1 
 x10 net69 cs net63 vss lpnfet w=0.68u l=0.12u m=1 
 x11 net63 nmcinn net79 vss lpnfet w=0.6u l=0.12u m=1 
 x12 vdd net69 s vdd lppfet w=1.3u l=0.12u m=1 
 x13 s net69 vss vss lpnfet w=0.92u l=0.12u m=1 
 x14 vdd cs nmsel vdd lppfet w=0.42u l=0.12u m=1 
 x15 nmsel cs vss vss lpnfet w=0.3u l=0.12u m=1 
 x16 vdd cin nmcinn vdd lppfet w=0.48u l=0.12u m=1 
 x17 nmcinn cin vss vss lpnfet w=0.34u l=0.12u m=1 
 x18 vdd nma net79 vdd lppfet w=0.98u l=0.12u m=1 
 x19 net79 nma vss vss lpnfet w=0.6u l=0.12u m=1 
 x2 vdd nma hnet15 vdd lppfet w=1.3u l=0.12u m=1 
 x20 vdd a nma vdd lppfet w=1.3u l=0.12u m=1 
 x21 nma a vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 hnet15 cin co vdd lppfet w=1.3u l=0.12u m=1 
 x4 net63 nmcinn nma vdd lppfet w=1.28u l=0.12u m=1 
 x5 net69 cs nma vdd lppfet w=0.92u l=0.12u m=1 
 x6 net69 nmsel net63 vdd lppfet w=0.98u l=0.12u m=1 
 x7 net63 cin net79 vdd lppfet w=1.04u l=0.12u m=1 
 x8 net63 cin nma vss lpnfet w=0.92u l=0.12u m=1 
 x9 net69 nmsel nma vss lpnfet w=0.68u l=0.12u m=1 
 .ends ahcshcinx2ts 

 **** 
 *.subckt ahcshcinx4ts co s a cin cs 
 .subckt ahcshcinx4ts co s a cin cs vss vdd
 x0 co nma vss vss lpnfet w=1.42u l=0.12u m=1 
 x1 co cin vss vss lpnfet w=1.42u l=0.12u m=1 
 x10 net63 cin nma vss lpnfet w=0.92u l=0.12u m=1 
 x11 net69 nmsel nma vss lpnfet w=0.68u l=0.12u m=1 
 x12 net69 cs net63 vss lpnfet w=0.68u l=0.12u m=1 
 x13 net63 nmcinn net79 vss lpnfet w=0.6u l=0.12u m=1 
 x14 vdd net69 s vdd lppfet w=1.3u l=0.12u m=1 
 x15 s net69 vss vss lpnfet w=0.92u l=0.12u m=1 
 x16 vdd cs nmsel vdd lppfet w=0.42u l=0.12u m=1 
 x17 nmsel cs vss vss lpnfet w=0.3u l=0.12u m=1 
 x18 vdd cin nmcinn vdd lppfet w=0.48u l=0.12u m=1 
 x19 nmcinn cin vss vss lpnfet w=0.32u l=0.12u m=1 
 x2 vdd nma hnet16 vdd lppfet w=1.3u l=0.12u m=1 
 x20 vdd nma net79 vdd lppfet w=0.98u l=0.12u m=1 
 x21 net79 nma vss vss lpnfet w=0.6u l=0.12u m=1 
 x22 vdd a nma vdd lppfet w=1.3u l=0.12u m=1 
 x23 nma a vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 hnet16 cin co vdd lppfet w=1.3u l=0.12u m=1 
 x4 vdd nma hnet14 vdd lppfet w=1.3u l=0.12u m=1 
 x5 hnet14 cin co vdd lppfet w=1.3u l=0.12u m=1 
 x6 net63 nmcinn nma vdd lppfet w=1.28u l=0.12u m=1 
 x7 net69 cs nma vdd lppfet w=0.92u l=0.12u m=1 
 x8 net69 nmsel net63 vdd lppfet w=0.98u l=0.12u m=1 
 x9 net63 cin net79 vdd lppfet w=1.04u l=0.12u m=1 
 .ends ahcshcinx4ts 

 **** 
 *.subckt ahcshconx2ts con s a ci cs 
 .subckt ahcshconx2ts con s a ci cs vss vdd
 x0 hnet19 a vss vss lpnfet w=0.88u l=0.12u m=1 
 x1 con ci hnet19 vss lpnfet w=0.88u l=0.12u m=1 
 x10 net68 cs net62 vss lpnfet w=0.74u l=0.12u m=1 
 x11 net62 ci net78 vss lpnfet w=0.74u l=0.12u m=1 
 x12 vdd net68 s vdd lppfet w=1.3u l=0.12u m=1 
 x13 s net68 vss vss lpnfet w=0.88u l=0.12u m=1 
 x14 vdd cs nmsel vdd lppfet w=0.42u l=0.12u m=1 
 x15 nmsel cs vss vss lpnfet w=0.3u l=0.12u m=1 
 x16 vdd ci nmcin vdd lppfet w=0.44u l=0.12u m=1 
 x17 nmcin ci vss vss lpnfet w=0.32u l=0.12u m=1 
 x18 vdd nma net78 vdd lppfet w=0.96u l=0.12u m=1 
 x19 net78 nma vss vss lpnfet w=0.6u l=0.12u m=1 
 x2 vdd a con vdd lppfet w=0.96u l=0.12u m=1 
 x20 vdd a nma vdd lppfet w=1.24u l=0.12u m=1 
 x21 nma a vss vss lpnfet w=0.88u l=0.12u m=1 
 x3 vdd ci con vdd lppfet w=0.96u l=0.12u m=1 
 x4 net62 ci nma vdd lppfet w=1.24u l=0.12u m=1 
 x5 net68 cs nma vdd lppfet w=0.96u l=0.12u m=1 
 x6 net68 nmsel net62 vdd lppfet w=0.98u l=0.12u m=1 
 x7 net62 nmcin net78 vdd lppfet w=0.96u l=0.12u m=1 
 x8 net62 nmcin nma vss lpnfet w=0.88u l=0.12u m=1 
 x9 net68 nmsel nma vss lpnfet w=0.74u l=0.12u m=1 
 .ends ahcshconx2ts 

 **** 
 *.subckt ahcshconx4ts con s a ci cs 
 .subckt ahcshconx4ts con s a ci cs vss vdd
 x0 hnet20 a vss vss lpnfet w=0.92u l=0.12u m=1 
 x1 con ci hnet20 vss lpnfet w=0.92u l=0.12u m=1 
 x10 net62 nmcin nma vss lpnfet w=0.92u l=0.12u m=1 
 x11 net68 nmsel nma vss lpnfet w=0.68u l=0.12u m=1 
 x12 net68 cs net62 vss lpnfet w=0.68u l=0.12u m=1 
 x13 net62 ci net78 vss lpnfet w=0.74u l=0.12u m=1 
 x14 vdd net68 s vdd lppfet w=1.3u l=0.12u m=1 
 x15 s net68 vss vss lpnfet w=0.92u l=0.12u m=1 
 x16 vdd cs nmsel vdd lppfet w=0.42u l=0.12u m=1 
 x17 nmsel cs vss vss lpnfet w=0.3u l=0.12u m=1 
 x18 vdd ci nmcin vdd lppfet w=0.44u l=0.12u m=1 
 x19 nmcin ci vss vss lpnfet w=0.32u l=0.12u m=1 
 x2 hnet14 a vss vss lpnfet w=0.92u l=0.12u m=1 
 x20 vdd nma net78 vdd lppfet w=0.98u l=0.12u m=1 
 x21 net78 nma vss vss lpnfet w=0.6u l=0.12u m=1 
 x22 vdd a nma vdd lppfet w=1.28u l=0.12u m=1 
 x23 nma a vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 con ci hnet14 vss lpnfet w=0.92u l=0.12u m=1 
 x4 vdd a con vdd lppfet w=1.94u l=0.12u m=1 
 x5 vdd ci con vdd lppfet w=1.94u l=0.12u m=1 
 x6 net62 ci nma vdd lppfet w=1.28u l=0.12u m=1 
 x7 net68 cs nma vdd lppfet w=0.92u l=0.12u m=1 
 x8 net68 nmsel net62 vdd lppfet w=0.98u l=0.12u m=1 
 x9 net62 nmcin net78 vdd lppfet w=0.98u l=0.12u m=1 
 .ends ahcshconx4ts 

 **** 
 *.subckt ahhcinx2ts co s a cin 
 .subckt ahhcinx2ts co s a cin vss vdd
 x0 co cin vss vss lpnfet w=0.92u l=0.12u m=1 
 x1 co nmai vss vss lpnfet w=0.92u l=0.12u m=1 
 x10 vdd a nmai vdd lppfet w=0.62u l=0.12u m=1 
 x11 nmai a vss vss lpnfet w=0.44u l=0.12u m=1 
 x12 vdd cin nmcinn vdd lppfet w=0.5u l=0.12u m=1 
 x13 nmcinn cin vss vss lpnfet w=0.36u l=0.12u m=1 
 x14 vdd nma net43 vdd lppfet w=1.28u l=0.12u m=1 
 x15 net43 nma vss vss lpnfet w=0.92u l=0.12u m=1 
 x16 vdd a nma vdd lppfet w=1.28u l=0.12u m=1 
 x17 nma a vss vss lpnfet w=0.92u l=0.12u m=1 
 x2 vdd cin hnet13 vdd lppfet w=0.84u l=0.12u m=1 
 x3 hnet13 nmai co vdd lppfet w=0.84u l=0.12u m=1 
 x4 vdd cin hnet11 vdd lppfet w=0.84u l=0.12u m=1 
 x5 hnet11 nmai co vdd lppfet w=0.84u l=0.12u m=1 
 x6 s nmcinn net43 vdd lppfet w=1.24u l=0.12u m=1 
 x7 s cin nma vdd lppfet w=1.2u l=0.12u m=1 
 x8 s cin net43 vss lpnfet w=0.92u l=0.12u m=1 
 x9 s nmcinn nma vss lpnfet w=0.92u l=0.12u m=1 
 .ends ahhcinx2ts 

 **** 
 *.subckt ahhcinx4ts co s a cin 
 .subckt ahhcinx4ts co s a cin vss vdd
 x0 co cin vss vss lpnfet w=1.84u l=0.12u m=1 
 x1 co nmai vss vss lpnfet w=1.84u l=0.12u m=1 
 x10 s cin net43 vss lpnfet w=0.9u l=0.12u m=1 
 x11 s nmcinn nma vss lpnfet w=0.9u l=0.12u m=1 
 x12 vdd a nmai vdd lppfet w=1.2u l=0.12u m=1 
 x13 nmai a vss vss lpnfet w=0.86u l=0.12u m=1 
 x14 vdd cin nmcinn vdd lppfet w=0.5u l=0.12u m=1 
 x15 nmcinn cin vss vss lpnfet w=0.36u l=0.12u m=1 
 x16 vdd nma net43 vdd lppfet w=1.28u l=0.12u m=1 
 x17 net43 nma vss vss lpnfet w=0.92u l=0.12u m=1 
 x18 vdd a nma vdd lppfet w=1.22u l=0.12u m=1 
 x19 nma a vss vss lpnfet w=0.9u l=0.12u m=1 
 x2 vdd cin hnet13 vdd lppfet w=1.12u l=0.12u m=1 
 x3 hnet13 nmai co vdd lppfet w=1.12u l=0.12u m=1 
 x4 vdd cin hnet11 vdd lppfet w=1.12u l=0.12u m=1 
 x5 hnet11 nmai co vdd lppfet w=1.12u l=0.12u m=1 
 x6 vdd cin hnet15 vdd lppfet w=1.12u l=0.12u m=1 
 x7 hnet15 nmai co vdd lppfet w=1.12u l=0.12u m=1 
 x8 s nmcinn net43 vdd lppfet w=1.28u l=0.12u m=1 
 x9 s cin nma vdd lppfet w=1.22u l=0.12u m=1 
 .ends ahhcinx4ts 

 **** 
 *.subckt ahhconx2ts con s a ci 
 .subckt ahhconx2ts con s a ci vss vdd
 x0 hnet16 a vss vss lpnfet w=0.58u l=0.12u m=1 
 x1 con ci hnet16 vss lpnfet w=0.58u l=0.12u m=1 
 x10 vdd ci nmcin vdd lppfet w=0.5u l=0.12u m=1 
 x11 nmcin ci vss vss lpnfet w=0.36u l=0.12u m=1 
 x12 vdd nma net42 vdd lppfet w=1.28u l=0.12u m=1 
 x13 net42 nma vss vss lpnfet w=0.92u l=0.12u m=1 
 x14 vdd a nma vdd lppfet w=1.26u l=0.12u m=1 
 x15 nma a vss vss lpnfet w=0.86u l=0.12u m=1 
 x2 hnet10 a vss vss lpnfet w=0.58u l=0.12u m=1 
 x3 con ci hnet10 vss lpnfet w=0.58u l=0.12u m=1 
 x4 vdd a con vdd lppfet w=1.26u l=0.12u m=1 
 x5 vdd ci con vdd lppfet w=1.26u l=0.12u m=1 
 x6 s ci net42 vdd lppfet w=1.28u l=0.12u m=1 
 x7 s nmcin nma vdd lppfet w=1.28u l=0.12u m=1 
 x8 s nmcin net42 vss lpnfet w=0.86u l=0.12u m=1 
 x9 s ci nma vss lpnfet w=0.86u l=0.12u m=1 
 .ends ahhconx2ts 

 **** 
 *.subckt ahhconx4ts con s a ci 
 .subckt ahhconx4ts con s a ci vss vdd
 x0 hnet18 a vss vss lpnfet w=0.56u l=0.12u m=1 
 x1 con ci hnet18 vss lpnfet w=0.56u l=0.12u m=1 
 x10 s ci net42 vdd lppfet w=1.28u l=0.12u m=1 
 x11 s nmcin nma vdd lppfet w=1.28u l=0.12u m=1 
 x12 s nmcin net42 vss lpnfet w=0.86u l=0.12u m=1 
 x13 s ci nma vss lpnfet w=0.86u l=0.12u m=1 
 x14 vdd ci nmcin vdd lppfet w=0.5u l=0.12u m=1 
 x15 nmcin ci vss vss lpnfet w=0.36u l=0.12u m=1 
 x16 vdd nma net42 vdd lppfet w=1.28u l=0.12u m=1 
 x17 net42 nma vss vss lpnfet w=0.92u l=0.12u m=1 
 x18 vdd a nma vdd lppfet w=1.28u l=0.12u m=1 
 x19 nma a vss vss lpnfet w=0.86u l=0.12u m=1 
 x2 hnet11 a vss vss lpnfet w=0.56u l=0.12u m=1 
 x3 con ci hnet11 vss lpnfet w=0.56u l=0.12u m=1 
 x4 hnet13 a vss vss lpnfet w=0.56u l=0.12u m=1 
 x5 con ci hnet13 vss lpnfet w=0.56u l=0.12u m=1 
 x6 hnet17 a vss vss lpnfet w=0.56u l=0.12u m=1 
 x7 con ci hnet17 vss lpnfet w=0.56u l=0.12u m=1 
 x8 vdd a con vdd lppfet w=2.56u l=0.12u m=1 
 x9 vdd ci con vdd lppfet w=2.56u l=0.12u m=1 
 .ends ahhconx4ts 

 **** 
 *.subckt and2x1ts y a b 
 .subckt and2x1ts y a b vss vdd
 x0 vdd net11 y vdd lppfet w=0.64u l=0.12u m=1 
 x1 y net11 vss vss lpnfet w=0.46u l=0.12u m=1 
 x2 hnet14 b vss vss lpnfet w=0.24u l=0.12u m=1 
 x3 net11 a hnet14 vss lpnfet w=0.24u l=0.12u m=1 
 x4 vdd b net11 vdd lppfet w=0.28u l=0.12u m=1 
 x5 vdd a net11 vdd lppfet w=0.28u l=0.12u m=1 
 .ends and2x1ts 

 **** 
 *.subckt and2x2ts y a b 
 .subckt and2x2ts y a b vss vdd
 x0 vdd net11 y vdd lppfet w=1.28u l=0.12u m=1 
 x1 y net11 vss vss lpnfet w=0.92u l=0.12u m=1 
 x2 hnet14 b vss vss lpnfet w=0.48u l=0.12u m=1 
 x3 net11 a hnet14 vss lpnfet w=0.48u l=0.12u m=1 
 x4 vdd b net11 vdd lppfet w=0.5u l=0.12u m=1 
 x5 vdd a net11 vdd lppfet w=0.5u l=0.12u m=1 
 .ends and2x2ts 

 **** 
 *.subckt and2x4ts y a b 
 .subckt and2x4ts y a b vss vdd
 x0 vdd net11 y vdd lppfet w=2.56u l=0.12u m=1 
 x1 y net11 vss vss lpnfet w=1.84u l=0.12u m=1 
 x2 hnet14 b vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 net11 a hnet14 vss lpnfet w=0.92u l=0.12u m=1 
 x4 vdd b net11 vdd lppfet w=0.96u l=0.12u m=1 
 x5 vdd a net11 vdd lppfet w=0.96u l=0.12u m=1 
 .ends and2x4ts 

 **** 
 *.subckt and2x6ts y a b 
 .subckt and2x6ts y a b vss vdd
 x0 vdd net11 y vdd lppfet w=3.84u l=0.12u m=1 
 x1 y net11 vss vss lpnfet w=2.76u l=0.12u m=1 
 x2 hnet15 b vss vss lpnfet w=0.66u l=0.12u m=1 
 x3 net11 a hnet15 vss lpnfet w=0.66u l=0.12u m=1 
 x4 hnet11 b vss vss lpnfet w=0.66u l=0.12u m=1 
 x5 net11 a hnet11 vss lpnfet w=0.66u l=0.12u m=1 
 x6 vdd b net11 vdd lppfet w=1.52u l=0.12u m=1 
 x7 vdd a net11 vdd lppfet w=1.52u l=0.12u m=1 
 .ends and2x6ts 

 **** 
 *.subckt and2x8ts y a b
 .subckt and2x8ts y a b vss vdd
 x0 vdd net11 y vdd lppfet w=5.12u l=0.12u m=1 
 x1 y net11 vss vss lpnfet w=3.42u l=0.12u m=1 
 x2 hnet15 b vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 net11 a hnet15 vss lpnfet w=0.92u l=0.12u m=1 
 x4 hnet11 b vss vss lpnfet w=0.92u l=0.12u m=1 
 x5 net11 a hnet11 vss lpnfet w=0.92u l=0.12u m=1 
 x6 vdd b net11 vdd lppfet w=1.94u l=0.12u m=1 
 x7 vdd a net11 vdd lppfet w=1.94u l=0.12u m=1 
 .ends and2x8ts 

 **** 
 *.subckt and2xlts a b y 
 .subckt and2xlts a b y vss vdd
 x0 vdd net11 y vdd lppfet w=0.42u l=0.12u m=1 
 x1 y net11 vss vss lpnfet w=0.24u l=0.12u m=1 
 x2 hnet14 b vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 net11 a hnet14 vss lpnfet w=0.2u l=0.12u m=1 
 x4 vdd b net11 vdd lppfet w=0.28u l=0.12u m=1 
 x5 vdd a net11 vdd lppfet w=0.28u l=0.12u m=1 
 .ends and2xlts 

 **** 
 *.subckt and3x1ts y a b c 
 .subckt and3x1ts y a b c vss vdd
 x0 vdd net14 y vdd lppfet w=0.64u l=0.12u m=1 
 x1 y net14 vss vss lpnfet w=0.46u l=0.12u m=1 
 x2 hnet17 c vss vss lpnfet w=0.3u l=0.12u m=1 
 x3 hnet12 b hnet17 vss lpnfet w=0.3u l=0.12u m=1 
 x4 net14 a hnet12 vss lpnfet w=0.3u l=0.12u m=1 
 x5 vdd c net14 vdd lppfet w=0.28u l=0.12u m=1 
 x6 vdd b net14 vdd lppfet w=0.28u l=0.12u m=1 
 x7 vdd a net14 vdd lppfet w=0.28u l=0.12u m=1 
 .ends and3x1ts 

 **** 
 *.subckt and3x2ts y a b c 
 .subckt and3x2ts y a b c vss vdd
 x0 vdd net14 y vdd lppfet w=1.28u l=0.12u m=1 
 x1 y net14 vss vss lpnfet w=0.92u l=0.12u m=1 
 x2 hnet17 c vss vss lpnfet w=0.58u l=0.12u m=1 
 x3 hnet12 b hnet17 vss lpnfet w=0.58u l=0.12u m=1 
 x4 net14 a hnet12 vss lpnfet w=0.58u l=0.12u m=1 
 x5 vdd c net14 vdd lppfet w=0.5u l=0.12u m=1 
 x6 vdd b net14 vdd lppfet w=0.5u l=0.12u m=1 
 x7 vdd a net14 vdd lppfet w=0.5u l=0.12u m=1 
 .ends and3x2ts 

 **** 
 *.subckt and3x4ts y a b c 
 .subckt and3x4ts y a b c vss vdd
 x0 hnet15 c vss vss lpnfet w=0.92u l=0.12u m=1 
 x1 hnet8 b hnet15 vss lpnfet w=0.92u l=0.12u m=1 
 x2 net12 a hnet8 vss lpnfet w=0.92u l=0.12u m=1 
 x3 vdd c net12 vdd lppfet w=1.02u l=0.12u m=1 
 x4 vdd b net12 vdd lppfet w=1.02u l=0.12u m=1 
 x5 vdd a net12 vdd lppfet w=1.02u l=0.12u m=1 
 x6 vdd net12 y vdd lppfet w=2.56u l=0.12u m=1 
 x7 y net12 vss vss lpnfet w=1.7u l=0.12u m=1 
 .ends and3x4ts 

 **** 
 *.subckt and3x6ts y a b c 
 .subckt and3x6ts y a b c vss vdd
 x0 vdd net14 y vdd lppfet w=3.84u l=0.12u m=1 
 x1 y net14 vss vss lpnfet w=2.76u l=0.12u m=1 
 x10 vdd a net14 vdd lppfet w=1.44u l=0.12u m=1 
 x2 hnet18 c vss vss lpnfet w=0.8u l=0.12u m=1 
 x3 hnet12 b hnet18 vss lpnfet w=0.8u l=0.12u m=1 
 x4 net14 a hnet12 vss lpnfet w=0.8u l=0.12u m=1 
 x5 hnet19 c vss vss lpnfet w=0.8u l=0.12u m=1 
 x6 hnet14 b hnet19 vss lpnfet w=0.8u l=0.12u m=1 
 x7 net14 a hnet14 vss lpnfet w=0.8u l=0.12u m=1 
 x8 vdd c net14 vdd lppfet w=1.44u l=0.12u m=1 
 x9 vdd b net14 vdd lppfet w=1.44u l=0.12u m=1 
 .ends and3x6ts 

 **** 
 *.subckt and3x8ts y a b c 
 .subckt and3x8ts y a b c vss vdd
 x0 hnet16 c vss vss lpnfet w=0.92u l=0.12u m=1 
 x1 hnet8 b hnet16 vss lpnfet w=0.92u l=0.12u m=1 
 x10 y net12 vss vss lpnfet w=3.68u l=0.12u m=1 
 x2 net12 a hnet8 vss lpnfet w=0.92u l=0.12u m=1 
 x3 hnet17 c vss vss lpnfet w=0.92u l=0.12u m=1 
 x4 hnet11 b hnet17 vss lpnfet w=0.92u l=0.12u m=1 
 x5 net12 a hnet11 vss lpnfet w=0.92u l=0.12u m=1 
 x6 vdd c net12 vdd lppfet w=2.06u l=0.12u m=1 
 x7 vdd b net12 vdd lppfet w=2.06u l=0.12u m=1 
 x8 vdd a net12 vdd lppfet w=2.06u l=0.12u m=1 
 x9 vdd net12 y vdd lppfet w=4.64u l=0.12u m=1 
 .ends and3x8ts 

 **** 
 *.subckt and3xlts y a b c 
 .subckt and3xlts y a b c vss vdd
 x0 vdd net14 y vdd lppfet w=0.42u l=0.12u m=1 
 x1 y net14 vss vss lpnfet w=0.24u l=0.12u m=1 
 x2 hnet17 c vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet12 b hnet17 vss lpnfet w=0.2u l=0.12u m=1 
 x4 net14 a hnet12 vss lpnfet w=0.2u l=0.12u m=1 
 x5 vdd c net14 vdd lppfet w=0.28u l=0.12u m=1 
 x6 vdd b net14 vdd lppfet w=0.28u l=0.12u m=1 
 x7 vdd a net14 vdd lppfet w=0.28u l=0.12u m=1 
 .ends and3xlts 

 **** 
 *.subckt and4x1ts y a b c d 
 .subckt and4x1ts y a b c d vss vdd
 x0 vdd net17 y vdd lppfet w=0.64u l=0.12u m=1 
 x1 y net17 vss vss lpnfet w=0.46u l=0.12u m=1 
 x2 hnet14 d vss vss lpnfet w=0.32u l=0.12u m=1 
 x3 hnet13 c hnet14 vss lpnfet w=0.32u l=0.12u m=1 
 x4 hnet15 b hnet13 vss lpnfet w=0.32u l=0.12u m=1 
 x5 net17 a hnet15 vss lpnfet w=0.32u l=0.12u m=1 
 x6 vdd d net17 vdd lppfet w=0.28u l=0.12u m=1 
 x7 vdd c net17 vdd lppfet w=0.28u l=0.12u m=1 
 x8 vdd b net17 vdd lppfet w=0.28u l=0.12u m=1 
 x9 vdd a net17 vdd lppfet w=0.28u l=0.12u m=1 
 .ends and4x1ts 

 **** 
 *.subckt and4x2ts y a b c d 
 .subckt and4x2ts y a b c d vss vdd
 x0 vdd net17 y vdd lppfet w=1.28u l=0.12u m=1 
 x1 y net17 vss vss lpnfet w=0.92u l=0.12u m=1 
 x2 hnet14 d vss vss lpnfet w=0.62u l=0.12u m=1 
 x3 hnet13 c hnet14 vss lpnfet w=0.62u l=0.12u m=1 
 x4 hnet15 b hnet13 vss lpnfet w=0.62u l=0.12u m=1 
 x5 net17 a hnet15 vss lpnfet w=0.62u l=0.12u m=1 
 x6 vdd d net17 vdd lppfet w=0.5u l=0.12u m=1 
 x7 vdd c net17 vdd lppfet w=0.5u l=0.12u m=1 
 x8 vdd b net17 vdd lppfet w=0.5u l=0.12u m=1 
 x9 vdd a net17 vdd lppfet w=0.5u l=0.12u m=1 
 .ends and4x2ts 

 **** 
 *.subckt and4x4ts y a b c d 
 .subckt and4x4ts y a b c d vss vdd
 x0 vdd net17 y vdd lppfet w=2.56u l=0.12u m=1 
 x1 y net17 vss vss lpnfet w=1.84u l=0.12u m=1 
 x10 vdd d net17 vdd lppfet w=1.04u l=0.12u m=1 
 x11 vdd c net17 vdd lppfet w=1.04u l=0.12u m=1 
 x12 vdd b net17 vdd lppfet w=1.04u l=0.12u m=1 
 x13 vdd a net17 vdd lppfet w=1.04u l=0.12u m=1 
 x2 hnet13 d vss vss lpnfet w=0.6u l=0.12u m=1 
 x3 hnet14 c hnet13 vss lpnfet w=0.6u l=0.12u m=1 
 x4 hnet15 b hnet14 vss lpnfet w=0.6u l=0.12u m=1 
 x5 net17 a hnet15 vss lpnfet w=0.6u l=0.12u m=1 
 x6 hnet18 d vss vss lpnfet w=0.6u l=0.12u m=1 
 x7 hnet22 c hnet18 vss lpnfet w=0.6u l=0.12u m=1 
 x8 hnet17 b hnet22 vss lpnfet w=0.6u l=0.12u m=1 
 x9 net17 a hnet17 vss lpnfet w=0.6u l=0.12u m=1 
 .ends and4x4ts 

 **** 
 *.subckt and4x6ts y a b c d 
 .subckt and4x6ts y a b c d vss vdd
 x0 vdd net17 y vdd lppfet w=3.84u l=0.12u m=1 
 x1 y net17 vss vss lpnfet w=2.5u l=0.12u m=1 
 x10 vdd d net17 vdd lppfet w=1.5u l=0.12u m=1 
 x11 vdd c net17 vdd lppfet w=1.5u l=0.12u m=1 
 x12 vdd b net17 vdd lppfet w=1.5u l=0.12u m=1 
 x13 vdd a net17 vdd lppfet w=1.5u l=0.12u m=1 
 x2 hnet13 d vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 hnet14 c hnet13 vss lpnfet w=0.92u l=0.12u m=1 
 x4 hnet15 b hnet14 vss lpnfet w=0.92u l=0.12u m=1 
 x5 net17 a hnet15 vss lpnfet w=0.92u l=0.12u m=1 
 x6 hnet18 d vss vss lpnfet w=0.92u l=0.12u m=1 
 x7 hnet22 c hnet18 vss lpnfet w=0.92u l=0.12u m=1 
 x8 hnet17 b hnet22 vss lpnfet w=0.92u l=0.12u m=1 
 x9 net17 a hnet17 vss lpnfet w=0.92u l=0.12u m=1 
 .ends and4x6ts 

 **** 
 *.subckt and4x8ts y a b c d 
 .subckt and4x8ts y a b c d vss vdd
 x0 vdd net17 y vdd lppfet w=5.12u l=0.12u m=1 
 x1 y net17 vss vss lpnfet w=3.42u l=0.12u m=1 
 x10 hnet17 d vss vss lpnfet w=0.8u l=0.12u m=1 
 x11 hnet15 c hnet17 vss lpnfet w=0.8u l=0.12u m=1 
 x12 hnet22 b hnet15 vss lpnfet w=0.8u l=0.12u m=1 
 x13 net17 a hnet22 vss lpnfet w=0.8u l=0.12u m=1 
 x14 vdd d net17 vdd lppfet w=1.92u l=0.12u m=1 
 x15 vdd c net17 vdd lppfet w=1.92u l=0.12u m=1 
 x16 vdd b net17 vdd lppfet w=1.92u l=0.12u m=1 
 x17 vdd a net17 vdd lppfet w=1.92u l=0.12u m=1 
 x2 hnet26 d vss vss lpnfet w=0.8u l=0.12u m=1 
 x3 hnet13 c hnet26 vss lpnfet w=0.8u l=0.12u m=1 
 x4 hnet14 b hnet13 vss lpnfet w=0.8u l=0.12u m=1 
 x5 net17 a hnet14 vss lpnfet w=0.8u l=0.12u m=1 
 x6 hnet18 d vss vss lpnfet w=0.8u l=0.12u m=1 
 x7 hnet24 c hnet18 vss lpnfet w=0.8u l=0.12u m=1 
 x8 hnet23 b hnet24 vss lpnfet w=0.8u l=0.12u m=1 
 x9 net17 a hnet23 vss lpnfet w=0.8u l=0.12u m=1 
 .ends and4x8ts 

 **** 
 *.subckt and4xlts y a b c d 
 .subckt and4xlts y a b c d vss vdd
 x0 vdd net17 y vdd lppfet w=0.42u l=0.12u m=1 
 x1 y net17 vss vss lpnfet w=0.24u l=0.12u m=1 
 x2 hnet14 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet13 c hnet14 vss lpnfet w=0.2u l=0.12u m=1 
 x4 hnet15 b hnet13 vss lpnfet w=0.2u l=0.12u m=1 
 x5 net17 a hnet15 vss lpnfet w=0.2u l=0.12u m=1 
 x6 vdd d net17 vdd lppfet w=0.28u l=0.12u m=1 
 x7 vdd c net17 vdd lppfet w=0.28u l=0.12u m=1 
 x8 vdd b net17 vdd lppfet w=0.28u l=0.12u m=1 
 x9 vdd a net17 vdd lppfet w=0.28u l=0.12u m=1 
 .ends and4xlts 

 **** 
 *.subckt antennats a 
 .subckt antennats a vss vdd
 d0 vss a tdndsx area=0.4898p perim=2.82u 
  **warning** (/user4/spring13/jy2525/lib/subckts.sp:1577) parameter  perim    is ignored
 .ends antennats 

 **** 
 *.subckt ao21x1ts y a0 a1 b0 
 .subckt ao21x1ts y a0 a1 b0 vss vdd
 x0 vdd nmin y vdd lppfet w=0.64u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.46u l=0.12u m=1 
 x2 hnet16 a1 vss vss lpnfet w=0.24u l=0.12u m=1 
 x3 nmin a0 hnet16 vss lpnfet w=0.24u l=0.12u m=1 
 x4 nmin b0 net31 vdd lppfet w=0.34u l=0.12u m=1 
 x5 net31 a1 vdd vdd lppfet w=0.34u l=0.12u m=1 
 x6 net31 a0 vdd vdd lppfet w=0.34u l=0.12u m=1 
 x7 nmin b0 vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends ao21x1ts 

 **** 
 *.subckt ao21x2ts y a0 a1 b0 
 .subckt ao21x2ts y a0 a1 b0 vss vdd
 x0 vdd nmin y vdd lppfet w=1.28u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.86u l=0.12u m=1 
 x2 hnet16 a1 vss vss lpnfet w=0.48u l=0.12u m=1 
 x3 nmin a0 hnet16 vss lpnfet w=0.48u l=0.12u m=1 
 x4 nmin b0 net31 vdd lppfet w=0.66u l=0.12u m=1 
 x5 net31 a1 vdd vdd lppfet w=0.68u l=0.12u m=1 
 x6 net31 a0 vdd vdd lppfet w=0.66u l=0.12u m=1 
 x7 nmin b0 vss vss lpnfet w=0.36u l=0.12u m=1 
 .ends ao21x2ts 

 **** 
 *.subckt ao21x4ts y a0 a1 b0 
 .subckt ao21x4ts y a0 a1 b0 vss vdd
 x0 vdd nmin y vdd lppfet w=2.46u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=1.84u l=0.12u m=1 
 x2 hnet16 a1 vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 nmin a0 hnet16 vss lpnfet w=0.92u l=0.12u m=1 
 x4 nmin b0 net31 vdd lppfet w=1.3u l=0.12u m=1 
 x5 net31 a1 vdd vdd lppfet w=1.3u l=0.12u m=1 
 x6 net31 a0 vdd vdd lppfet w=1.3u l=0.12u m=1 
 x7 nmin b0 vss vss lpnfet w=0.72u l=0.12u m=1 
 .ends ao21x4ts 

 **** 
 *.subckt ao21xlts y a0 a1 b0 
 .subckt ao21xlts y a0 a1 b0 vss vdd
 x0 vdd nmin y vdd lppfet w=0.42u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.24u l=0.12u m=1 
 x2 hnet16 a1 vss vss lpnfet w=0.26u l=0.12u m=1 
 x3 nmin a0 hnet16 vss lpnfet w=0.26u l=0.12u m=1 
 x4 nmin b0 net31 vdd lppfet w=0.3u l=0.12u m=1 
 x5 net31 a1 vdd vdd lppfet w=0.3u l=0.12u m=1 
 x6 net31 a0 vdd vdd lppfet w=0.3u l=0.12u m=1 
 x7 nmin b0 vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends ao21xlts 

 **** 
 *.subckt ao22x1ts y a0 a1 b0 b1 
 .subckt ao22x1ts y a0 a1 b0 b1 vss vdd
 x0 vdd nmin y vdd lppfet w=0.64u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.46u l=0.12u m=1 
 x2 hnet17 a1 vss vss lpnfet w=0.24u l=0.12u m=1 
 x3 nmin a0 hnet17 vss lpnfet w=0.24u l=0.12u m=1 
 x4 hnet21 b1 vss vss lpnfet w=0.24u l=0.12u m=1 
 x5 nmin b0 hnet21 vss lpnfet w=0.24u l=0.12u m=1 
 x6 net32 b0 vdd vdd lppfet w=0.34u l=0.12u m=1 
 x7 nmin a0 net32 vdd lppfet w=0.34u l=0.12u m=1 
 x8 net32 b1 vdd vdd lppfet w=0.34u l=0.12u m=1 
 x9 nmin a1 net32 vdd lppfet w=0.34u l=0.12u m=1 
 .ends ao22x1ts 

 **** 
 *.subckt ao22x2ts y a0 a1 b0 b1 
 .subckt ao22x2ts y a0 a1 b0 b1 vss vdd
 x0 vdd nmin y vdd lppfet w=1.28u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.86u l=0.12u m=1 
 x2 hnet17 a1 vss vss lpnfet w=0.48u l=0.12u m=1 
 x3 nmin a0 hnet17 vss lpnfet w=0.48u l=0.12u m=1 
 x4 hnet21 b1 vss vss lpnfet w=0.48u l=0.12u m=1 
 x5 nmin b0 hnet21 vss lpnfet w=0.48u l=0.12u m=1 
 x6 net32 b0 vdd vdd lppfet w=0.68u l=0.12u m=1 
 x7 nmin a0 net32 vdd lppfet w=0.62u l=0.12u m=1 
 x8 net32 b1 vdd vdd lppfet w=0.68u l=0.12u m=1 
 x9 nmin a1 net32 vdd lppfet w=0.62u l=0.12u m=1 
 .ends ao22x2ts 

 **** 
 *.subckt ao22x4ts y a0 a1 b0 b1 
 .subckt ao22x4ts y a0 a1 b0 b1 vss vdd
 x0 vdd nmin y vdd lppfet w=2.34u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=1.84u l=0.12u m=1 
 x2 hnet17 a1 vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 nmin a0 hnet17 vss lpnfet w=0.92u l=0.12u m=1 
 x4 hnet21 b1 vss vss lpnfet w=0.92u l=0.12u m=1 
 x5 nmin b0 hnet21 vss lpnfet w=0.92u l=0.12u m=1 
 x6 net32 b0 vdd vdd lppfet w=1.3u l=0.12u m=1 
 x7 nmin a0 net32 vdd lppfet w=1.3u l=0.12u m=1 
 x8 net32 b1 vdd vdd lppfet w=1.3u l=0.12u m=1 
 x9 nmin a1 net32 vdd lppfet w=1.3u l=0.12u m=1 
 .ends ao22x4ts 

 **** 
 *.subckt ao22xlts y a0 a1 b0 b1 
 .subckt ao22xlts y a0 a1 b0 b1 vss vdd
 x0 vdd nmin y vdd lppfet w=0.42u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.24u l=0.12u m=1 
 x2 hnet17 a1 vss vss lpnfet w=0.26u l=0.12u m=1 
 x3 nmin a0 hnet17 vss lpnfet w=0.26u l=0.12u m=1 
 x4 hnet21 b1 vss vss lpnfet w=0.26u l=0.12u m=1 
 x5 nmin b0 hnet21 vss lpnfet w=0.26u l=0.12u m=1 
 x6 net32 b0 vdd vdd lppfet w=0.3u l=0.12u m=1 
 x7 nmin a0 net32 vdd lppfet w=0.3u l=0.12u m=1 
 x8 net32 b1 vdd vdd lppfet w=0.3u l=0.12u m=1 
 x9 nmin a1 net32 vdd lppfet w=0.3u l=0.12u m=1 
 .ends ao22xlts 

 **** 
 *.subckt aoi211x1ts y a0 a1 b0 c0 
 .subckt aoi211x1ts y a0 a1 b0 c0 vss vdd
 x0 hnet15 a1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x1 y a0 hnet15 vss lpnfet w=0.6u l=0.12u m=1 
 x2 y b0 net29 vdd lppfet w=1.02u l=0.12u m=1 
 x3 net29 c0 net35 vdd lppfet w=1.02u l=0.12u m=1 
 x4 net35 a1 vdd vdd lppfet w=1.02u l=0.12u m=1 
 x5 net35 a0 vdd vdd lppfet w=1.02u l=0.12u m=1 
 x6 y c0 vss vss lpnfet w=0.46u l=0.12u m=1 
 x7 y b0 vss vss lpnfet w=0.46u l=0.12u m=1 
 .ends aoi211x1ts 

 **** 
 *.subckt aoi211x2ts y a0 a1 b0 c0 
 .subckt aoi211x2ts y a0 a1 b0 c0 vss vdd
 x0 hnet17 a1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x1 y a0 hnet17 vss lpnfet w=0.6u l=0.12u m=1 
 x10 y c0 vss vss lpnfet w=0.92u l=0.12u m=1 
 x11 y b0 vss vss lpnfet w=0.92u l=0.12u m=1 
 x2 hnet13 a1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x3 y a0 hnet13 vss lpnfet w=0.6u l=0.12u m=1 
 x4 y b0 net30 vdd lppfet w=1.04u l=0.12u m=1 
 x5 net30 c0 net42 vdd lppfet w=1.04u l=0.12u m=1 
 x6 y b0 net36 vdd lppfet w=1.04u l=0.12u m=1 
 x7 net36 c0 net42 vdd lppfet w=1.04u l=0.12u m=1 
 x8 net42 a1 vdd vdd lppfet w=2.06u l=0.12u m=1 
 x9 net42 a0 vdd vdd lppfet w=2.06u l=0.12u m=1 
 .ends aoi211x2ts 

 **** 
 *.subckt aoi211x4ts y a0 a1 b0 c0 
 .subckt aoi211x4ts y a0 a1 b0 c0 vss vdd
 x0 vdd net26 net22 vdd lppfet w=1.02u l=0.12u m=1 
 x1 net22 net26 vss vss lpnfet w=0.74u l=0.12u m=1 
 x10 net26 c0 vss vss lpnfet w=0.3u l=0.12u m=1 
 x11 net26 b0 vss vss lpnfet w=0.3u l=0.12u m=1 
 x2 vdd net22 y vdd lppfet w=2.56u l=0.12u m=1 
 x3 y net22 vss vss lpnfet w=1.84u l=0.12u m=1 
 x4 hnet21 a1 vss vss lpnfet w=0.38u l=0.12u m=1 
 x5 net26 a0 hnet21 vss lpnfet w=0.38u l=0.12u m=1 
 x6 net26 b0 net34 vdd lppfet w=0.66u l=0.12u m=1 
 x7 net34 c0 net40 vdd lppfet w=0.66u l=0.12u m=1 
 x8 net40 a1 vdd vdd lppfet w=0.66u l=0.12u m=1 
 x9 net40 a0 vdd vdd lppfet w=0.66u l=0.12u m=1 
 .ends aoi211x4ts 

 **** 
 *.subckt aoi211xlts y a0 a1 b0 c0 
 .subckt aoi211xlts y a0 a1 b0 c0 vss vdd
 x0 hnet15 a1 vss vss lpnfet w=0.4u l=0.12u m=1 
 x1 y a0 hnet15 vss lpnfet w=0.4u l=0.12u m=1 
 x2 y b0 net29 vdd lppfet w=0.54u l=0.12u m=1 
 x3 net29 c0 net35 vdd lppfet w=0.54u l=0.12u m=1 
 x4 net35 a1 vdd vdd lppfet w=0.54u l=0.12u m=1 
 x5 net35 a0 vdd vdd lppfet w=0.54u l=0.12u m=1 
 x6 y c0 vss vss lpnfet w=0.24u l=0.12u m=1 
 x7 y b0 vss vss lpnfet w=0.24u l=0.12u m=1 
 .ends aoi211xlts 

 **** 
 *.subckt aoi21x1ts y a0 a1 b0 
 .subckt aoi21x1ts y a0 a1 b0 vss vdd
 x0 hnet13 a1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x1 y a0 hnet13 vss lpnfet w=0.6u l=0.12u m=1 
 x2 y b0 net29 vdd lppfet w=0.84u l=0.12u m=1 
 x3 net29 a1 vdd vdd lppfet w=0.84u l=0.12u m=1 
 x4 net29 a0 vdd vdd lppfet w=0.84u l=0.12u m=1 
 x5 y b0 vss vss lpnfet w=0.46u l=0.12u m=1 
 .ends aoi21x1ts 

 **** 
 *.subckt aoi21x2ts y a0 a1 b0 
 .subckt aoi21x2ts y a0 a1 b0 vss vdd
 x0 hnet14 a1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x1 y a0 hnet14 vss lpnfet w=0.6u l=0.12u m=1 
 x2 hnet10 a1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x3 y a0 hnet10 vss lpnfet w=0.6u l=0.12u m=1 
 x4 y b0 net29 vdd lppfet w=1.68u l=0.12u m=1 
 x5 net29 a1 vdd vdd lppfet w=1.68u l=0.12u m=1 
 x6 net29 a0 vdd vdd lppfet w=1.68u l=0.12u m=1 
 x7 y b0 vss vss lpnfet w=0.92u l=0.12u m=1 
 .ends aoi21x2ts 

 **** 
 *.subckt aoi21x4ts y a0 a1 b0 
 .subckt aoi21x4ts y a0 a1 b0 vss vdd
 x0 hnet15 a1 vss vss lpnfet w=0.82u l=0.12u m=1 
 x1 y a0 hnet15 vss lpnfet w=0.82u l=0.12u m=1 
 x2 hnet10 a1 vss vss lpnfet w=0.82u l=0.12u m=1 
 x3 y a0 hnet10 vss lpnfet w=0.82u l=0.12u m=1 
 x4 hnet14 a1 vss vss lpnfet w=0.82u l=0.12u m=1 
 x5 y a0 hnet14 vss lpnfet w=0.82u l=0.12u m=1 
 x6 y b0 net29 vdd lppfet w=3.36u l=0.12u m=1 
 x7 net29 a1 vdd vdd lppfet w=3.36u l=0.12u m=1 
 x8 net29 a0 vdd vdd lppfet w=3.36u l=0.12u m=1 
 x9 y b0 vss vss lpnfet w=1.84u l=0.12u m=1 
 .ends aoi21x4ts 

 **** 
 *.subckt aoi21xlts y a0 a1 b0 
 .subckt aoi21xlts y a0 a1 b0 vss vdd
 x0 hnet13 a1 vss vss lpnfet w=0.4u l=0.12u m=1 
 x1 y a0 hnet13 vss lpnfet w=0.4u l=0.12u m=1 
 x2 y b0 net29 vdd lppfet w=0.44u l=0.12u m=1 
 x3 net29 a1 vdd vdd lppfet w=0.44u l=0.12u m=1 
 x4 net29 a0 vdd vdd lppfet w=0.44u l=0.12u m=1 
 x5 y b0 vss vss lpnfet w=0.24u l=0.12u m=1 
 .ends aoi21xlts 

 **** 
 *.subckt aoi221x1ts y a0 a1 b0 b1 c0 
 .subckt aoi221x1ts y a0 a1 b0 b1 c0 vss vdd
 x0 hnet16 b1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x1 y b0 hnet16 vss lpnfet w=0.6u l=0.12u m=1 
 x2 hnet20 a1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x3 y a0 hnet20 vss lpnfet w=0.6u l=0.12u m=1 
 x4 y c0 vss vss lpnfet w=0.46u l=0.12u m=1 
 x5 y c0 net46 vdd lppfet w=1.02u l=0.12u m=1 
 x6 net43 b0 vdd vdd lppfet w=1.02u l=0.12u m=1 
 x7 net46 a0 net43 vdd lppfet w=1.02u l=0.12u m=1 
 x8 net43 b1 vdd vdd lppfet w=1.02u l=0.12u m=1 
 x9 net46 a1 net43 vdd lppfet w=1.02u l=0.12u m=1 
 .ends aoi221x1ts 

 **** 
 *.subckt aoi221x2ts y a0 a1 b0 b1 c0 
 .subckt aoi221x2ts y a0 a1 b0 b1 c0 vss vdd
 x0 hnet17 b1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x1 y b0 hnet17 vss lpnfet w=0.6u l=0.12u m=1 
 x10 net43 b0 vdd vdd lppfet w=2.06u l=0.12u m=1 
 x11 net46 a0 net43 vdd lppfet w=2.06u l=0.12u m=1 
 x12 net43 b1 vdd vdd lppfet w=2.06u l=0.12u m=1 
 x13 net46 a1 net43 vdd lppfet w=2.06u l=0.12u m=1 
 x2 hnet13 b1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x3 y b0 hnet13 vss lpnfet w=0.6u l=0.12u m=1 
 x4 hnet22 a1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x5 y a0 hnet22 vss lpnfet w=0.6u l=0.12u m=1 
 x6 hnet18 a1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x7 y a0 hnet18 vss lpnfet w=0.6u l=0.12u m=1 
 x8 y c0 vss vss lpnfet w=0.92u l=0.12u m=1 
 x9 y c0 net46 vdd lppfet w=2.06u l=0.12u m=1 
 .ends aoi221x2ts 

 **** 
 *.subckt aoi221x4ts y a0 a1 b0 b1 c0 
 .subckt aoi221x4ts y a0 a1 b0 b1 c0 vss vdd
 x0 vdd nmin net24 vdd lppfet w=1.02u l=0.12u m=1 
 x1 net24 nmin vss vss lpnfet w=0.74u l=0.12u m=1 
 x10 net48 b0 vdd vdd lppfet w=0.66u l=0.12u m=1 
 x11 net51 a0 net48 vdd lppfet w=0.66u l=0.12u m=1 
 x12 net48 b1 vdd vdd lppfet w=0.66u l=0.12u m=1 
 x13 net51 a1 net48 vdd lppfet w=0.66u l=0.12u m=1 
 x2 vdd net24 y vdd lppfet w=2.56u l=0.12u m=1 
 x3 y net24 vss vss lpnfet w=1.84u l=0.12u m=1 
 x4 hnet22 b1 vss vss lpnfet w=0.38u l=0.12u m=1 
 x5 nmin b0 hnet22 vss lpnfet w=0.38u l=0.12u m=1 
 x6 hnet26 a1 vss vss lpnfet w=0.38u l=0.12u m=1 
 x7 nmin a0 hnet26 vss lpnfet w=0.38u l=0.12u m=1 
 x8 nmin c0 vss vss lpnfet w=0.3u l=0.12u m=1 
 x9 nmin c0 net51 vdd lppfet w=0.66u l=0.12u m=1 
 .ends aoi221x4ts 

 **** 
 *.subckt aoi221xlts y a0 a1 b0 b1 c0 
 .subckt aoi221xlts y a0 a1 b0 b1 c0 vss vdd
 x0 hnet16 b1 vss vss lpnfet w=0.4u l=0.12u m=1 
 x1 y b0 hnet16 vss lpnfet w=0.4u l=0.12u m=1 
 x2 hnet20 a1 vss vss lpnfet w=0.4u l=0.12u m=1 
 x3 y a0 hnet20 vss lpnfet w=0.4u l=0.12u m=1 
 x4 y c0 vss vss lpnfet w=0.24u l=0.12u m=1 
 x5 y c0 net46 vdd lppfet w=0.54u l=0.12u m=1 
 x6 net43 b0 vdd vdd lppfet w=0.54u l=0.12u m=1 
 x7 net46 a0 net43 vdd lppfet w=0.54u l=0.12u m=1 
 x8 net43 b1 vdd vdd lppfet w=0.54u l=0.12u m=1 
 x9 net46 a1 net43 vdd lppfet w=0.54u l=0.12u m=1 
 .ends aoi221xlts 

 **** 
 *.subckt aoi222x1ts y a0 a1 b0 b1 c0 c1 
 .subckt aoi222x1ts y a0 a1 b0 b1 c0 c1 vss vdd
 x0 hnet16 c1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x1 y c0 hnet16 vss lpnfet w=0.6u l=0.12u m=1 
 x10 net55 c1 vdd vdd lppfet w=1.02u l=0.12u m=1 
 x11 y a1 net46 vdd lppfet w=1.02u l=0.12u m=1 
 x2 hnet21 b1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x3 y b0 hnet21 vss lpnfet w=0.6u l=0.12u m=1 
 x4 hnet26 a1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x5 y a0 hnet26 vss lpnfet w=0.6u l=0.12u m=1 
 x6 net46 b0 net55 vdd lppfet w=1.02u l=0.12u m=1 
 x7 net46 b1 net55 vdd lppfet w=1.02u l=0.12u m=1 
 x8 net55 c0 vdd vdd lppfet w=1.02u l=0.12u m=1 
 x9 y a0 net46 vdd lppfet w=1.02u l=0.12u m=1 
 .ends aoi222x1ts 

 **** 
 *.subckt aoi222x2ts y a0 a1 b0 b1 c0 c1 
 .subckt aoi222x2ts y a0 a1 b0 b1 c0 c1 vss vdd
 x0 hnet18 c1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x1 y c0 hnet18 vss lpnfet w=0.6u l=0.12u m=1 
 x10 hnet25 a1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x11 y a0 hnet25 vss lpnfet w=0.6u l=0.12u m=1 
 x12 net46 b0 net55 vdd lppfet w=2.06u l=0.12u m=1 
 x13 net46 b1 net55 vdd lppfet w=2.06u l=0.12u m=1 
 x14 net55 c0 vdd vdd lppfet w=2.06u l=0.12u m=1 
 x15 y a0 net46 vdd lppfet w=2.06u l=0.12u m=1 
 x16 net55 c1 vdd vdd lppfet w=2.06u l=0.12u m=1 
 x17 y a1 net46 vdd lppfet w=2.06u l=0.12u m=1 
 x2 hnet13 c1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x3 y c0 hnet13 vss lpnfet w=0.6u l=0.12u m=1 
 x4 hnet24 b1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x5 y b0 hnet24 vss lpnfet w=0.6u l=0.12u m=1 
 x6 hnet19 b1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x7 y b0 hnet19 vss lpnfet w=0.6u l=0.12u m=1 
 x8 hnet30 a1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x9 y a0 hnet30 vss lpnfet w=0.6u l=0.12u m=1 
 .ends aoi222x2ts 

 **** 
 *.subckt aoi222x4ts y a0 a1 b0 b1 c0 c1 
 .subckt aoi222x4ts y a0 a1 b0 b1 c0 c1 vss vdd
 x0 vdd nmin net33 vdd lppfet w=1.02u l=0.12u m=1 
 x1 net33 nmin vss vss lpnfet w=0.74u l=0.12u m=1 
 x10 net51 b0 net60 vdd lppfet w=0.66u l=0.12u m=1 
 x11 net51 b1 net60 vdd lppfet w=0.66u l=0.12u m=1 
 x12 net60 c0 vdd vdd lppfet w=0.66u l=0.12u m=1 
 x13 nmin a0 net51 vdd lppfet w=0.66u l=0.12u m=1 
 x14 net60 c1 vdd vdd lppfet w=0.66u l=0.12u m=1 
 x15 nmin a1 net51 vdd lppfet w=0.66u l=0.12u m=1 
 x2 vdd net33 y vdd lppfet w=2.56u l=0.12u m=1 
 x3 y net33 vss vss lpnfet w=1.84u l=0.12u m=1 
 x4 hnet24 c1 vss vss lpnfet w=0.38u l=0.12u m=1 
 x5 nmin c0 hnet24 vss lpnfet w=0.38u l=0.12u m=1 
 x6 hnet28 b1 vss vss lpnfet w=0.38u l=0.12u m=1 
 x7 nmin b0 hnet28 vss lpnfet w=0.38u l=0.12u m=1 
 x8 hnet32 a1 vss vss lpnfet w=0.38u l=0.12u m=1 
 x9 nmin a0 hnet32 vss lpnfet w=0.38u l=0.12u m=1 
 .ends aoi222x4ts 

 **** 
 *.subckt aoi222xlts y a0 a1 b0 b1 c0 c1 
 .subckt aoi222xlts y a0 a1 b0 b1 c0 c1 vss vdd
 x0 hnet16 c1 vss vss lpnfet w=0.4u l=0.12u m=1 
 x1 y c0 hnet16 vss lpnfet w=0.4u l=0.12u m=1 
 x10 y a0 net49 vdd lppfet w=0.54u l=0.12u m=1 
 x11 y a1 net49 vdd lppfet w=0.54u l=0.12u m=1 
 x2 hnet21 b1 vss vss lpnfet w=0.4u l=0.12u m=1 
 x3 y b0 hnet21 vss lpnfet w=0.4u l=0.12u m=1 
 x4 hnet26 a1 vss vss lpnfet w=0.4u l=0.12u m=1 
 x5 y a0 hnet26 vss lpnfet w=0.4u l=0.12u m=1 
 x6 net43 c1 vdd vdd lppfet w=0.54u l=0.12u m=1 
 x7 net49 b0 net43 vdd lppfet w=0.54u l=0.12u m=1 
 x8 net49 b1 net43 vdd lppfet w=0.54u l=0.12u m=1 
 x9 net43 c0 vdd vdd lppfet w=0.54u l=0.12u m=1 
 .ends aoi222xlts 

 **** 
 *.subckt aoi22x1ts y a0 a1 b0 b1 
 .subckt aoi22x1ts y a0 a1 b0 b1 vss vdd
 x0 hnet13 a1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x1 y a0 hnet13 vss lpnfet w=0.6u l=0.12u m=1 
 x2 hnet18 b1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x3 y b0 hnet18 vss lpnfet w=0.6u l=0.12u m=1 
 x4 net30 b0 vdd vdd lppfet w=0.84u l=0.12u m=1 
 x5 y a0 net30 vdd lppfet w=0.84u l=0.12u m=1 
 x6 net30 b1 vdd vdd lppfet w=0.84u l=0.12u m=1 
 x7 y a1 net30 vdd lppfet w=0.84u l=0.12u m=1 
 .ends aoi22x1ts 

 **** 
 *.subckt aoi22x2ts y a0 a1 b0 b1 
 .subckt aoi22x2ts y a0 a1 b0 b1 vss vdd
 x0 hnet15 a1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x1 y a0 hnet15 vss lpnfet w=0.6u l=0.12u m=1 
 x10 net30 b1 vdd vdd lppfet w=1.68u l=0.12u m=1 
 x11 y a1 net30 vdd lppfet w=1.68u l=0.12u m=1 
 x2 hnet10 a1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x3 y a0 hnet10 vss lpnfet w=0.6u l=0.12u m=1 
 x4 hnet21 b1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x5 y b0 hnet21 vss lpnfet w=0.6u l=0.12u m=1 
 x6 hnet16 b1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x7 y b0 hnet16 vss lpnfet w=0.6u l=0.12u m=1 
 x8 net30 b0 vdd vdd lppfet w=1.68u l=0.12u m=1 
 x9 y a0 net30 vdd lppfet w=1.68u l=0.12u m=1 
 .ends aoi22x2ts 

 **** 
 *.subckt aoi22x4ts y a0 a1 b0 b1 
 .subckt aoi22x4ts y a0 a1 b0 b1 vss vdd
 x0 hnet16 a1 vss vss lpnfet w=0.82u l=0.12u m=1 
 x1 y a0 hnet16 vss lpnfet w=0.82u l=0.12u m=1 
 x10 hnet22 b1 vss vss lpnfet w=0.82u l=0.12u m=1 
 x11 y b0 hnet22 vss lpnfet w=0.82u l=0.12u m=1 
 x12 net30 b0 vdd vdd lppfet w=3.36u l=0.12u m=1 
 x13 y a0 net30 vdd lppfet w=3.36u l=0.12u m=1 
 x14 net30 b1 vdd vdd lppfet w=3.36u l=0.12u m=1 
 x15 y a1 net30 vdd lppfet w=3.36u l=0.12u m=1 
 x2 hnet10 a1 vss vss lpnfet w=0.82u l=0.12u m=1 
 x3 y a0 hnet10 vss lpnfet w=0.82u l=0.12u m=1 
 x4 hnet15 a1 vss vss lpnfet w=0.82u l=0.12u m=1 
 x5 y a0 hnet15 vss lpnfet w=0.82u l=0.12u m=1 
 x6 hnet23 b1 vss vss lpnfet w=0.82u l=0.12u m=1 
 x7 y b0 hnet23 vss lpnfet w=0.82u l=0.12u m=1 
 x8 hnet17 b1 vss vss lpnfet w=0.82u l=0.12u m=1 
 x9 y b0 hnet17 vss lpnfet w=0.82u l=0.12u m=1 
 .ends aoi22x4ts 

 **** 
 *.subckt aoi22xlts y a0 a1 b0 b1 
 .subckt aoi22xlts y a0 a1 b0 b1 vss vdd
 x0 hnet13 a1 vss vss lpnfet w=0.4u l=0.12u m=1 
 x1 y a0 hnet13 vss lpnfet w=0.4u l=0.12u m=1 
 x2 hnet18 b1 vss vss lpnfet w=0.4u l=0.12u m=1 
 x3 y b0 hnet18 vss lpnfet w=0.4u l=0.12u m=1 
 x4 net30 b0 vdd vdd lppfet w=0.44u l=0.12u m=1 
 x5 y a0 net30 vdd lppfet w=0.44u l=0.12u m=1 
 x6 net30 b1 vdd vdd lppfet w=0.44u l=0.12u m=1 
 x7 y a1 net30 vdd lppfet w=0.44u l=0.12u m=1 
 .ends aoi22xlts 

 **** 
 *.subckt aoi2bb1x1ts y a0n a1n b0 
 .subckt aoi2bb1x1ts y a0n a1n b0 vss vdd
 x0 y b0 vss vss lpnfet w=0.46u l=0.12u m=1 
 x1 y net13 vss vss lpnfet w=0.46u l=0.12u m=1 
 x2 vdd b0 hnet9 vdd lppfet w=0.84u l=0.12u m=1 
 x3 hnet9 net13 y vdd lppfet w=0.84u l=0.12u m=1 
 x4 net13 a1n vss vss lpnfet w=0.22u l=0.12u m=1 
 x5 net13 a0n vss vss lpnfet w=0.22u l=0.12u m=1 
 x6 vdd a1n hnet15 vdd lppfet w=0.4u l=0.12u m=1 
 x7 hnet15 a0n net13 vdd lppfet w=0.4u l=0.12u m=1 
 .ends aoi2bb1x1ts 

 **** 
 *.subckt aoi2bb1x2ts y a0n a1n b0 
 .subckt aoi2bb1x2ts y a0n a1n b0 vss vdd
 x0 y b0 vss vss lpnfet w=0.92u l=0.12u m=1 
 x1 y net13 vss vss lpnfet w=0.92u l=0.12u m=1 
 x2 vdd b0 hnet10 vdd lppfet w=0.8u l=0.12u m=1 
 x3 hnet10 net13 y vdd lppfet w=0.8u l=0.12u m=1 
 x4 vdd b0 hnet8 vdd lppfet w=0.8u l=0.12u m=1 
 x5 hnet8 net13 y vdd lppfet w=0.8u l=0.12u m=1 
 x6 net13 a1n vss vss lpnfet w=0.44u l=0.12u m=1 
 x7 net13 a0n vss vss lpnfet w=0.44u l=0.12u m=1 
 x8 vdd a1n hnet16 vdd lppfet w=0.8u l=0.12u m=1 
 x9 hnet16 a0n net13 vdd lppfet w=0.8u l=0.12u m=1 
 .ends aoi2bb1x2ts 

 **** 
 *.subckt aoi2bb1x4ts y a0n a1n b0 
 .subckt aoi2bb1x4ts y a0n a1n b0 vss vdd
 x0 y b0 vss vss lpnfet w=1.84u l=0.12u m=1 
 x1 y net13 vss vss lpnfet w=1.84u l=0.12u m=1 
 x10 vdd a1n hnet18 vdd lppfet w=0.8u l=0.12u m=1 
 x11 hnet18 a0n net13 vdd lppfet w=0.8u l=0.12u m=1 
 x12 vdd a1n hnet16 vdd lppfet w=0.8u l=0.12u m=1 
 x13 hnet16 a0n net13 vdd lppfet w=0.8u l=0.12u m=1 
 x2 vdd b0 hnet10 vdd lppfet w=1.12u l=0.12u m=1 
 x3 hnet10 net13 y vdd lppfet w=1.12u l=0.12u m=1 
 x4 vdd b0 hnet8 vdd lppfet w=1.12u l=0.12u m=1 
 x5 hnet8 net13 y vdd lppfet w=1.12u l=0.12u m=1 
 x6 vdd b0 hnet12 vdd lppfet w=1.12u l=0.12u m=1 
 x7 hnet12 net13 y vdd lppfet w=1.12u l=0.12u m=1 
 x8 net13 a1n vss vss lpnfet w=0.78u l=0.12u m=1 
 x9 net13 a0n vss vss lpnfet w=0.78u l=0.12u m=1 
 .ends aoi2bb1x4ts 

 **** 
 *.subckt aoi2bb1xlts y a0n a1n b0 
 .subckt aoi2bb1xlts y a0n a1n b0 vss vdd
 x0 y b0 vss vss lpnfet w=0.24u l=0.12u m=1 
 x1 y net13 vss vss lpnfet w=0.24u l=0.12u m=1 
 x2 vdd b0 hnet9 vdd lppfet w=0.44u l=0.12u m=1 
 x3 hnet9 net13 y vdd lppfet w=0.44u l=0.12u m=1 
 x4 net13 a1n vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 net13 a0n vss vss lpnfet w=0.2u l=0.12u m=1 
 x6 vdd a1n hnet15 vdd lppfet w=0.3u l=0.12u m=1 
 x7 hnet15 a0n net13 vdd lppfet w=0.3u l=0.12u m=1 
 .ends aoi2bb1xlts 

 **** 
 *.subckt aoi2bb2x1ts y a0n a1n b0 b1 
 .subckt aoi2bb2x1ts y a0n a1n b0 b1 vss vdd
 x0 hnet15 b1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x1 y b0 hnet15 vss lpnfet w=0.6u l=0.12u m=1 
 x2 nmin1 a1n vss vss lpnfet w=0.22u l=0.12u m=1 
 x3 nmin1 a0n vss vss lpnfet w=0.22u l=0.12u m=1 
 x4 vdd a1n hnet17 vdd lppfet w=0.4u l=0.12u m=1 
 x5 hnet17 a0n nmin1 vdd lppfet w=0.4u l=0.12u m=1 
 x6 y nmin1 vss vss lpnfet w=0.46u l=0.12u m=1 
 x7 y nmin1 net41 vdd lppfet w=0.84u l=0.12u m=1 
 x8 net41 b0 vdd vdd lppfet w=0.84u l=0.12u m=1 
 x9 net41 b1 vdd vdd lppfet w=0.72u l=0.12u m=1 
 .ends aoi2bb2x1ts 

 **** 
 *.subckt aoi2bb2x2ts y a0n a1n b0 b1 
 .subckt aoi2bb2x2ts y a0n a1n b0 b1 vss vdd
 x0 hnet16 b1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x1 y b0 hnet16 vss lpnfet w=0.6u l=0.12u m=1 
 x10 net41 b0 vdd vdd lppfet w=1.68u l=0.12u m=1 
 x11 net41 b1 vdd vdd lppfet w=1.68u l=0.12u m=1 
 x2 hnet12 b1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x3 y b0 hnet12 vss lpnfet w=0.6u l=0.12u m=1 
 x4 nmin1 a1n vss vss lpnfet w=0.44u l=0.12u m=1 
 x5 nmin1 a0n vss vss lpnfet w=0.44u l=0.12u m=1 
 x6 vdd a1n hnet18 vdd lppfet w=0.8u l=0.12u m=1 
 x7 hnet18 a0n nmin1 vdd lppfet w=0.8u l=0.12u m=1 
 x8 y nmin1 vss vss lpnfet w=0.92u l=0.12u m=1 
 x9 y nmin1 net41 vdd lppfet w=1.68u l=0.12u m=1 
 .ends aoi2bb2x2ts 

 **** 
 *.subckt aoi2bb2x4ts y a0n a1n b0 b1 
 .subckt aoi2bb2x4ts y a0n a1n b0 b1 vss vdd
 x0 hnet17 b1 vss vss lpnfet w=0.82u l=0.12u m=1 
 x1 y b0 hnet17 vss lpnfet w=0.82u l=0.12u m=1 
 x10 vdd a1n hnet18 vdd lppfet w=0.8u l=0.12u m=1 
 x11 hnet18 a0n nmin1 vdd lppfet w=0.8u l=0.12u m=1 
 x12 y nmin1 vss vss lpnfet w=1.84u l=0.12u m=1 
 x13 y nmin1 net41 vdd lppfet w=3.36u l=0.12u m=1 
 x14 net41 b0 vdd vdd lppfet w=3.36u l=0.12u m=1 
 x15 net41 b1 vdd vdd lppfet w=3.36u l=0.12u m=1 
 x2 hnet12 b1 vss vss lpnfet w=0.82u l=0.12u m=1 
 x3 y b0 hnet12 vss lpnfet w=0.82u l=0.12u m=1 
 x4 hnet16 b1 vss vss lpnfet w=0.82u l=0.12u m=1 
 x5 y b0 hnet16 vss lpnfet w=0.82u l=0.12u m=1 
 x6 nmin1 a1n vss vss lpnfet w=0.86u l=0.12u m=1 
 x7 nmin1 a0n vss vss lpnfet w=0.86u l=0.12u m=1 
 x8 vdd a1n hnet20 vdd lppfet w=0.8u l=0.12u m=1 
 x9 hnet20 a0n nmin1 vdd lppfet w=0.8u l=0.12u m=1 
 .ends aoi2bb2x4ts 

 **** 
 *.subckt aoi2bb2xlts y a0n a1n b0 b1 
 .subckt aoi2bb2xlts y a0n a1n b0 b1 vss vdd
 x0 hnet15 b1 vss vss lpnfet w=0.4u l=0.12u m=1 
 x1 y b0 hnet15 vss lpnfet w=0.4u l=0.12u m=1 
 x2 nmin1 a1n vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 nmin1 a0n vss vss lpnfet w=0.2u l=0.12u m=1 
 x4 vdd a1n hnet17 vdd lppfet w=0.3u l=0.12u m=1 
 x5 hnet17 a0n nmin1 vdd lppfet w=0.3u l=0.12u m=1 
 x6 y nmin1 vss vss lpnfet w=0.24u l=0.12u m=1 
 x7 y nmin1 net41 vdd lppfet w=0.44u l=0.12u m=1 
 x8 net41 b0 vdd vdd lppfet w=0.44u l=0.12u m=1 
 x9 net41 b1 vdd vdd lppfet w=0.44u l=0.12u m=1 
 .ends aoi2bb2xlts 

 **** 
 *.subckt aoi31x1ts y a0 a1 a2 b0 
 .subckt aoi31x1ts y a0 a1 a2 b0 vss vdd
 x0 hnet16 a2 vss vss lpnfet w=0.66u l=0.12u m=1 
 x1 hnet11 a1 hnet16 vss lpnfet w=0.66u l=0.12u m=1 
 x2 y a0 hnet11 vss lpnfet w=0.66u l=0.12u m=1 
 x3 net23 a0 vdd vdd lppfet w=0.84u l=0.12u m=1 
 x4 y b0 net23 vdd lppfet w=0.84u l=0.12u m=1 
 x5 net23 a2 vdd vdd lppfet w=0.84u l=0.12u m=1 
 x6 net23 a1 vdd vdd lppfet w=0.84u l=0.12u m=1 
 x7 y b0 vss vss lpnfet w=0.46u l=0.12u m=1 
 .ends aoi31x1ts 

 **** 
 *.subckt aoi31x2ts y a0 a1 a2 b0 
 .subckt aoi31x2ts y a0 a1 a2 b0 vss vdd
 x0 hnet17 a2 vss vss lpnfet w=0.72u l=0.12u m=1 
 x1 hnet11 a1 hnet17 vss lpnfet w=0.72u l=0.12u m=1 
 x10 y b0 vss vss lpnfet w=0.92u l=0.12u m=1 
 x2 y a0 hnet11 vss lpnfet w=0.72u l=0.12u m=1 
 x3 hnet18 a2 vss vss lpnfet w=0.72u l=0.12u m=1 
 x4 hnet13 a1 hnet18 vss lpnfet w=0.72u l=0.12u m=1 
 x5 y a0 hnet13 vss lpnfet w=0.72u l=0.12u m=1 
 x6 net23 a0 vdd vdd lppfet w=1.68u l=0.12u m=1 
 x7 y b0 net23 vdd lppfet w=1.68u l=0.12u m=1 
 x8 net23 a2 vdd vdd lppfet w=1.68u l=0.12u m=1 
 x9 net23 a1 vdd vdd lppfet w=1.68u l=0.12u m=1 
 .ends aoi31x2ts 

 **** 
 *.subckt aoi31x4ts y a0 a1 a2 b0 
 .subckt aoi31x4ts y a0 a1 a2 b0 vss vdd
 x0 vdd net22 net18 vdd lppfet w=1.02u l=0.12u m=1 
 x1 net18 net22 vss vss lpnfet w=0.74u l=0.12u m=1 
 x10 net28 a1 vdd vdd lppfet w=0.54u l=0.12u m=1 
 x11 net22 b0 vss vss lpnfet w=0.3u l=0.12u m=1 
 x2 vdd net18 y vdd lppfet w=2.56u l=0.12u m=1 
 x3 y net18 vss vss lpnfet w=1.84u l=0.12u m=1 
 x4 hnet22 a2 vss vss lpnfet w=0.46u l=0.12u m=1 
 x5 hnet17 a1 hnet22 vss lpnfet w=0.46u l=0.12u m=1 
 x6 net22 a0 hnet17 vss lpnfet w=0.46u l=0.12u m=1 
 x7 net28 a0 vdd vdd lppfet w=0.54u l=0.12u m=1 
 x8 net22 b0 net28 vdd lppfet w=0.54u l=0.12u m=1 
 x9 net28 a2 vdd vdd lppfet w=0.54u l=0.12u m=1 
 .ends aoi31x4ts 

 **** 
 *.subckt aoi31xlts y a0 a1 a2 b0 
 .subckt aoi31xlts y a0 a1 a2 b0 vss vdd
 x0 hnet16 a2 vss vss lpnfet w=0.48u l=0.12u m=1 
 x1 hnet11 a1 hnet16 vss lpnfet w=0.48u l=0.12u m=1 
 x2 y a0 hnet11 vss lpnfet w=0.48u l=0.12u m=1 
 x3 net23 a0 vdd vdd lppfet w=0.44u l=0.12u m=1 
 x4 y b0 net23 vdd lppfet w=0.44u l=0.12u m=1 
 x5 net23 a2 vdd vdd lppfet w=0.44u l=0.12u m=1 
 x6 net23 a1 vdd vdd lppfet w=0.44u l=0.12u m=1 
 x7 y b0 vss vss lpnfet w=0.24u l=0.12u m=1 
 .ends aoi31xlts 

 **** 
 *.subckt aoi32x1ts y a0 a1 a2 b0 b1 
 .subckt aoi32x1ts y a0 a1 a2 b0 b1 vss vdd
 x0 hnet17 a2 vss vss lpnfet w=0.72u l=0.12u m=1 
 x1 hnet11 a1 hnet17 vss lpnfet w=0.72u l=0.12u m=1 
 x2 y a0 hnet11 vss lpnfet w=0.72u l=0.12u m=1 
 x3 hnet21 b1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x4 y b0 hnet21 vss lpnfet w=0.6u l=0.12u m=1 
 x5 net37 a0 vdd vdd lppfet w=0.84u l=0.12u m=1 
 x6 net37 a1 vdd vdd lppfet w=0.84u l=0.12u m=1 
 x7 y b0 net37 vdd lppfet w=0.84u l=0.12u m=1 
 x8 net37 a2 vdd vdd lppfet w=0.84u l=0.12u m=1 
 x9 y b1 net37 vdd lppfet w=0.84u l=0.12u m=1 
 .ends aoi32x1ts 

 **** 
 *.subckt aoi32x2ts y a0 a1 a2 b0 b1 
 .subckt aoi32x2ts y a0 a1 a2 b0 b1 vss vdd
 x0 hnet18 a2 vss vss lpnfet w=0.7u l=0.12u m=1 
 x1 hnet11 a1 hnet18 vss lpnfet w=0.7u l=0.12u m=1 
 x10 net37 a0 vdd vdd lppfet w=1.68u l=0.12u m=1 
 x11 net37 a1 vdd vdd lppfet w=1.68u l=0.12u m=1 
 x12 y b0 net37 vdd lppfet w=1.52u l=0.12u m=1 
 x13 net37 a2 vdd vdd lppfet w=1.68u l=0.12u m=1 
 x14 y b1 net37 vdd lppfet w=1.68u l=0.12u m=1 
 x2 y a0 hnet11 vss lpnfet w=0.7u l=0.12u m=1 
 x3 hnet19 a2 vss vss lpnfet w=0.7u l=0.12u m=1 
 x4 hnet14 a1 hnet19 vss lpnfet w=0.7u l=0.12u m=1 
 x5 y a0 hnet14 vss lpnfet w=0.7u l=0.12u m=1 
 x6 hnet24 b1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x7 y b0 hnet24 vss lpnfet w=0.6u l=0.12u m=1 
 x8 hnet20 b1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x9 y b0 hnet20 vss lpnfet w=0.6u l=0.12u m=1 
 .ends aoi32x2ts 

 **** 
 *.subckt aoi32x4ts y a0 a1 a2 b0 b1 
 .subckt aoi32x4ts y a0 a1 a2 b0 b1 vss vdd
 x0 vdd net24 net20 vdd lppfet w=1.02u l=0.12u m=1 
 x1 net20 net24 vss vss lpnfet w=0.74u l=0.12u m=1 
 x10 net42 a1 vdd vdd lppfet w=0.54u l=0.12u m=1 
 x11 net24 b0 net42 vdd lppfet w=0.54u l=0.12u m=1 
 x12 net42 a2 vdd vdd lppfet w=0.54u l=0.12u m=1 
 x13 net24 b1 net42 vdd lppfet w=0.54u l=0.12u m=1 
 x2 vdd net20 y vdd lppfet w=2.56u l=0.12u m=1 
 x3 y net20 vss vss lpnfet w=1.84u l=0.12u m=1 
 x4 hnet24 a2 vss vss lpnfet w=0.46u l=0.12u m=1 
 x5 hnet19 a1 hnet24 vss lpnfet w=0.46u l=0.12u m=1 
 x6 net24 a0 hnet19 vss lpnfet w=0.46u l=0.12u m=1 
 x7 hnet28 b1 vss vss lpnfet w=0.38u l=0.12u m=1 
 x8 net24 b0 hnet28 vss lpnfet w=0.38u l=0.12u m=1 
 x9 net42 a0 vdd vdd lppfet w=0.54u l=0.12u m=1 
 .ends aoi32x4ts 

 **** 
 *.subckt aoi32xlts y a0 a1 a2 b0 b1 
 .subckt aoi32xlts y a0 a1 a2 b0 b1 vss vdd
 x0 hnet17 a2 vss vss lpnfet w=0.48u l=0.12u m=1 
 x1 hnet11 a1 hnet17 vss lpnfet w=0.48u l=0.12u m=1 
 x2 y a0 hnet11 vss lpnfet w=0.48u l=0.12u m=1 
 x3 hnet21 b1 vss vss lpnfet w=0.4u l=0.12u m=1 
 x4 y b0 hnet21 vss lpnfet w=0.4u l=0.12u m=1 
 x5 net37 a0 vdd vdd lppfet w=0.44u l=0.12u m=1 
 x6 net37 a1 vdd vdd lppfet w=0.44u l=0.12u m=1 
 x7 y b0 net37 vdd lppfet w=0.44u l=0.12u m=1 
 x8 net37 a2 vdd vdd lppfet w=0.44u l=0.12u m=1 
 x9 y b1 net37 vdd lppfet w=0.44u l=0.12u m=1 
 .ends aoi32xlts 

 **** 
 *.subckt aoi33x1ts y a0 a1 a2 b0 b1 b2 
 .subckt aoi33x1ts y a0 a1 a2 b0 b1 b2 vss vdd
 x0 hnet18 b2 vss vss lpnfet w=0.72u l=0.12u m=1 
 x1 hnet12 b1 hnet18 vss lpnfet w=0.72u l=0.12u m=1 
 x10 net46 b2 vdd vdd lppfet w=0.84u l=0.12u m=1 
 x11 y a2 net46 vdd lppfet w=0.84u l=0.12u m=1 
 x2 y b0 hnet12 vss lpnfet w=0.72u l=0.12u m=1 
 x3 hnet25 a2 vss vss lpnfet w=0.72u l=0.12u m=1 
 x4 hnet19 a1 hnet25 vss lpnfet w=0.72u l=0.12u m=1 
 x5 y a0 hnet19 vss lpnfet w=0.72u l=0.12u m=1 
 x6 net46 b0 vdd vdd lppfet w=0.84u l=0.12u m=1 
 x7 y a0 net46 vdd lppfet w=0.84u l=0.12u m=1 
 x8 net46 b1 vdd vdd lppfet w=0.84u l=0.12u m=1 
 x9 y a1 net46 vdd lppfet w=0.84u l=0.12u m=1 
 .ends aoi33x1ts 

 **** 
 *.subckt aoi33x2ts y a0 a1 a2 b0 b1 b2 
 .subckt aoi33x2ts y a0 a1 a2 b0 b1 b2 vss vdd
 x0 hnet19 b2 vss vss lpnfet w=0.72u l=0.12u m=1 
 x1 hnet12 b1 hnet19 vss lpnfet w=0.72u l=0.12u m=1 
 x10 hnet24 a1 hnet29 vss lpnfet w=0.72u l=0.12u m=1 
 x11 y a0 hnet24 vss lpnfet w=0.72u l=0.12u m=1 
 x12 net46 b0 vdd vdd lppfet w=1.68u l=0.12u m=1 
 x13 y a0 net46 vdd lppfet w=1.68u l=0.12u m=1 
 x14 net46 b1 vdd vdd lppfet w=1.68u l=0.12u m=1 
 x15 y a1 net46 vdd lppfet w=1.68u l=0.12u m=1 
 x16 net46 b2 vdd vdd lppfet w=1.68u l=0.12u m=1 
 x17 y a2 net46 vdd lppfet w=1.68u l=0.12u m=1 
 x2 y b0 hnet12 vss lpnfet w=0.72u l=0.12u m=1 
 x3 hnet20 b2 vss vss lpnfet w=0.72u l=0.12u m=1 
 x4 hnet15 b1 hnet20 vss lpnfet w=0.72u l=0.12u m=1 
 x5 y b0 hnet15 vss lpnfet w=0.72u l=0.12u m=1 
 x6 hnet28 a2 vss vss lpnfet w=0.72u l=0.12u m=1 
 x7 hnet21 a1 hnet28 vss lpnfet w=0.72u l=0.12u m=1 
 x8 y a0 hnet21 vss lpnfet w=0.72u l=0.12u m=1 
 x9 hnet29 a2 vss vss lpnfet w=0.72u l=0.12u m=1 
 .ends aoi33x2ts 

 **** 
 *.subckt aoi33x4ts y a0 a1 a2 b0 b1 b2 
 .subckt aoi33x4ts y a0 a1 a2 b0 b1 b2 vss vdd
 x0 vdd net27 y vdd lppfet w=2.56u l=0.12u m=1 
 x1 y net27 vss vss lpnfet w=1.84u l=0.12u m=1 
 x10 net51 b0 vdd vdd lppfet w=0.54u l=0.12u m=1 
 x11 net29 a0 net51 vdd lppfet w=0.54u l=0.12u m=1 
 x12 net51 b1 vdd vdd lppfet w=0.54u l=0.12u m=1 
 x13 net29 a1 net51 vdd lppfet w=0.54u l=0.12u m=1 
 x14 net51 b2 vdd vdd lppfet w=0.54u l=0.12u m=1 
 x15 net29 a2 net51 vdd lppfet w=0.54u l=0.12u m=1 
 x2 vdd net29 net27 vdd lppfet w=1.02u l=0.12u m=1 
 x3 net27 net29 vss vss lpnfet w=0.74u l=0.12u m=1 
 x4 hnet25 b2 vss vss lpnfet w=0.46u l=0.12u m=1 
 x5 hnet20 b1 hnet25 vss lpnfet w=0.46u l=0.12u m=1 
 x6 net29 b0 hnet20 vss lpnfet w=0.46u l=0.12u m=1 
 x7 hnet31 a2 vss vss lpnfet w=0.46u l=0.12u m=1 
 x8 hnet26 a1 hnet31 vss lpnfet w=0.46u l=0.12u m=1 
 x9 net29 a0 hnet26 vss lpnfet w=0.46u l=0.12u m=1 
 .ends aoi33x4ts 

 **** 
 *.subckt aoi33xlts y a0 a1 a2 b0 b1 b2 
 .subckt aoi33xlts y a0 a1 a2 b0 b1 b2 vss vdd
 x0 hnet18 b2 vss vss lpnfet w=0.48u l=0.12u m=1 
 x1 hnet12 b1 hnet18 vss lpnfet w=0.48u l=0.12u m=1 
 x10 net46 b2 vdd vdd lppfet w=0.44u l=0.12u m=1 
 x11 y a2 net46 vdd lppfet w=0.44u l=0.12u m=1 
 x2 y b0 hnet12 vss lpnfet w=0.48u l=0.12u m=1 
 x3 hnet25 a2 vss vss lpnfet w=0.48u l=0.12u m=1 
 x4 hnet19 a1 hnet25 vss lpnfet w=0.48u l=0.12u m=1 
 x5 y a0 hnet19 vss lpnfet w=0.48u l=0.12u m=1 
 x6 net46 b0 vdd vdd lppfet w=0.44u l=0.12u m=1 
 x7 y a0 net46 vdd lppfet w=0.44u l=0.12u m=1 
 x8 net46 b1 vdd vdd lppfet w=0.44u l=0.12u m=1 
 x9 y a1 net46 vdd lppfet w=0.44u l=0.12u m=1 
 .ends aoi33xlts 

 **** 
 *.subckt bencx1ts a s x2 m0 m1 m2 
 .subckt bencx1ts a s x2 m0 m1 m2 vss vdd
 x0 vdd nm1 hnet26 vdd lppfet w=0.56u l=0.12u m=1 
 x1 hnet26 nm0 net60 vdd lppfet w=0.56u l=0.12u m=1 
 x10 net78 nm1 vss vss lpnfet w=0.34u l=0.12u m=1 
 x11 net63 nm2 net87 vss lpnfet w=0.34u l=0.12u m=1 
 x12 net87 m0 vss vss lpnfet w=0.34u l=0.12u m=1 
 x13 net87 m1 vss vss lpnfet w=0.34u l=0.12u m=1 
 x14 net93 nm1 nm0 vss lpnfet w=0.34u l=0.12u m=1 
 x15 net93 m1 net106 vss lpnfet w=0.34u l=0.12u m=1 
 x16 vdd net102 s vdd lppfet w=2.6u l=0.12u m=1 
 x17 s net102 vss vss lpnfet w=1.84u l=0.12u m=1 
 x18 vdd net104 a vdd lppfet w=2.6u l=0.12u m=1 
 x19 a net104 vss vss lpnfet w=1.84u l=0.12u m=1 
 x2 vdd m1 hnet30 vdd lppfet w=0.56u l=0.12u m=1 
 x20 vdd net112 x2 vdd lppfet w=2.6u l=0.12u m=1 
 x21 x2 net112 vss vss lpnfet w=1.66u l=0.12u m=1 
 x22 vdd m2 nm2 vdd lppfet w=0.28u l=0.12u m=1 
 x23 nm2 m2 vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 vdd net60 net102 vdd lppfet w=0.78u l=0.12u m=1 
 x25 net102 net60 vss vss lpnfet w=0.56u l=0.12u m=1 
 x26 vdd net63 net104 vdd lppfet w=0.78u l=0.12u m=1 
 x27 net104 net63 vss vss lpnfet w=0.56u l=0.12u m=1 
 x28 vdd nm0 net106 vdd lppfet w=0.48u l=0.12u m=1 
 x29 net106 nm0 vss vss lpnfet w=0.34u l=0.12u m=1 
 x3 hnet30 m0 net63 vdd lppfet w=0.56u l=0.12u m=1 
 x30 vdd m1 nm1 vdd lppfet w=0.3u l=0.12u m=1 
 x31 nm1 m1 vss vss lpnfet w=0.22u l=0.12u m=1 
 x32 vdd m0 nm0 vdd lppfet w=0.78u l=0.12u m=1 
 x33 nm0 m0 vss vss lpnfet w=0.56u l=0.12u m=1 
 x34 vdd net93 net112 vdd lppfet w=0.78u l=0.12u m=1 
 x35 net112 net93 vss vss lpnfet w=0.56u l=0.12u m=1 
 x4 net60 m2 vdd vdd lppfet w=0.28u l=0.12u m=1 
 x5 net63 nm2 vdd vdd lppfet w=0.28u l=0.12u m=1 
 x6 net93 m1 nm0 vdd lppfet w=0.48u l=0.12u m=1 
 x7 net93 nm1 net106 vdd lppfet w=0.48u l=0.12u m=1 
 x8 net60 m2 net78 vss lpnfet w=0.3u l=0.12u m=1 
 x9 net78 nm0 vss vss lpnfet w=0.34u l=0.12u m=1 
 .ends bencx1ts 

 **** 
 *.subckt bencx2ts a s x2 m0 m1 m2 
 .subckt bencx2ts a s x2 m0 m1 m2 vss vdd
 x0 vdd nm1 hnet26 vdd lppfet w=1u l=0.12u m=1 
 x1 hnet26 nm0 net60 vdd lppfet w=1u l=0.12u m=1 
 x10 net78 nm1 vss vss lpnfet w=0.68u l=0.12u m=1 
 x11 net63 nm2 net87 vss lpnfet w=0.68u l=0.12u m=1 
 x12 net87 m0 vss vss lpnfet w=0.68u l=0.12u m=1 
 x13 net87 m1 vss vss lpnfet w=0.68u l=0.12u m=1 
 x14 net93 nm1 nm0 vss lpnfet w=0.66u l=0.12u m=1 
 x15 net93 m1 net106 vss lpnfet w=0.66u l=0.12u m=1 
 x16 vdd net102 s vdd lppfet w=5.2u l=0.12u m=1 
 x17 s net102 vss vss lpnfet w=3.68u l=0.12u m=1 
 x18 vdd net104 a vdd lppfet w=5.2u l=0.12u m=1 
 x19 a net104 vss vss lpnfet w=3.68u l=0.12u m=1 
 x2 vdd m1 hnet30 vdd lppfet w=1u l=0.12u m=1 
 x20 vdd net112 x2 vdd lppfet w=5.2u l=0.12u m=1 
 x21 x2 net112 vss vss lpnfet w=3.24u l=0.12u m=1 
 x22 vdd m2 nm2 vdd lppfet w=0.28u l=0.12u m=1 
 x23 nm2 m2 vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 vdd net60 net102 vdd lppfet w=1.56u l=0.12u m=1 
 x25 net102 net60 vss vss lpnfet w=1.12u l=0.12u m=1 
 x26 vdd net63 net104 vdd lppfet w=1.56u l=0.12u m=1 
 x27 net104 net63 vss vss lpnfet w=1.12u l=0.12u m=1 
 x28 vdd nm0 net106 vdd lppfet w=0.94u l=0.12u m=1 
 x29 net106 nm0 vss vss lpnfet w=0.68u l=0.12u m=1 
 x3 hnet30 m0 net63 vdd lppfet w=1u l=0.12u m=1 
 x30 vdd m1 nm1 vdd lppfet w=0.58u l=0.12u m=1 
 x31 nm1 m1 vss vss lpnfet w=0.42u l=0.12u m=1 
 x32 vdd m0 nm0 vdd lppfet w=1.5u l=0.12u m=1 
 x33 nm0 m0 vss vss lpnfet w=1.08u l=0.12u m=1 
 x34 vdd net93 net112 vdd lppfet w=1.56u l=0.12u m=1 
 x35 net112 net93 vss vss lpnfet w=1.08u l=0.12u m=1 
 x4 net60 m2 vdd vdd lppfet w=0.5u l=0.12u m=1 
 x5 net63 nm2 vdd vdd lppfet w=0.5u l=0.12u m=1 
 x6 net93 m1 nm0 vdd lppfet w=0.94u l=0.12u m=1 
 x7 net93 nm1 net106 vdd lppfet w=0.94u l=0.12u m=1 
 x8 net60 m2 net78 vss lpnfet w=0.68u l=0.12u m=1 
 x9 net78 nm0 vss vss lpnfet w=0.68u l=0.12u m=1 
 .ends bencx2ts 

 **** 
 *.subckt bencx4ts a s x2 m0 m1 m2 
 .subckt bencx4ts a s x2 m0 m1 m2 vss vdd
 x0 vdd nm1 hnet27 vdd lppfet w=1u l=0.12u m=1 
 x1 hnet27 nm0 net60 vdd lppfet w=1u l=0.12u m=1 
 x10 net93 m1 nm0 vdd lppfet w=1.84u l=0.12u m=1 
 x11 net93 nm1 net106 vdd lppfet w=1.84u l=0.12u m=1 
 x12 net60 m2 net78 vss lpnfet w=1.44u l=0.12u m=1 
 x13 net78 nm0 vss vss lpnfet w=1.32u l=0.12u m=1 
 x14 net78 nm1 vss vss lpnfet w=1.32u l=0.12u m=1 
 x15 net63 nm2 net87 vss lpnfet w=1.32u l=0.12u m=1 
 x16 net87 m0 vss vss lpnfet w=1.32u l=0.12u m=1 
 x17 net87 m1 vss vss lpnfet w=1.32u l=0.12u m=1 
 x18 net93 nm1 nm0 vss lpnfet w=1.2u l=0.12u m=1 
 x19 net93 m1 net106 vss lpnfet w=1.32u l=0.12u m=1 
 x2 vdd nm1 hnet24 vdd lppfet w=1u l=0.12u m=1 
 x20 vdd net102 s vdd lppfet w=10.4u l=0.12u m=1 
 x21 s net102 vss vss lpnfet w=7.1u l=0.12u m=1 
 x22 vdd net104 a vdd lppfet w=10.4u l=0.12u m=1 
 x23 a net104 vss vss lpnfet w=7.36u l=0.12u m=1 
 x24 vdd net112 x2 vdd lppfet w=10.4u l=0.12u m=1 
 x25 x2 net112 vss vss lpnfet w=6.96u l=0.12u m=1 
 x26 vdd m2 nm2 vdd lppfet w=0.38u l=0.12u m=1 
 x27 nm2 m2 vss vss lpnfet w=0.28u l=0.12u m=1 
 x28 vdd net60 net102 vdd lppfet w=3.08u l=0.12u m=1 
 x29 net102 net60 vss vss lpnfet w=2.24u l=0.12u m=1 
 x3 hnet24 nm0 net60 vdd lppfet w=1u l=0.12u m=1 
 x30 vdd net63 net104 vdd lppfet w=3.08u l=0.12u m=1 
 x31 net104 net63 vss vss lpnfet w=2.24u l=0.12u m=1 
 x32 vdd nm0 net106 vdd lppfet w=1.84u l=0.12u m=1 
 x33 net106 nm0 vss vss lpnfet w=1.32u l=0.12u m=1 
 x34 vdd m1 nm1 vdd lppfet w=1.12u l=0.12u m=1 
 x35 nm1 m1 vss vss lpnfet w=0.8u l=0.12u m=1 
 x36 vdd m0 nm0 vdd lppfet w=2.98u l=0.12u m=1 
 x37 nm0 m0 vss vss lpnfet w=2.1u l=0.12u m=1 
 x38 vdd net93 net112 vdd lppfet w=3.08u l=0.12u m=1 
 x39 net112 net93 vss vss lpnfet w=2.22u l=0.12u m=1 
 x4 vdd m1 hnet32 vdd lppfet w=1u l=0.12u m=1 
 x5 hnet32 m0 net63 vdd lppfet w=1u l=0.12u m=1 
 x6 vdd m1 hnet29 vdd lppfet w=1u l=0.12u m=1 
 x7 hnet29 m0 net63 vdd lppfet w=1u l=0.12u m=1 
 x8 net60 m2 vdd vdd lppfet w=1u l=0.12u m=1 
 x9 net63 nm2 vdd vdd lppfet w=1u l=0.12u m=1 
 .ends bencx4ts 

 **** 
 *.subckt bmxix2ts ppn a m0 m1 s x2 
 .subckt bmxix2ts ppn a m0 m1 s x2 vss vdd
 x0 vdd m1 nma1 vdd lppfet w=0.3u l=0.12u m=1 
 x1 nma1 m1 vss vss lpnfet w=0.22u l=0.12u m=1 
 x10 vdd x2 nmx2 vdd lppfet w=0.3u l=0.12u m=1 
 x11 nmx2 x2 vss vss lpnfet w=0.22u l=0.12u m=1 
 x12 net91 m1 nmsubb vdd lppfet w=0.76u l=0.12u m=1 
 x13 net91 nma1 nmaddb vdd lppfet w=0.76u l=0.12u m=1 
 x14 net97 m0 nmsubb vdd lppfet w=0.74u l=0.12u m=1 
 x15 net97 nma0 nmaddb vdd lppfet w=0.7u l=0.12u m=1 
 x16 net103 x2 net91 vdd lppfet w=0.76u l=0.12u m=1 
 x17 net103 nmx2 net97 vdd lppfet w=0.76u l=0.12u m=1 
 x18 net91 nma1 nmsubb vss lpnfet w=0.56u l=0.12u m=1 
 x19 net91 m1 nmaddb vss lpnfet w=0.56u l=0.12u m=1 
 x2 vdd m0 nma0 vdd lppfet w=0.3u l=0.12u m=1 
 x20 net97 nma0 nmsubb vss lpnfet w=0.56u l=0.12u m=1 
 x21 net97 m0 nmaddb vss lpnfet w=0.56u l=0.12u m=1 
 x22 net103 nmx2 net91 vss lpnfet w=0.56u l=0.12u m=1 
 x23 net103 x2 net97 vss lpnfet w=0.56u l=0.12u m=1 
 x3 nma0 m0 vss vss lpnfet w=0.22u l=0.12u m=1 
 x4 vdd a nmaddb vdd lppfet w=1.54u l=0.12u m=1 
 x5 nmaddb a vss vss lpnfet w=1.1u l=0.12u m=1 
 x6 vdd s nmsubb vdd lppfet w=1.54u l=0.12u m=1 
 x7 nmsubb s vss vss lpnfet w=1.1u l=0.12u m=1 
 x8 vdd net103 ppn vdd lppfet w=1.28u l=0.12u m=1 
 x9 ppn net103 vss vss lpnfet w=0.92u l=0.12u m=1 
 .ends bmxix2ts 

 **** 
 *.subckt bmxix4ts ppn a m0 m1 s x2 
 .subckt bmxix4ts ppn a m0 m1 s x2 vss vdd
 x0 vdd m1 nma1 vdd lppfet w=0.62u l=0.12u m=1 
 x1 nma1 m1 vss vss lpnfet w=0.44u l=0.12u m=1 
 x10 vdd x2 nmx2 vdd lppfet w=0.62u l=0.12u m=1 
 x11 nmx2 x2 vss vss lpnfet w=0.44u l=0.12u m=1 
 x12 net91 m1 nmsubb vdd lppfet w=1.52u l=0.12u m=1 
 x13 net91 nma1 nmaddb vdd lppfet w=1.52u l=0.12u m=1 
 x14 net97 m0 nmsubb vdd lppfet w=1.52u l=0.12u m=1 
 x15 net97 nma0 nmaddb vdd lppfet w=1.52u l=0.12u m=1 
 x16 net103 x2 net91 vdd lppfet w=1.52u l=0.12u m=1 
 x17 net103 nmx2 net97 vdd lppfet w=1.52u l=0.12u m=1 
 x18 net91 nma1 nmsubb vss lpnfet w=1.1u l=0.12u m=1 
 x19 net91 m1 nmaddb vss lpnfet w=1.1u l=0.12u m=1 
 x2 vdd m0 nma0 vdd lppfet w=0.62u l=0.12u m=1 
 x20 net97 nma0 nmsubb vss lpnfet w=1.1u l=0.12u m=1 
 x21 net97 m0 nmaddb vss lpnfet w=1.1u l=0.12u m=1 
 x22 net103 nmx2 net91 vss lpnfet w=1.1u l=0.12u m=1 
 x23 net103 x2 net97 vss lpnfet w=1.1u l=0.12u m=1 
 x3 nma0 m0 vss vss lpnfet w=0.44u l=0.12u m=1 
 x4 vdd a nmaddb vdd lppfet w=3.06u l=0.12u m=1 
 x5 nmaddb a vss vss lpnfet w=2.22u l=0.12u m=1 
 x6 vdd s nmsubb vdd lppfet w=3.06u l=0.12u m=1 
 x7 nmsubb s vss vss lpnfet w=2.2u l=0.12u m=1 
 x8 vdd net103 ppn vdd lppfet w=2.56u l=0.12u m=1 
 x9 ppn net103 vss vss lpnfet w=1.84u l=0.12u m=1 
 .ends bmxix4ts 

 **** 
 *.subckt bmxx2ts pp a m0 m1 s x2 
 .subckt bmxx2ts pp a m0 m1 s x2 vss vdd
 x0 vdd net103 net58 vdd lppfet w=1.04u l=0.12u m=1 
 x1 net58 net103 vss vss lpnfet w=0.72u l=0.12u m=1 
 x10 vdd s nmsubb vdd lppfet w=1.64u l=0.12u m=1 
 x11 nmsubb s vss vss lpnfet w=1.18u l=0.12u m=1 
 x12 vdd net109 pp vdd lppfet w=1.28u l=0.12u m=1 
 x13 pp net109 vss vss lpnfet w=0.92u l=0.12u m=1 
 x14 vdd x2 nmx2 vdd lppfet w=0.42u l=0.12u m=1 
 x15 nmx2 x2 vss vss lpnfet w=0.3u l=0.12u m=1 
 x16 net97 m1 nmsubb vdd lppfet w=0.82u l=0.12u m=1 
 x17 net97 nma1 nmaddb vdd lppfet w=0.82u l=0.12u m=1 
 x18 net103 m0 nmsubb vdd lppfet w=0.82u l=0.12u m=1 
 x19 net103 nma0 nmaddb vdd lppfet w=0.76u l=0.12u m=1 
 x2 vdd net97 net60 vdd lppfet w=1.04u l=0.12u m=1 
 x20 net109 x2 net60 vdd lppfet w=1.04u l=0.12u m=1 
 x21 net109 nmx2 net58 vdd lppfet w=0.98u l=0.12u m=1 
 x22 net97 nma1 nmsubb vss lpnfet w=0.6u l=0.12u m=1 
 x23 net97 m1 nmaddb vss lpnfet w=0.6u l=0.12u m=1 
 x24 net103 nma0 nmsubb vss lpnfet w=0.6u l=0.12u m=1 
 x25 net103 m0 nmaddb vss lpnfet w=0.6u l=0.12u m=1 
 x26 net109 nmx2 net60 vss lpnfet w=0.72u l=0.12u m=1 
 x27 net109 x2 net58 vss lpnfet w=0.74u l=0.12u m=1 
 x3 net60 net97 vss vss lpnfet w=0.72u l=0.12u m=1 
 x4 vdd m1 nma1 vdd lppfet w=0.34u l=0.12u m=1 
 x5 nma1 m1 vss vss lpnfet w=0.24u l=0.12u m=1 
 x6 vdd m0 nma0 vdd lppfet w=0.34u l=0.12u m=1 
 x7 nma0 m0 vss vss lpnfet w=0.24u l=0.12u m=1 
 x8 vdd a nmaddb vdd lppfet w=1.64u l=0.12u m=1 
 x9 nmaddb a vss vss lpnfet w=1.18u l=0.12u m=1 
 .ends bmxx2ts 

 **** 
 *.subckt bmxx4ts pp a m0 m1 s x2 
 .subckt bmxx4ts pp a m0 m1 s x2 vss vdd
 x0 vdd net103 net58 vdd lppfet w=2.06u l=0.12u m=1 
 x1 net58 net103 vss vss lpnfet w=1.48u l=0.12u m=1 
 x10 vdd s nmsubb vdd lppfet w=3.28u l=0.12u m=1 
 x11 nmsubb s vss vss lpnfet w=2.36u l=0.12u m=1 
 x12 vdd net109 pp vdd lppfet w=2.56u l=0.12u m=1 
 x13 pp net109 vss vss lpnfet w=1.84u l=0.12u m=1 
 x14 vdd x2 nmx2 vdd lppfet w=0.84u l=0.12u m=1 
 x15 nmx2 x2 vss vss lpnfet w=0.6u l=0.12u m=1 
 x16 net97 m1 nmsubb vdd lppfet w=1.64u l=0.12u m=1 
 x17 net97 nma1 nmaddb vdd lppfet w=1.64u l=0.12u m=1 
 x18 net103 m0 nmsubb vdd lppfet w=1.64u l=0.12u m=1 
 x19 net103 nma0 nmaddb vdd lppfet w=1.64u l=0.12u m=1 
 x2 vdd net97 net60 vdd lppfet w=2.06u l=0.12u m=1 
 x20 net109 x2 net60 vdd lppfet w=2.06u l=0.12u m=1 
 x21 net109 nmx2 net58 vdd lppfet w=1.96u l=0.12u m=1 
 x22 net97 nma1 nmsubb vss lpnfet w=1.14u l=0.12u m=1 
 x23 net97 m1 nmaddb vss lpnfet w=1.1u l=0.12u m=1 
 x24 net103 nma0 nmsubb vss lpnfet w=1.18u l=0.12u m=1 
 x25 net103 m0 nmaddb vss lpnfet w=1.14u l=0.12u m=1 
 x26 net109 nmx2 net60 vss lpnfet w=1.48u l=0.12u m=1 
 x27 net109 x2 net58 vss lpnfet w=1.48u l=0.12u m=1 
 x3 net60 net97 vss vss lpnfet w=1.48u l=0.12u m=1 
 x4 vdd m1 nma1 vdd lppfet w=0.66u l=0.12u m=1 
 x5 nma1 m1 vss vss lpnfet w=0.48u l=0.12u m=1 
 x6 vdd m0 nma0 vdd lppfet w=0.66u l=0.12u m=1 
 x7 nma0 m0 vss vss lpnfet w=0.48u l=0.12u m=1 
 x8 vdd a nmaddb vdd lppfet w=3.28u l=0.12u m=1 
 x9 nmaddb a vss vss lpnfet w=2.4u l=0.12u m=1 
 .ends bmxx4ts 

 **** 
 *.subckt bufx12ts y a 
 .subckt bufx12ts y a vss vdd
 x0 vdd nmin y vdd lppfet w=7.24u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=4.84u l=0.12u m=1 
 x2 vdd a nmin vdd lppfet w=2.6u l=0.12u m=1 
 x3 nmin a vss vss lpnfet w=1.84u l=0.12u m=1 
 .ends bufx12ts 

 **** 
 *.subckt bufx16ts y a 
 .subckt bufx16ts y a vss vdd
 x0 vdd nmin y vdd lppfet w=9.88u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=6.8u l=0.12u m=1 
 x2 vdd a nmin vdd lppfet w=3.9u l=0.12u m=1 
 x3 nmin a vss vss lpnfet w=2.76u l=0.12u m=1 
 .ends bufx16ts 

 **** 
 *.subckt bufx20ts y a 
 .subckt bufx20ts y a vss vdd
 x0 vdd nmin y vdd lppfet w=12.74u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=8.94u l=0.12u m=1 
 x2 vdd a nmin vdd lppfet w=5.12u l=0.12u m=1 
 x3 nmin a vss vss lpnfet w=3.68u l=0.12u m=1 
 .ends bufx20ts 

 **** 
 *.subckt bufx2ts y a 
 .subckt bufx2ts y a vss vdd
 x0 vdd nmin y vdd lppfet w=1.28u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.92u l=0.12u m=1 
 x2 vdd a nmin vdd lppfet w=0.5u l=0.12u m=1 
 x3 nmin a vss vss lpnfet w=0.34u l=0.12u m=1 
 .ends bufx2ts 

 **** 
 *.subckt bufx3ts y a 
 .subckt bufx3ts y a vss vdd
 x0 vdd nmin y vdd lppfet w=1.92u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=1.38u l=0.12u m=1 
 x2 vdd a nmin vdd lppfet w=0.78u l=0.12u m=1 
 x3 nmin a vss vss lpnfet w=0.56u l=0.12u m=1 
 .ends bufx3ts 

 **** 
 *.subckt bufx4ts y a 
 .subckt bufx4ts y a vss vdd
 x0 vdd nmin y vdd lppfet w=2.56u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=1.84u l=0.12u m=1 
 x2 vdd a nmin vdd lppfet w=1.02u l=0.12u m=1 
 x3 nmin a vss vss lpnfet w=0.68u l=0.12u m=1 
 .ends bufx4ts 

 **** 
 *.subckt bufx6ts y a 
 .subckt bufx6ts y a vss vdd
 x0 vdd nmin y vdd lppfet w=3.84u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=2.76u l=0.12u m=1 
 x2 vdd a nmin vdd lppfet w=1.54u l=0.12u m=1 
 x3 nmin a vss vss lpnfet w=1.1u l=0.12u m=1 
 .ends bufx6ts 

 **** 
 *.subckt bufx8ts y a 
 .subckt bufx8ts y a vss vdd
 x0 vdd nmin y vdd lppfet w=5.12u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=3.68u l=0.12u m=1 
 x2 vdd a nmin vdd lppfet w=2.06u l=0.12u m=1 
 x3 nmin a vss vss lpnfet w=1.34u l=0.12u m=1 
 .ends bufx8ts 

 **** 
 *.subckt clkand2x12ts y a b 
 .subckt clkand2x12ts y a b vss vdd
 x0 vdd net11 y vdd lppfet w=6.76u l=0.12u m=1 
 x1 y net11 vss vss lpnfet w=2.56u l=0.12u m=1 
 x2 hnet15 b vss vss lpnfet w=0.56u l=0.12u m=1 
 x3 net11 a hnet15 vss lpnfet w=0.56u l=0.12u m=1 
 x4 hnet11 b vss vss lpnfet w=0.56u l=0.12u m=1 
 x5 net11 a hnet11 vss lpnfet w=0.56u l=0.12u m=1 
 x6 vdd b net11 vdd lppfet w=2.94u l=0.12u m=1 
 x7 vdd a net11 vdd lppfet w=2.94u l=0.12u m=1 
 .ends clkand2x12ts 

 **** 
 *.subckt clkand2x2ts y a b 
 .subckt clkand2x2ts y a b vss vdd
 x0 vdd net11 y vdd lppfet w=1.3u l=0.12u m=1 
 x1 y net11 vss vss lpnfet w=0.48u l=0.12u m=1 
 x2 hnet14 b vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 net11 a hnet14 vss lpnfet w=0.2u l=0.12u m=1 
 x4 vdd b net11 vdd lppfet w=0.56u l=0.12u m=1 
 x5 vdd a net11 vdd lppfet w=0.56u l=0.12u m=1 
 .ends clkand2x2ts 

 **** 
 *.subckt clkand2x3ts y a b 
 .subckt clkand2x3ts y a b vss vdd
 x0 vdd net11 y vdd lppfet w=1.94u l=0.12u m=1 
 x1 y net11 vss vss lpnfet w=0.72u l=0.12u m=1 
 x2 hnet14 b vss vss lpnfet w=0.28u l=0.12u m=1 
 x3 net11 a hnet14 vss lpnfet w=0.28u l=0.12u m=1 
 x4 vdd b net11 vdd lppfet w=0.78u l=0.12u m=1 
 x5 vdd a net11 vdd lppfet w=0.78u l=0.12u m=1 
 .ends clkand2x3ts 

 **** 
 *.subckt clkand2x4ts y a b 
 .subckt clkand2x4ts y a b vss vdd
 x0 vdd net11 y vdd lppfet w=2.54u l=0.12u m=1 
 x1 y net11 vss vss lpnfet w=0.92u l=0.12u m=1 
 x2 hnet14 b vss vss lpnfet w=0.36u l=0.12u m=1 
 x3 net11 a hnet14 vss lpnfet w=0.36u l=0.12u m=1 
 x4 vdd b net11 vdd lppfet w=1u l=0.12u m=1 
 x5 vdd a net11 vdd lppfet w=1u l=0.12u m=1 
 .ends clkand2x4ts 

 **** 
 *.subckt clkand2x6ts y a b 
 .subckt clkand2x6ts y a b vss vdd
 x0 vdd net11 y vdd lppfet w=3.02u l=0.12u m=1 
 x1 y net11 vss vss lpnfet w=1.12u l=0.12u m=1 
 x2 hnet14 b vss vss lpnfet w=0.46u l=0.12u m=1 
 x3 net11 a hnet14 vss lpnfet w=0.46u l=0.12u m=1 
 x4 vdd b net11 vdd lppfet w=1.3u l=0.12u m=1 
 x5 vdd a net11 vdd lppfet w=1.3u l=0.12u m=1 
 .ends clkand2x6ts 

 **** 
 *.subckt clkand2x8ts y a b 
 .subckt clkand2x8ts y a b vss vdd
 x0 vdd net11 y vdd lppfet w=4.62u l=0.12u m=1 
 x1 y net11 vss vss lpnfet w=1.74u l=0.12u m=1 
 x2 hnet14 b vss vss lpnfet w=0.74u l=0.12u m=1 
 x3 net11 a hnet14 vss lpnfet w=0.74u l=0.12u m=1 
 x4 vdd b net11 vdd lppfet w=2.06u l=0.12u m=1 
 x5 vdd a net11 vdd lppfet w=2.06u l=0.12u m=1 
 .ends clkand2x8ts 

 **** 
 *.subckt clkbufx12ts y a 
 .subckt clkbufx12ts y a vss vdd
 x0 vdd nmin y vdd lppfet w=7.62u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=2.82u l=0.12u m=1 
 x2 vdd a nmin vdd lppfet w=2.44u l=0.12u m=1 
 x3 nmin a vss vss lpnfet w=0.9u l=0.12u m=1 
 .ends clkbufx12ts 

 **** 
 *.subckt clkbufx16ts y a 
 .subckt clkbufx16ts y a vss vdd
 x0 vdd nmin y vdd lppfet w=10.4u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=3.78u l=0.12u m=1 
 x2 vdd a nmin vdd lppfet w=3.3u l=0.12u m=1 
 x3 nmin a vss vss lpnfet w=1.22u l=0.12u m=1 
 .ends clkbufx16ts 

 **** 
 *.subckt clkbufx20ts y a 
 .subckt clkbufx20ts y a vss vdd
 x0 vdd nmin y vdd lppfet w=13u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=4.74u l=0.12u m=1 
 x2 vdd a nmin vdd lppfet w=3.88u l=0.12u m=1 
 x3 nmin a vss vss lpnfet w=1.52u l=0.12u m=1 
 .ends clkbufx20ts 

 **** 
 *.subckt clkbufx2ts y a 
 .subckt clkbufx2ts y a vss vdd
 x0 vdd nmin y vdd lppfet w=1.3u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.48u l=0.12u m=1 
 x2 vdd a nmin vdd lppfet w=0.54u l=0.12u m=1 
 x3 nmin a vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends clkbufx2ts 

 **** 
 *.subckt clkbufx3ts y a 
 .subckt clkbufx3ts y a vss vdd
 x0 vdd nmin y vdd lppfet w=1.94u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.72u l=0.12u m=1 
 x2 vdd a nmin vdd lppfet w=0.6u l=0.12u m=1 
 x3 nmin a vss vss lpnfet w=0.22u l=0.12u m=1 
 .ends clkbufx3ts 

 **** 
 *.subckt clkbufx4ts y a 
 .subckt clkbufx4ts y a vss vdd
 x0 vdd nmin y vdd lppfet w=2.54u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.94u l=0.12u m=1 
 x2 vdd a nmin vdd lppfet w=0.8u l=0.12u m=1 
 x3 nmin a vss vss lpnfet w=0.3u l=0.12u m=1 
 .ends clkbufx4ts 

 **** 
 *.subckt clkbufx6ts y a 
 .subckt clkbufx6ts y a vss vdd
 x0 vdd nmin y vdd lppfet w=3.84u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=1.42u l=0.12u m=1 
 x2 vdd a nmin vdd lppfet w=1.16u l=0.12u m=1 
 x3 nmin a vss vss lpnfet w=0.46u l=0.12u m=1 
 .ends clkbufx6ts 

 **** 
 *.subckt clkbufx8ts y a 
 .subckt clkbufx8ts y a vss vdd
 x0 vdd nmin y vdd lppfet w=5.12u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=1.84u l=0.12u m=1 
 x2 vdd a nmin vdd lppfet w=1.62u l=0.12u m=1 
 x3 nmin a vss vss lpnfet w=0.6u l=0.12u m=1 
 .ends clkbufx8ts 

 **** 
 *.subckt clkinvx12ts y a 
 .subckt clkinvx12ts y a vss vdd
 x0 vdd a y vdd lppfet w=7.62u l=0.12u m=1 
 x1 y a vss vss lpnfet w=2.82u l=0.12u m=1 
 .ends clkinvx12ts 

 **** 
 *.subckt clkinvx16ts y a 
 .subckt clkinvx16ts y a vss vdd
 x0 vdd a y vdd lppfet w=10.4u l=0.12u m=1 
 x1 y a vss vss lpnfet w=3.78u l=0.12u m=1 
 .ends clkinvx16ts 

 **** 
 *.subckt clkinvx1ts y a 
 .subckt clkinvx1ts y a vss vdd
 x0 vdd a y vdd lppfet w=0.64u l=0.12u m=1 
 x1 y a vss vss lpnfet w=0.24u l=0.12u m=1 
 .ends clkinvx1ts 

 **** 
 *.subckt clkinvx20ts y a 
 .subckt clkinvx20ts y a vss vdd
 x0 vdd a y vdd lppfet w=12.5u l=0.12u m=1 
 x1 y a vss vss lpnfet w=4.86u l=0.12u m=1 
 .ends clkinvx20ts 

 **** 
 *.subckt clkinvx2ts y a 
 .subckt clkinvx2ts y a vss vdd
 x0 vdd a y vdd lppfet w=1.3u l=0.12u m=1 
 x1 y a vss vss lpnfet w=0.48u l=0.12u m=1 
 .ends clkinvx2ts 

 **** 
 *.subckt clkinvx3ts y a 
 .subckt clkinvx3ts y a vss vdd
 x0 vdd a y vdd lppfet w=1.94u l=0.12u m=1 
 x1 y a vss vss lpnfet w=0.72u l=0.12u m=1 
 .ends clkinvx3ts 

 **** 
 *.subckt clkinvx4ts y a 
 .subckt clkinvx4ts y a vss vdd
 x0 vdd a y vdd lppfet w=2.54u l=0.12u m=1 
 x1 y a vss vss lpnfet w=0.94u l=0.12u m=1 
 .ends clkinvx4ts 

 **** 
 *.subckt clkinvx6ts y a 
 .subckt clkinvx6ts y a vss vdd
 x0 vdd a y vdd lppfet w=3.84u l=0.12u m=1 
 x1 y a vss vss lpnfet w=1.42u l=0.12u m=1 
 .ends clkinvx6ts 

 **** 
 *.subckt clkinvx8ts y a 
 .subckt clkinvx8ts y a vss vdd
 x0 vdd a y vdd lppfet w=5.06u l=0.12u m=1 
 x1 y a vss vss lpnfet w=1.9u l=0.12u m=1 
 .ends clkinvx8ts 

 **** 
 *.subckt clkmx2x12ts y a b s0 
 .subckt clkmx2x12ts y a b s0 vss vdd
 x0 net27 nmsel nmin0 vss lpnfet w=0.38u l=0.12u m=1 
 x1 net27 s0 nmin1 vss lpnfet w=0.38u l=0.12u m=1 
 x10 vdd a nmin0 vdd lppfet w=1.02u l=0.12u m=1 
 x11 nmin0 a vss vss lpnfet w=0.38u l=0.12u m=1 
 x12 vdd b nmin1 vdd lppfet w=1.02u l=0.12u m=1 
 x13 nmin1 b vss vss lpnfet w=0.38u l=0.12u m=1 
 x14 vdd s0 nmsel vdd lppfet w=0.54u l=0.12u m=1 
 x15 nmsel s0 vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 net27 s0 nmin0 vdd lppfet w=1.02u l=0.12u m=1 
 x3 net27 nmsel nmin1 vdd lppfet w=1.02u l=0.12u m=1 
 x4 vdd net39 y vdd lppfet w=7.62u l=0.12u m=1 
 x5 y net39 vss vss lpnfet w=2.76u l=0.12u m=1 
 x6 vdd net41 net39 vdd lppfet w=3.08u l=0.12u m=1 
 x7 net39 net41 vss vss lpnfet w=1.14u l=0.12u m=1 
 x8 vdd net27 net41 vdd lppfet w=1.24u l=0.12u m=1 
 x9 net41 net27 vss vss lpnfet w=0.46u l=0.12u m=1 
 .ends clkmx2x12ts 

 **** 
 *.subckt clkmx2x2ts y a b s0 
 .subckt clkmx2x2ts y a b s0 vss vdd
 x0 net25 nmsel nmin0 vss lpnfet w=0.38u l=0.12u m=1 
 x1 net25 s0 nmin1 vss lpnfet w=0.36u l=0.12u m=1 
 x10 vdd s0 nmsel vdd lppfet w=0.54u l=0.12u m=1 
 x11 nmsel s0 vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 net25 s0 nmin0 vdd lppfet w=1.02u l=0.12u m=1 
 x3 net25 nmsel nmin1 vdd lppfet w=1.02u l=0.12u m=1 
 x4 vdd net25 y vdd lppfet w=1.28u l=0.12u m=1 
 x5 y net25 vss vss lpnfet w=0.48u l=0.12u m=1 
 x6 vdd a nmin0 vdd lppfet w=1.02u l=0.12u m=1 
 x7 nmin0 a vss vss lpnfet w=0.38u l=0.12u m=1 
 x8 vdd b nmin1 vdd lppfet w=1.02u l=0.12u m=1 
 x9 nmin1 b vss vss lpnfet w=0.36u l=0.12u m=1 
 .ends clkmx2x2ts 

 **** 
 *.subckt clkmx2x3ts y a b s0 
 .subckt clkmx2x3ts y a b s0 vss vdd
 x0 net25 nmsel nmin0 vss lpnfet w=0.54u l=0.12u m=1 
 x1 net25 s0 nmin1 vss lpnfet w=0.54u l=0.12u m=1 
 x10 vdd s0 nmsel vdd lppfet w=0.52u l=0.12u m=1 
 x11 nmsel s0 vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 net25 s0 nmin0 vdd lppfet w=1.24u l=0.12u m=1 
 x3 net25 nmsel nmin1 vdd lppfet w=1.24u l=0.12u m=1 
 x4 vdd net25 y vdd lppfet w=1.84u l=0.12u m=1 
 x5 y net25 vss vss lpnfet w=0.66u l=0.12u m=1 
 x6 vdd a nmin0 vdd lppfet w=1.24u l=0.12u m=1 
 x7 nmin0 a vss vss lpnfet w=0.54u l=0.12u m=1 
 x8 vdd b nmin1 vdd lppfet w=1.24u l=0.12u m=1 
 x9 nmin1 b vss vss lpnfet w=0.54u l=0.12u m=1 
 .ends clkmx2x3ts 

 **** 
 *.subckt clkmx2x4ts y a b s0 
 .subckt clkmx2x4ts y a b s0 vss vdd
 x0 net25 nmsel nmin0 vss lpnfet w=0.52u l=0.12u m=1 
 x1 net25 s0 nmin1 vss lpnfet w=0.44u l=0.12u m=1 
 x10 vdd s0 nmsel vdd lppfet w=0.6u l=0.12u m=1 
 x11 nmsel s0 vss vss lpnfet w=0.22u l=0.12u m=1 
 x2 net25 s0 nmin0 vdd lppfet w=1.18u l=0.12u m=1 
 x3 net25 nmsel nmin1 vdd lppfet w=1.18u l=0.12u m=1 
 x4 vdd net25 y vdd lppfet w=2.36u l=0.12u m=1 
 x5 y net25 vss vss lpnfet w=0.9u l=0.12u m=1 
 x6 vdd a nmin0 vdd lppfet w=1.18u l=0.12u m=1 
 x7 nmin0 a vss vss lpnfet w=0.44u l=0.12u m=1 
 x8 vdd b nmin1 vdd lppfet w=1.18u l=0.12u m=1 
 x9 nmin1 b vss vss lpnfet w=0.44u l=0.12u m=1 
 .ends clkmx2x4ts 

 **** 
 *.subckt clkmx2x6ts y a b s0 
 .subckt clkmx2x6ts y a b s0 vss vdd
 x0 net25 nmsel nmin0 vss lpnfet w=1.04u l=0.12u m=1 
 x1 net25 s0 nmin1 vss lpnfet w=1.04u l=0.12u m=1 
 x10 vdd s0 nmsel vdd lppfet w=1.24u l=0.12u m=1 
 x11 nmsel s0 vss vss lpnfet w=0.46u l=0.12u m=1 
 x2 net25 s0 nmin0 vdd lppfet w=2.82u l=0.12u m=1 
 x3 net25 nmsel nmin1 vdd lppfet w=3.06u l=0.12u m=1 
 x4 vdd net25 y vdd lppfet w=3.84u l=0.12u m=1 
 x5 y net25 vss vss lpnfet w=1.42u l=0.12u m=1 
 x6 vdd a nmin0 vdd lppfet w=2.94u l=0.12u m=1 
 x7 nmin0 a vss vss lpnfet w=1.14u l=0.12u m=1 
 x8 vdd b nmin1 vdd lppfet w=3.06u l=0.12u m=1 
 x9 nmin1 b vss vss lpnfet w=1.12u l=0.12u m=1 
 .ends clkmx2x6ts 

 **** 
 *.subckt clkmx2x8ts y a b s0 
 .subckt clkmx2x8ts y a b s0 vss vdd
 x0 net27 nmsel nmin0 vss lpnfet w=0.24u l=0.12u m=1 
 x1 net27 s0 nmin1 vss lpnfet w=0.24u l=0.12u m=1 
 x10 vdd a nmin0 vdd lppfet w=0.64u l=0.12u m=1 
 x11 nmin0 a vss vss lpnfet w=0.24u l=0.12u m=1 
 x12 vdd b nmin1 vdd lppfet w=0.64u l=0.12u m=1 
 x13 nmin1 b vss vss lpnfet w=0.24u l=0.12u m=1 
 x14 vdd s0 nmsel vdd lppfet w=0.54u l=0.12u m=1 
 x15 nmsel s0 vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 net27 s0 nmin0 vdd lppfet w=0.64u l=0.12u m=1 
 x3 net27 nmsel nmin1 vdd lppfet w=0.64u l=0.12u m=1 
 x4 vdd net41 net37 vdd lppfet w=2.06u l=0.12u m=1 
 x5 net37 net41 vss vss lpnfet w=0.76u l=0.12u m=1 
 x6 vdd net37 y vdd lppfet w=5.12u l=0.12u m=1 
 x7 y net37 vss vss lpnfet w=1.84u l=0.12u m=1 
 x8 vdd net27 net41 vdd lppfet w=0.8u l=0.12u m=1 
 x9 net41 net27 vss vss lpnfet w=0.3u l=0.12u m=1 
 .ends clkmx2x8ts 

 **** 
 *.subckt clkxor2x1ts y a b 
 .subckt clkxor2x1ts y a b vss vdd
 x0 net29 nmin1 net37 vdd lppfet w=0.54u l=0.12u m=1 
 x1 net29 a nmin2 vdd lppfet w=0.54u l=0.12u m=1 
 x10 vdd b nmin2 vdd lppfet w=0.6u l=0.12u m=1 
 x11 nmin2 b vss vss lpnfet w=0.22u l=0.12u m=1 
 x2 net29 a net37 vss lpnfet w=0.2u l=0.12u m=1 
 x3 net29 nmin1 nmin2 vss lpnfet w=0.2u l=0.12u m=1 
 x4 vdd net29 y vdd lppfet w=0.64u l=0.12u m=1 
 x5 y net29 vss vss lpnfet w=0.24u l=0.12u m=1 
 x6 vdd a nmin1 vdd lppfet w=0.54u l=0.12u m=1 
 x7 nmin1 a vss vss lpnfet w=0.2u l=0.12u m=1 
 x8 vdd nmin2 net37 vdd lppfet w=0.54u l=0.12u m=1 
 x9 net37 nmin2 vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends clkxor2x1ts 

 **** 
 *.subckt clkxor2x2ts y a b 
 .subckt clkxor2x2ts y a b vss vdd
 x0 net29 nmin1 net37 vdd lppfet w=0.8u l=0.12u m=1 
 x1 net29 a nmin2 vdd lppfet w=0.8u l=0.12u m=1 
 x10 vdd b nmin2 vdd lppfet w=1.08u l=0.12u m=1 
 x11 nmin2 b vss vss lpnfet w=0.4u l=0.12u m=1 
 x2 net29 a net37 vss lpnfet w=0.3u l=0.12u m=1 
 x3 net29 nmin1 nmin2 vss lpnfet w=0.3u l=0.12u m=1 
 x4 vdd net29 y vdd lppfet w=1.3u l=0.12u m=1 
 x5 y net29 vss vss lpnfet w=0.48u l=0.12u m=1 
 x6 vdd a nmin1 vdd lppfet w=0.54u l=0.12u m=1 
 x7 nmin1 a vss vss lpnfet w=0.2u l=0.12u m=1 
 x8 vdd nmin2 net37 vdd lppfet w=0.8u l=0.12u m=1 
 x9 net37 nmin2 vss vss lpnfet w=0.3u l=0.12u m=1 
 .ends clkxor2x2ts 

 **** 
 *.subckt clkxor2x4ts y a b 
 .subckt clkxor2x4ts y a b vss vdd
 x0 net29 nmin1 net37 vdd lppfet w=1.5u l=0.12u m=1 
 x1 net29 a nmin2 vdd lppfet w=1.62u l=0.12u m=1 
 x10 vdd b nmin2 vdd lppfet w=2.16u l=0.12u m=1 
 x11 nmin2 b vss vss lpnfet w=0.8u l=0.12u m=1 
 x2 net29 a net37 vss lpnfet w=0.6u l=0.12u m=1 
 x3 net29 nmin1 nmin2 vss lpnfet w=0.6u l=0.12u m=1 
 x4 vdd net29 y vdd lppfet w=2.54u l=0.12u m=1 
 x5 y net29 vss vss lpnfet w=0.94u l=0.12u m=1 
 x6 vdd a nmin1 vdd lppfet w=0.54u l=0.12u m=1 
 x7 nmin1 a vss vss lpnfet w=0.2u l=0.12u m=1 
 x8 vdd nmin2 net37 vdd lppfet w=1.5u l=0.12u m=1 
 x9 net37 nmin2 vss vss lpnfet w=0.6u l=0.12u m=1 
 .ends clkxor2x4ts 

 **** 
 *.subckt clkxor2x8ts y a b 
 .subckt clkxor2x8ts y a b vss vdd
 x0 net29 nmin1 net37 vdd lppfet w=3.24u l=0.12u m=1 
 x1 net29 a nmin2 vdd lppfet w=3.24u l=0.12u m=1 
 x10 vdd b nmin2 vdd lppfet w=3.88u l=0.12u m=1 
 x11 nmin2 b vss vss lpnfet w=1.58u l=0.12u m=1 
 x2 net29 a net37 vss lpnfet w=1.2u l=0.12u m=1 
 x3 net29 nmin1 nmin2 vss lpnfet w=1.2u l=0.12u m=1 
 x4 vdd net29 y vdd lppfet w=5.12u l=0.12u m=1 
 x5 y net29 vss vss lpnfet w=1.88u l=0.12u m=1 
 x6 vdd a nmin1 vdd lppfet w=1.04u l=0.12u m=1 
 x7 nmin1 a vss vss lpnfet w=0.38u l=0.12u m=1 
 x8 vdd nmin2 net37 vdd lppfet w=3.12u l=0.12u m=1 
 x9 net37 nmin2 vss vss lpnfet w=1.2u l=0.12u m=1 
 .ends clkxor2x8ts 

 **** 
 *.subckt cmpr22x2ts co s a b 
 .subckt cmpr22x2ts co s a b vss vdd
 x0 hnet16 a vss vss lpnfet w=0.48u l=0.12u m=1 
 x1 net27 b hnet16 vss lpnfet w=0.48u l=0.12u m=1 
 x10 vdd b nmb vdd lppfet w=1.02u l=0.12u m=1 
 x11 nmb b vss vss lpnfet w=0.72u l=0.12u m=1 
 x12 vdd net46 net45 vdd lppfet w=2.56u l=0.12u m=1 
 x13 net45 net46 vss vss lpnfet w=1.84u l=0.12u m=1 
 x14 vdd a net46 vdd lppfet w=3.6u l=0.12u m=1 
 x15 net46 a vss vss lpnfet w=2.58u l=0.12u m=1 
 x2 vdd a net27 vdd lppfet w=0.5u l=0.12u m=1 
 x3 vdd b net27 vdd lppfet w=0.5u l=0.12u m=1 
 x4 s b net45 vdd lppfet w=2.54u l=0.12u m=1 
 x5 s nmb net46 vdd lppfet w=2.56u l=0.12u m=1 
 x6 s nmb net45 vss lpnfet w=1.66u l=0.12u m=1 
 x7 s b net46 vss lpnfet w=1.76u l=0.12u m=1 
 x8 vdd net27 co vdd lppfet w=1.28u l=0.12u m=1 
 x9 co net27 vss vss lpnfet w=0.92u l=0.12u m=1 
 .ends cmpr22x2ts 

 **** 
 *.subckt cmpr22x4ts co s a b 
 .subckt cmpr22x4ts co s a b vss vdd
 x0 hnet16 a vss vss lpnfet w=0.92u l=0.12u m=1 
 x1 net27 b hnet16 vss lpnfet w=0.92u l=0.12u m=1 
 x10 vdd b nmb vdd lppfet w=2.06u l=0.12u m=1 
 x11 nmb b vss vss lpnfet w=1.32u l=0.12u m=1 
 x12 vdd net46 net45 vdd lppfet w=5.12u l=0.12u m=1 
 x13 net45 net46 vss vss lpnfet w=3.68u l=0.12u m=1 
 x14 vdd a net46 vdd lppfet w=7.18u l=0.12u m=1 
 x15 net46 a vss vss lpnfet w=4.6u l=0.12u m=1 
 x2 vdd a net27 vdd lppfet w=0.9u l=0.12u m=1 
 x3 vdd b net27 vdd lppfet w=0.9u l=0.12u m=1 
 x4 s b net45 vdd lppfet w=4.96u l=0.12u m=1 
 x5 s nmb net46 vdd lppfet w=4.96u l=0.12u m=1 
 x6 s nmb net45 vss lpnfet w=3.68u l=0.12u m=1 
 x7 s b net46 vss lpnfet w=3.68u l=0.12u m=1 
 x8 vdd net27 co vdd lppfet w=2.56u l=0.12u m=1 
 x9 co net27 vss vss lpnfet w=1.84u l=0.12u m=1 
 .ends cmpr22x4ts 

 **** 
 *.subckt cmpr32x2ts co s a b c 
 .subckt cmpr32x2ts co s a b c vss vdd
 x0 xo nmb nma vdd lppfet w=0.5u l=0.12u m=1 
 x1 xn net109 nma vdd lppfet w=0.5u l=0.12u m=1 
 x10 xo nma net109 vss lpnfet w=0.54u l=0.12u m=1 
 x11 xn nma nmb vss lpnfet w=0.54u l=0.12u m=1 
 x12 nmcin xo net78 vss lpnfet w=0.32u l=0.12u m=1 
 x13 net78 xn nmb vss lpnfet w=0.32u l=0.12u m=1 
 x14 net108 nmcin xn vss lpnfet w=0.34u l=0.12u m=1 
 x15 net108 c xo vss lpnfet w=0.34u l=0.12u m=1 
 x16 vdd nmb net109 vdd lppfet w=0.9u l=0.12u m=1 
 x17 net109 nmb vss vss lpnfet w=0.64u l=0.12u m=1 
 x18 vdd net108 s vdd lppfet w=1.28u l=0.12u m=1 
 x19 s net108 vss vss lpnfet w=0.84u l=0.12u m=1 
 x2 xn nma net109 vdd lppfet w=0.76u l=0.12u m=1 
 x20 vdd net78 co vdd lppfet w=1.28u l=0.12u m=1 
 x21 co net78 vss vss lpnfet w=0.84u l=0.12u m=1 
 x22 vdd c nmcin vdd lppfet w=0.5u l=0.12u m=1 
 x23 nmcin c vss vss lpnfet w=0.32u l=0.12u m=1 
 x24 vdd b nmb vdd lppfet w=1.28u l=0.12u m=1 
 x25 nmb b vss vss lpnfet w=0.92u l=0.12u m=1 
 x26 vdd a nma vdd lppfet w=1.28u l=0.12u m=1 
 x27 nma a vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 xo nma nmb vdd lppfet w=0.76u l=0.12u m=1 
 x4 nmcin xn net78 vdd lppfet w=0.5u l=0.12u m=1 
 x5 net78 xo nmb vdd lppfet w=0.5u l=0.12u m=1 
 x6 net108 c xn vdd lppfet w=0.5u l=0.12u m=1 
 x7 net108 nmcin xo vdd lppfet w=0.5u l=0.12u m=1 
 x8 xo net109 nma vss lpnfet w=0.34u l=0.12u m=1 
 x9 xn nmb nma vss lpnfet w=0.34u l=0.12u m=1 
 .ends cmpr32x2ts 

 **** 
 *.subckt cmpr32x4ts co s a b c 
 .subckt cmpr32x4ts co s a b c vss vdd
 x0 xo nmb nma vdd lppfet w=0.5u l=0.12u m=1 
 x1 xn net111 nma vdd lppfet w=0.5u l=0.12u m=1 
 x10 xo nma net111 vss lpnfet w=0.54u l=0.12u m=1 
 x11 xn nma nmb vss lpnfet w=0.54u l=0.12u m=1 
 x12 nmcin xo net80 vss lpnfet w=0.32u l=0.12u m=1 
 x13 net80 xn nmb vss lpnfet w=0.32u l=0.12u m=1 
 x14 net110 nmcin xn vss lpnfet w=0.36u l=0.12u m=1 
 x15 net110 c xo vss lpnfet w=0.36u l=0.12u m=1 
 x16 vdd nmb net111 vdd lppfet w=0.9u l=0.12u m=1 
 x17 net111 nmb vss vss lpnfet w=0.64u l=0.12u m=1 
 x18 vdd net110 s vdd lppfet w=2.56u l=0.12u m=1 
 x19 s net110 vss vss lpnfet w=1.84u l=0.12u m=1 
 x2 xn nma net111 vdd lppfet w=0.76u l=0.12u m=1 
 x20 vdd net80 co vdd lppfet w=2.56u l=0.12u m=1 
 x21 co net80 vss vss lpnfet w=1.84u l=0.12u m=1 
 x22 vdd c nmcin vdd lppfet w=0.5u l=0.12u m=1 
 x23 nmcin c vss vss lpnfet w=0.36u l=0.12u m=1 
 x24 vdd b nmb vdd lppfet w=1.28u l=0.12u m=1 
 x25 nmb b vss vss lpnfet w=0.92u l=0.12u m=1 
 x26 vdd a nma vdd lppfet w=1.28u l=0.12u m=1 
 x27 nma a vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 xo nma nmb vdd lppfet w=0.76u l=0.12u m=1 
 x4 nmcin xn net80 vdd lppfet w=0.5u l=0.12u m=1 
 x5 net80 xo nmb vdd lppfet w=0.5u l=0.12u m=1 
 x6 net110 c xn vdd lppfet w=0.5u l=0.12u m=1 
 x7 net110 nmcin xo vdd lppfet w=0.5u l=0.12u m=1 
 x8 xo net111 nma vss lpnfet w=0.34u l=0.12u m=1 
 x9 xn nmb nma vss lpnfet w=0.34u l=0.12u m=1 
 .ends cmpr32x4ts 

 **** 
 *.subckt cmpr42x1ts co ico s a b c d ici 
 .subckt cmpr42x1ts co ico s a b c d ici vss vdd
 x0 net92 net90 nmin3 vss lpnfet w=0.36u l=0.12u m=1 
 x1 net92 net144 nmcin vss lpnfet w=0.36u l=0.12u m=1 
 x10 net125 d nmin2 vss lpnfet w=0.56u l=0.12u m=1 
 x11 net125 nmin3 net128 vss lpnfet w=0.56u l=0.12u m=1 
 x12 net128 nmin2 vss vss lpnfet w=0.56u l=0.12u m=1 
 x13 net144 net133 net125 vss lpnfet w=0.56u l=0.12u m=1 
 x14 net144 net125 net133 vss lpnfet w=0.56u l=0.12u m=1 
 x15 net140 net90 nmcin vss lpnfet w=0.36u l=0.12u m=1 
 x16 net140 net144 net143 vss lpnfet w=0.36u l=0.12u m=1 
 x17 net143 nmcin vss vss lpnfet w=0.36u l=0.12u m=1 
 x18 net92 net144 nmin3 vdd lppfet w=0.5u l=0.12u m=1 
 x19 net92 net90 nmcin vdd lppfet w=0.5u l=0.12u m=1 
 x2 nmco b net101 vss lpnfet w=0.36u l=0.12u m=1 
 x20 net154 a vdd vdd lppfet w=0.5u l=0.12u m=1 
 x21 nmco b net154 vdd lppfet w=0.5u l=0.12u m=1 
 x22 nmco c net161 vdd lppfet w=0.5u l=0.12u m=1 
 x23 net161 b vdd vdd lppfet w=0.5u l=0.12u m=1 
 x24 net161 a vdd vdd lppfet w=0.5u l=0.12u m=1 
 x25 net183 nmin1 nmin0 vdd lppfet w=0.78u l=0.12u m=1 
 x26 net183 b net173 vdd lppfet w=0.78u l=0.12u m=1 
 x27 net173 nmin0 vdd vdd lppfet w=0.78u l=0.12u m=1 
 x28 net125 nmin3 nmin2 vdd lppfet w=0.78u l=0.12u m=1 
 x29 net125 d net182 vdd lppfet w=0.78u l=0.12u m=1 
 x3 net101 a vss vss lpnfet w=0.36u l=0.12u m=1 
 x30 net182 nmin2 vdd vdd lppfet w=0.78u l=0.12u m=1 
 x31 net144 net183 net125 vdd lppfet w=0.78u l=0.12u m=1 
 x32 net144 net125 net183 vdd lppfet w=0.78u l=0.12u m=1 
 x33 net140 net144 nmcin vdd lppfet w=0.5u l=0.12u m=1 
 x34 net140 net90 net193 vdd lppfet w=0.5u l=0.12u m=1 
 x35 net193 nmcin vdd vdd lppfet w=0.5u l=0.12u m=1 
 x36 vdd nmco ico vdd lppfet w=0.64u l=0.12u m=1 
 x37 ico nmco vss vss lpnfet w=0.46u l=0.12u m=1 
 x38 vdd net92 co vdd lppfet w=0.64u l=0.12u m=1 
 x39 co net92 vss vss lpnfet w=0.46u l=0.12u m=1 
 x4 net104 b vss vss lpnfet w=0.36u l=0.12u m=1 
 x40 vdd net183 net133 vdd lppfet w=0.78u l=0.12u m=1 
 x41 net133 net183 vss vss lpnfet w=0.54u l=0.12u m=1 
 x42 vdd a nmin0 vdd lppfet w=0.78u l=0.12u m=1 
 x43 nmin0 a vss vss lpnfet w=0.56u l=0.12u m=1 
 x44 vdd b nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x45 nmin1 b vss vss lpnfet w=0.2u l=0.12u m=1 
 x46 vdd c nmin2 vdd lppfet w=0.78u l=0.12u m=1 
 x47 nmin2 c vss vss lpnfet w=0.56u l=0.12u m=1 
 x48 vdd d nmin3 vdd lppfet w=0.84u l=0.12u m=1 
 x49 nmin3 d vss vss lpnfet w=0.6u l=0.12u m=1 
 x5 net104 a vss vss lpnfet w=0.36u l=0.12u m=1 
 x50 vdd net144 net90 vdd lppfet w=0.3u l=0.12u m=1 
 x51 net90 net144 vss vss lpnfet w=0.22u l=0.12u m=1 
 x52 vdd ici nmcin vdd lppfet w=0.68u l=0.12u m=1 
 x53 nmcin ici vss vss lpnfet w=0.52u l=0.12u m=1 
 x54 vdd net140 s vdd lppfet w=0.64u l=0.12u m=1 
 x55 s net140 vss vss lpnfet w=0.46u l=0.12u m=1 
 x6 nmco c net104 vss lpnfet w=0.36u l=0.12u m=1 
 x7 net183 b nmin0 vss lpnfet w=0.56u l=0.12u m=1 
 x8 net183 nmin1 net119 vss lpnfet w=0.56u l=0.12u m=1 
 x9 net119 nmin0 vss vss lpnfet w=0.56u l=0.12u m=1 
 .ends cmpr42x1ts 

 **** 
 *.subckt cmpr42x2ts co ico s a b c d ici 
 .subckt cmpr42x2ts co ico s a b c d ici vss vdd
 x0 net92 net90 nmin3 vss lpnfet w=0.74u l=0.12u m=1 
 x1 net92 net144 nmcin vss lpnfet w=0.74u l=0.12u m=1 
 x10 net125 d nmin2 vss lpnfet w=0.84u l=0.12u m=1 
 x11 net125 nmin3 net128 vss lpnfet w=0.84u l=0.12u m=1 
 x12 net128 nmin2 vss vss lpnfet w=0.84u l=0.12u m=1 
 x13 net144 net133 net125 vss lpnfet w=0.9u l=0.12u m=1 
 x14 net144 net125 net133 vss lpnfet w=0.9u l=0.12u m=1 
 x15 net140 net90 nmcin vss lpnfet w=0.74u l=0.12u m=1 
 x16 net140 net144 net143 vss lpnfet w=0.74u l=0.12u m=1 
 x17 net143 nmcin vss vss lpnfet w=0.74u l=0.12u m=1 
 x18 net92 net144 nmin3 vdd lppfet w=1.02u l=0.12u m=1 
 x19 net92 net90 nmcin vdd lppfet w=1.02u l=0.12u m=1 
 x2 nmco b net97 vss lpnfet w=0.74u l=0.12u m=1 
 x20 net154 a vdd vdd lppfet w=1.02u l=0.12u m=1 
 x21 nmco b net154 vdd lppfet w=1.02u l=0.12u m=1 
 x22 nmco c net161 vdd lppfet w=1.02u l=0.12u m=1 
 x23 net161 b vdd vdd lppfet w=1.02u l=0.12u m=1 
 x24 net161 a vdd vdd lppfet w=1.02u l=0.12u m=1 
 x25 net183 nmin1 nmin0 vdd lppfet w=1.16u l=0.12u m=1 
 x26 net183 b net169 vdd lppfet w=1.16u l=0.12u m=1 
 x27 net169 nmin0 vdd vdd lppfet w=1.16u l=0.12u m=1 
 x28 net125 nmin3 nmin2 vdd lppfet w=1.16u l=0.12u m=1 
 x29 net125 d net178 vdd lppfet w=1.26u l=0.12u m=1 
 x3 net97 a vss vss lpnfet w=0.74u l=0.12u m=1 
 x30 net178 nmin2 vdd vdd lppfet w=1.26u l=0.12u m=1 
 x31 net144 net183 net125 vdd lppfet w=1.16u l=0.12u m=1 
 x32 net144 net125 net183 vdd lppfet w=1.16u l=0.12u m=1 
 x33 net140 net144 nmcin vdd lppfet w=1u l=0.12u m=1 
 x34 net140 net90 net197 vdd lppfet w=1u l=0.12u m=1 
 x35 net197 nmcin vdd vdd lppfet w=1u l=0.12u m=1 
 x36 vdd nmco ico vdd lppfet w=1.28u l=0.12u m=1 
 x37 ico nmco vss vss lpnfet w=0.92u l=0.12u m=1 
 x38 vdd net92 co vdd lppfet w=1.28u l=0.12u m=1 
 x39 co net92 vss vss lpnfet w=0.92u l=0.12u m=1 
 x4 net104 b vss vss lpnfet w=0.74u l=0.12u m=1 
 x40 vdd net183 net133 vdd lppfet w=1.16u l=0.12u m=1 
 x41 net133 net183 vss vss lpnfet w=0.9u l=0.12u m=1 
 x42 vdd a nmin0 vdd lppfet w=1.16u l=0.12u m=1 
 x43 nmin0 a vss vss lpnfet w=0.72u l=0.12u m=1 
 x44 vdd b nmin1 vdd lppfet w=0.38u l=0.12u m=1 
 x45 nmin1 b vss vss lpnfet w=0.28u l=0.12u m=1 
 x46 vdd c nmin2 vdd lppfet w=1.16u l=0.12u m=1 
 x47 nmin2 c vss vss lpnfet w=0.92u l=0.12u m=1 
 x48 vdd d nmin3 vdd lppfet w=1.16u l=0.12u m=1 
 x49 nmin3 d vss vss lpnfet w=0.92u l=0.12u m=1 
 x5 net104 a vss vss lpnfet w=0.74u l=0.12u m=1 
 x50 vdd net144 net90 vdd lppfet w=0.64u l=0.12u m=1 
 x51 net90 net144 vss vss lpnfet w=0.46u l=0.12u m=1 
 x52 vdd ici nmcin vdd lppfet w=1.28u l=0.12u m=1 
 x53 nmcin ici vss vss lpnfet w=0.82u l=0.12u m=1 
 x54 vdd net140 s vdd lppfet w=1.26u l=0.12u m=1 
 x55 s net140 vss vss lpnfet w=0.92u l=0.12u m=1 
 x6 nmco c net104 vss lpnfet w=0.74u l=0.12u m=1 
 x7 net183 b nmin0 vss lpnfet w=0.92u l=0.12u m=1 
 x8 net183 nmin1 net119 vss lpnfet w=0.9u l=0.12u m=1 
 x9 net119 nmin0 vss vss lpnfet w=0.9u l=0.12u m=1 
 .ends cmpr42x2ts 

 **** 
 *.subckt cmpr42x4ts co ico s a b c d ici 
 .subckt cmpr42x4ts co ico s a b c d ici vss vdd
 x0 net99 nmcin vss vss lpnfet w=0.74u l=0.12u m=1 
 x1 net100 net173 net99 vss lpnfet w=0.74u l=0.12u m=1 
 x10 nmco c net121 vss lpnfet w=1.34u l=0.12u m=1 
 x11 net212 b nmin0 vss lpnfet w=0.92u l=0.12u m=1 
 x12 net212 nmin1 net132 vss lpnfet w=0.86u l=0.12u m=1 
 x13 net132 nmin0 vss vss lpnfet w=0.86u l=0.12u m=1 
 x14 net142 d nmin2 vss lpnfet w=0.86u l=0.12u m=1 
 x15 net142 nmin3 net145 vss lpnfet w=0.92u l=0.12u m=1 
 x16 net145 nmin2 vss vss lpnfet w=0.92u l=0.12u m=1 
 x17 net173 net150 net142 vss lpnfet w=0.86u l=0.12u m=1 
 x18 net173 net142 net150 vss lpnfet w=0.86u l=0.12u m=1 
 x19 net100 net107 nmcin vss lpnfet w=1.54u l=0.12u m=1 
 x2 net105 a vss vss lpnfet w=0.74u l=0.12u m=1 
 x20 net100 net173 net160 vss lpnfet w=0.74u l=0.12u m=1 
 x21 net160 nmcin vss vss lpnfet w=0.74u l=0.12u m=1 
 x22 net100 net107 net166 vdd lppfet w=0.8u l=0.12u m=1 
 x23 net166 nmcin vdd vdd lppfet w=0.8u l=0.12u m=1 
 x24 nmco b net172 vdd lppfet w=1.02u l=0.12u m=1 
 x25 net172 a vdd vdd lppfet w=1.02u l=0.12u m=1 
 x26 net109 net173 nmin3 vdd lppfet w=2.06u l=0.12u m=1 
 x27 net109 net107 nmcin vdd lppfet w=2.04u l=0.12u m=1 
 x28 net183 a vdd vdd lppfet w=1.02u l=0.12u m=1 
 x29 nmco b net183 vdd lppfet w=1.02u l=0.12u m=1 
 x3 nmco b net105 vss lpnfet w=0.74u l=0.12u m=1 
 x30 nmco c net190 vdd lppfet w=1.92u l=0.12u m=1 
 x31 net190 b vdd vdd lppfet w=2.04u l=0.12u m=1 
 x32 net190 a vdd vdd lppfet w=2.04u l=0.12u m=1 
 x33 net212 nmin1 nmin0 vdd lppfet w=1.16u l=0.12u m=1 
 x34 net212 b net202 vdd lppfet w=1.16u l=0.12u m=1 
 x35 net202 nmin0 vdd vdd lppfet w=1.16u l=0.12u m=1 
 x36 net142 nmin3 nmin2 vdd lppfet w=1.16u l=0.12u m=1 
 x37 net142 d net211 vdd lppfet w=1.16u l=0.12u m=1 
 x38 net211 nmin2 vdd vdd lppfet w=1.16u l=0.12u m=1 
 x39 net173 net212 net142 vdd lppfet w=1.16u l=0.12u m=1 
 x4 net109 net107 nmin3 vss lpnfet w=1.34u l=0.12u m=1 
 x40 net173 net142 net212 vdd lppfet w=1.16u l=0.12u m=1 
 x41 net100 net173 nmcin vdd lppfet w=1.92u l=0.12u m=1 
 x42 net100 net107 net222 vdd lppfet w=0.8u l=0.12u m=1 
 x43 net222 nmcin vdd vdd lppfet w=0.8u l=0.12u m=1 
 x44 vdd nmco ico vdd lppfet w=2.56u l=0.12u m=1 
 x45 ico nmco vss vss lpnfet w=1.8u l=0.12u m=1 
 x46 vdd net109 co vdd lppfet w=2.56u l=0.12u m=1 
 x47 co net109 vss vss lpnfet w=1.84u l=0.12u m=1 
 x48 vdd net212 net150 vdd lppfet w=1.16u l=0.12u m=1 
 x49 net150 net212 vss vss lpnfet w=0.86u l=0.12u m=1 
 x5 net109 net173 nmcin vss lpnfet w=1.48u l=0.12u m=1 
 x50 vdd a nmin0 vdd lppfet w=1.16u l=0.12u m=1 
 x51 nmin0 a vss vss lpnfet w=0.72u l=0.12u m=1 
 x52 vdd b nmin1 vdd lppfet w=0.38u l=0.12u m=1 
 x53 nmin1 b vss vss lpnfet w=0.3u l=0.12u m=1 
 x54 vdd c nmin2 vdd lppfet w=1.16u l=0.12u m=1 
 x55 nmin2 c vss vss lpnfet w=0.86u l=0.12u m=1 
 x56 vdd d nmin3 vdd lppfet w=1.16u l=0.12u m=1 
 x57 nmin3 d vss vss lpnfet w=0.86u l=0.12u m=1 
 x58 vdd net173 net107 vdd lppfet w=1.24u l=0.12u m=1 
 x59 net107 net173 vss vss lpnfet w=0.9u l=0.12u m=1 
 x6 nmco b net118 vss lpnfet w=0.74u l=0.12u m=1 
 x60 vdd ici nmcin vdd lppfet w=1.24u l=0.12u m=1 
 x61 nmcin ici vss vss lpnfet w=0.9u l=0.12u m=1 
 x62 vdd net100 s vdd lppfet w=2.56u l=0.12u m=1 
 x63 s net100 vss vss lpnfet w=1.84u l=0.12u m=1 
 x7 net118 a vss vss lpnfet w=0.74u l=0.12u m=1 
 x8 net121 b vss vss lpnfet w=1.44u l=0.12u m=1 
 x9 net121 a vss vss lpnfet w=1.48u l=0.12u m=1 
 .ends cmpr42x4ts 

 **** 
 *.subckt dffhqx1ts q ck d 
 .subckt dffhqx1ts q ck d vss vdd
 x0 vdd c hnet20 vdd lppfet w=0.58u l=0.12u m=1 
 x1 hnet20 nmin pm vdd lppfet w=0.58u l=0.12u m=1 
 x10 pm c hnet26 vss lpnfet w=0.2u l=0.12u m=1 
 x11 hnet28 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x12 vdd m hnet28 vdd lppfet w=0.28u l=0.12u m=1 
 x13 hnet32 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x14 net73 cn hnet32 vss lpnfet w=0.2u l=0.12u m=1 
 x15 hnet34 c net73 vdd lppfet w=0.26u l=0.12u m=1 
 x16 vdd s hnet34 vdd lppfet w=0.26u l=0.12u m=1 
 x17 vdd d nmin vdd lppfet w=0.28u l=0.12u m=1 
 x18 nmin d vss vss lpnfet w=0.2u l=0.12u m=1 
 x19 vdd pm m vdd lppfet w=0.96u l=0.12u m=1 
 x2 hnet24 cn vss vss lpnfet w=0.42u l=0.12u m=1 
 x20 m pm vss vss lpnfet w=0.5u l=0.12u m=1 
 x21 vdd net73 s vdd lppfet w=0.28u l=0.12u m=1 
 x22 s net73 vss vss lpnfet w=0.2u l=0.12u m=1 
 x23 vdd net73 q vdd lppfet w=0.74u l=0.12u m=1 
 x24 q net73 vss vss lpnfet w=0.46u l=0.12u m=1 
 x25 vdd net86 c vdd lppfet w=0.84u l=0.12u m=1 
 x26 c net86 vss vss lpnfet w=0.3u l=0.12u m=1 
 x27 vdd ck net86 vdd lppfet w=0.28u l=0.12u m=1 
 x28 net86 ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x3 pm nmin hnet24 vss lpnfet w=0.42u l=0.12u m=1 
 x4 net57 ck vdd vdd lppfet w=0.7u l=0.12u m=1 
 x5 cn c net57 vdd lppfet w=0.5u l=0.12u m=1 
 x6 net73 cn m vdd lppfet w=0.96u l=0.12u m=1 
 x7 cn ck vss vss lpnfet w=0.2u l=0.12u m=1 
 x8 net73 c m vss lpnfet w=0.48u l=0.12u m=1 
 x9 hnet26 m vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends dffhqx1ts 

 **** 
 *.subckt dffhqx2ts q ck d 
 .subckt dffhqx2ts q ck d vss vdd
 x0 vdd c hnet20 vdd lppfet w=1u l=0.12u m=1 
 x1 hnet20 nmin pm vdd lppfet w=1u l=0.12u m=1 
 x10 pm c hnet26 vss lpnfet w=0.2u l=0.12u m=1 
 x11 hnet28 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x12 vdd m hnet28 vdd lppfet w=0.28u l=0.12u m=1 
 x13 hnet32 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x14 net73 cn hnet32 vss lpnfet w=0.2u l=0.12u m=1 
 x15 hnet34 c net73 vdd lppfet w=0.28u l=0.12u m=1 
 x16 vdd s hnet34 vdd lppfet w=0.28u l=0.12u m=1 
 x17 vdd d nmin vdd lppfet w=0.34u l=0.12u m=1 
 x18 nmin d vss vss lpnfet w=0.24u l=0.12u m=1 
 x19 vdd pm m vdd lppfet w=1.56u l=0.12u m=1 
 x2 hnet24 cn vss vss lpnfet w=0.68u l=0.12u m=1 
 x20 m pm vss vss lpnfet w=0.86u l=0.12u m=1 
 x21 vdd net73 s vdd lppfet w=0.28u l=0.12u m=1 
 x22 s net73 vss vss lpnfet w=0.18u l=0.12u m=1 
 x23 vdd net73 q vdd lppfet w=1.3u l=0.12u m=1 
 x24 q net73 vss vss lpnfet w=0.88u l=0.12u m=1 
 x25 vdd net86 c vdd lppfet w=1.18u l=0.12u m=1 
 x26 c net86 vss vss lpnfet w=0.42u l=0.12u m=1 
 x27 vdd ck net86 vdd lppfet w=0.32u l=0.12u m=1 
 x28 net86 ck vss vss lpnfet w=0.32u l=0.12u m=1 
 x3 pm nmin hnet24 vss lpnfet w=0.68u l=0.12u m=1 
 x4 net55 ck vdd vdd lppfet w=0.9u l=0.12u m=1 
 x5 cn c net55 vdd lppfet w=0.68u l=0.12u m=1 
 x6 net73 cn m vdd lppfet w=1.56u l=0.12u m=1 
 x7 cn ck vss vss lpnfet w=0.26u l=0.12u m=1 
 x8 net73 c m vss lpnfet w=0.82u l=0.12u m=1 
 x9 hnet26 m vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends dffhqx2ts 

 **** 
 *.subckt dffhqx4ts q ck d 
 .subckt dffhqx4ts q ck d vss vdd
 x0 hnet21 cn vss vss lpnfet w=0.6u l=0.12u m=1 
 x1 pm nmin hnet21 vss lpnfet w=0.6u l=0.12u m=1 
 x10 net73 cn m vdd lppfet w=2.82u l=0.12u m=1 
 x11 cn ck vss vss lpnfet w=0.48u l=0.12u m=1 
 x12 net73 c m vss lpnfet w=1.4u l=0.12u m=1 
 x13 hnet28 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x14 pm c hnet28 vss lpnfet w=0.2u l=0.12u m=1 
 x15 hnet30 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x16 vdd m hnet30 vdd lppfet w=0.28u l=0.12u m=1 
 x17 hnet34 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 net73 cn hnet34 vss lpnfet w=0.2u l=0.12u m=1 
 x19 hnet36 c net73 vdd lppfet w=0.28u l=0.12u m=1 
 x2 hnet17 cn vss vss lpnfet w=0.6u l=0.12u m=1 
 x20 vdd s hnet36 vdd lppfet w=0.28u l=0.12u m=1 
 x21 vdd d nmin vdd lppfet w=0.62u l=0.12u m=1 
 x22 nmin d vss vss lpnfet w=0.44u l=0.12u m=1 
 x23 vdd pm m vdd lppfet w=2.56u l=0.12u m=1 
 x24 m pm vss vss lpnfet w=1.56u l=0.12u m=1 
 x25 vdd net73 s vdd lppfet w=0.28u l=0.12u m=1 
 x26 s net73 vss vss lpnfet w=0.2u l=0.12u m=1 
 x27 vdd net73 q vdd lppfet w=2.6u l=0.12u m=1 
 x28 q net73 vss vss lpnfet w=1.84u l=0.12u m=1 
 x29 vdd net86 c vdd lppfet w=1.92u l=0.12u m=1 
 x3 pm nmin hnet17 vss lpnfet w=0.6u l=0.12u m=1 
 x30 c net86 vss vss lpnfet w=0.72u l=0.12u m=1 
 x31 vdd ck net86 vdd lppfet w=0.54u l=0.12u m=1 
 x32 net86 ck vss vss lpnfet w=0.54u l=0.12u m=1 
 x4 vdd c hnet26 vdd lppfet w=0.88u l=0.12u m=1 
 x5 hnet26 nmin pm vdd lppfet w=0.88u l=0.12u m=1 
 x6 vdd c hnet23 vdd lppfet w=0.88u l=0.12u m=1 
 x7 hnet23 nmin pm vdd lppfet w=0.88u l=0.12u m=1 
 x8 net57 ck vdd vdd lppfet w=1.3u l=0.12u m=1 
 x9 cn c net57 vdd lppfet w=1.3u l=0.12u m=1 
 .ends dffhqx4ts 

 **** 
 *.subckt dffhqx8ts q ck d 
 .subckt dffhqx8ts q ck d vss vdd
 x0 hnet21 cn vss vss lpnfet w=0.6u l=0.12u m=1 
 x1 pm nmin hnet21 vss lpnfet w=0.6u l=0.12u m=1 
 x10 net73 cn m vdd lppfet w=2.82u l=0.12u m=1 
 x11 cn ck vss vss lpnfet w=0.48u l=0.12u m=1 
 x12 net73 c m vss lpnfet w=1.4u l=0.12u m=1 
 x13 hnet28 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x14 pm c hnet28 vss lpnfet w=0.2u l=0.12u m=1 
 x15 hnet30 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x16 vdd m hnet30 vdd lppfet w=0.28u l=0.12u m=1 
 x17 hnet34 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 net73 cn hnet34 vss lpnfet w=0.2u l=0.12u m=1 
 x19 hnet36 c net73 vdd lppfet w=0.28u l=0.12u m=1 
 x2 hnet17 cn vss vss lpnfet w=0.6u l=0.12u m=1 
 x20 vdd s hnet36 vdd lppfet w=0.28u l=0.12u m=1 
 x21 vdd d nmin vdd lppfet w=0.62u l=0.12u m=1 
 x22 nmin d vss vss lpnfet w=0.44u l=0.12u m=1 
 x23 vdd pm m vdd lppfet w=2.56u l=0.12u m=1 
 x24 m pm vss vss lpnfet w=1.56u l=0.12u m=1 
 x25 vdd net73 s vdd lppfet w=0.28u l=0.12u m=1 
 x26 s net73 vss vss lpnfet w=0.2u l=0.12u m=1 
 x27 vdd net73 q vdd lppfet w=5.9u l=0.12u m=1 
 x28 q net73 vss vss lpnfet w=3.7u l=0.12u m=1 
 x29 vdd net86 c vdd lppfet w=1.92u l=0.12u m=1 
 x3 pm nmin hnet17 vss lpnfet w=0.6u l=0.12u m=1 
 x30 c net86 vss vss lpnfet w=0.72u l=0.12u m=1 
 x31 vdd ck net86 vdd lppfet w=0.54u l=0.12u m=1 
 x32 net86 ck vss vss lpnfet w=0.54u l=0.12u m=1 
 x4 vdd c hnet26 vdd lppfet w=0.88u l=0.12u m=1 
 x5 hnet26 nmin pm vdd lppfet w=0.88u l=0.12u m=1 
 x6 vdd c hnet23 vdd lppfet w=0.88u l=0.12u m=1 
 x7 hnet23 nmin pm vdd lppfet w=0.88u l=0.12u m=1 
 x8 net57 ck vdd vdd lppfet w=1.3u l=0.12u m=1 
 x9 cn c net57 vdd lppfet w=1.3u l=0.12u m=1 
 .ends dffhqx8ts 

 **** 
 *.subckt dffnsrx1ts q qn ckn d rn sn 
 .subckt dffnsrx1ts q qn ckn d rn sn vss vdd
 x0 m sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x1 m pm net63 vdd lppfet w=0.42u l=0.12u m=1 
 x10 net96 s net94 vss lpnfet w=0.2u l=0.12u m=1 
 x11 net94 sn vss vss lpnfet w=0.4u l=0.12u m=1 
 x12 net100 cn net96 vss lpnfet w=0.2u l=0.12u m=1 
 x13 net100 c m vss lpnfet w=0.2u l=0.12u m=1 
 x14 hnet24 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 pm cn hnet24 vss lpnfet w=0.2u l=0.12u m=1 
 x16 hnet26 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x17 vdd d hnet26 vdd lppfet w=0.28u l=0.12u m=1 
 x18 hnet30 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x19 pm c hnet30 vss lpnfet w=0.2u l=0.12u m=1 
 x2 net63 net113 vdd vdd lppfet w=0.56u l=0.12u m=1 
 x20 hnet32 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x21 vdd m hnet32 vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd s net109 vdd lppfet w=0.28u l=0.12u m=1 
 x23 net109 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 vdd s q vdd lppfet w=0.64u l=0.12u m=1 
 x25 q s vss vss lpnfet w=0.46u l=0.12u m=1 
 x26 vdd rn net113 vdd lppfet w=0.28u l=0.12u m=1 
 x27 net113 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 vdd net100 s vdd lppfet w=0.28u l=0.12u m=1 
 x29 s net100 vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 net100 sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x30 vdd net109 qn vdd lppfet w=0.64u l=0.12u m=1 
 x31 qn net109 vss vss lpnfet w=0.46u l=0.12u m=1 
 x32 vdd ckn c vdd lppfet w=0.42u l=0.12u m=1 
 x33 c ckn vss vss lpnfet w=0.3u l=0.12u m=1 
 x34 vdd c cn vdd lppfet w=0.28u l=0.12u m=1 
 x35 cn c vss vss lpnfet w=0.2u l=0.12u m=1 
 x4 net73 s net63 vdd lppfet w=0.28u l=0.12u m=1 
 x5 net100 c net73 vdd lppfet w=0.28u l=0.12u m=1 
 x6 net100 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x7 m net113 net94 vss lpnfet w=0.2u l=0.12u m=1 
 x8 m pm net94 vss lpnfet w=0.3u l=0.12u m=1 
 x9 net100 net113 net94 vss lpnfet w=0.2u l=0.12u m=1 
 .ends dffnsrx1ts 

 **** 
 *.subckt dffnsrx2ts q qn ckn d rn sn 
 .subckt dffnsrx2ts q qn ckn d rn sn vss vdd
 x0 m sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x1 m pm net63 vdd lppfet w=0.42u l=0.12u m=1 
 x10 net96 s net94 vss lpnfet w=0.2u l=0.12u m=1 
 x11 net94 sn vss vss lpnfet w=0.4u l=0.12u m=1 
 x12 net100 cn net96 vss lpnfet w=0.2u l=0.12u m=1 
 x13 net100 c m vss lpnfet w=0.2u l=0.12u m=1 
 x14 hnet24 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 pm cn hnet24 vss lpnfet w=0.2u l=0.12u m=1 
 x16 hnet26 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x17 vdd d hnet26 vdd lppfet w=0.28u l=0.12u m=1 
 x18 hnet30 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x19 pm c hnet30 vss lpnfet w=0.2u l=0.12u m=1 
 x2 net63 net113 vdd vdd lppfet w=0.56u l=0.12u m=1 
 x20 hnet32 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x21 vdd m hnet32 vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd s net109 vdd lppfet w=0.3u l=0.12u m=1 
 x23 net109 s vss vss lpnfet w=0.22u l=0.12u m=1 
 x24 vdd s q vdd lppfet w=1.28u l=0.12u m=1 
 x25 q s vss vss lpnfet w=0.92u l=0.12u m=1 
 x26 vdd rn net113 vdd lppfet w=0.28u l=0.12u m=1 
 x27 net113 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 vdd net100 s vdd lppfet w=0.34u l=0.12u m=1 
 x29 s net100 vss vss lpnfet w=0.26u l=0.12u m=1 
 x3 net100 sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x30 vdd net109 qn vdd lppfet w=1.28u l=0.12u m=1 
 x31 qn net109 vss vss lpnfet w=0.92u l=0.12u m=1 
 x32 vdd ckn c vdd lppfet w=0.42u l=0.12u m=1 
 x33 c ckn vss vss lpnfet w=0.3u l=0.12u m=1 
 x34 vdd c cn vdd lppfet w=0.28u l=0.12u m=1 
 x35 cn c vss vss lpnfet w=0.2u l=0.12u m=1 
 x4 net73 s net63 vdd lppfet w=0.28u l=0.12u m=1 
 x5 net100 c net73 vdd lppfet w=0.28u l=0.12u m=1 
 x6 net100 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x7 m net113 net94 vss lpnfet w=0.2u l=0.12u m=1 
 x8 m pm net94 vss lpnfet w=0.3u l=0.12u m=1 
 x9 net100 net113 net94 vss lpnfet w=0.2u l=0.12u m=1 
 .ends dffnsrx2ts 

 **** 
 *.subckt dffnsrx4ts q qn ckn d rn sn 
 .subckt dffnsrx4ts q qn ckn d rn sn vss vdd
 x0 m sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x1 m pm net63 vdd lppfet w=0.46u l=0.12u m=1 
 x10 net96 s net94 vss lpnfet w=0.2u l=0.12u m=1 
 x11 net94 sn vss vss lpnfet w=0.46u l=0.12u m=1 
 x12 net100 cn net96 vss lpnfet w=0.2u l=0.12u m=1 
 x13 net100 c m vss lpnfet w=0.22u l=0.12u m=1 
 x14 hnet24 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 pm cn hnet24 vss lpnfet w=0.2u l=0.12u m=1 
 x16 hnet26 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x17 vdd d hnet26 vdd lppfet w=0.28u l=0.12u m=1 
 x18 hnet30 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x19 pm c hnet30 vss lpnfet w=0.2u l=0.12u m=1 
 x2 net63 net113 vdd vdd lppfet w=0.62u l=0.12u m=1 
 x20 hnet32 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x21 vdd m hnet32 vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd s net109 vdd lppfet w=0.62u l=0.12u m=1 
 x23 net109 s vss vss lpnfet w=0.4u l=0.12u m=1 
 x24 vdd s q vdd lppfet w=2.4u l=0.12u m=1 
 x25 q s vss vss lpnfet w=1.84u l=0.12u m=1 
 x26 vdd rn net113 vdd lppfet w=0.28u l=0.12u m=1 
 x27 net113 rn vss vss lpnfet w=0.34u l=0.12u m=1 
 x28 vdd net100 s vdd lppfet w=0.66u l=0.12u m=1 
 x29 s net100 vss vss lpnfet w=0.44u l=0.12u m=1 
 x3 net100 sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x30 vdd net109 qn vdd lppfet w=2.4u l=0.12u m=1 
 x31 qn net109 vss vss lpnfet w=1.84u l=0.12u m=1 
 x32 vdd ckn c vdd lppfet w=0.44u l=0.12u m=1 
 x33 c ckn vss vss lpnfet w=0.32u l=0.12u m=1 
 x34 vdd c cn vdd lppfet w=0.28u l=0.12u m=1 
 x35 cn c vss vss lpnfet w=0.2u l=0.12u m=1 
 x4 net73 s net63 vdd lppfet w=0.28u l=0.12u m=1 
 x5 net100 c net73 vdd lppfet w=0.28u l=0.12u m=1 
 x6 net100 cn m vdd lppfet w=0.3u l=0.12u m=1 
 x7 m net113 net94 vss lpnfet w=0.2u l=0.12u m=1 
 x8 m pm net94 vss lpnfet w=0.34u l=0.12u m=1 
 x9 net100 net113 net94 vss lpnfet w=0.2u l=0.12u m=1 
 .ends dffnsrx4ts 

 **** 
 *.subckt dffnsrxlts q qn ckn d rn sn 
 .subckt dffnsrxlts q qn ckn d rn sn vss vdd
 x0 m sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x1 m pm net63 vdd lppfet w=0.42u l=0.12u m=1 
 x10 net91 s net94 vss lpnfet w=0.2u l=0.12u m=1 
 x11 net94 sn vss vss lpnfet w=0.4u l=0.12u m=1 
 x12 net100 cn net91 vss lpnfet w=0.2u l=0.12u m=1 
 x13 net100 c m vss lpnfet w=0.2u l=0.12u m=1 
 x14 hnet24 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 pm cn hnet24 vss lpnfet w=0.2u l=0.12u m=1 
 x16 hnet26 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x17 vdd d hnet26 vdd lppfet w=0.28u l=0.12u m=1 
 x18 hnet30 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x19 pm c hnet30 vss lpnfet w=0.2u l=0.12u m=1 
 x2 net63 net113 vdd vdd lppfet w=0.56u l=0.12u m=1 
 x20 hnet32 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x21 vdd m hnet32 vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd s net109 vdd lppfet w=0.28u l=0.12u m=1 
 x23 net109 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 vdd s q vdd lppfet w=0.34u l=0.12u m=1 
 x25 q s vss vss lpnfet w=0.24u l=0.12u m=1 
 x26 vdd rn net113 vdd lppfet w=0.28u l=0.12u m=1 
 x27 net113 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 vdd net100 s vdd lppfet w=0.28u l=0.12u m=1 
 x29 s net100 vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 net100 sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x30 vdd net109 qn vdd lppfet w=0.34u l=0.12u m=1 
 x31 qn net109 vss vss lpnfet w=0.24u l=0.12u m=1 
 x32 vdd ckn c vdd lppfet w=0.42u l=0.12u m=1 
 x33 c ckn vss vss lpnfet w=0.3u l=0.12u m=1 
 x34 vdd c cn vdd lppfet w=0.28u l=0.12u m=1 
 x35 cn c vss vss lpnfet w=0.2u l=0.12u m=1 
 x4 net73 s net63 vdd lppfet w=0.28u l=0.12u m=1 
 x5 net100 c net73 vdd lppfet w=0.28u l=0.12u m=1 
 x6 net100 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x7 m net113 net94 vss lpnfet w=0.2u l=0.12u m=1 
 x8 m pm net94 vss lpnfet w=0.3u l=0.12u m=1 
 x9 net100 net113 net94 vss lpnfet w=0.2u l=0.12u m=1 
 .ends dffnsrxlts 

 **** 
 *.subckt dffqx1ts q ck d 
 .subckt dffqx1ts q ck d vss vdd
 x0 net37 c m vss lpnfet w=0.2u l=0.12u m=1 
 x1 net37 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x10 hnet29 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x11 pm c hnet29 vss lpnfet w=0.2u l=0.12u m=1 
 x12 hnet31 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x13 vdd m hnet31 vdd lppfet w=0.28u l=0.12u m=1 
 x14 vdd net37 s vdd lppfet w=0.28u l=0.12u m=1 
 x15 s net37 vss vss lpnfet w=0.2u l=0.12u m=1 
 x16 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x17 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x19 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet13 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x20 vdd ck cn vdd lppfet w=0.38u l=0.12u m=1 
 x21 cn ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x22 vdd s q vdd lppfet w=0.64u l=0.12u m=1 
 x23 q s vss vss lpnfet w=0.48u l=0.12u m=1 
 x3 pm cn hnet13 vss lpnfet w=0.2u l=0.12u m=1 
 x4 hnet15 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x5 vdd d hnet15 vdd lppfet w=0.28u l=0.12u m=1 
 x6 hnet21 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x7 net37 cn hnet21 vss lpnfet w=0.2u l=0.12u m=1 
 x8 hnet23 c net37 vdd lppfet w=0.28u l=0.12u m=1 
 x9 vdd s hnet23 vdd lppfet w=0.28u l=0.12u m=1 
 .ends dffqx1ts 

 **** 
 *.subckt dffqx2ts q ck d 
 .subckt dffqx2ts q ck d vss vdd
 x0 net37 c m vss lpnfet w=0.2u l=0.12u m=1 
 x1 net37 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x10 hnet29 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x11 pm c hnet29 vss lpnfet w=0.2u l=0.12u m=1 
 x12 hnet31 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x13 vdd m hnet31 vdd lppfet w=0.28u l=0.12u m=1 
 x14 vdd net37 s vdd lppfet w=0.28u l=0.12u m=1 
 x15 s net37 vss vss lpnfet w=0.2u l=0.12u m=1 
 x16 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x17 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x19 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet13 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x20 vdd ck cn vdd lppfet w=0.38u l=0.12u m=1 
 x21 cn ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x22 vdd s q vdd lppfet w=1.28u l=0.12u m=1 
 x23 q s vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 pm cn hnet13 vss lpnfet w=0.2u l=0.12u m=1 
 x4 hnet15 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x5 vdd d hnet15 vdd lppfet w=0.28u l=0.12u m=1 
 x6 hnet21 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x7 net37 cn hnet21 vss lpnfet w=0.2u l=0.12u m=1 
 x8 hnet23 c net37 vdd lppfet w=0.28u l=0.12u m=1 
 x9 vdd s hnet23 vdd lppfet w=0.28u l=0.12u m=1 
 .ends dffqx2ts 

 **** 
 *.subckt dffqx4ts q ck d 
 .subckt dffqx4ts q ck d vss vdd
 x0 net37 c m vss lpnfet w=0.2u l=0.12u m=1 
 x1 net37 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x10 hnet29 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x11 pm c hnet29 vss lpnfet w=0.2u l=0.12u m=1 
 x12 hnet31 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x13 vdd m hnet31 vdd lppfet w=0.28u l=0.12u m=1 
 x14 vdd net37 s vdd lppfet w=0.5u l=0.12u m=1 
 x15 s net37 vss vss lpnfet w=0.36u l=0.12u m=1 
 x16 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x17 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x19 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet13 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x20 vdd ck cn vdd lppfet w=0.38u l=0.12u m=1 
 x21 cn ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x22 vdd s q vdd lppfet w=2.56u l=0.12u m=1 
 x23 q s vss vss lpnfet w=1.74u l=0.12u m=1 
 x3 pm cn hnet13 vss lpnfet w=0.2u l=0.12u m=1 
 x4 hnet15 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x5 vdd d hnet15 vdd lppfet w=0.28u l=0.12u m=1 
 x6 hnet21 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x7 net37 cn hnet21 vss lpnfet w=0.2u l=0.12u m=1 
 x8 hnet23 c net37 vdd lppfet w=0.28u l=0.12u m=1 
 x9 vdd s hnet23 vdd lppfet w=0.28u l=0.12u m=1 
 .ends dffqx4ts 

 **** 
 *.subckt dffqxlts q ck d 
 .subckt dffqxlts q ck d vss vdd
 x0 net37 c m vss lpnfet w=0.2u l=0.12u m=1 
 x1 net37 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x10 hnet29 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x11 pm c hnet29 vss lpnfet w=0.2u l=0.12u m=1 
 x12 hnet31 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x13 vdd m hnet31 vdd lppfet w=0.28u l=0.12u m=1 
 x14 vdd net37 s vdd lppfet w=0.28u l=0.12u m=1 
 x15 s net37 vss vss lpnfet w=0.2u l=0.12u m=1 
 x16 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x17 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x19 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet13 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x20 vdd ck cn vdd lppfet w=0.38u l=0.12u m=1 
 x21 cn ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x22 vdd s q vdd lppfet w=0.34u l=0.12u m=1 
 x23 q s vss vss lpnfet w=0.24u l=0.12u m=1 
 x3 pm cn hnet13 vss lpnfet w=0.2u l=0.12u m=1 
 x4 hnet15 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x5 vdd d hnet15 vdd lppfet w=0.28u l=0.12u m=1 
 x6 hnet21 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x7 net37 cn hnet21 vss lpnfet w=0.2u l=0.12u m=1 
 x8 hnet23 c net37 vdd lppfet w=0.28u l=0.12u m=1 
 x9 vdd s hnet23 vdd lppfet w=0.28u l=0.12u m=1 
 .ends dffqxlts 

 **** 
 *.subckt dffrhqx1ts q ck d rn 
 .subckt dffrhqx1ts q ck d rn vss vdd
 x0 vdd c hnet24 vdd lppfet w=0.6u l=0.12u m=1 
 x1 hnet24 nmin pm vdd lppfet w=0.6u l=0.12u m=1 
 x10 net81 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x11 m rn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x12 m pm vdd vdd lppfet w=0.96u l=0.12u m=1 
 x13 net105 cn m vdd lppfet w=0.92u l=0.12u m=1 
 x14 cn ck vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 net98 rn net102 vss lpnfet w=0.2u l=0.12u m=1 
 x16 net105 cn net98 vss lpnfet w=0.2u l=0.12u m=1 
 x17 net102 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 net105 c m vss lpnfet w=0.48u l=0.12u m=1 
 x19 hnet34 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet28 cn vss vss lpnfet w=0.44u l=0.12u m=1 
 x20 pm c hnet34 vss lpnfet w=0.2u l=0.12u m=1 
 x21 hnet36 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd m hnet36 vdd lppfet w=0.28u l=0.12u m=1 
 x23 vdd d nmin vdd lppfet w=0.28u l=0.12u m=1 
 x24 nmin d vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 vdd net105 s vdd lppfet w=0.28u l=0.12u m=1 
 x26 s net105 vss vss lpnfet w=0.2u l=0.12u m=1 
 x27 vdd net105 q vdd lppfet w=0.74u l=0.12u m=1 
 x28 q net105 vss vss lpnfet w=0.46u l=0.12u m=1 
 x29 vdd net118 c vdd lppfet w=0.84u l=0.12u m=1 
 x3 pm nmin hnet28 vss lpnfet w=0.44u l=0.12u m=1 
 x30 c net118 vss vss lpnfet w=0.3u l=0.12u m=1 
 x31 vdd ck net118 vdd lppfet w=0.28u l=0.12u m=1 
 x32 net118 ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x4 hnet32 rn vss vss lpnfet w=0.58u l=0.12u m=1 
 x5 m pm hnet32 vss lpnfet w=0.58u l=0.12u m=1 
 x6 net71 ck vdd vdd lppfet w=0.7u l=0.12u m=1 
 x7 cn c net71 vdd lppfet w=0.52u l=0.12u m=1 
 x8 net105 rn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x9 net105 c net81 vdd lppfet w=0.28u l=0.12u m=1 
 .ends dffrhqx1ts 

 **** 
 *.subckt dffrhqx2ts q ck d rn 
 .subckt dffrhqx2ts q ck d rn vss vdd
 x0 vdd c hnet24 vdd lppfet w=1.02u l=0.12u m=1 
 x1 hnet24 nmin pm vdd lppfet w=1.02u l=0.12u m=1 
 x10 net77 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x11 m rn vdd vdd lppfet w=0.4u l=0.12u m=1 
 x12 m pm vdd vdd lppfet w=1.6u l=0.12u m=1 
 x13 net105 cn m vdd lppfet w=1.54u l=0.12u m=1 
 x14 cn ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x15 net98 rn net95 vss lpnfet w=0.2u l=0.12u m=1 
 x16 net105 cn net98 vss lpnfet w=0.2u l=0.12u m=1 
 x17 net95 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 net105 c m vss lpnfet w=0.66u l=0.12u m=1 
 x19 hnet34 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet28 cn vss vss lpnfet w=0.74u l=0.12u m=1 
 x20 pm c hnet34 vss lpnfet w=0.2u l=0.12u m=1 
 x21 hnet36 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd m hnet36 vdd lppfet w=0.28u l=0.12u m=1 
 x23 vdd d nmin vdd lppfet w=0.36u l=0.12u m=1 
 x24 nmin d vss vss lpnfet w=0.28u l=0.12u m=1 
 x25 vdd net105 s vdd lppfet w=0.28u l=0.12u m=1 
 x26 s net105 vss vss lpnfet w=0.2u l=0.12u m=1 
 x27 vdd net105 q vdd lppfet w=1.3u l=0.12u m=1 
 x28 q net105 vss vss lpnfet w=0.92u l=0.12u m=1 
 x29 vdd net118 c vdd lppfet w=1.16u l=0.12u m=1 
 x3 pm nmin hnet28 vss lpnfet w=0.74u l=0.12u m=1 
 x30 c net118 vss vss lpnfet w=0.44u l=0.12u m=1 
 x31 vdd ck net118 vdd lppfet w=0.34u l=0.12u m=1 
 x32 net118 ck vss vss lpnfet w=0.34u l=0.12u m=1 
 x4 hnet32 rn vss vss lpnfet w=0.98u l=0.12u m=1 
 x5 m pm hnet32 vss lpnfet w=0.98u l=0.12u m=1 
 x6 net71 ck vdd vdd lppfet w=0.98u l=0.12u m=1 
 x7 cn c net71 vdd lppfet w=0.74u l=0.12u m=1 
 x8 net105 rn vdd vdd lppfet w=0.4u l=0.12u m=1 
 x9 net105 c net77 vdd lppfet w=0.28u l=0.12u m=1 
 .ends dffrhqx2ts 

 **** 
 *.subckt dffrhqx4ts q ck d rn 
 .subckt dffrhqx4ts q ck d rn vss vdd
 x0 vdd c hnet25 vdd lppfet w=0.96u l=0.12u m=1 
 x1 hnet25 nmin pm vdd lppfet w=0.96u l=0.12u m=1 
 x10 hnet31 rn vss vss lpnfet w=0.82u l=0.12u m=1 
 x11 m pm hnet31 vss lpnfet w=0.82u l=0.12u m=1 
 x12 net71 ck vdd vdd lppfet w=1.3u l=0.12u m=1 
 x13 cn c net71 vdd lppfet w=1.26u l=0.12u m=1 
 x14 net105 rn vdd vdd lppfet w=0.7u l=0.12u m=1 
 x15 net105 c net77 vdd lppfet w=0.28u l=0.12u m=1 
 x16 net77 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x17 m rn vdd vdd lppfet w=0.7u l=0.12u m=1 
 x18 m pm vdd vdd lppfet w=2.56u l=0.12u m=1 
 x19 net105 cn m vdd lppfet w=2.8u l=0.12u m=1 
 x2 vdd c hnet22 vdd lppfet w=0.96u l=0.12u m=1 
 x20 cn ck vss vss lpnfet w=0.48u l=0.12u m=1 
 x21 net98 rn net95 vss lpnfet w=0.2u l=0.12u m=1 
 x22 net105 cn net98 vss lpnfet w=0.2u l=0.12u m=1 
 x23 net95 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 net105 c m vss lpnfet w=1.48u l=0.12u m=1 
 x25 hnet37 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 pm c hnet37 vss lpnfet w=0.2u l=0.12u m=1 
 x27 hnet39 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x28 vdd m hnet39 vdd lppfet w=0.28u l=0.12u m=1 
 x29 vdd d nmin vdd lppfet w=0.66u l=0.12u m=1 
 x3 hnet22 nmin pm vdd lppfet w=0.96u l=0.12u m=1 
 x30 nmin d vss vss lpnfet w=0.48u l=0.12u m=1 
 x31 vdd net105 s vdd lppfet w=0.28u l=0.12u m=1 
 x32 s net105 vss vss lpnfet w=0.2u l=0.12u m=1 
 x33 vdd net105 q vdd lppfet w=2.6u l=0.12u m=1 
 x34 q net105 vss vss lpnfet w=1.84u l=0.12u m=1 
 x35 vdd net118 c vdd lppfet w=2.06u l=0.12u m=1 
 x36 c net118 vss vss lpnfet w=0.74u l=0.12u m=1 
 x37 vdd ck net118 vdd lppfet w=0.56u l=0.12u m=1 
 x38 net118 ck vss vss lpnfet w=0.56u l=0.12u m=1 
 x4 hnet30 cn vss vss lpnfet w=0.7u l=0.12u m=1 
 x5 pm nmin hnet30 vss lpnfet w=0.7u l=0.12u m=1 
 x6 hnet26 cn vss vss lpnfet w=0.7u l=0.12u m=1 
 x7 pm nmin hnet26 vss lpnfet w=0.7u l=0.12u m=1 
 x8 hnet35 rn vss vss lpnfet w=0.82u l=0.12u m=1 
 x9 m pm hnet35 vss lpnfet w=0.82u l=0.12u m=1 
 .ends dffrhqx4ts 

 **** 
 *.subckt dffrhqx8ts q ck d rn 
 .subckt dffrhqx8ts q ck d rn vss vdd
 x0 vdd c hnet25 vdd lppfet w=0.96u l=0.12u m=1 
 x1 hnet25 nmin pm vdd lppfet w=0.96u l=0.12u m=1 
 x10 hnet31 rn vss vss lpnfet w=0.82u l=0.12u m=1 
 x11 m pm hnet31 vss lpnfet w=0.82u l=0.12u m=1 
 x12 net71 ck vdd vdd lppfet w=1.3u l=0.12u m=1 
 x13 cn c net71 vdd lppfet w=1.26u l=0.12u m=1 
 x14 net105 rn vdd vdd lppfet w=0.7u l=0.12u m=1 
 x15 net105 c net81 vdd lppfet w=0.28u l=0.12u m=1 
 x16 net81 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x17 m rn vdd vdd lppfet w=0.7u l=0.12u m=1 
 x18 m pm vdd vdd lppfet w=2.56u l=0.12u m=1 
 x19 net105 cn m vdd lppfet w=2.8u l=0.12u m=1 
 x2 vdd c hnet22 vdd lppfet w=0.96u l=0.12u m=1 
 x20 cn ck vss vss lpnfet w=0.48u l=0.12u m=1 
 x21 net98 rn net102 vss lpnfet w=0.2u l=0.12u m=1 
 x22 net105 cn net98 vss lpnfet w=0.2u l=0.12u m=1 
 x23 net102 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 net105 c m vss lpnfet w=1.48u l=0.12u m=1 
 x25 hnet37 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 pm c hnet37 vss lpnfet w=0.2u l=0.12u m=1 
 x27 hnet39 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x28 vdd m hnet39 vdd lppfet w=0.28u l=0.12u m=1 
 x29 vdd d nmin vdd lppfet w=0.66u l=0.12u m=1 
 x3 hnet22 nmin pm vdd lppfet w=0.96u l=0.12u m=1 
 x30 nmin d vss vss lpnfet w=0.48u l=0.12u m=1 
 x31 vdd net105 s vdd lppfet w=0.28u l=0.12u m=1 
 x32 s net105 vss vss lpnfet w=0.2u l=0.12u m=1 
 x33 vdd net105 q vdd lppfet w=5.2u l=0.12u m=1 
 x34 q net105 vss vss lpnfet w=3.68u l=0.12u m=1 
 x35 vdd net118 c vdd lppfet w=2.06u l=0.12u m=1 
 x36 c net118 vss vss lpnfet w=0.74u l=0.12u m=1 
 x37 vdd ck net118 vdd lppfet w=0.56u l=0.12u m=1 
 x38 net118 ck vss vss lpnfet w=0.56u l=0.12u m=1 
 x4 hnet30 cn vss vss lpnfet w=0.7u l=0.12u m=1 
 x5 pm nmin hnet30 vss lpnfet w=0.7u l=0.12u m=1 
 x6 hnet26 cn vss vss lpnfet w=0.7u l=0.12u m=1 
 x7 pm nmin hnet26 vss lpnfet w=0.7u l=0.12u m=1 
 x8 hnet35 rn vss vss lpnfet w=0.82u l=0.12u m=1 
 x9 m pm hnet35 vss lpnfet w=0.82u l=0.12u m=1 
 .ends dffrhqx8ts 

 **** 
 *.subckt dffrx1ts q qn ck d rn 
 .subckt dffrx1ts q qn ck d rn vss vdd
 x0 hnet22 rn vss vss lpnfet w=0.32u l=0.12u m=1 
 x1 s net88 hnet22 vss lpnfet w=0.32u l=0.12u m=1 
 x10 pm c hnet31 vss lpnfet w=0.2u l=0.12u m=1 
 x11 hnet42 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x12 hnet37 d hnet42 vss lpnfet w=0.2u l=0.12u m=1 
 x13 pm cn hnet37 vss lpnfet w=0.2u l=0.12u m=1 
 x14 pm rn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x15 net88 c net72 vdd lppfet w=0.28u l=0.12u m=1 
 x16 net72 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x17 net88 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x18 net88 cn net85 vss lpnfet w=0.2u l=0.12u m=1 
 x19 net85 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd rn s vdd lppfet w=0.28u l=0.12u m=1 
 x20 net88 c m vss lpnfet w=0.2u l=0.12u m=1 
 x21 vdd s net89 vdd lppfet w=0.28u l=0.12u m=1 
 x22 net89 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x23 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x24 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 vdd s q vdd lppfet w=0.64u l=0.12u m=1 
 x26 q s vss vss lpnfet w=0.46u l=0.12u m=1 
 x27 vdd net89 qn vdd lppfet w=0.64u l=0.12u m=1 
 x28 qn net89 vss vss lpnfet w=0.46u l=0.12u m=1 
 x29 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x3 vdd net88 s vdd lppfet w=0.28u l=0.12u m=1 
 x30 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x31 vdd ck cn vdd lppfet w=0.42u l=0.12u m=1 
 x32 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x4 vdd m hnet26 vdd lppfet w=0.28u l=0.12u m=1 
 x5 hnet26 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x6 vdd d hnet30 vdd lppfet w=0.28u l=0.12u m=1 
 x7 hnet30 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x8 hnet36 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x9 hnet31 m hnet36 vss lpnfet w=0.2u l=0.12u m=1 
 .ends dffrx1ts 

 **** 
 *.subckt dffrx2ts q qn ck d rn 
 .subckt dffrx2ts q qn ck d rn vss vdd
 x0 hnet22 rn vss vss lpnfet w=0.52u l=0.12u m=1 
 x1 s net88 hnet22 vss lpnfet w=0.52u l=0.12u m=1 
 x10 pm c hnet31 vss lpnfet w=0.2u l=0.12u m=1 
 x11 hnet42 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x12 hnet37 d hnet42 vss lpnfet w=0.2u l=0.12u m=1 
 x13 pm cn hnet37 vss lpnfet w=0.2u l=0.12u m=1 
 x14 pm rn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x15 net88 c net72 vdd lppfet w=0.28u l=0.12u m=1 
 x16 net72 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x17 net88 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x18 net88 cn net85 vss lpnfet w=0.2u l=0.12u m=1 
 x19 net85 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd rn s vdd lppfet w=0.38u l=0.12u m=1 
 x20 net88 c m vss lpnfet w=0.2u l=0.12u m=1 
 x21 vdd s net89 vdd lppfet w=0.3u l=0.12u m=1 
 x22 net89 s vss vss lpnfet w=0.22u l=0.12u m=1 
 x23 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x24 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 vdd s q vdd lppfet w=1.28u l=0.12u m=1 
 x26 q s vss vss lpnfet w=0.92u l=0.12u m=1 
 x27 vdd net89 qn vdd lppfet w=1.28u l=0.12u m=1 
 x28 qn net89 vss vss lpnfet w=0.92u l=0.12u m=1 
 x29 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x3 vdd net88 s vdd lppfet w=0.38u l=0.12u m=1 
 x30 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x31 vdd ck cn vdd lppfet w=0.42u l=0.12u m=1 
 x32 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x4 vdd m hnet26 vdd lppfet w=0.28u l=0.12u m=1 
 x5 hnet26 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x6 vdd d hnet30 vdd lppfet w=0.28u l=0.12u m=1 
 x7 hnet30 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x8 hnet36 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x9 hnet31 m hnet36 vss lpnfet w=0.2u l=0.12u m=1 
 .ends dffrx2ts 

 **** 
 *.subckt dffrx4ts q qn ck d rn 
 .subckt dffrx4ts q qn ck d rn vss vdd
 x0 hnet22 rn vss vss lpnfet w=0.92u l=0.12u m=1 
 x1 s net88 hnet22 vss lpnfet w=0.92u l=0.12u m=1 
 x10 pm c hnet31 vss lpnfet w=0.2u l=0.12u m=1 
 x11 hnet42 rn vss vss lpnfet w=0.24u l=0.12u m=1 
 x12 hnet37 d hnet42 vss lpnfet w=0.24u l=0.12u m=1 
 x13 pm cn hnet37 vss lpnfet w=0.24u l=0.12u m=1 
 x14 pm rn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x15 net88 c net72 vdd lppfet w=0.28u l=0.12u m=1 
 x16 net72 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x17 net88 cn m vdd lppfet w=0.48u l=0.12u m=1 
 x18 net88 cn net85 vss lpnfet w=0.2u l=0.12u m=1 
 x19 net85 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd rn s vdd lppfet w=0.62u l=0.12u m=1 
 x20 net88 c m vss lpnfet w=0.34u l=0.12u m=1 
 x21 vdd s net89 vdd lppfet w=0.62u l=0.12u m=1 
 x22 net89 s vss vss lpnfet w=0.44u l=0.12u m=1 
 x23 vdd pm m vdd lppfet w=0.48u l=0.12u m=1 
 x24 m pm vss vss lpnfet w=0.34u l=0.12u m=1 
 x25 vdd s q vdd lppfet w=2.56u l=0.12u m=1 
 x26 q s vss vss lpnfet w=1.84u l=0.12u m=1 
 x27 vdd net89 qn vdd lppfet w=2.56u l=0.12u m=1 
 x28 qn net89 vss vss lpnfet w=1.84u l=0.12u m=1 
 x29 vdd cn c vdd lppfet w=0.34u l=0.12u m=1 
 x3 vdd net88 s vdd lppfet w=0.62u l=0.12u m=1 
 x30 c cn vss vss lpnfet w=0.24u l=0.12u m=1 
 x31 vdd ck cn vdd lppfet w=0.52u l=0.12u m=1 
 x32 cn ck vss vss lpnfet w=0.38u l=0.12u m=1 
 x4 vdd m hnet26 vdd lppfet w=0.28u l=0.12u m=1 
 x5 hnet26 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x6 vdd d hnet30 vdd lppfet w=0.28u l=0.12u m=1 
 x7 hnet30 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x8 hnet36 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x9 hnet31 m hnet36 vss lpnfet w=0.2u l=0.12u m=1 
 .ends dffrx4ts 

 **** 
 *.subckt dffrxlts q qn ck d rn 
 .subckt dffrxlts q qn ck d rn vss vdd
 x0 hnet22 rn vss vss lpnfet w=0.22u l=0.12u m=1 
 x1 s net88 hnet22 vss lpnfet w=0.22u l=0.12u m=1 
 x10 pm c hnet31 vss lpnfet w=0.2u l=0.12u m=1 
 x11 hnet42 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x12 hnet37 d hnet42 vss lpnfet w=0.2u l=0.12u m=1 
 x13 pm cn hnet37 vss lpnfet w=0.2u l=0.12u m=1 
 x14 pm rn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x15 net88 c net72 vdd lppfet w=0.28u l=0.12u m=1 
 x16 net72 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x17 net88 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x18 net88 cn net85 vss lpnfet w=0.2u l=0.12u m=1 
 x19 net85 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd rn s vdd lppfet w=0.28u l=0.12u m=1 
 x20 net88 c m vss lpnfet w=0.2u l=0.12u m=1 
 x21 vdd s net89 vdd lppfet w=0.28u l=0.12u m=1 
 x22 net89 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x23 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x24 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 vdd s q vdd lppfet w=0.34u l=0.12u m=1 
 x26 q s vss vss lpnfet w=0.24u l=0.12u m=1 
 x27 vdd net89 qn vdd lppfet w=0.34u l=0.12u m=1 
 x28 qn net89 vss vss lpnfet w=0.24u l=0.12u m=1 
 x29 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x3 vdd net88 s vdd lppfet w=0.28u l=0.12u m=1 
 x30 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x31 vdd ck cn vdd lppfet w=0.42u l=0.12u m=1 
 x32 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x4 vdd m hnet26 vdd lppfet w=0.28u l=0.12u m=1 
 x5 hnet26 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x6 vdd d hnet30 vdd lppfet w=0.28u l=0.12u m=1 
 x7 hnet30 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x8 hnet36 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x9 hnet31 m hnet36 vss lpnfet w=0.2u l=0.12u m=1 
 .ends dffrxlts 

 **** 
 *.subckt dffshqx1ts q ck d sn 
 .subckt dffshqx1ts q ck d sn vss vdd
 x0 vdd c hnet25 vdd lppfet w=0.52u l=0.12u m=1 
 x1 hnet25 nmin pm vdd lppfet w=0.52u l=0.12u m=1 
 x10 net76 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x11 net94 cn m vdd lppfet w=0.96u l=0.12u m=1 
 x12 cn ck vss vss lpnfet w=0.2u l=0.12u m=1 
 x13 net94 cn net88 vss lpnfet w=0.2u l=0.12u m=1 
 x14 net88 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 net94 nmset vss vss lpnfet w=0.2u l=0.12u m=1 
 x16 net94 c m vss lpnfet w=0.48u l=0.12u m=1 
 x17 hnet33 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 pm c hnet33 vss lpnfet w=0.2u l=0.12u m=1 
 x19 hnet35 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x2 hnet31 sn vss vss lpnfet w=0.56u l=0.12u m=1 
 x20 vdd m hnet35 vdd lppfet w=0.28u l=0.12u m=1 
 x21 vdd pm m vdd lppfet w=0.96u l=0.12u m=1 
 x22 m pm vss vss lpnfet w=0.5u l=0.12u m=1 
 x23 vdd sn nmset vdd lppfet w=0.28u l=0.12u m=1 
 x24 nmset sn vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 vdd d nmin vdd lppfet w=0.28u l=0.12u m=1 
 x26 nmin d vss vss lpnfet w=0.2u l=0.12u m=1 
 x27 vdd net94 s vdd lppfet w=0.28u l=0.12u m=1 
 x28 s net94 vss vss lpnfet w=0.2u l=0.12u m=1 
 x29 vdd net94 q vdd lppfet w=0.74u l=0.12u m=1 
 x3 hnet26 cn hnet31 vss lpnfet w=0.56u l=0.12u m=1 
 x30 q net94 vss vss lpnfet w=0.46u l=0.12u m=1 
 x31 vdd net111 c vdd lppfet w=0.72u l=0.12u m=1 
 x32 c net111 vss vss lpnfet w=0.26u l=0.12u m=1 
 x33 vdd ck net111 vdd lppfet w=0.28u l=0.12u m=1 
 x34 net111 ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x4 pm nmin hnet26 vss lpnfet w=0.56u l=0.12u m=1 
 x5 net61 ck vdd vdd lppfet w=0.62u l=0.12u m=1 
 x6 cn c net61 vdd lppfet w=0.52u l=0.12u m=1 
 x7 pm sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x8 net70 nmset net76 vdd lppfet w=0.28u l=0.12u m=1 
 x9 net94 c net70 vdd lppfet w=0.28u l=0.12u m=1 
 .ends dffshqx1ts 

 **** 
 *.subckt dffshqx2ts q ck d sn 
 .subckt dffshqx2ts q ck d sn vss vdd
 x0 vdd c hnet25 vdd lppfet w=0.9u l=0.12u m=1 
 x1 hnet25 nmin pm vdd lppfet w=0.9u l=0.12u m=1 
 x10 net76 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x11 net94 cn m vdd lppfet w=1.64u l=0.12u m=1 
 x12 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x13 net94 cn net88 vss lpnfet w=0.2u l=0.12u m=1 
 x14 net88 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 net94 nmset vss vss lpnfet w=0.28u l=0.12u m=1 
 x16 net94 c m vss lpnfet w=0.82u l=0.12u m=1 
 x17 hnet33 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 pm c hnet33 vss lpnfet w=0.2u l=0.12u m=1 
 x19 hnet35 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x2 hnet31 sn vss vss lpnfet w=0.9u l=0.12u m=1 
 x20 vdd m hnet35 vdd lppfet w=0.28u l=0.12u m=1 
 x21 vdd pm m vdd lppfet w=1.64u l=0.12u m=1 
 x22 m pm vss vss lpnfet w=0.86u l=0.12u m=1 
 x23 vdd sn nmset vdd lppfet w=0.28u l=0.12u m=1 
 x24 nmset sn vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 vdd d nmin vdd lppfet w=0.36u l=0.12u m=1 
 x26 nmin d vss vss lpnfet w=0.28u l=0.12u m=1 
 x27 vdd net94 s vdd lppfet w=0.28u l=0.12u m=1 
 x28 s net94 vss vss lpnfet w=0.2u l=0.12u m=1 
 x29 vdd net94 q vdd lppfet w=1.48u l=0.12u m=1 
 x3 hnet26 cn hnet31 vss lpnfet w=0.9u l=0.12u m=1 
 x30 q net94 vss vss lpnfet w=0.84u l=0.12u m=1 
 x31 vdd net111 c vdd lppfet w=1.16u l=0.12u m=1 
 x32 c net111 vss vss lpnfet w=0.42u l=0.12u m=1 
 x33 vdd ck net111 vdd lppfet w=0.32u l=0.12u m=1 
 x34 net111 ck vss vss lpnfet w=0.32u l=0.12u m=1 
 x4 pm nmin hnet26 vss lpnfet w=0.9u l=0.12u m=1 
 x5 net63 ck vdd vdd lppfet w=1.06u l=0.12u m=1 
 x6 cn c net63 vdd lppfet w=0.8u l=0.12u m=1 
 x7 pm sn vdd vdd lppfet w=0.34u l=0.12u m=1 
 x8 net72 nmset net76 vdd lppfet w=0.28u l=0.12u m=1 
 x9 net94 c net72 vdd lppfet w=0.28u l=0.12u m=1 
 .ends dffshqx2ts 

 **** 
 *.subckt dffshqx4ts q ck d sn 
 .subckt dffshqx4ts q ck d sn vss vdd
 x0 hnet28 sn vss vss lpnfet w=0.76u l=0.12u m=1 
 x1 hnet22 cn hnet28 vss lpnfet w=0.76u l=0.12u m=1 
 x10 net63 ck vdd vdd lppfet w=1.84u l=0.12u m=1 
 x11 cn c net63 vdd lppfet w=1.3u l=0.12u m=1 
 x12 pm sn vdd vdd lppfet w=0.64u l=0.12u m=1 
 x13 net72 nmset net76 vdd lppfet w=0.28u l=0.12u m=1 
 x14 net94 c net72 vdd lppfet w=0.28u l=0.12u m=1 
 x15 net76 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x16 net94 cn m vdd lppfet w=2.38u l=0.12u m=1 
 x17 cn ck vss vss lpnfet w=0.52u l=0.12u m=1 
 x18 net94 cn net88 vss lpnfet w=0.2u l=0.12u m=1 
 x19 net88 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 pm nmin hnet22 vss lpnfet w=0.76u l=0.12u m=1 
 x20 net94 nmset vss vss lpnfet w=0.52u l=0.12u m=1 
 x21 net94 c m vss lpnfet w=1.3u l=0.12u m=1 
 x22 hnet36 m vss vss lpnfet w=0.22u l=0.12u m=1 
 x23 pm c hnet36 vss lpnfet w=0.22u l=0.12u m=1 
 x24 hnet38 cn pm vdd lppfet w=0.3u l=0.12u m=1 
 x25 vdd m hnet38 vdd lppfet w=0.3u l=0.12u m=1 
 x26 vdd pm m vdd lppfet w=2.5u l=0.12u m=1 
 x27 m pm vss vss lpnfet w=1.3u l=0.12u m=1 
 x28 vdd sn nmset vdd lppfet w=0.28u l=0.12u m=1 
 x29 nmset sn vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet29 sn vss vss lpnfet w=0.76u l=0.12u m=1 
 x30 vdd d nmin vdd lppfet w=0.66u l=0.12u m=1 
 x31 nmin d vss vss lpnfet w=0.48u l=0.12u m=1 
 x32 vdd net94 s vdd lppfet w=0.28u l=0.12u m=1 
 x33 s net94 vss vss lpnfet w=0.2u l=0.12u m=1 
 x34 vdd net94 q vdd lppfet w=2.6u l=0.12u m=1 
 x35 q net94 vss vss lpnfet w=1.84u l=0.12u m=1 
 x36 vdd net111 c vdd lppfet w=2.02u l=0.12u m=1 
 x37 c net111 vss vss lpnfet w=0.72u l=0.12u m=1 
 x38 vdd ck net111 vdd lppfet w=0.54u l=0.12u m=1 
 x39 net111 ck vss vss lpnfet w=0.54u l=0.12u m=1 
 x4 hnet24 cn hnet29 vss lpnfet w=0.76u l=0.12u m=1 
 x5 pm nmin hnet24 vss lpnfet w=0.76u l=0.12u m=1 
 x6 vdd c hnet34 vdd lppfet w=0.76u l=0.12u m=1 
 x7 hnet34 nmin pm vdd lppfet w=0.76u l=0.12u m=1 
 x8 vdd c hnet31 vdd lppfet w=0.76u l=0.12u m=1 
 x9 hnet31 nmin pm vdd lppfet w=0.76u l=0.12u m=1 
 .ends dffshqx4ts 

 **** 
 *.subckt dffshqx8ts q ck d sn 
 .subckt dffshqx8ts q ck d sn vss vdd
 x0 hnet28 sn vss vss lpnfet w=0.8u l=0.12u m=1 
 x1 hnet22 cn hnet28 vss lpnfet w=0.8u l=0.12u m=1 
 x10 net61 ck vdd vdd lppfet w=1.84u l=0.12u m=1 
 x11 cn c net61 vdd lppfet w=1.32u l=0.12u m=1 
 x12 pm sn vdd vdd lppfet w=0.64u l=0.12u m=1 
 x13 net70 nmset net76 vdd lppfet w=0.28u l=0.12u m=1 
 x14 net94 c net70 vdd lppfet w=0.28u l=0.12u m=1 
 x15 net76 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x16 net94 cn m vdd lppfet w=2.66u l=0.12u m=1 
 x17 cn ck vss vss lpnfet w=0.52u l=0.12u m=1 
 x18 net94 cn net88 vss lpnfet w=0.2u l=0.12u m=1 
 x19 net88 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 pm nmin hnet22 vss lpnfet w=0.8u l=0.12u m=1 
 x20 net94 nmset vss vss lpnfet w=0.52u l=0.12u m=1 
 x21 net94 c m vss lpnfet w=1.5u l=0.12u m=1 
 x22 hnet36 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x23 pm c hnet36 vss lpnfet w=0.2u l=0.12u m=1 
 x24 hnet38 cn pm vdd lppfet w=0.3u l=0.12u m=1 
 x25 vdd m hnet38 vdd lppfet w=0.3u l=0.12u m=1 
 x26 vdd pm m vdd lppfet w=2.66u l=0.12u m=1 
 x27 m pm vss vss lpnfet w=1.5u l=0.12u m=1 
 x28 vdd sn nmset vdd lppfet w=0.28u l=0.12u m=1 
 x29 nmset sn vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet29 sn vss vss lpnfet w=0.8u l=0.12u m=1 
 x30 vdd d nmin vdd lppfet w=0.66u l=0.12u m=1 
 x31 nmin d vss vss lpnfet w=0.48u l=0.12u m=1 
 x32 vdd net94 s vdd lppfet w=0.28u l=0.12u m=1 
 x33 s net94 vss vss lpnfet w=0.2u l=0.12u m=1 
 x34 vdd net94 q vdd lppfet w=5.34u l=0.12u m=1 
 x35 q net94 vss vss lpnfet w=3.48u l=0.12u m=1 
 x36 vdd net111 c vdd lppfet w=1.98u l=0.12u m=1 
 x37 c net111 vss vss lpnfet w=0.72u l=0.12u m=1 
 x38 vdd ck net111 vdd lppfet w=0.54u l=0.12u m=1 
 x39 net111 ck vss vss lpnfet w=0.54u l=0.12u m=1 
 x4 hnet24 cn hnet29 vss lpnfet w=0.8u l=0.12u m=1 
 x5 pm nmin hnet24 vss lpnfet w=0.8u l=0.12u m=1 
 x6 vdd c hnet34 vdd lppfet w=0.82u l=0.12u m=1 
 x7 hnet34 nmin pm vdd lppfet w=0.82u l=0.12u m=1 
 x8 vdd c hnet31 vdd lppfet w=0.82u l=0.12u m=1 
 x9 hnet31 nmin pm vdd lppfet w=0.82u l=0.12u m=1 
 .ends dffshqx8ts 

 **** 
 *.subckt dffsrhqx1ts q ck d rn sn 
 .subckt dffsrhqx1ts q ck d rn sn vss vdd
 x0 hnet29 sn vss vss lpnfet w=0.54u l=0.12u m=1 
 x1 hnet24 cn hnet29 vss lpnfet w=0.54u l=0.12u m=1 
 x10 hnet45 nmset net130 vdd lppfet w=0.26u l=0.12u m=1 
 x11 net88 ck vdd vdd lppfet w=0.7u l=0.12u m=1 
 x12 cn c net88 vdd lppfet w=0.52u l=0.12u m=1 
 x13 pm sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x14 m pm vdd vdd lppfet w=0.66u l=0.12u m=1 
 x15 net102 nmset net106 vdd lppfet w=0.28u l=0.12u m=1 
 x16 net130 c net102 vdd lppfet w=0.28u l=0.12u m=1 
 x17 net106 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x18 net130 cn m vdd lppfet w=0.66u l=0.12u m=1 
 x19 cn ck vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 pm nmin hnet24 vss lpnfet w=0.54u l=0.12u m=1 
 x20 net115 rn net114 vss lpnfet w=0.2u l=0.12u m=1 
 x21 net130 cn net115 vss lpnfet w=0.2u l=0.12u m=1 
 x22 net114 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x23 net130 nmset vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 m nmset vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 net130 c m vss lpnfet w=0.48u l=0.12u m=1 
 x26 hnet47 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x27 pm c hnet47 vss lpnfet w=0.2u l=0.12u m=1 
 x28 hnet49 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x29 vdd m hnet49 vdd lppfet w=0.28u l=0.12u m=1 
 x3 hnet33 rn vss vss lpnfet w=0.5u l=0.12u m=1 
 x30 vdd sn nmset vdd lppfet w=0.28u l=0.12u m=1 
 x31 nmset sn vss vss lpnfet w=0.2u l=0.12u m=1 
 x32 vdd d nmin vdd lppfet w=0.28u l=0.12u m=1 
 x33 nmin d vss vss lpnfet w=0.2u l=0.12u m=1 
 x34 vdd net130 s vdd lppfet w=0.28u l=0.12u m=1 
 x35 s net130 vss vss lpnfet w=0.2u l=0.12u m=1 
 x36 vdd net130 q vdd lppfet w=0.76u l=0.12u m=1 
 x37 q net130 vss vss lpnfet w=0.46u l=0.12u m=1 
 x38 vdd net145 c vdd lppfet w=0.76u l=0.12u m=1 
 x39 c net145 vss vss lpnfet w=0.28u l=0.12u m=1 
 x4 m pm hnet33 vss lpnfet w=0.5u l=0.12u m=1 
 x40 vdd ck net145 vdd lppfet w=0.28u l=0.12u m=1 
 x41 net145 ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x5 vdd c hnet37 vdd lppfet w=0.46u l=0.12u m=1 
 x6 hnet37 nmin pm vdd lppfet w=0.46u l=0.12u m=1 
 x7 vdd nmset hnet41 vdd lppfet w=0.28u l=0.12u m=1 
 x8 hnet41 rn m vdd lppfet w=0.28u l=0.12u m=1 
 x9 vdd rn hnet45 vdd lppfet w=0.26u l=0.12u m=1 
 .ends dffsrhqx1ts 

 **** 
 *.subckt dffsrhqx2ts q ck d rn sn 
 .subckt dffsrhqx2ts q ck d rn sn vss vdd
 x0 hnet29 sn vss vss lpnfet w=0.84u l=0.12u m=1 
 x1 hnet24 cn hnet29 vss lpnfet w=0.84u l=0.12u m=1 
 x10 hnet45 nmset net130 vdd lppfet w=0.46u l=0.12u m=1 
 x11 net90 ck vdd vdd lppfet w=0.86u l=0.12u m=1 
 x12 cn c net90 vdd lppfet w=0.64u l=0.12u m=1 
 x13 pm sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x14 m pm vdd vdd lppfet w=1.04u l=0.12u m=1 
 x15 net100 nmset net99 vdd lppfet w=0.28u l=0.12u m=1 
 x16 net130 c net100 vdd lppfet w=0.28u l=0.12u m=1 
 x17 net99 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x18 net130 cn m vdd lppfet w=1.14u l=0.12u m=1 
 x19 cn ck vss vss lpnfet w=0.24u l=0.12u m=1 
 x2 pm nmin hnet24 vss lpnfet w=0.84u l=0.12u m=1 
 x20 net115 rn net114 vss lpnfet w=0.2u l=0.12u m=1 
 x21 net130 cn net115 vss lpnfet w=0.2u l=0.12u m=1 
 x22 net114 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x23 net130 nmset vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 m nmset vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 net130 c m vss lpnfet w=0.82u l=0.12u m=1 
 x26 hnet47 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x27 pm c hnet47 vss lpnfet w=0.2u l=0.12u m=1 
 x28 hnet49 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x29 vdd m hnet49 vdd lppfet w=0.28u l=0.12u m=1 
 x3 hnet33 rn vss vss lpnfet w=0.86u l=0.12u m=1 
 x30 vdd sn nmset vdd lppfet w=0.28u l=0.12u m=1 
 x31 nmset sn vss vss lpnfet w=0.2u l=0.12u m=1 
 x32 vdd d nmin vdd lppfet w=0.34u l=0.12u m=1 
 x33 nmin d vss vss lpnfet w=0.24u l=0.12u m=1 
 x34 vdd net130 s vdd lppfet w=0.28u l=0.12u m=1 
 x35 s net130 vss vss lpnfet w=0.2u l=0.12u m=1 
 x36 vdd net130 q vdd lppfet w=1.48u l=0.12u m=1 
 x37 q net130 vss vss lpnfet w=0.84u l=0.12u m=1 
 x38 vdd net145 c vdd lppfet w=1.12u l=0.12u m=1 
 x39 c net145 vss vss lpnfet w=0.4u l=0.12u m=1 
 x4 m pm hnet33 vss lpnfet w=0.86u l=0.12u m=1 
 x40 vdd ck net145 vdd lppfet w=0.3u l=0.12u m=1 
 x41 net145 ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x5 vdd c hnet37 vdd lppfet w=0.8u l=0.12u m=1 
 x6 hnet37 nmin pm vdd lppfet w=0.8u l=0.12u m=1 
 x7 vdd nmset hnet41 vdd lppfet w=0.28u l=0.12u m=1 
 x8 hnet41 rn m vdd lppfet w=0.28u l=0.12u m=1 
 x9 vdd rn hnet45 vdd lppfet w=0.46u l=0.12u m=1 
 .ends dffsrhqx2ts 

 **** 
 *.subckt dffsrhqx4ts q ck d rn sn 
 .subckt dffsrhqx4ts q ck d rn sn vss vdd
 x0 hnet29 rn vss vss lpnfet w=0.54u l=0.12u m=1 
 x1 m pm hnet29 vss lpnfet w=0.54u l=0.12u m=1 
 x10 pm nmin hnet35 vss lpnfet w=1.22u l=0.12u m=1 
 x11 vdd nmset hnet44 vdd lppfet w=0.52u l=0.12u m=1 
 x12 hnet44 rn m vdd lppfet w=0.52u l=0.12u m=1 
 x13 vdd rn hnet48 vdd lppfet w=0.84u l=0.12u m=1 
 x14 hnet48 nmset net137 vdd lppfet w=0.84u l=0.12u m=1 
 x15 cn c net88 vdd lppfet w=0.56u l=0.12u m=1 
 x16 net88 ck vdd vdd lppfet w=0.74u l=0.12u m=1 
 x17 net97 ck vdd vdd lppfet w=0.74u l=0.12u m=1 
 x18 cn c net97 vdd lppfet w=0.56u l=0.12u m=1 
 x19 pm sn vdd vdd lppfet w=0.36u l=0.12u m=1 
 x2 hnet25 rn vss vss lpnfet w=0.54u l=0.12u m=1 
 x20 m pm vdd vdd lppfet w=2.08u l=0.12u m=1 
 x21 net109 nmset net113 vdd lppfet w=0.28u l=0.12u m=1 
 x22 net137 c net109 vdd lppfet w=0.28u l=0.12u m=1 
 x23 net113 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x24 net137 cn m vdd lppfet w=1.3u l=0.12u m=1 
 x25 cn ck vss vss lpnfet w=0.42u l=0.12u m=1 
 x26 net122 rn net121 vss lpnfet w=0.2u l=0.12u m=1 
 x27 net137 cn net122 vss lpnfet w=0.2u l=0.12u m=1 
 x28 net121 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x29 net137 nmset vss vss lpnfet w=0.38u l=0.12u m=1 
 x3 m pm hnet25 vss lpnfet w=0.54u l=0.12u m=1 
 x30 m nmset vss vss lpnfet w=0.38u l=0.12u m=1 
 x31 net137 c m vss lpnfet w=0.92u l=0.12u m=1 
 x32 hnet50 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x33 pm c hnet50 vss lpnfet w=0.2u l=0.12u m=1 
 x34 hnet52 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x35 vdd m hnet52 vdd lppfet w=0.28u l=0.12u m=1 
 x36 vdd sn nmset vdd lppfet w=0.34u l=0.12u m=1 
 x37 nmset sn vss vss lpnfet w=0.24u l=0.12u m=1 
 x38 vdd d nmin vdd lppfet w=0.62u l=0.12u m=1 
 x39 nmin d vss vss lpnfet w=0.44u l=0.12u m=1 
 x4 vdd c hnet34 vdd lppfet w=0.6u l=0.12u m=1 
 x40 vdd net137 s vdd lppfet w=0.28u l=0.12u m=1 
 x41 s net137 vss vss lpnfet w=0.2u l=0.12u m=1 
 x42 vdd net137 q vdd lppfet w=2.6u l=0.12u m=1 
 x43 q net137 vss vss lpnfet w=1.84u l=0.12u m=1 
 x44 vdd net152 c vdd lppfet w=1.84u l=0.12u m=1 
 x45 c net152 vss vss lpnfet w=0.66u l=0.12u m=1 
 x46 vdd ck net152 vdd lppfet w=0.5u l=0.12u m=1 
 x47 net152 ck vss vss lpnfet w=0.5u l=0.12u m=1 
 x5 hnet34 nmin pm vdd lppfet w=0.6u l=0.12u m=1 
 x6 vdd c hnet31 vdd lppfet w=0.6u l=0.12u m=1 
 x7 hnet31 nmin pm vdd lppfet w=0.6u l=0.12u m=1 
 x8 hnet40 sn vss vss lpnfet w=1.22u l=0.12u m=1 
 x9 hnet35 cn hnet40 vss lpnfet w=1.22u l=0.12u m=1 
 .ends dffsrhqx4ts 

 **** 
 *.subckt dffsrhqx8ts q ck d rn sn 
 .subckt dffsrhqx8ts q ck d rn sn vss vdd
 x0 hnet29 rn vss vss lpnfet w=0.54u l=0.12u m=1 
 x1 m pm hnet29 vss lpnfet w=0.54u l=0.12u m=1 
 x10 pm nmin hnet35 vss lpnfet w=1.22u l=0.12u m=1 
 x11 vdd nmset hnet44 vdd lppfet w=0.52u l=0.12u m=1 
 x12 hnet44 rn m vdd lppfet w=0.52u l=0.12u m=1 
 x13 vdd rn hnet48 vdd lppfet w=0.84u l=0.12u m=1 
 x14 hnet48 nmset net137 vdd lppfet w=0.84u l=0.12u m=1 
 x15 cn c net88 vdd lppfet w=0.56u l=0.12u m=1 
 x16 net88 ck vdd vdd lppfet w=0.74u l=0.12u m=1 
 x17 net97 ck vdd vdd lppfet w=0.74u l=0.12u m=1 
 x18 cn c net97 vdd lppfet w=0.56u l=0.12u m=1 
 x19 pm sn vdd vdd lppfet w=0.36u l=0.12u m=1 
 x2 hnet25 rn vss vss lpnfet w=0.54u l=0.12u m=1 
 x20 m pm vdd vdd lppfet w=2.08u l=0.12u m=1 
 x21 net109 nmset net113 vdd lppfet w=0.28u l=0.12u m=1 
 x22 net137 c net109 vdd lppfet w=0.28u l=0.12u m=1 
 x23 net113 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x24 net137 cn m vdd lppfet w=1.3u l=0.12u m=1 
 x25 cn ck vss vss lpnfet w=0.42u l=0.12u m=1 
 x26 net122 rn net121 vss lpnfet w=0.2u l=0.12u m=1 
 x27 net137 cn net122 vss lpnfet w=0.2u l=0.12u m=1 
 x28 net121 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x29 net137 nmset vss vss lpnfet w=0.38u l=0.12u m=1 
 x3 m pm hnet25 vss lpnfet w=0.54u l=0.12u m=1 
 x30 m nmset vss vss lpnfet w=0.38u l=0.12u m=1 
 x31 net137 c m vss lpnfet w=0.92u l=0.12u m=1 
 x32 hnet50 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x33 pm c hnet50 vss lpnfet w=0.2u l=0.12u m=1 
 x34 hnet52 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x35 vdd m hnet52 vdd lppfet w=0.28u l=0.12u m=1 
 x36 vdd sn nmset vdd lppfet w=0.34u l=0.12u m=1 
 x37 nmset sn vss vss lpnfet w=0.24u l=0.12u m=1 
 x38 vdd d nmin vdd lppfet w=0.62u l=0.12u m=1 
 x39 nmin d vss vss lpnfet w=0.44u l=0.12u m=1 
 x4 vdd c hnet34 vdd lppfet w=0.6u l=0.12u m=1 
 x40 vdd net137 s vdd lppfet w=0.28u l=0.12u m=1 
 x41 s net137 vss vss lpnfet w=0.2u l=0.12u m=1 
 x42 vdd net137 q vdd lppfet w=5.2u l=0.12u m=1 
 x43 q net137 vss vss lpnfet w=3.68u l=0.12u m=1 
 x44 vdd net152 c vdd lppfet w=1.84u l=0.12u m=1 
 x45 c net152 vss vss lpnfet w=0.66u l=0.12u m=1 
 x46 vdd ck net152 vdd lppfet w=0.5u l=0.12u m=1 
 x47 net152 ck vss vss lpnfet w=0.5u l=0.12u m=1 
 x5 hnet34 nmin pm vdd lppfet w=0.6u l=0.12u m=1 
 x6 vdd c hnet31 vdd lppfet w=0.6u l=0.12u m=1 
 x7 hnet31 nmin pm vdd lppfet w=0.6u l=0.12u m=1 
 x8 hnet40 sn vss vss lpnfet w=1.22u l=0.12u m=1 
 x9 hnet35 cn hnet40 vss lpnfet w=1.22u l=0.12u m=1 
 .ends dffsrhqx8ts 

 **** 
 *.subckt dffsrx1ts q qn ck d rn sn 
 .subckt dffsrx1ts q qn ck d rn sn vss vdd
 x0 m sn vdd vdd lppfet w=0.26u l=0.12u m=1 
 x1 m pm net64 vdd lppfet w=0.42u l=0.12u m=1 
 x10 net92 s net95 vss lpnfet w=0.2u l=0.12u m=1 
 x11 net95 sn vss vss lpnfet w=0.4u l=0.12u m=1 
 x12 net101 cn net92 vss lpnfet w=0.2u l=0.12u m=1 
 x13 net101 c m vss lpnfet w=0.2u l=0.12u m=1 
 x14 hnet24 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 pm cn hnet24 vss lpnfet w=0.2u l=0.12u m=1 
 x16 hnet26 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x17 vdd d hnet26 vdd lppfet w=0.28u l=0.12u m=1 
 x18 hnet30 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x19 pm c hnet30 vss lpnfet w=0.2u l=0.12u m=1 
 x2 net64 net114 vdd vdd lppfet w=0.56u l=0.12u m=1 
 x20 hnet32 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x21 vdd m hnet32 vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd s net110 vdd lppfet w=0.28u l=0.12u m=1 
 x23 net110 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 vdd s q vdd lppfet w=0.64u l=0.12u m=1 
 x25 q s vss vss lpnfet w=0.46u l=0.12u m=1 
 x26 vdd rn net114 vdd lppfet w=0.28u l=0.12u m=1 
 x27 net114 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 vdd net101 s vdd lppfet w=0.28u l=0.12u m=1 
 x29 s net101 vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 net101 sn vdd vdd lppfet w=0.26u l=0.12u m=1 
 x30 vdd net110 qn vdd lppfet w=0.64u l=0.12u m=1 
 x31 qn net110 vss vss lpnfet w=0.46u l=0.12u m=1 
 x32 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x33 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x34 vdd ck cn vdd lppfet w=0.42u l=0.12u m=1 
 x35 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x4 net74 s net64 vdd lppfet w=0.28u l=0.12u m=1 
 x5 net101 c net74 vdd lppfet w=0.28u l=0.12u m=1 
 x6 net101 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x7 m net114 net95 vss lpnfet w=0.2u l=0.12u m=1 
 x8 m pm net95 vss lpnfet w=0.3u l=0.12u m=1 
 x9 net101 net114 net95 vss lpnfet w=0.2u l=0.12u m=1 
 .ends dffsrx1ts 

 **** 
 *.subckt dffsrx2ts q qn ck d rn sn 
 .subckt dffsrx2ts q qn ck d rn sn vss vdd
 x0 m sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x1 m pm net62 vdd lppfet w=0.42u l=0.12u m=1 
 x10 net90 s net93 vss lpnfet w=0.2u l=0.12u m=1 
 x11 net93 sn vss vss lpnfet w=0.4u l=0.12u m=1 
 x12 net99 cn net90 vss lpnfet w=0.2u l=0.12u m=1 
 x13 net99 c m vss lpnfet w=0.2u l=0.12u m=1 
 x14 hnet24 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 pm cn hnet24 vss lpnfet w=0.2u l=0.12u m=1 
 x16 hnet26 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x17 vdd d hnet26 vdd lppfet w=0.28u l=0.12u m=1 
 x18 hnet30 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x19 pm c hnet30 vss lpnfet w=0.2u l=0.12u m=1 
 x2 net62 net112 vdd vdd lppfet w=0.56u l=0.12u m=1 
 x20 hnet32 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x21 vdd m hnet32 vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd s net108 vdd lppfet w=0.3u l=0.12u m=1 
 x23 net108 s vss vss lpnfet w=0.22u l=0.12u m=1 
 x24 vdd s q vdd lppfet w=1.28u l=0.12u m=1 
 x25 q s vss vss lpnfet w=0.92u l=0.12u m=1 
 x26 vdd rn net112 vdd lppfet w=0.28u l=0.12u m=1 
 x27 net112 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 vdd net99 s vdd lppfet w=0.36u l=0.12u m=1 
 x29 s net99 vss vss lpnfet w=0.28u l=0.12u m=1 
 x3 net99 sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x30 vdd net108 qn vdd lppfet w=1.28u l=0.12u m=1 
 x31 qn net108 vss vss lpnfet w=0.92u l=0.12u m=1 
 x32 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x33 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x34 vdd ck cn vdd lppfet w=0.42u l=0.12u m=1 
 x35 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x4 net72 s net62 vdd lppfet w=0.28u l=0.12u m=1 
 x5 net99 c net72 vdd lppfet w=0.28u l=0.12u m=1 
 x6 net99 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x7 m net112 net93 vss lpnfet w=0.2u l=0.12u m=1 
 x8 m pm net93 vss lpnfet w=0.3u l=0.12u m=1 
 x9 net99 net112 net93 vss lpnfet w=0.2u l=0.12u m=1 
 .ends dffsrx2ts 

 **** 
 *.subckt dffsrx4ts q qn ck d rn sn 
 .subckt dffsrx4ts q qn ck d rn sn vss vdd
 x0 m sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x1 m pm net62 vdd lppfet w=0.46u l=0.12u m=1 
 x10 net90 s net93 vss lpnfet w=0.2u l=0.12u m=1 
 x11 net93 sn vss vss lpnfet w=0.46u l=0.12u m=1 
 x12 net99 cn net90 vss lpnfet w=0.2u l=0.12u m=1 
 x13 net99 c m vss lpnfet w=0.22u l=0.12u m=1 
 x14 hnet24 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 pm cn hnet24 vss lpnfet w=0.2u l=0.12u m=1 
 x16 hnet26 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x17 vdd d hnet26 vdd lppfet w=0.28u l=0.12u m=1 
 x18 hnet30 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x19 pm c hnet30 vss lpnfet w=0.2u l=0.12u m=1 
 x2 net62 net112 vdd vdd lppfet w=0.62u l=0.12u m=1 
 x20 hnet32 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x21 vdd m hnet32 vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd s net108 vdd lppfet w=0.62u l=0.12u m=1 
 x23 net108 s vss vss lpnfet w=0.4u l=0.12u m=1 
 x24 vdd s q vdd lppfet w=2.4u l=0.12u m=1 
 x25 q s vss vss lpnfet w=1.84u l=0.12u m=1 
 x26 vdd rn net112 vdd lppfet w=0.28u l=0.12u m=1 
 x27 net112 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 vdd net99 s vdd lppfet w=0.66u l=0.12u m=1 
 x29 s net99 vss vss lpnfet w=0.44u l=0.12u m=1 
 x3 net99 sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x30 vdd net108 qn vdd lppfet w=2.4u l=0.12u m=1 
 x31 qn net108 vss vss lpnfet w=1.84u l=0.12u m=1 
 x32 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x33 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x34 vdd ck cn vdd lppfet w=0.44u l=0.12u m=1 
 x35 cn ck vss vss lpnfet w=0.32u l=0.12u m=1 
 x4 net72 s net62 vdd lppfet w=0.28u l=0.12u m=1 
 x5 net99 c net72 vdd lppfet w=0.28u l=0.12u m=1 
 x6 net99 cn m vdd lppfet w=0.3u l=0.12u m=1 
 x7 m net112 net93 vss lpnfet w=0.2u l=0.12u m=1 
 x8 m pm net93 vss lpnfet w=0.34u l=0.12u m=1 
 x9 net99 net112 net93 vss lpnfet w=0.2u l=0.12u m=1 
 .ends dffsrx4ts 

 **** 
 *.subckt dffsrxlts q qn ck d rn sn 
 .subckt dffsrxlts q qn ck d rn sn vss vdd
 x0 m sn vdd vdd lppfet w=0.26u l=0.12u m=1 
 x1 m pm net62 vdd lppfet w=0.42u l=0.12u m=1 
 x10 net90 s net93 vss lpnfet w=0.2u l=0.12u m=1 
 x11 net93 sn vss vss lpnfet w=0.4u l=0.12u m=1 
 x12 net99 cn net90 vss lpnfet w=0.2u l=0.12u m=1 
 x13 net99 c m vss lpnfet w=0.2u l=0.12u m=1 
 x14 hnet24 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 pm cn hnet24 vss lpnfet w=0.2u l=0.12u m=1 
 x16 hnet26 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x17 vdd d hnet26 vdd lppfet w=0.28u l=0.12u m=1 
 x18 hnet30 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x19 pm c hnet30 vss lpnfet w=0.2u l=0.12u m=1 
 x2 net62 net112 vdd vdd lppfet w=0.56u l=0.12u m=1 
 x20 hnet32 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x21 vdd m hnet32 vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd s net108 vdd lppfet w=0.28u l=0.12u m=1 
 x23 net108 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 vdd s q vdd lppfet w=0.34u l=0.12u m=1 
 x25 q s vss vss lpnfet w=0.24u l=0.12u m=1 
 x26 vdd rn net112 vdd lppfet w=0.28u l=0.12u m=1 
 x27 net112 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 vdd net99 s vdd lppfet w=0.28u l=0.12u m=1 
 x29 s net99 vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 net99 sn vdd vdd lppfet w=0.26u l=0.12u m=1 
 x30 vdd net108 qn vdd lppfet w=0.34u l=0.12u m=1 
 x31 qn net108 vss vss lpnfet w=0.24u l=0.12u m=1 
 x32 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x33 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x34 vdd ck cn vdd lppfet w=0.42u l=0.12u m=1 
 x35 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x4 net72 s net62 vdd lppfet w=0.28u l=0.12u m=1 
 x5 net99 c net72 vdd lppfet w=0.28u l=0.12u m=1 
 x6 net99 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x7 m net112 net93 vss lpnfet w=0.2u l=0.12u m=1 
 x8 m pm net93 vss lpnfet w=0.3u l=0.12u m=1 
 x9 net99 net112 net93 vss lpnfet w=0.2u l=0.12u m=1 
 .ends dffsrxlts 

 **** 
 *.subckt dffsx1ts q qn ck d sn 
 .subckt dffsx1ts q qn ck d sn vss vdd
 x0 net52 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x1 m sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x10 net82 c m vss lpnfet w=0.2u l=0.12u m=1 
 x11 hnet21 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x12 pm cn hnet21 vss lpnfet w=0.2u l=0.12u m=1 
 x13 hnet23 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x14 vdd d hnet23 vdd lppfet w=0.28u l=0.12u m=1 
 x15 hnet27 m vss vss lpnfet w=0.22u l=0.12u m=1 
 x16 pm c hnet27 vss lpnfet w=0.22u l=0.12u m=1 
 x17 hnet29 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x18 vdd m hnet29 vdd lppfet w=0.28u l=0.12u m=1 
 x19 vdd s net91 vdd lppfet w=0.28u l=0.12u m=1 
 x2 m pm vdd vdd lppfet w=0.28u l=0.12u m=1 
 x20 net91 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x21 vdd s q vdd lppfet w=0.64u l=0.12u m=1 
 x22 q s vss vss lpnfet w=0.46u l=0.12u m=1 
 x23 vdd net82 s vdd lppfet w=0.28u l=0.12u m=1 
 x24 s net82 vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 vdd net91 qn vdd lppfet w=0.64u l=0.12u m=1 
 x26 qn net91 vss vss lpnfet w=0.46u l=0.12u m=1 
 x27 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x28 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x29 vdd ck cn vdd lppfet w=0.42u l=0.12u m=1 
 x3 net82 sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x30 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x4 net82 c net52 vdd lppfet w=0.28u l=0.12u m=1 
 x5 net82 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x6 m pm net76 vss lpnfet w=0.3u l=0.12u m=1 
 x7 net73 s net76 vss lpnfet w=0.2u l=0.12u m=1 
 x8 net76 sn vss vss lpnfet w=0.4u l=0.12u m=1 
 x9 net82 cn net73 vss lpnfet w=0.2u l=0.12u m=1 
 .ends dffsx1ts 

 **** 
 *.subckt dffsx2ts q qn ck d sn 
 .subckt dffsx2ts q qn ck d sn vss vdd
 x0 net52 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x1 m sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x10 net82 c m vss lpnfet w=0.2u l=0.12u m=1 
 x11 hnet21 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x12 pm cn hnet21 vss lpnfet w=0.2u l=0.12u m=1 
 x13 hnet23 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x14 vdd d hnet23 vdd lppfet w=0.28u l=0.12u m=1 
 x15 hnet27 m vss vss lpnfet w=0.22u l=0.12u m=1 
 x16 pm c hnet27 vss lpnfet w=0.22u l=0.12u m=1 
 x17 hnet29 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x18 vdd m hnet29 vdd lppfet w=0.28u l=0.12u m=1 
 x19 vdd s net91 vdd lppfet w=0.3u l=0.12u m=1 
 x2 m pm vdd vdd lppfet w=0.28u l=0.12u m=1 
 x20 net91 s vss vss lpnfet w=0.22u l=0.12u m=1 
 x21 vdd s q vdd lppfet w=1.28u l=0.12u m=1 
 x22 q s vss vss lpnfet w=0.92u l=0.12u m=1 
 x23 vdd net82 s vdd lppfet w=0.34u l=0.12u m=1 
 x24 s net82 vss vss lpnfet w=0.26u l=0.12u m=1 
 x25 vdd net91 qn vdd lppfet w=1.28u l=0.12u m=1 
 x26 qn net91 vss vss lpnfet w=0.92u l=0.12u m=1 
 x27 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x28 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x29 vdd ck cn vdd lppfet w=0.42u l=0.12u m=1 
 x3 net82 sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x30 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x4 net82 c net52 vdd lppfet w=0.28u l=0.12u m=1 
 x5 net82 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x6 m pm net76 vss lpnfet w=0.3u l=0.12u m=1 
 x7 net73 s net76 vss lpnfet w=0.2u l=0.12u m=1 
 x8 net76 sn vss vss lpnfet w=0.4u l=0.12u m=1 
 x9 net82 cn net73 vss lpnfet w=0.2u l=0.12u m=1 
 .ends dffsx2ts 

 **** 
 *.subckt dffsx4ts q qn ck d sn 
 .subckt dffsx4ts q qn ck d sn vss vdd
 x0 net52 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x1 m sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x10 net82 c m vss lpnfet w=0.24u l=0.12u m=1 
 x11 hnet21 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x12 pm cn hnet21 vss lpnfet w=0.2u l=0.12u m=1 
 x13 hnet23 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x14 vdd d hnet23 vdd lppfet w=0.28u l=0.12u m=1 
 x15 hnet27 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x16 pm c hnet27 vss lpnfet w=0.2u l=0.12u m=1 
 x17 hnet29 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x18 vdd m hnet29 vdd lppfet w=0.28u l=0.12u m=1 
 x19 vdd s net91 vdd lppfet w=0.62u l=0.12u m=1 
 x2 m pm vdd vdd lppfet w=0.34u l=0.12u m=1 
 x20 net91 s vss vss lpnfet w=0.44u l=0.12u m=1 
 x21 vdd s q vdd lppfet w=2.56u l=0.12u m=1 
 x22 q s vss vss lpnfet w=1.84u l=0.12u m=1 
 x23 vdd net82 s vdd lppfet w=0.7u l=0.12u m=1 
 x24 s net82 vss vss lpnfet w=0.5u l=0.12u m=1 
 x25 vdd net91 qn vdd lppfet w=2.56u l=0.12u m=1 
 x26 qn net91 vss vss lpnfet w=1.84u l=0.12u m=1 
 x27 vdd cn c vdd lppfet w=0.3u l=0.12u m=1 
 x28 c cn vss vss lpnfet w=0.22u l=0.12u m=1 
 x29 vdd ck cn vdd lppfet w=0.44u l=0.12u m=1 
 x3 net82 sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x30 cn ck vss vss lpnfet w=0.32u l=0.12u m=1 
 x4 net82 c net52 vdd lppfet w=0.28u l=0.12u m=1 
 x5 net82 cn m vdd lppfet w=0.34u l=0.12u m=1 
 x6 m pm net76 vss lpnfet w=0.36u l=0.12u m=1 
 x7 net73 s net76 vss lpnfet w=0.2u l=0.12u m=1 
 x8 net76 sn vss vss lpnfet w=0.48u l=0.12u m=1 
 x9 net82 cn net73 vss lpnfet w=0.2u l=0.12u m=1 
 .ends dffsx4ts 

 **** 
 *.subckt dffsxlts q qn ck d sn 
 .subckt dffsxlts q qn ck d sn vss vdd
 x0 net52 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x1 m sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x10 net82 c m vss lpnfet w=0.2u l=0.12u m=1 
 x11 hnet21 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x12 pm cn hnet21 vss lpnfet w=0.2u l=0.12u m=1 
 x13 hnet23 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x14 vdd d hnet23 vdd lppfet w=0.28u l=0.12u m=1 
 x15 hnet27 m vss vss lpnfet w=0.22u l=0.12u m=1 
 x16 pm c hnet27 vss lpnfet w=0.22u l=0.12u m=1 
 x17 hnet29 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x18 vdd m hnet29 vdd lppfet w=0.28u l=0.12u m=1 
 x19 vdd s net91 vdd lppfet w=0.28u l=0.12u m=1 
 x2 m pm vdd vdd lppfet w=0.28u l=0.12u m=1 
 x20 net91 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x21 vdd s q vdd lppfet w=0.34u l=0.12u m=1 
 x22 q s vss vss lpnfet w=0.24u l=0.12u m=1 
 x23 vdd net82 s vdd lppfet w=0.28u l=0.12u m=1 
 x24 s net82 vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 vdd net91 qn vdd lppfet w=0.34u l=0.12u m=1 
 x26 qn net91 vss vss lpnfet w=0.24u l=0.12u m=1 
 x27 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x28 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x29 vdd ck cn vdd lppfet w=0.42u l=0.12u m=1 
 x3 net82 sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x30 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x4 net82 c net52 vdd lppfet w=0.28u l=0.12u m=1 
 x5 net82 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x6 m pm net76 vss lpnfet w=0.3u l=0.12u m=1 
 x7 net73 s net76 vss lpnfet w=0.2u l=0.12u m=1 
 x8 net76 sn vss vss lpnfet w=0.4u l=0.12u m=1 
 x9 net82 cn net73 vss lpnfet w=0.2u l=0.12u m=1 
 .ends dffsxlts 

 **** 
 *.subckt dfftrx1ts q qn ck d rn 
 .subckt dfftrx1ts q qn ck d rn vss vdd
 x0 vdd m hnet23 vdd lppfet w=0.28u l=0.12u m=1 
 x1 hnet23 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x10 net83 c net67 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net67 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x12 net83 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x13 net83 cn net80 vss lpnfet w=0.2u l=0.12u m=1 
 x14 net80 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 net83 c m vss lpnfet w=0.2u l=0.12u m=1 
 x16 vdd s net84 vdd lppfet w=0.28u l=0.12u m=1 
 x17 net84 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 vdd net83 s vdd lppfet w=0.28u l=0.12u m=1 
 x19 s net83 vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet27 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x20 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x21 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 vdd s q vdd lppfet w=0.64u l=0.12u m=1 
 x23 q s vss vss lpnfet w=0.46u l=0.12u m=1 
 x24 vdd net84 qn vdd lppfet w=0.64u l=0.12u m=1 
 x25 qn net84 vss vss lpnfet w=0.46u l=0.12u m=1 
 x26 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x27 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 vdd ck cn vdd lppfet w=0.42u l=0.12u m=1 
 x29 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x3 pm c hnet27 vss lpnfet w=0.2u l=0.12u m=1 
 x4 hnet33 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 hnet28 d hnet33 vss lpnfet w=0.2u l=0.12u m=1 
 x6 pm cn hnet28 vss lpnfet w=0.2u l=0.12u m=1 
 x7 net64 rn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x8 net64 d vdd vdd lppfet w=0.28u l=0.12u m=1 
 x9 pm c net64 vdd lppfet w=0.28u l=0.12u m=1 
 .ends dfftrx1ts 

 ****.subckt dfftrx2ts q qn ck d rn 
 *.subckt dfftrx2ts ck d q qn rn 
 .subckt dfftrx2ts ck d q qn rn vss vdd
 x0 vdd m hnet23 vdd lppfet w=0.28u l=0.12u m=1 
 x1 hnet23 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x10 net83 c net67 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net67 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x12 net83 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x13 net83 cn net80 vss lpnfet w=0.2u l=0.12u m=1 
 x14 net80 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 net83 c m vss lpnfet w=0.2u l=0.12u m=1 
 x16 vdd s net84 vdd lppfet w=0.3u l=0.12u m=1 
 x17 net84 s vss vss lpnfet w=0.22u l=0.12u m=1 
 x18 vdd net83 s vdd lppfet w=0.36u l=0.12u m=1 
 x19 s net83 vss vss lpnfet w=0.26u l=0.12u m=1 
 x2 hnet27 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x20 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x21 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 vdd s q vdd lppfet w=1.28u l=0.12u m=1 
 x23 q s vss vss lpnfet w=0.92u l=0.12u m=1 
 x24 vdd net84 qn vdd lppfet w=1.28u l=0.12u m=1 
 x25 qn net84 vss vss lpnfet w=0.92u l=0.12u m=1 
 x26 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x27 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 vdd ck cn vdd lppfet w=0.42u l=0.12u m=1 
 x29 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x3 pm c hnet27 vss lpnfet w=0.2u l=0.12u m=1 
 x4 hnet33 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 hnet28 d hnet33 vss lpnfet w=0.2u l=0.12u m=1 
 x6 pm cn hnet28 vss lpnfet w=0.2u l=0.12u m=1 
 x7 net64 rn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x8 net64 d vdd vdd lppfet w=0.28u l=0.12u m=1 
 x9 pm c net64 vdd lppfet w=0.28u l=0.12u m=1 
 .ends dfftrx2ts 

 **** 
 *.subckt dfftrx4ts q qn ck d rn 
 .subckt dfftrx4ts q qn ck d rn vss vdd
 x0 vdd m hnet23 vdd lppfet w=0.28u l=0.12u m=1 
 x1 hnet23 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x10 net83 c net67 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net67 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x12 net83 cn m vdd lppfet w=0.3u l=0.12u m=1 
 x13 net83 cn net80 vss lpnfet w=0.2u l=0.12u m=1 
 x14 net80 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 net83 c m vss lpnfet w=0.22u l=0.12u m=1 
 x16 vdd s net84 vdd lppfet w=0.62u l=0.12u m=1 
 x17 net84 s vss vss lpnfet w=0.4u l=0.12u m=1 
 x18 vdd net83 s vdd lppfet w=0.66u l=0.12u m=1 
 x19 s net83 vss vss lpnfet w=0.44u l=0.12u m=1 
 x2 hnet27 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x20 vdd pm m vdd lppfet w=0.3u l=0.12u m=1 
 x21 m pm vss vss lpnfet w=0.22u l=0.12u m=1 
 x22 vdd s q vdd lppfet w=2.4u l=0.12u m=1 
 x23 q s vss vss lpnfet w=1.84u l=0.12u m=1 
 x24 vdd net84 qn vdd lppfet w=2.4u l=0.12u m=1 
 x25 qn net84 vss vss lpnfet w=1.84u l=0.12u m=1 
 x26 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x27 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 vdd ck cn vdd lppfet w=0.44u l=0.12u m=1 
 x29 cn ck vss vss lpnfet w=0.32u l=0.12u m=1 
 x3 pm c hnet27 vss lpnfet w=0.2u l=0.12u m=1 
 x4 hnet33 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 hnet28 d hnet33 vss lpnfet w=0.2u l=0.12u m=1 
 x6 pm cn hnet28 vss lpnfet w=0.2u l=0.12u m=1 
 x7 net64 rn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x8 net64 d vdd vdd lppfet w=0.28u l=0.12u m=1 
 x9 pm c net64 vdd lppfet w=0.28u l=0.12u m=1 
 .ends dfftrx4ts 

 **** 
 *.subckt dfftrxlts q qn ck d rn 
 .subckt dfftrxlts q qn ck d rn vss vdd
 x0 vdd m hnet23 vdd lppfet w=0.28u l=0.12u m=1 
 x1 hnet23 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x10 net83 c net67 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net67 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x12 net83 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x13 net83 cn net80 vss lpnfet w=0.2u l=0.12u m=1 
 x14 net80 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 net83 c m vss lpnfet w=0.2u l=0.12u m=1 
 x16 vdd s net84 vdd lppfet w=0.28u l=0.12u m=1 
 x17 net84 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 vdd net83 s vdd lppfet w=0.28u l=0.12u m=1 
 x19 s net83 vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet27 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x20 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x21 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 vdd s q vdd lppfet w=0.34u l=0.12u m=1 
 x23 q s vss vss lpnfet w=0.24u l=0.12u m=1 
 x24 vdd net84 qn vdd lppfet w=0.34u l=0.12u m=1 
 x25 qn net84 vss vss lpnfet w=0.24u l=0.12u m=1 
 x26 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x27 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 vdd ck cn vdd lppfet w=0.42u l=0.12u m=1 
 x29 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x3 pm c hnet27 vss lpnfet w=0.2u l=0.12u m=1 
 x4 hnet33 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 hnet28 d hnet33 vss lpnfet w=0.2u l=0.12u m=1 
 x6 pm cn hnet28 vss lpnfet w=0.2u l=0.12u m=1 
 x7 net64 rn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x8 net64 d vdd vdd lppfet w=0.28u l=0.12u m=1 
 x9 pm c net64 vdd lppfet w=0.28u l=0.12u m=1 
 .ends dfftrxlts 

 **** 
 *.subckt dffx1ts q qn ck d 
 .subckt dffx1ts q qn ck d vss vdd
 x0 hnet14 m vss vss lpnfet w=0.58u l=0.12u m=1 
 x1 net43 c hnet14 vss lpnfet w=0.58u l=0.12u m=1 
 x10 hnet32 c net43 vdd lppfet w=0.28u l=0.12u m=1 
 x11 vdd s hnet32 vdd lppfet w=0.28u l=0.12u m=1 
 x12 hnet38 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x13 pm c hnet38 vss lpnfet w=0.2u l=0.12u m=1 
 x14 hnet40 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x15 vdd m hnet40 vdd lppfet w=0.28u l=0.12u m=1 
 x16 vdd net43 s vdd lppfet w=0.36u l=0.12u m=1 
 x17 s net43 vss vss lpnfet w=0.26u l=0.12u m=1 
 x18 vdd pm m vdd lppfet w=0.3u l=0.12u m=1 
 x19 m pm vss vss lpnfet w=0.22u l=0.12u m=1 
 x2 hnet16 cn net43 vdd lppfet w=0.8u l=0.12u m=1 
 x20 vdd s qn vdd lppfet w=0.64u l=0.12u m=1 
 x21 qn s vss vss lpnfet w=0.46u l=0.12u m=1 
 x22 vdd cn c vdd lppfet w=0.34u l=0.12u m=1 
 x23 c cn vss vss lpnfet w=0.24u l=0.12u m=1 
 x24 vdd ck cn vdd lppfet w=0.48u l=0.12u m=1 
 x25 cn ck vss vss lpnfet w=0.34u l=0.12u m=1 
 x26 vdd net43 q vdd lppfet w=0.64u l=0.12u m=1 
 x27 q net43 vss vss lpnfet w=0.46u l=0.12u m=1 
 x3 vdd m hnet16 vdd lppfet w=0.8u l=0.12u m=1 
 x4 hnet22 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 pm cn hnet22 vss lpnfet w=0.2u l=0.12u m=1 
 x6 hnet24 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x7 vdd d hnet24 vdd lppfet w=0.28u l=0.12u m=1 
 x8 hnet30 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x9 net43 cn hnet30 vss lpnfet w=0.2u l=0.12u m=1 
 .ends dffx1ts 

 **** 
 *.subckt dffx2ts q qn ck d 
 .subckt dffx2ts q qn ck d vss vdd
 x0 hnet14 m vss vss lpnfet w=0.54u l=0.12u m=1 
 x1 hnet15 m vss vss lpnfet w=0.54u l=0.12u m=1 
 x10 hnet26 c pm vdd lppfet w=0.38u l=0.12u m=1 
 x11 vdd d hnet26 vdd lppfet w=0.38u l=0.12u m=1 
 x12 hnet30 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x13 net43 cn hnet30 vss lpnfet w=0.2u l=0.12u m=1 
 x14 hnet32 c net43 vdd lppfet w=0.28u l=0.12u m=1 
 x15 vdd s hnet32 vdd lppfet w=0.28u l=0.12u m=1 
 x16 hnet36 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x17 pm c hnet36 vss lpnfet w=0.2u l=0.12u m=1 
 x18 hnet38 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x19 vdd m hnet38 vdd lppfet w=0.28u l=0.12u m=1 
 x2 net43 c hnet14 vss lpnfet w=0.54u l=0.12u m=1 
 x20 vdd net43 s vdd lppfet w=0.62u l=0.12u m=1 
 x21 s net43 vss vss lpnfet w=0.44u l=0.12u m=1 
 x22 vdd pm m vdd lppfet w=0.5u l=0.12u m=1 
 x23 m pm vss vss lpnfet w=0.36u l=0.12u m=1 
 x24 vdd s qn vdd lppfet w=1.28u l=0.12u m=1 
 x25 qn s vss vss lpnfet w=0.92u l=0.12u m=1 
 x26 vdd cn c vdd lppfet w=0.5u l=0.12u m=1 
 x27 c cn vss vss lpnfet w=0.36u l=0.12u m=1 
 x28 vdd ck cn vdd lppfet w=0.7u l=0.12u m=1 
 x29 cn ck vss vss lpnfet w=0.5u l=0.12u m=1 
 x3 net43 c hnet15 vss lpnfet w=0.54u l=0.12u m=1 
 x30 vdd net43 q vdd lppfet w=1.28u l=0.12u m=1 
 x31 q net43 vss vss lpnfet w=0.92u l=0.12u m=1 
 x4 hnet22 cn net43 vdd lppfet w=0.76u l=0.12u m=1 
 x5 hnet19 cn net43 vdd lppfet w=0.76u l=0.12u m=1 
 x6 vdd m hnet22 vdd lppfet w=0.76u l=0.12u m=1 
 x7 vdd m hnet19 vdd lppfet w=0.76u l=0.12u m=1 
 x8 hnet24 d vss vss lpnfet w=0.28u l=0.12u m=1 
 x9 pm cn hnet24 vss lpnfet w=0.28u l=0.12u m=1 
 .ends dffx2ts 

 **** 
 *.subckt dffx4ts q qn ck d 
 .subckt dffx4ts q qn ck d vss vdd
 x0 hnet15 m vss vss lpnfet w=0.7u l=0.12u m=1 
 x1 hnet17 m vss vss lpnfet w=0.7u l=0.12u m=1 
 x10 vdd m hnet18 vdd lppfet w=0.98u l=0.12u m=1 
 x11 vdd m hnet14 vdd lppfet w=0.98u l=0.12u m=1 
 x12 hnet26 d vss vss lpnfet w=0.52u l=0.12u m=1 
 x13 pm cn hnet26 vss lpnfet w=0.52u l=0.12u m=1 
 x14 hnet28 c pm vdd lppfet w=0.72u l=0.12u m=1 
 x15 vdd d hnet28 vdd lppfet w=0.72u l=0.12u m=1 
 x16 hnet32 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x17 net43 cn hnet32 vss lpnfet w=0.2u l=0.12u m=1 
 x18 hnet34 c net43 vdd lppfet w=0.28u l=0.12u m=1 
 x19 vdd s hnet34 vdd lppfet w=0.28u l=0.12u m=1 
 x2 hnet22 m vss vss lpnfet w=0.7u l=0.12u m=1 
 x20 hnet38 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x21 pm c hnet38 vss lpnfet w=0.2u l=0.12u m=1 
 x22 hnet40 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x23 vdd m hnet40 vdd lppfet w=0.28u l=0.12u m=1 
 x24 vdd net43 s vdd lppfet w=1.14u l=0.12u m=1 
 x25 s net43 vss vss lpnfet w=0.82u l=0.12u m=1 
 x26 vdd pm m vdd lppfet w=0.92u l=0.12u m=1 
 x27 m pm vss vss lpnfet w=0.66u l=0.12u m=1 
 x28 vdd s qn vdd lppfet w=2.56u l=0.12u m=1 
 x29 qn s vss vss lpnfet w=1.84u l=0.12u m=1 
 x3 net43 c hnet15 vss lpnfet w=0.7u l=0.12u m=1 
 x30 vdd cn c vdd lppfet w=0.84u l=0.12u m=1 
 x31 c cn vss vss lpnfet w=0.6u l=0.12u m=1 
 x32 vdd ck cn vdd lppfet w=1.12u l=0.12u m=1 
 x33 cn ck vss vss lpnfet w=0.78u l=0.12u m=1 
 x34 vdd net43 q vdd lppfet w=2.56u l=0.12u m=1 
 x35 q net43 vss vss lpnfet w=1.84u l=0.12u m=1 
 x4 net43 c hnet17 vss lpnfet w=0.7u l=0.12u m=1 
 x5 net43 c hnet22 vss lpnfet w=0.7u l=0.12u m=1 
 x6 hnet16 cn net43 vdd lppfet w=0.98u l=0.12u m=1 
 x7 hnet18 cn net43 vdd lppfet w=0.98u l=0.12u m=1 
 x8 hnet14 cn net43 vdd lppfet w=0.98u l=0.12u m=1 
 x9 vdd m hnet16 vdd lppfet w=0.98u l=0.12u m=1 
 .ends dffx4ts 

 **** 
 *.subckt dffxlts q qn ck d 
 .subckt dffxlts q qn ck d vss vdd
 x0 hnet14 m vss vss lpnfet w=0.36u l=0.12u m=1 
 x1 net43 c hnet14 vss lpnfet w=0.36u l=0.12u m=1 
 x10 hnet32 c net43 vdd lppfet w=0.28u l=0.12u m=1 
 x11 vdd s hnet32 vdd lppfet w=0.28u l=0.12u m=1 
 x12 hnet38 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x13 pm c hnet38 vss lpnfet w=0.2u l=0.12u m=1 
 x14 hnet40 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x15 vdd m hnet40 vdd lppfet w=0.28u l=0.12u m=1 
 x16 vdd net43 s vdd lppfet w=0.28u l=0.12u m=1 
 x17 s net43 vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x19 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet16 cn net43 vdd lppfet w=0.5u l=0.12u m=1 
 x20 vdd s qn vdd lppfet w=0.34u l=0.12u m=1 
 x21 qn s vss vss lpnfet w=0.24u l=0.12u m=1 
 x22 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x23 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 vdd ck cn vdd lppfet w=0.38u l=0.12u m=1 
 x25 cn ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x26 vdd net43 q vdd lppfet w=0.34u l=0.12u m=1 
 x27 q net43 vss vss lpnfet w=0.24u l=0.12u m=1 
 x3 vdd m hnet16 vdd lppfet w=0.5u l=0.12u m=1 
 x4 hnet22 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 pm cn hnet22 vss lpnfet w=0.2u l=0.12u m=1 
 x6 hnet24 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x7 vdd d hnet24 vdd lppfet w=0.28u l=0.12u m=1 
 x8 hnet30 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x9 net43 cn hnet30 vss lpnfet w=0.2u l=0.12u m=1 
 .ends dffxlts 

 **** 
 *.subckt dly1x1ts y a 
 .subckt dly1x1ts y a vss vdd
 x0 net18 nmin vss vss lpnfet w=0.52u l=0.12u m=1 
 x1 net21 net18 vss vss lpnfet w=0.52u l=0.12u m=1 
 x2 net18 nmin vdd vdd lppfet w=0.8u l=0.12u m=1 
 x3 net21 net18 vdd vdd lppfet w=0.8u l=0.12u m=1 
 x4 vdd a nmin vdd lppfet w=0.8u l=0.12u m=1 
 x5 nmin a vss vss lpnfet w=0.52u l=0.12u m=1 
 x6 vdd net21 y vdd lppfet w=0.64u l=0.12u m=1 
 x7 y net21 vss vss lpnfet w=0.24u l=0.12u m=1 
 .ends dly1x1ts 

 **** 
 *.subckt dly1x4ts y a 
 .subckt dly1x4ts y a vss vdd
 x0 net18 nmin vss vss lpnfet w=0.58u l=0.12u m=1 
 x1 net21 net18 vss vss lpnfet w=0.58u l=0.12u m=1 
 x2 net18 nmin vdd vdd lppfet w=0.8u l=0.12u m=1 
 x3 net21 net18 vdd vdd lppfet w=0.8u l=0.12u m=1 
 x4 vdd a nmin vdd lppfet w=0.8u l=0.12u m=1 
 x5 nmin a vss vss lpnfet w=0.58u l=0.12u m=1 
 x6 vdd net21 y vdd lppfet w=2.54u l=0.12u m=1 
 x7 y net21 vss vss lpnfet w=0.92u l=0.12u m=1 
 .ends dly1x4ts 

 **** 
 *.subckt dly2x1ts y a 
 .subckt dly2x1ts y a vss vdd
 x0 net18 nmin vss vss lpnfet w=0.52u l=0.24u m=1 
 x1 net21 net18 vss vss lpnfet w=0.52u l=0.24u m=1 
 x2 net18 nmin vdd vdd lppfet w=0.72u l=0.24u m=1 
 x3 net21 net18 vdd vdd lppfet w=0.72u l=0.24u m=1 
 x4 vdd a nmin vdd lppfet w=0.72u l=0.12u m=1 
 x5 nmin a vss vss lpnfet w=0.24u l=0.12u m=1 
 x6 vdd net21 y vdd lppfet w=0.64u l=0.12u m=1 
 x7 y net21 vss vss lpnfet w=0.24u l=0.12u m=1 
 .ends dly2x1ts 

 **** 
 *.subckt dly2x4ts y a 
 .subckt dly2x4ts y a vss vdd
 x0 net18 nmin vss vss lpnfet w=0.58u l=0.3u m=1 
 x1 net21 net18 vss vss lpnfet w=0.58u l=0.3u m=1 
 x2 net18 nmin vdd vdd lppfet w=0.8u l=0.3u m=1 
 x3 net21 net18 vdd vdd lppfet w=0.8u l=0.3u m=1 
 x4 vdd a nmin vdd lppfet w=0.8u l=0.12u m=1 
 x5 nmin a vss vss lpnfet w=0.58u l=0.12u m=1 
 x6 vdd net21 y vdd lppfet w=2.54u l=0.12u m=1 
 x7 y net21 vss vss lpnfet w=0.92u l=0.12u m=1 
 .ends dly2x4ts 

 **** 
 *.subckt dly3x1ts y a 
 .subckt dly3x1ts y a vss vdd
 x0 net18 nmin vss vss lpnfet w=0.52u l=0.44u m=1 
 x1 net21 net18 vss vss lpnfet w=0.52u l=0.44u m=1 
 x2 net18 nmin vdd vdd lppfet w=0.72u l=0.44u m=1 
 x3 net21 net18 vdd vdd lppfet w=0.72u l=0.44u m=1 
 x4 vdd a nmin vdd lppfet w=0.72u l=0.12u m=1 
 x5 nmin a vss vss lpnfet w=0.52u l=0.12u m=1 
 x6 vdd net21 y vdd lppfet w=0.64u l=0.12u m=1 
 x7 y net21 vss vss lpnfet w=0.24u l=0.12u m=1 
 .ends dly3x1ts 

 **** 
 *.subckt dly3x4ts y a 
 .subckt dly3x4ts y a vss vdd
 x0 net18 nmin vss vss lpnfet w=0.58u l=0.48u m=1 
 x1 net21 net18 vss vss lpnfet w=0.58u l=0.48u m=1 
 x2 net18 nmin vdd vdd lppfet w=0.8u l=0.48u m=1 
 x3 net21 net18 vdd vdd lppfet w=0.8u l=0.48u m=1 
 x4 vdd a nmin vdd lppfet w=0.8u l=0.12u m=1 
 x5 nmin a vss vss lpnfet w=0.58u l=0.12u m=1 
 x6 vdd net21 y vdd lppfet w=2.54u l=0.12u m=1 
 x7 y net21 vss vss lpnfet w=0.92u l=0.12u m=1 
 .ends dly3x4ts 

 **** 
 *.subckt dly4x1ts y a 
 .subckt dly4x1ts y a vss vdd
 x0 net18 nmin vss vss lpnfet w=0.52u l=0.6u m=1 
 x1 net21 net18 vss vss lpnfet w=0.52u l=0.6u m=1 
 x2 net18 nmin vdd vdd lppfet w=0.8u l=0.6u m=1 
 x3 net21 net18 vdd vdd lppfet w=0.8u l=0.6u m=1 
 x4 vdd a nmin vdd lppfet w=0.8u l=0.12u m=1 
 x5 nmin a vss vss lpnfet w=0.52u l=0.12u m=1 
 x6 vdd net21 y vdd lppfet w=0.64u l=0.12u m=1 
 x7 y net21 vss vss lpnfet w=0.24u l=0.12u m=1 
 .ends dly4x1ts 

 **** 
 *.subckt dly4x4ts y a 
 .subckt dly4x4ts y a vss vdd
 x0 net18 nmin vss vss lpnfet w=0.58u l=0.56u m=1 
 x1 net21 net18 vss vss lpnfet w=0.58u l=0.56u m=1 
 x2 net18 nmin vdd vdd lppfet w=0.8u l=0.56u m=1 
 x3 net21 net18 vdd vdd lppfet w=0.8u l=0.56u m=1 
 x4 vdd a nmin vdd lppfet w=0.8u l=0.12u m=1 
 x5 nmin a vss vss lpnfet w=0.58u l=0.12u m=1 
 x6 vdd net21 y vdd lppfet w=2.54u l=0.12u m=1 
 x7 y net21 vss vss lpnfet w=0.92u l=0.12u m=1 
 .ends dly4x4ts 

 **** 
 *.subckt edffhqx1ts q ck d e 
 .subckt edffhqx1ts q ck d e vss vdd
 x0 vdd c hnet23 vdd lppfet w=0.56u l=0.12u m=1 
 x1 hnet23 nmin pm vdd lppfet w=0.56u l=0.12u m=1 
 x10 net98 c m vss lpnfet w=0.46u l=0.12u m=1 
 x11 hnet29 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x12 nmin nmen hnet29 vss lpnfet w=0.2u l=0.12u m=1 
 x13 hnet31 e nmin vdd lppfet w=0.28u l=0.12u m=1 
 x14 vdd s hnet31 vdd lppfet w=0.28u l=0.12u m=1 
 x15 hnet35 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x16 pm c hnet35 vss lpnfet w=0.2u l=0.12u m=1 
 x17 hnet37 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x18 vdd m hnet37 vdd lppfet w=0.28u l=0.12u m=1 
 x19 hnet41 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet27 cn vss vss lpnfet w=0.4u l=0.12u m=1 
 x20 net98 cn hnet41 vss lpnfet w=0.2u l=0.12u m=1 
 x21 hnet43 c net98 vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd s hnet43 vdd lppfet w=0.28u l=0.12u m=1 
 x23 vdd e nmen vdd lppfet w=0.28u l=0.12u m=1 
 x24 nmen e vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 vdd d net103 vdd lppfet w=0.38u l=0.12u m=1 
 x26 net103 d vss vss lpnfet w=0.28u l=0.12u m=1 
 x27 vdd pm m vdd lppfet w=0.92u l=0.12u m=1 
 x28 m pm vss vss lpnfet w=0.48u l=0.12u m=1 
 x29 vdd net98 s vdd lppfet w=0.28u l=0.12u m=1 
 x3 pm nmin hnet27 vss lpnfet w=0.4u l=0.12u m=1 
 x30 s net98 vss vss lpnfet w=0.2u l=0.12u m=1 
 x31 vdd net98 q vdd lppfet w=0.74u l=0.12u m=1 
 x32 q net98 vss vss lpnfet w=0.46u l=0.12u m=1 
 x33 vdd net113 c vdd lppfet w=0.78u l=0.12u m=1 
 x34 c net113 vss vss lpnfet w=0.28u l=0.12u m=1 
 x35 vdd ck net113 vdd lppfet w=0.28u l=0.12u m=1 
 x36 net113 ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x4 net72 ck vdd vdd lppfet w=0.7u l=0.12u m=1 
 x5 cn c net72 vdd lppfet w=0.52u l=0.12u m=1 
 x6 nmin nmen net103 vdd lppfet w=0.38u l=0.12u m=1 
 x7 net98 cn m vdd lppfet w=0.92u l=0.12u m=1 
 x8 cn ck vss vss lpnfet w=0.2u l=0.12u m=1 
 x9 nmin e net103 vss lpnfet w=0.28u l=0.12u m=1 
 .ends edffhqx1ts 

 **** 
 *.subckt edffhqx2ts q ck d e 
 .subckt edffhqx2ts q ck d e vss vdd
 x0 vdd c hnet23 vdd lppfet w=0.94u l=0.12u m=1 
 x1 hnet23 nmin pm vdd lppfet w=0.94u l=0.12u m=1 
 x10 net98 c m vss lpnfet w=0.74u l=0.12u m=1 
 x11 hnet29 s vss vss lpnfet w=0.24u l=0.12u m=1 
 x12 nmin nmen hnet29 vss lpnfet w=0.24u l=0.12u m=1 
 x13 hnet31 e nmin vdd lppfet w=0.32u l=0.12u m=1 
 x14 vdd s hnet31 vdd lppfet w=0.32u l=0.12u m=1 
 x15 hnet35 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x16 pm c hnet35 vss lpnfet w=0.2u l=0.12u m=1 
 x17 hnet37 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x18 vdd m hnet37 vdd lppfet w=0.28u l=0.12u m=1 
 x19 hnet41 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet27 cn vss vss lpnfet w=0.68u l=0.12u m=1 
 x20 net98 cn hnet41 vss lpnfet w=0.2u l=0.12u m=1 
 x21 hnet43 c net98 vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd s hnet43 vdd lppfet w=0.28u l=0.12u m=1 
 x23 vdd e nmen vdd lppfet w=0.28u l=0.12u m=1 
 x24 nmen e vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 vdd d net103 vdd lppfet w=0.64u l=0.12u m=1 
 x26 net103 d vss vss lpnfet w=0.46u l=0.12u m=1 
 x27 vdd pm m vdd lppfet w=1.3u l=0.12u m=1 
 x28 m pm vss vss lpnfet w=0.8u l=0.12u m=1 
 x29 vdd net98 s vdd lppfet w=0.28u l=0.12u m=1 
 x3 pm nmin hnet27 vss lpnfet w=0.68u l=0.12u m=1 
 x30 s net98 vss vss lpnfet w=0.2u l=0.12u m=1 
 x31 vdd net98 q vdd lppfet w=1.3u l=0.12u m=1 
 x32 q net98 vss vss lpnfet w=0.92u l=0.12u m=1 
 x33 vdd net113 c vdd lppfet w=1.18u l=0.12u m=1 
 x34 c net113 vss vss lpnfet w=0.42u l=0.12u m=1 
 x35 vdd ck net113 vdd lppfet w=0.32u l=0.12u m=1 
 x36 net113 ck vss vss lpnfet w=0.32u l=0.12u m=1 
 x4 net72 ck vdd vdd lppfet w=0.9u l=0.12u m=1 
 x5 cn c net72 vdd lppfet w=0.68u l=0.12u m=1 
 x6 nmin nmen net103 vdd lppfet w=0.64u l=0.12u m=1 
 x7 net98 cn m vdd lppfet w=1.3u l=0.12u m=1 
 x8 cn ck vss vss lpnfet w=0.26u l=0.12u m=1 
 x9 nmin e net103 vss lpnfet w=0.46u l=0.12u m=1 
 .ends edffhqx2ts 

 **** 
 *.subckt edffhqx4ts q ck d e 
 .subckt edffhqx4ts q ck d e vss vdd
 x0 hnet25 cn vss vss lpnfet w=0.66u l=0.12u m=1 
 x1 pm nmin hnet25 vss lpnfet w=0.66u l=0.12u m=1 
 x10 net82 ck vdd vdd lppfet w=0.76u l=0.12u m=1 
 x11 cn c net82 vdd lppfet w=0.64u l=0.12u m=1 
 x12 nmin nmen net113 vdd lppfet w=1.26u l=0.12u m=1 
 x13 net108 cn m vdd lppfet w=2.56u l=0.12u m=1 
 x14 cn ck vss vss lpnfet w=0.48u l=0.12u m=1 
 x15 nmin e net113 vss lpnfet w=0.9u l=0.12u m=1 
 x16 net108 c m vss lpnfet w=1.38u l=0.12u m=1 
 x17 hnet32 s vss vss lpnfet w=0.46u l=0.12u m=1 
 x18 nmin nmen hnet32 vss lpnfet w=0.46u l=0.12u m=1 
 x19 hnet34 e nmin vdd lppfet w=0.64u l=0.12u m=1 
 x2 hnet21 cn vss vss lpnfet w=0.66u l=0.12u m=1 
 x20 vdd s hnet34 vdd lppfet w=0.64u l=0.12u m=1 
 x21 hnet38 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 pm c hnet38 vss lpnfet w=0.2u l=0.12u m=1 
 x23 hnet40 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x24 vdd m hnet40 vdd lppfet w=0.28u l=0.12u m=1 
 x25 hnet44 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 net108 cn hnet44 vss lpnfet w=0.2u l=0.12u m=1 
 x27 hnet46 c net108 vdd lppfet w=0.28u l=0.12u m=1 
 x28 vdd s hnet46 vdd lppfet w=0.28u l=0.12u m=1 
 x29 vdd e nmen vdd lppfet w=0.28u l=0.12u m=1 
 x3 pm nmin hnet21 vss lpnfet w=0.66u l=0.12u m=1 
 x30 nmen e vss vss lpnfet w=0.2u l=0.12u m=1 
 x31 vdd d net113 vdd lppfet w=1.26u l=0.12u m=1 
 x32 net113 d vss vss lpnfet w=0.9u l=0.12u m=1 
 x33 vdd pm m vdd lppfet w=2.76u l=0.12u m=1 
 x34 m pm vss vss lpnfet w=1.58u l=0.12u m=1 
 x35 vdd net108 s vdd lppfet w=0.3u l=0.12u m=1 
 x36 s net108 vss vss lpnfet w=0.22u l=0.12u m=1 
 x37 vdd net108 q vdd lppfet w=2.6u l=0.12u m=1 
 x38 q net108 vss vss lpnfet w=1.84u l=0.12u m=1 
 x39 vdd net123 c vdd lppfet w=2.02u l=0.12u m=1 
 x4 vdd c hnet30 vdd lppfet w=0.86u l=0.12u m=1 
 x40 c net123 vss vss lpnfet w=0.72u l=0.12u m=1 
 x41 vdd ck net123 vdd lppfet w=0.54u l=0.12u m=1 
 x42 net123 ck vss vss lpnfet w=0.54u l=0.12u m=1 
 x5 hnet30 nmin pm vdd lppfet w=0.86u l=0.12u m=1 
 x6 vdd c hnet27 vdd lppfet w=0.86u l=0.12u m=1 
 x7 hnet27 nmin pm vdd lppfet w=0.86u l=0.12u m=1 
 x8 net76 ck vdd vdd lppfet w=0.92u l=0.12u m=1 
 x9 cn c net76 vdd lppfet w=0.64u l=0.12u m=1 
 .ends edffhqx4ts 

 **** 
 *.subckt edffhqx8ts q ck d e 
 .subckt edffhqx8ts q ck d e vss vdd
 x0 hnet25 cn vss vss lpnfet w=0.66u l=0.12u m=1 
 x1 pm nmin hnet25 vss lpnfet w=0.66u l=0.12u m=1 
 x10 net82 ck vdd vdd lppfet w=0.76u l=0.12u m=1 
 x11 cn c net82 vdd lppfet w=0.64u l=0.12u m=1 
 x12 nmin nmen net113 vdd lppfet w=1.26u l=0.12u m=1 
 x13 net108 cn m vdd lppfet w=2.56u l=0.12u m=1 
 x14 cn ck vss vss lpnfet w=0.48u l=0.12u m=1 
 x15 nmin e net113 vss lpnfet w=0.9u l=0.12u m=1 
 x16 net108 c m vss lpnfet w=1.38u l=0.12u m=1 
 x17 hnet32 s vss vss lpnfet w=0.46u l=0.12u m=1 
 x18 nmin nmen hnet32 vss lpnfet w=0.46u l=0.12u m=1 
 x19 hnet34 e nmin vdd lppfet w=0.64u l=0.12u m=1 
 x2 hnet21 cn vss vss lpnfet w=0.66u l=0.12u m=1 
 x20 vdd s hnet34 vdd lppfet w=0.64u l=0.12u m=1 
 x21 hnet38 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 pm c hnet38 vss lpnfet w=0.2u l=0.12u m=1 
 x23 hnet40 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x24 vdd m hnet40 vdd lppfet w=0.28u l=0.12u m=1 
 x25 hnet44 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 net108 cn hnet44 vss lpnfet w=0.2u l=0.12u m=1 
 x27 hnet46 c net108 vdd lppfet w=0.28u l=0.12u m=1 
 x28 vdd s hnet46 vdd lppfet w=0.28u l=0.12u m=1 
 x29 vdd e nmen vdd lppfet w=0.28u l=0.12u m=1 
 x3 pm nmin hnet21 vss lpnfet w=0.66u l=0.12u m=1 
 x30 nmen e vss vss lpnfet w=0.2u l=0.12u m=1 
 x31 vdd d net113 vdd lppfet w=1.26u l=0.12u m=1 
 x32 net113 d vss vss lpnfet w=0.9u l=0.12u m=1 
 x33 vdd pm m vdd lppfet w=2.76u l=0.12u m=1 
 x34 m pm vss vss lpnfet w=1.58u l=0.12u m=1 
 x35 vdd net108 s vdd lppfet w=0.3u l=0.12u m=1 
 x36 s net108 vss vss lpnfet w=0.22u l=0.12u m=1 
 x37 vdd net108 q vdd lppfet w=5.2u l=0.12u m=1 
 x38 q net108 vss vss lpnfet w=3.68u l=0.12u m=1 
 x39 vdd net123 c vdd lppfet w=2.02u l=0.12u m=1 
 x4 vdd c hnet30 vdd lppfet w=0.86u l=0.12u m=1 
 x40 c net123 vss vss lpnfet w=0.72u l=0.12u m=1 
 x41 vdd ck net123 vdd lppfet w=0.54u l=0.12u m=1 
 x42 net123 ck vss vss lpnfet w=0.54u l=0.12u m=1 
 x5 hnet30 nmin pm vdd lppfet w=0.86u l=0.12u m=1 
 x6 vdd c hnet27 vdd lppfet w=0.86u l=0.12u m=1 
 x7 hnet27 nmin pm vdd lppfet w=0.86u l=0.12u m=1 
 x8 net76 ck vdd vdd lppfet w=0.92u l=0.12u m=1 
 x9 cn c net76 vdd lppfet w=0.64u l=0.12u m=1 
 .ends edffhqx8ts 

 **** 
 *.subckt edfftrx1ts q qn ck d e rn 
 .subckt edfftrx1ts q qn ck d e rn vss vdd
 x0 net72 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 net67 nmen net72 vss lpnfet w=0.2u l=0.12u m=1 
 x10 pm c net88 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net88 rn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x12 vdd s net98 vdd lppfet w=0.28u l=0.12u m=1 
 x13 net98 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x14 vdd e nmen vdd lppfet w=0.28u l=0.12u m=1 
 x15 nmen e vss vss lpnfet w=0.2u l=0.12u m=1 
 x16 vdd net98 q vdd lppfet w=0.64u l=0.12u m=1 
 x17 q net98 vss vss lpnfet w=0.46u l=0.12u m=1 
 x18 vdd s qn vdd lppfet w=0.64u l=0.12u m=1 
 x19 qn s vss vss lpnfet w=0.44u l=0.12u m=1 
 x2 net76 s net67 vss lpnfet w=0.2u l=0.12u m=1 
 x20 vdd net115 s vdd lppfet w=0.48u l=0.12u m=1 
 x21 s net115 vss vss lpnfet w=0.34u l=0.12u m=1 
 x22 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x23 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x25 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 vdd ck cn vdd lppfet w=0.36u l=0.12u m=1 
 x27 cn ck vss vss lpnfet w=0.26u l=0.12u m=1 
 x28 hnet43 m vss vss lpnfet w=0.28u l=0.12u m=1 
 x29 net115 c hnet43 vss lpnfet w=0.28u l=0.12u m=1 
 x3 net73 e net72 vss lpnfet w=0.2u l=0.12u m=1 
 x30 hnet45 cn net115 vdd lppfet w=0.38u l=0.12u m=1 
 x31 vdd m hnet45 vdd lppfet w=0.38u l=0.12u m=1 
 x32 hnet49 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x33 net115 cn hnet49 vss lpnfet w=0.2u l=0.12u m=1 
 x34 hnet51 c net115 vdd lppfet w=0.28u l=0.12u m=1 
 x35 vdd s hnet51 vdd lppfet w=0.28u l=0.12u m=1 
 x36 hnet55 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x37 pm c hnet55 vss lpnfet w=0.2u l=0.12u m=1 
 x38 hnet57 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x39 vdd m hnet57 vdd lppfet w=0.28u l=0.12u m=1 
 x4 net76 d net73 vss lpnfet w=0.2u l=0.12u m=1 
 x5 pm cn net76 vss lpnfet w=0.2u l=0.12u m=1 
 x6 net90 e vdd vdd lppfet w=0.28u l=0.12u m=1 
 x7 net87 nmen vdd vdd lppfet w=0.28u l=0.12u m=1 
 x8 net88 d net87 vdd lppfet w=0.28u l=0.12u m=1 
 x9 net88 s net90 vdd lppfet w=0.28u l=0.12u m=1 
 .ends edfftrx1ts 

 **** 
 *.subckt edfftrx2ts q qn ck d e rn 
 .subckt edfftrx2ts q qn ck d e rn vss vdd
 x0 net72 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 net67 nmen net72 vss lpnfet w=0.2u l=0.12u m=1 
 x10 pm c net88 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net88 rn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x12 vdd s net98 vdd lppfet w=0.3u l=0.12u m=1 
 x13 net98 s vss vss lpnfet w=0.22u l=0.12u m=1 
 x14 vdd e nmen vdd lppfet w=0.28u l=0.12u m=1 
 x15 nmen e vss vss lpnfet w=0.2u l=0.12u m=1 
 x16 vdd net98 q vdd lppfet w=1.28u l=0.12u m=1 
 x17 q net98 vss vss lpnfet w=0.92u l=0.12u m=1 
 x18 vdd s qn vdd lppfet w=1.28u l=0.12u m=1 
 x19 qn s vss vss lpnfet w=0.92u l=0.12u m=1 
 x2 net76 s net67 vss lpnfet w=0.2u l=0.12u m=1 
 x20 vdd net115 s vdd lppfet w=0.7u l=0.12u m=1 
 x21 s net115 vss vss lpnfet w=0.5u l=0.12u m=1 
 x22 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x23 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x25 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 vdd ck cn vdd lppfet w=0.38u l=0.12u m=1 
 x27 cn ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x28 hnet43 m vss vss lpnfet w=0.4u l=0.12u m=1 
 x29 net115 c hnet43 vss lpnfet w=0.4u l=0.12u m=1 
 x3 net73 e net72 vss lpnfet w=0.2u l=0.12u m=1 
 x30 hnet45 cn net115 vdd lppfet w=0.56u l=0.12u m=1 
 x31 vdd m hnet45 vdd lppfet w=0.56u l=0.12u m=1 
 x32 hnet49 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x33 net115 cn hnet49 vss lpnfet w=0.2u l=0.12u m=1 
 x34 hnet51 c net115 vdd lppfet w=0.28u l=0.12u m=1 
 x35 vdd s hnet51 vdd lppfet w=0.28u l=0.12u m=1 
 x36 hnet55 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x37 pm c hnet55 vss lpnfet w=0.2u l=0.12u m=1 
 x38 hnet57 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x39 vdd m hnet57 vdd lppfet w=0.28u l=0.12u m=1 
 x4 net76 d net73 vss lpnfet w=0.2u l=0.12u m=1 
 x5 pm cn net76 vss lpnfet w=0.2u l=0.12u m=1 
 x6 net90 e vdd vdd lppfet w=0.28u l=0.12u m=1 
 x7 net87 nmen vdd vdd lppfet w=0.28u l=0.12u m=1 
 x8 net88 d net87 vdd lppfet w=0.28u l=0.12u m=1 
 x9 net88 s net90 vdd lppfet w=0.28u l=0.12u m=1 
 .ends edfftrx2ts 

 **** 
 *.subckt edfftrx4ts q qn ck d e rn 
 .subckt edfftrx4ts q qn ck d e rn vss vdd
 x0 net73 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 net68 nmen net73 vss lpnfet w=0.2u l=0.12u m=1 
 x10 pm c net89 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net89 rn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x12 vdd s net99 vdd lppfet w=0.62u l=0.12u m=1 
 x13 net99 s vss vss lpnfet w=0.44u l=0.12u m=1 
 x14 vdd e nmen vdd lppfet w=0.28u l=0.12u m=1 
 x15 nmen e vss vss lpnfet w=0.2u l=0.12u m=1 
 x16 vdd net99 q vdd lppfet w=2.56u l=0.12u m=1 
 x17 q net99 vss vss lpnfet w=1.84u l=0.12u m=1 
 x18 vdd s qn vdd lppfet w=2.56u l=0.12u m=1 
 x19 qn s vss vss lpnfet w=1.84u l=0.12u m=1 
 x2 net77 s net68 vss lpnfet w=0.2u l=0.12u m=1 
 x20 vdd net116 s vdd lppfet w=1.26u l=0.12u m=1 
 x21 s net116 vss vss lpnfet w=0.9u l=0.12u m=1 
 x22 vdd pm m vdd lppfet w=0.36u l=0.12u m=1 
 x23 m pm vss vss lpnfet w=0.26u l=0.12u m=1 
 x24 vdd cn c vdd lppfet w=0.34u l=0.12u m=1 
 x25 c cn vss vss lpnfet w=0.24u l=0.12u m=1 
 x26 vdd ck cn vdd lppfet w=0.52u l=0.12u m=1 
 x27 cn ck vss vss lpnfet w=0.38u l=0.12u m=1 
 x28 hnet43 m vss vss lpnfet w=0.72u l=0.12u m=1 
 x29 net116 c hnet43 vss lpnfet w=0.72u l=0.12u m=1 
 x3 net74 e net73 vss lpnfet w=0.2u l=0.12u m=1 
 x30 hnet45 cn net116 vdd lppfet w=1u l=0.12u m=1 
 x31 vdd m hnet45 vdd lppfet w=1u l=0.12u m=1 
 x32 hnet49 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x33 net116 cn hnet49 vss lpnfet w=0.2u l=0.12u m=1 
 x34 hnet51 c net116 vdd lppfet w=0.28u l=0.12u m=1 
 x35 vdd s hnet51 vdd lppfet w=0.28u l=0.12u m=1 
 x36 hnet55 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x37 pm c hnet55 vss lpnfet w=0.2u l=0.12u m=1 
 x38 hnet57 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x39 vdd m hnet57 vdd lppfet w=0.28u l=0.12u m=1 
 x4 net77 d net74 vss lpnfet w=0.2u l=0.12u m=1 
 x5 pm cn net77 vss lpnfet w=0.2u l=0.12u m=1 
 x6 net91 e vdd vdd lppfet w=0.28u l=0.12u m=1 
 x7 net88 nmen vdd vdd lppfet w=0.28u l=0.12u m=1 
 x8 net89 d net88 vdd lppfet w=0.28u l=0.12u m=1 
 x9 net89 s net91 vdd lppfet w=0.28u l=0.12u m=1 
 .ends edfftrx4ts 

 **** 
 *.subckt edfftrxlts q qn ck d e rn 
 .subckt edfftrxlts q qn ck d e rn vss vdd
 x0 net73 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 net68 nmen net73 vss lpnfet w=0.2u l=0.12u m=1 
 x10 pm c net89 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net89 rn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x12 vdd s net99 vdd lppfet w=0.28u l=0.12u m=1 
 x13 net99 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x14 vdd e nmen vdd lppfet w=0.28u l=0.12u m=1 
 x15 nmen e vss vss lpnfet w=0.2u l=0.12u m=1 
 x16 vdd net99 q vdd lppfet w=0.34u l=0.12u m=1 
 x17 q net99 vss vss lpnfet w=0.24u l=0.12u m=1 
 x18 vdd s qn vdd lppfet w=0.34u l=0.12u m=1 
 x19 qn s vss vss lpnfet w=0.24u l=0.12u m=1 
 x2 net77 s net68 vss lpnfet w=0.2u l=0.12u m=1 
 x20 vdd net116 s vdd lppfet w=0.28u l=0.12u m=1 
 x21 s net116 vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x23 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x25 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 vdd ck cn vdd lppfet w=0.34u l=0.12u m=1 
 x27 cn ck vss vss lpnfet w=0.24u l=0.12u m=1 
 x28 hnet43 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x29 net116 c hnet43 vss lpnfet w=0.2u l=0.12u m=1 
 x3 net74 e net73 vss lpnfet w=0.2u l=0.12u m=1 
 x30 hnet45 cn net116 vdd lppfet w=0.28u l=0.12u m=1 
 x31 vdd m hnet45 vdd lppfet w=0.28u l=0.12u m=1 
 x32 hnet49 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x33 net116 cn hnet49 vss lpnfet w=0.2u l=0.12u m=1 
 x34 hnet51 c net116 vdd lppfet w=0.28u l=0.12u m=1 
 x35 vdd s hnet51 vdd lppfet w=0.28u l=0.12u m=1 
 x36 hnet55 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x37 pm c hnet55 vss lpnfet w=0.2u l=0.12u m=1 
 x38 hnet57 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x39 vdd m hnet57 vdd lppfet w=0.28u l=0.12u m=1 
 x4 net77 d net74 vss lpnfet w=0.2u l=0.12u m=1 
 x5 pm cn net77 vss lpnfet w=0.2u l=0.12u m=1 
 x6 net91 e vdd vdd lppfet w=0.28u l=0.12u m=1 
 x7 net88 nmen vdd vdd lppfet w=0.28u l=0.12u m=1 
 x8 net89 d net88 vdd lppfet w=0.28u l=0.12u m=1 
 x9 net89 s net91 vdd lppfet w=0.28u l=0.12u m=1 
 .ends edfftrxlts 

 **** 
 *.subckt edffx1ts q qn ck d e 
 .subckt edffx1ts q qn ck d e vss vdd
 x0 net58 nmen vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 net67 s net58 vss lpnfet w=0.2u l=0.12u m=1 
 x10 vdd e nmen vdd lppfet w=0.28u l=0.12u m=1 
 x11 nmen e vss vss lpnfet w=0.2u l=0.12u m=1 
 x12 vdd net101 q vdd lppfet w=0.64u l=0.12u m=1 
 x13 q net101 vss vss lpnfet w=0.46u l=0.12u m=1 
 x14 vdd s qn vdd lppfet w=0.64u l=0.12u m=1 
 x15 qn s vss vss lpnfet w=0.46u l=0.12u m=1 
 x16 vdd net101 s vdd lppfet w=0.28u l=0.12u m=1 
 x17 s net101 vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x19 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 net64 e vss vss lpnfet w=0.2u l=0.12u m=1 
 x20 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x21 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 vdd ck cn vdd lppfet w=0.3u l=0.12u m=1 
 x23 cn ck vss vss lpnfet w=0.22u l=0.12u m=1 
 x24 hnet38 m vss vss lpnfet w=0.22u l=0.12u m=1 
 x25 net101 c hnet38 vss lpnfet w=0.22u l=0.12u m=1 
 x26 hnet40 cn net101 vdd lppfet w=0.3u l=0.12u m=1 
 x27 vdd m hnet40 vdd lppfet w=0.3u l=0.12u m=1 
 x28 hnet44 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x29 net101 cn hnet44 vss lpnfet w=0.2u l=0.12u m=1 
 x3 net67 d net64 vss lpnfet w=0.2u l=0.12u m=1 
 x30 hnet46 c net101 vdd lppfet w=0.28u l=0.12u m=1 
 x31 vdd s hnet46 vdd lppfet w=0.28u l=0.12u m=1 
 x32 hnet50 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x33 pm c hnet50 vss lpnfet w=0.2u l=0.12u m=1 
 x34 hnet52 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x35 vdd m hnet52 vdd lppfet w=0.28u l=0.12u m=1 
 x4 pm cn net67 vss lpnfet w=0.2u l=0.12u m=1 
 x5 net81 e vdd vdd lppfet w=0.28u l=0.12u m=1 
 x6 net78 nmen vdd vdd lppfet w=0.28u l=0.12u m=1 
 x7 net79 d net78 vdd lppfet w=0.28u l=0.12u m=1 
 x8 net79 s net81 vdd lppfet w=0.28u l=0.12u m=1 
 x9 pm c net79 vdd lppfet w=0.28u l=0.12u m=1 
 .ends edffx1ts 

 **** 
 *.subckt edffx2ts q qn ck d e 
 .subckt edffx2ts q qn ck d e vss vdd
 x0 net58 nmen vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 net67 s net58 vss lpnfet w=0.2u l=0.12u m=1 
 x10 vdd e nmen vdd lppfet w=0.28u l=0.12u m=1 
 x11 nmen e vss vss lpnfet w=0.2u l=0.12u m=1 
 x12 vdd net101 q vdd lppfet w=1.28u l=0.12u m=1 
 x13 q net101 vss vss lpnfet w=0.92u l=0.12u m=1 
 x14 vdd s qn vdd lppfet w=1.2u l=0.12u m=1 
 x15 qn s vss vss lpnfet w=0.92u l=0.12u m=1 
 x16 vdd net101 s vdd lppfet w=0.28u l=0.12u m=1 
 x17 s net101 vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x19 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 net64 e vss vss lpnfet w=0.2u l=0.12u m=1 
 x20 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x21 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 vdd ck cn vdd lppfet w=0.36u l=0.12u m=1 
 x23 cn ck vss vss lpnfet w=0.26u l=0.12u m=1 
 x24 hnet38 m vss vss lpnfet w=0.4u l=0.12u m=1 
 x25 net101 c hnet38 vss lpnfet w=0.4u l=0.12u m=1 
 x26 hnet40 cn net101 vdd lppfet w=0.52u l=0.12u m=1 
 x27 vdd m hnet40 vdd lppfet w=0.52u l=0.12u m=1 
 x28 hnet44 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x29 net101 cn hnet44 vss lpnfet w=0.2u l=0.12u m=1 
 x3 net67 d net64 vss lpnfet w=0.2u l=0.12u m=1 
 x30 hnet46 c net101 vdd lppfet w=0.28u l=0.12u m=1 
 x31 vdd s hnet46 vdd lppfet w=0.28u l=0.12u m=1 
 x32 hnet50 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x33 pm c hnet50 vss lpnfet w=0.2u l=0.12u m=1 
 x34 hnet52 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x35 vdd m hnet52 vdd lppfet w=0.28u l=0.12u m=1 
 x4 pm cn net67 vss lpnfet w=0.2u l=0.12u m=1 
 x5 net81 e vdd vdd lppfet w=0.28u l=0.12u m=1 
 x6 net78 nmen vdd vdd lppfet w=0.28u l=0.12u m=1 
 x7 net79 d net78 vdd lppfet w=0.28u l=0.12u m=1 
 x8 net79 s net81 vdd lppfet w=0.28u l=0.12u m=1 
 x9 pm c net79 vdd lppfet w=0.28u l=0.12u m=1 
 .ends edffx2ts 

 **** 
 *.subckt edffx4ts q qn ck d e 
 .subckt edffx4ts q qn ck d e vss vdd
 x0 hnet24 m vss vss lpnfet w=0.38u l=0.12u m=1 
 x1 hnet25 m vss vss lpnfet w=0.38u l=0.12u m=1 
 x10 net67 e vss vss lpnfet w=0.2u l=0.12u m=1 
 x11 net70 d net67 vss lpnfet w=0.2u l=0.12u m=1 
 x12 pm cn net70 vss lpnfet w=0.2u l=0.12u m=1 
 x13 net84 e vdd vdd lppfet w=0.28u l=0.12u m=1 
 x14 net81 nmen vdd vdd lppfet w=0.28u l=0.12u m=1 
 x15 net82 d net81 vdd lppfet w=0.28u l=0.12u m=1 
 x16 net82 s net84 vdd lppfet w=0.28u l=0.12u m=1 
 x17 pm c net82 vdd lppfet w=0.28u l=0.12u m=1 
 x18 vdd e nmen vdd lppfet w=0.28u l=0.12u m=1 
 x19 nmen e vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 net56 c hnet24 vss lpnfet w=0.38u l=0.12u m=1 
 x20 vdd net56 q vdd lppfet w=2.56u l=0.12u m=1 
 x21 q net56 vss vss lpnfet w=1.84u l=0.12u m=1 
 x22 vdd s qn vdd lppfet w=2.56u l=0.12u m=1 
 x23 qn s vss vss lpnfet w=1.84u l=0.12u m=1 
 x24 vdd net56 s vdd lppfet w=0.52u l=0.12u m=1 
 x25 s net56 vss vss lpnfet w=0.38u l=0.12u m=1 
 x26 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x27 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 vdd cn c vdd lppfet w=0.34u l=0.12u m=1 
 x29 c cn vss vss lpnfet w=0.24u l=0.12u m=1 
 x3 net56 c hnet25 vss lpnfet w=0.38u l=0.12u m=1 
 x30 vdd ck cn vdd lppfet w=0.5u l=0.12u m=1 
 x31 cn ck vss vss lpnfet w=0.36u l=0.12u m=1 
 x32 hnet46 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x33 net56 cn hnet46 vss lpnfet w=0.2u l=0.12u m=1 
 x34 hnet48 c net56 vdd lppfet w=0.28u l=0.12u m=1 
 x35 vdd s hnet48 vdd lppfet w=0.28u l=0.12u m=1 
 x36 hnet52 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x37 pm c hnet52 vss lpnfet w=0.2u l=0.12u m=1 
 x38 hnet54 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x39 vdd m hnet54 vdd lppfet w=0.28u l=0.12u m=1 
 x4 hnet30 cn net56 vdd lppfet w=0.54u l=0.12u m=1 
 x5 hnet28 cn net56 vdd lppfet w=0.54u l=0.12u m=1 
 x6 vdd m hnet30 vdd lppfet w=0.54u l=0.12u m=1 
 x7 vdd m hnet28 vdd lppfet w=0.54u l=0.12u m=1 
 x8 net61 nmen vss vss lpnfet w=0.2u l=0.12u m=1 
 x9 net70 s net61 vss lpnfet w=0.2u l=0.12u m=1 
 .ends edffx4ts 

 **** 
 *.subckt edffxlts q qn ck d e 
 .subckt edffxlts q qn ck d e vss vdd
 x0 net58 nmen vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 net67 s net58 vss lpnfet w=0.2u l=0.12u m=1 
 x10 vdd e nmen vdd lppfet w=0.28u l=0.12u m=1 
 x11 nmen e vss vss lpnfet w=0.2u l=0.12u m=1 
 x12 vdd net101 q vdd lppfet w=0.34u l=0.12u m=1 
 x13 q net101 vss vss lpnfet w=0.24u l=0.12u m=1 
 x14 vdd s qn vdd lppfet w=0.34u l=0.12u m=1 
 x15 qn s vss vss lpnfet w=0.24u l=0.12u m=1 
 x16 vdd net101 s vdd lppfet w=0.28u l=0.12u m=1 
 x17 s net101 vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x19 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 net64 e vss vss lpnfet w=0.2u l=0.12u m=1 
 x20 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x21 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 vdd ck cn vdd lppfet w=0.3u l=0.12u m=1 
 x23 cn ck vss vss lpnfet w=0.22u l=0.12u m=1 
 x24 hnet38 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 net101 c hnet38 vss lpnfet w=0.2u l=0.12u m=1 
 x26 hnet40 cn net101 vdd lppfet w=0.28u l=0.12u m=1 
 x27 vdd m hnet40 vdd lppfet w=0.28u l=0.12u m=1 
 x28 hnet44 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x29 net101 cn hnet44 vss lpnfet w=0.2u l=0.12u m=1 
 x3 net67 d net64 vss lpnfet w=0.2u l=0.12u m=1 
 x30 hnet46 c net101 vdd lppfet w=0.28u l=0.12u m=1 
 x31 vdd s hnet46 vdd lppfet w=0.28u l=0.12u m=1 
 x32 hnet50 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x33 pm c hnet50 vss lpnfet w=0.2u l=0.12u m=1 
 x34 hnet52 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x35 vdd m hnet52 vdd lppfet w=0.28u l=0.12u m=1 
 x4 pm cn net67 vss lpnfet w=0.2u l=0.12u m=1 
 x5 net81 e vdd vdd lppfet w=0.28u l=0.12u m=1 
 x6 net78 nmen vdd vdd lppfet w=0.28u l=0.12u m=1 
 x7 net79 d net78 vdd lppfet w=0.28u l=0.12u m=1 
 x8 net79 s net81 vdd lppfet w=0.28u l=0.12u m=1 
 x9 pm c net79 vdd lppfet w=0.28u l=0.12u m=1 
 .ends edffxlts 

 **** 
 *.subckt holdx1ts y 
 .subckt holdx1ts y vss vdd
 x0 y nmio net11 vss lpnfet w=0.2u l=0.12u m=1 
 x1 net11 nmio vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 y nmio vdd vdd lppfet w=0.28u l=0.12u m=1 
 x3 vdd y nmio vdd lppfet w=0.28u l=0.12u m=1 
 x4 nmio y vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends holdx1ts 

 **** 
 *.subckt invx12ts y a 
 .subckt invx12ts y a vss vdd
 x0 vdd a y vdd lppfet w=7.54u l=0.12u m=1 
 x1 y a vss vss lpnfet w=5.26u l=0.12u m=1 
 .ends invx12ts 

 **** 
 *.subckt invx16ts y a 
 .subckt invx16ts y a vss vdd
 x0 vdd a y vdd lppfet w=10.2u l=0.12u m=1 
 x1 y a vss vss lpnfet w=7.1u l=0.12u m=1 
 .ends invx16ts 

 **** 
 *.subckt invx1ts y a 
 .subckt invx1ts y a vss vdd
 x0 vdd a y vdd lppfet w=0.64u l=0.12u m=1 
 x1 y a vss vss lpnfet w=0.46u l=0.12u m=1 
 .ends invx1ts 

 **** 
 *.subckt invx20ts y a 
 .subckt invx20ts y a vss vdd
 x0 vdd a y vdd lppfet w=12.5u l=0.12u m=1 
 x1 y a vss vss lpnfet w=8.68u l=0.12u m=1 
 .ends invx20ts 

 **** 
 *.subckt invx2ts y a 
 .subckt invx2ts y a vss vdd
 x0 vdd a y vdd lppfet w=1.28u l=0.12u m=1 
 x1 y a vss vss lpnfet w=0.92u l=0.12u m=1 
 .ends invx2ts 

 **** 
 *.subckt invx3ts y a 
 .subckt invx3ts y a vss vdd
 x0 vdd a y vdd lppfet w=1.9u l=0.12u m=1 
 x1 y a vss vss lpnfet w=1.32u l=0.12u m=1 
 .ends invx3ts 

 **** 
 *.subckt invx4ts y a 
 .subckt invx4ts y a vss vdd
 x0 vdd a y vdd lppfet w=2.34u l=0.12u m=1 
 x1 y a vss vss lpnfet w=1.7u l=0.12u m=1 
 .ends invx4ts 

 **** 
 *.subckt invx6ts y a 
 .subckt invx6ts y a vss vdd
 x0 vdd a y vdd lppfet w=3.76u l=0.12u m=1 
 x1 y a vss vss lpnfet w=2.56u l=0.12u m=1 
 .ends invx6ts 

 **** 
 *.subckt invx8ts y a 
 .subckt invx8ts y a vss vdd
 x0 vdd a y vdd lppfet w=4.96u l=0.12u m=1 
 x1 y a vss vss lpnfet w=3.42u l=0.12u m=1 
 .ends invx8ts 

 **** 
 *.subckt invxlts y a 
 .subckt invxlts y a vss vdd
 x0 vdd a y vdd lppfet w=0.34u l=0.12u m=1 
 x1 y a vss vss lpnfet w=0.24u l=0.12u m=1 
 .ends invxlts 

 **** 
 *.subckt mdffhqx1ts q ck d0 d1 s0 
 .subckt mdffhqx1ts q ck d0 d1 s0 vss vdd
 x0 vdd c hnet25 vdd lppfet w=0.58u l=0.12u m=1 
 x1 hnet25 net87 pm vdd lppfet w=0.58u l=0.12u m=1 
 x10 net87 nmsel nmin0 vss lpnfet w=0.28u l=0.12u m=1 
 x11 net87 s0 nmin1 vss lpnfet w=0.3u l=0.12u m=1 
 x12 net99 c m vss lpnfet w=0.48u l=0.12u m=1 
 x13 hnet31 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x14 pm c hnet31 vss lpnfet w=0.2u l=0.12u m=1 
 x15 hnet33 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x16 vdd m hnet33 vdd lppfet w=0.28u l=0.12u m=1 
 x17 hnet37 s vss vss lpnfet w=0.18u l=0.12u m=1 
 x18 net99 cn hnet37 vss lpnfet w=0.18u l=0.12u m=1 
 x19 hnet39 c net99 vdd lppfet w=0.28u l=0.12u m=1 
 x2 hnet29 cn vss vss lpnfet w=0.42u l=0.12u m=1 
 x20 vdd s hnet39 vdd lppfet w=0.28u l=0.12u m=1 
 x21 vdd d0 nmin0 vdd lppfet w=0.38u l=0.12u m=1 
 x22 nmin0 d0 vss vss lpnfet w=0.28u l=0.12u m=1 
 x23 vdd d1 nmin1 vdd lppfet w=0.38u l=0.12u m=1 
 x24 nmin1 d1 vss vss lpnfet w=0.3u l=0.12u m=1 
 x25 vdd s0 nmsel vdd lppfet w=0.48u l=0.12u m=1 
 x26 nmsel s0 vss vss lpnfet w=0.34u l=0.12u m=1 
 x27 vdd pm m vdd lppfet w=0.96u l=0.12u m=1 
 x28 m pm vss vss lpnfet w=0.5u l=0.12u m=1 
 x29 vdd net99 s vdd lppfet w=0.28u l=0.12u m=1 
 x3 pm net87 hnet29 vss lpnfet w=0.42u l=0.12u m=1 
 x30 s net99 vss vss lpnfet w=0.18u l=0.12u m=1 
 x31 vdd net99 q vdd lppfet w=0.74u l=0.12u m=1 
 x32 q net99 vss vss lpnfet w=0.46u l=0.12u m=1 
 x33 vdd net116 c vdd lppfet w=0.84u l=0.12u m=1 
 x34 c net116 vss vss lpnfet w=0.3u l=0.12u m=1 
 x35 vdd ck net116 vdd lppfet w=0.28u l=0.12u m=1 
 x36 net116 ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x4 net71 ck vdd vdd lppfet w=0.7u l=0.12u m=1 
 x5 cn c net71 vdd lppfet w=0.52u l=0.12u m=1 
 x6 net87 s0 nmin0 vdd lppfet w=0.38u l=0.12u m=1 
 x7 net87 nmsel nmin1 vdd lppfet w=0.38u l=0.12u m=1 
 x8 net99 cn m vdd lppfet w=0.96u l=0.12u m=1 
 x9 cn ck vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends mdffhqx1ts 

 **** 
 *.subckt mdffhqx2ts q ck d0 d1 s0 
 .subckt mdffhqx2ts q ck d0 d1 s0 vss vdd
 x0 vdd c hnet25 vdd lppfet w=1u l=0.12u m=1 
 x1 hnet25 net87 pm vdd lppfet w=1u l=0.12u m=1 
 x10 net87 nmsel nmin0 vss lpnfet w=0.48u l=0.12u m=1 
 x11 net87 s0 nmin1 vss lpnfet w=0.5u l=0.12u m=1 
 x12 net99 c m vss lpnfet w=0.72u l=0.12u m=1 
 x13 hnet31 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x14 pm c hnet31 vss lpnfet w=0.2u l=0.12u m=1 
 x15 hnet33 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x16 vdd m hnet33 vdd lppfet w=0.28u l=0.12u m=1 
 x17 hnet37 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 net99 cn hnet37 vss lpnfet w=0.2u l=0.12u m=1 
 x19 hnet39 c net99 vdd lppfet w=0.28u l=0.12u m=1 
 x2 hnet29 cn vss vss lpnfet w=0.66u l=0.12u m=1 
 x20 vdd s hnet39 vdd lppfet w=0.28u l=0.12u m=1 
 x21 vdd d0 nmin0 vdd lppfet w=0.68u l=0.12u m=1 
 x22 nmin0 d0 vss vss lpnfet w=0.48u l=0.12u m=1 
 x23 vdd d1 nmin1 vdd lppfet w=0.68u l=0.12u m=1 
 x24 nmin1 d1 vss vss lpnfet w=0.5u l=0.12u m=1 
 x25 vdd s0 nmsel vdd lppfet w=0.84u l=0.12u m=1 
 x26 nmsel s0 vss vss lpnfet w=0.6u l=0.12u m=1 
 x27 vdd pm m vdd lppfet w=1.48u l=0.12u m=1 
 x28 m pm vss vss lpnfet w=0.72u l=0.12u m=1 
 x29 vdd net99 s vdd lppfet w=0.28u l=0.12u m=1 
 x3 pm net87 hnet29 vss lpnfet w=0.66u l=0.12u m=1 
 x30 s net99 vss vss lpnfet w=0.2u l=0.12u m=1 
 x31 vdd net99 q vdd lppfet w=1.56u l=0.12u m=1 
 x32 q net99 vss vss lpnfet w=0.76u l=0.12u m=1 
 x33 vdd net116 c vdd lppfet w=1.2u l=0.12u m=1 
 x34 c net116 vss vss lpnfet w=0.42u l=0.12u m=1 
 x35 vdd ck net116 vdd lppfet w=0.32u l=0.12u m=1 
 x36 net116 ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x4 net71 ck vdd vdd lppfet w=0.84u l=0.12u m=1 
 x5 cn c net71 vdd lppfet w=0.68u l=0.12u m=1 
 x6 net87 s0 nmin0 vdd lppfet w=0.68u l=0.12u m=1 
 x7 net87 nmsel nmin1 vdd lppfet w=0.68u l=0.12u m=1 
 x8 net99 cn m vdd lppfet w=1.36u l=0.12u m=1 
 x9 cn ck vss vss lpnfet w=0.26u l=0.12u m=1 
 .ends mdffhqx2ts 

 **** 
 *.subckt mdffhqx4ts q ck d0 d1 s0 
 .subckt mdffhqx4ts q ck d0 d1 s0 vss vdd
 x0 hnet27 cn vss vss lpnfet w=0.66u l=0.12u m=1 
 x1 pm net93 hnet27 vss lpnfet w=0.66u l=0.12u m=1 
 x10 net77 ck vdd vdd lppfet w=0.84u l=0.12u m=1 
 x11 cn c net77 vdd lppfet w=0.64u l=0.12u m=1 
 x12 net93 s0 nmin0 vdd lppfet w=1.22u l=0.12u m=1 
 x13 net93 nmsel nmin1 vdd lppfet w=1.22u l=0.12u m=1 
 x14 net105 cn m vdd lppfet w=2.72u l=0.12u m=1 
 x15 cn ck vss vss lpnfet w=0.48u l=0.12u m=1 
 x16 net93 nmsel nmin0 vss lpnfet w=0.88u l=0.12u m=1 
 x17 net93 s0 nmin1 vss lpnfet w=0.88u l=0.12u m=1 
 x18 net105 c m vss lpnfet w=1.5u l=0.12u m=1 
 x19 hnet34 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet23 cn vss vss lpnfet w=0.66u l=0.12u m=1 
 x20 pm c hnet34 vss lpnfet w=0.2u l=0.12u m=1 
 x21 hnet36 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd m hnet36 vdd lppfet w=0.28u l=0.12u m=1 
 x23 hnet40 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 net105 cn hnet40 vss lpnfet w=0.2u l=0.12u m=1 
 x25 hnet42 c net105 vdd lppfet w=0.28u l=0.12u m=1 
 x26 vdd s hnet42 vdd lppfet w=0.28u l=0.12u m=1 
 x27 vdd d0 nmin0 vdd lppfet w=1.22u l=0.12u m=1 
 x28 nmin0 d0 vss vss lpnfet w=0.88u l=0.12u m=1 
 x29 vdd d1 nmin1 vdd lppfet w=1.22u l=0.12u m=1 
 x3 pm net93 hnet23 vss lpnfet w=0.66u l=0.12u m=1 
 x30 nmin1 d1 vss vss lpnfet w=0.88u l=0.12u m=1 
 x31 vdd s0 nmsel vdd lppfet w=1.5u l=0.12u m=1 
 x32 nmsel s0 vss vss lpnfet w=1.08u l=0.12u m=1 
 x33 vdd pm m vdd lppfet w=2.72u l=0.12u m=1 
 x34 m pm vss vss lpnfet w=1.32u l=0.12u m=1 
 x35 vdd net105 s vdd lppfet w=0.28u l=0.12u m=1 
 x36 s net105 vss vss lpnfet w=0.2u l=0.12u m=1 
 x37 vdd net105 q vdd lppfet w=2.6u l=0.12u m=1 
 x38 q net105 vss vss lpnfet w=1.82u l=0.12u m=1 
 x39 vdd net122 c vdd lppfet w=2.02u l=0.12u m=1 
 x4 vdd c hnet32 vdd lppfet w=0.9u l=0.12u m=1 
 x40 c net122 vss vss lpnfet w=0.72u l=0.12u m=1 
 x41 vdd ck net122 vdd lppfet w=0.54u l=0.12u m=1 
 x42 net122 ck vss vss lpnfet w=0.54u l=0.12u m=1 
 x5 hnet32 net93 pm vdd lppfet w=0.9u l=0.12u m=1 
 x6 vdd c hnet29 vdd lppfet w=0.9u l=0.12u m=1 
 x7 hnet29 net93 pm vdd lppfet w=0.9u l=0.12u m=1 
 x8 net71 ck vdd vdd lppfet w=0.84u l=0.12u m=1 
 x9 cn c net71 vdd lppfet w=0.64u l=0.12u m=1 
 .ends mdffhqx4ts 

 **** 
 *.subckt mdffhqx8ts q ck d0 d1 s0 
 .subckt mdffhqx8ts q ck d0 d1 s0 vss vdd
 x0 hnet27 cn vss vss lpnfet w=0.66u l=0.12u m=1 
 x1 pm net93 hnet27 vss lpnfet w=0.66u l=0.12u m=1 
 x10 net77 ck vdd vdd lppfet w=0.84u l=0.12u m=1 
 x11 cn c net77 vdd lppfet w=0.64u l=0.12u m=1 
 x12 net93 s0 nmin0 vdd lppfet w=1.22u l=0.12u m=1 
 x13 net93 nmsel nmin1 vdd lppfet w=1.22u l=0.12u m=1 
 x14 net105 cn m vdd lppfet w=2.72u l=0.12u m=1 
 x15 cn ck vss vss lpnfet w=0.48u l=0.12u m=1 
 x16 net93 nmsel nmin0 vss lpnfet w=0.88u l=0.12u m=1 
 x17 net93 s0 nmin1 vss lpnfet w=0.88u l=0.12u m=1 
 x18 net105 c m vss lpnfet w=1.5u l=0.12u m=1 
 x19 hnet34 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet23 cn vss vss lpnfet w=0.66u l=0.12u m=1 
 x20 pm c hnet34 vss lpnfet w=0.2u l=0.12u m=1 
 x21 hnet36 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd m hnet36 vdd lppfet w=0.28u l=0.12u m=1 
 x23 hnet40 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 net105 cn hnet40 vss lpnfet w=0.2u l=0.12u m=1 
 x25 hnet42 c net105 vdd lppfet w=0.28u l=0.12u m=1 
 x26 vdd s hnet42 vdd lppfet w=0.28u l=0.12u m=1 
 x27 vdd d0 nmin0 vdd lppfet w=1.22u l=0.12u m=1 
 x28 nmin0 d0 vss vss lpnfet w=0.88u l=0.12u m=1 
 x29 vdd d1 nmin1 vdd lppfet w=1.22u l=0.12u m=1 
 x3 pm net93 hnet23 vss lpnfet w=0.66u l=0.12u m=1 
 x30 nmin1 d1 vss vss lpnfet w=0.88u l=0.12u m=1 
 x31 vdd s0 nmsel vdd lppfet w=1.5u l=0.12u m=1 
 x32 nmsel s0 vss vss lpnfet w=1.08u l=0.12u m=1 
 x33 vdd pm m vdd lppfet w=2.72u l=0.12u m=1 
 x34 m pm vss vss lpnfet w=1.32u l=0.12u m=1 
 x35 vdd net105 s vdd lppfet w=0.28u l=0.12u m=1 
 x36 s net105 vss vss lpnfet w=0.2u l=0.12u m=1 
 x37 vdd net105 q vdd lppfet w=5.2u l=0.12u m=1 
 x38 q net105 vss vss lpnfet w=3.64u l=0.12u m=1 
 x39 vdd net122 c vdd lppfet w=2.02u l=0.12u m=1 
 x4 vdd c hnet32 vdd lppfet w=0.9u l=0.12u m=1 
 x40 c net122 vss vss lpnfet w=0.72u l=0.12u m=1 
 x41 vdd ck net122 vdd lppfet w=0.54u l=0.12u m=1 
 x42 net122 ck vss vss lpnfet w=0.54u l=0.12u m=1 
 x5 hnet32 net93 pm vdd lppfet w=0.9u l=0.12u m=1 
 x6 vdd c hnet29 vdd lppfet w=0.9u l=0.12u m=1 
 x7 hnet29 net93 pm vdd lppfet w=0.9u l=0.12u m=1 
 x8 net71 ck vdd vdd lppfet w=0.84u l=0.12u m=1 
 x9 cn c net71 vdd lppfet w=0.64u l=0.12u m=1 
 .ends mdffhqx8ts 

 **** 
 *.subckt mx2x1ts y a b s0 
 .subckt mx2x1ts y a b s0 vss vdd
 x0 net25 nmsel nmin0 vss lpnfet w=0.36u l=0.12u m=1 
 x1 net25 s0 nmin1 vss lpnfet w=0.36u l=0.12u m=1 
 x10 vdd s0 nmsel vdd lppfet w=0.28u l=0.12u m=1 
 x11 nmsel s0 vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 net25 s0 nmin0 vdd lppfet w=0.5u l=0.12u m=1 
 x3 net25 nmsel nmin1 vdd lppfet w=0.5u l=0.12u m=1 
 x4 vdd net25 y vdd lppfet w=0.64u l=0.12u m=1 
 x5 y net25 vss vss lpnfet w=0.46u l=0.12u m=1 
 x6 vdd a nmin0 vdd lppfet w=0.5u l=0.12u m=1 
 x7 nmin0 a vss vss lpnfet w=0.36u l=0.12u m=1 
 x8 vdd b nmin1 vdd lppfet w=0.5u l=0.12u m=1 
 x9 nmin1 b vss vss lpnfet w=0.36u l=0.12u m=1 
 .ends mx2x1ts 

 **** 
 *.subckt mx2x2ts y a b s0 
 .subckt mx2x2ts y a b s0 vss vdd
 x0 net25 nmsel nmin0 vss lpnfet w=0.74u l=0.12u m=1 
 x1 net25 s0 nmin1 vss lpnfet w=0.74u l=0.12u m=1 
 x10 vdd s0 nmsel vdd lppfet w=0.42u l=0.12u m=1 
 x11 nmsel s0 vss vss lpnfet w=0.3u l=0.12u m=1 
 x2 net25 s0 nmin0 vdd lppfet w=0.98u l=0.12u m=1 
 x3 net25 nmsel nmin1 vdd lppfet w=0.98u l=0.12u m=1 
 x4 vdd net25 y vdd lppfet w=1.28u l=0.12u m=1 
 x5 y net25 vss vss lpnfet w=0.92u l=0.12u m=1 
 x6 vdd a nmin0 vdd lppfet w=0.98u l=0.12u m=1 
 x7 nmin0 a vss vss lpnfet w=0.74u l=0.12u m=1 
 x8 vdd b nmin1 vdd lppfet w=0.98u l=0.12u m=1 
 x9 nmin1 b vss vss lpnfet w=0.74u l=0.12u m=1 
 .ends mx2x2ts 

 **** 
 *.subckt mx2x4ts y a b s0 
 .subckt mx2x4ts y a b s0 vss vdd
 x0 net25 nmsel nmin0 vss lpnfet w=0.82u l=0.12u m=1 
 x1 net25 s0 nmin1 vss lpnfet w=0.82u l=0.12u m=1 
 x10 vdd s0 nmsel vdd lppfet w=0.5u l=0.12u m=1 
 x11 nmsel s0 vss vss lpnfet w=0.36u l=0.12u m=1 
 x2 net25 s0 nmin0 vdd lppfet w=1.28u l=0.12u m=1 
 x3 net25 nmsel nmin1 vdd lppfet w=1.28u l=0.12u m=1 
 x4 vdd net25 y vdd lppfet w=2.56u l=0.12u m=1 
 x5 y net25 vss vss lpnfet w=1.64u l=0.12u m=1 
 x6 vdd a nmin0 vdd lppfet w=1.28u l=0.12u m=1 
 x7 nmin0 a vss vss lpnfet w=0.82u l=0.12u m=1 
 x8 vdd b nmin1 vdd lppfet w=1.28u l=0.12u m=1 
 x9 nmin1 b vss vss lpnfet w=0.82u l=0.12u m=1 
 .ends mx2x4ts 

 **** 
 *.subckt mx2x6ts y a b s0 
 .subckt mx2x6ts y a b s0 vss vdd
 x0 net25 nmsel nmin0 vss lpnfet w=0.8u l=0.12u m=1 
 x1 net25 s0 nmin1 vss lpnfet w=0.8u l=0.12u m=1 
 x10 vdd s0 nmsel vdd lppfet w=0.5u l=0.12u m=1 
 x11 nmsel s0 vss vss lpnfet w=0.36u l=0.12u m=1 
 x2 net25 s0 nmin0 vdd lppfet w=1.28u l=0.12u m=1 
 x3 net25 nmsel nmin1 vdd lppfet w=1.28u l=0.12u m=1 
 x4 vdd net25 y vdd lppfet w=3.84u l=0.12u m=1 
 x5 y net25 vss vss lpnfet w=2.76u l=0.12u m=1 
 x6 vdd a nmin0 vdd lppfet w=1.28u l=0.12u m=1 
 x7 nmin0 a vss vss lpnfet w=0.92u l=0.12u m=1 
 x8 vdd b nmin1 vdd lppfet w=1.28u l=0.12u m=1 
 x9 nmin1 b vss vss lpnfet w=0.92u l=0.12u m=1 
 .ends mx2x6ts 

 **** 
 *.subckt mx2x8ts y a b s0 
 .subckt mx2x8ts y a b s0 vss vdd
 x0 net25 nmsel nmin0 vss lpnfet w=0.76u l=0.12u m=1 
 x1 net25 s0 nmin1 vss lpnfet w=0.76u l=0.12u m=1 
 x10 vdd s0 nmsel vdd lppfet w=0.5u l=0.12u m=1 
 x11 nmsel s0 vss vss lpnfet w=0.36u l=0.12u m=1 
 x2 net25 s0 nmin0 vdd lppfet w=1.24u l=0.12u m=1 
 x3 net25 nmsel nmin1 vdd lppfet w=1.24u l=0.12u m=1 
 x4 vdd net25 y vdd lppfet w=5.12u l=0.12u m=1 
 x5 y net25 vss vss lpnfet w=3.32u l=0.12u m=1 
 x6 vdd a nmin0 vdd lppfet w=1.28u l=0.12u m=1 
 x7 nmin0 a vss vss lpnfet w=0.76u l=0.12u m=1 
 x8 vdd b nmin1 vdd lppfet w=1.28u l=0.12u m=1 
 x9 nmin1 b vss vss lpnfet w=0.92u l=0.12u m=1 
 .ends mx2x8ts 

 **** 
 *.subckt mx2xlts y a b s0 
 .subckt mx2xlts y a b s0 vss vdd
 x0 net25 nmsel nmin0 vss lpnfet w=0.2u l=0.12u m=1 
 x1 net25 s0 nmin1 vss lpnfet w=0.2u l=0.12u m=1 
 x10 vdd s0 nmsel vdd lppfet w=0.28u l=0.12u m=1 
 x11 nmsel s0 vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 net25 s0 nmin0 vdd lppfet w=0.28u l=0.12u m=1 
 x3 net25 nmsel nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x4 vdd net25 y vdd lppfet w=0.42u l=0.12u m=1 
 x5 y net25 vss vss lpnfet w=0.24u l=0.12u m=1 
 x6 vdd a nmin0 vdd lppfet w=0.28u l=0.12u m=1 
 x7 nmin0 a vss vss lpnfet w=0.2u l=0.12u m=1 
 x8 vdd b nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x9 nmin1 b vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends mx2xlts 

 **** 
 *.subckt mx3x1ts y a b c s0 s1 
 .subckt mx3x1ts y a b c s0 s1 vss vdd
 x0 net43 nmsel0 nmin0 vss lpnfet w=0.56u l=0.12u m=1 
 x1 net43 s0 nmin1 vss lpnfet w=0.56u l=0.12u m=1 
 x10 vdd b nmin1 vdd lppfet w=0.78u l=0.12u m=1 
 x11 nmin1 b vss vss lpnfet w=0.56u l=0.12u m=1 
 x12 vdd c nmin2 vdd lppfet w=0.5u l=0.12u m=1 
 x13 nmin2 c vss vss lpnfet w=0.36u l=0.12u m=1 
 x14 vdd s0 nmsel0 vdd lppfet w=0.3u l=0.12u m=1 
 x15 nmsel0 s0 vss vss lpnfet w=0.22u l=0.12u m=1 
 x16 vdd net49 y vdd lppfet w=0.64u l=0.12u m=1 
 x17 y net49 vss vss lpnfet w=0.46u l=0.12u m=1 
 x18 vdd s1 nmsel1 vdd lppfet w=0.28u l=0.12u m=1 
 x19 nmsel1 s1 vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 net49 nmsel1 net43 vss lpnfet w=0.56u l=0.12u m=1 
 x3 net49 s1 nmin2 vss lpnfet w=0.36u l=0.12u m=1 
 x4 net43 s0 nmin0 vdd lppfet w=0.78u l=0.12u m=1 
 x5 net43 nmsel0 nmin1 vdd lppfet w=0.78u l=0.12u m=1 
 x6 net49 s1 net43 vdd lppfet w=0.78u l=0.12u m=1 
 x7 net49 nmsel1 nmin2 vdd lppfet w=0.5u l=0.12u m=1 
 x8 vdd a nmin0 vdd lppfet w=0.78u l=0.12u m=1 
 x9 nmin0 a vss vss lpnfet w=0.56u l=0.12u m=1 
 .ends mx3x1ts 

 **** 
 *.subckt mx3x2ts y a b c s0 s1 
 .subckt mx3x2ts y a b c s0 s1 vss vdd
 x0 net43 nmsel0 nmin0 vss lpnfet w=0.86u l=0.12u m=1 
 x1 net43 s0 nmin1 vss lpnfet w=0.86u l=0.12u m=1 
 x10 vdd b nmin1 vdd lppfet w=1.28u l=0.12u m=1 
 x11 nmin1 b vss vss lpnfet w=0.86u l=0.12u m=1 
 x12 vdd c nmin2 vdd lppfet w=1.02u l=0.12u m=1 
 x13 nmin2 c vss vss lpnfet w=0.74u l=0.12u m=1 
 x14 vdd s0 nmsel0 vdd lppfet w=0.5u l=0.12u m=1 
 x15 nmsel0 s0 vss vss lpnfet w=0.36u l=0.12u m=1 
 x16 vdd net49 y vdd lppfet w=1.28u l=0.12u m=1 
 x17 y net49 vss vss lpnfet w=0.86u l=0.12u m=1 
 x18 vdd s1 nmsel1 vdd lppfet w=0.44u l=0.12u m=1 
 x19 nmsel1 s1 vss vss lpnfet w=0.32u l=0.12u m=1 
 x2 net49 nmsel1 net43 vss lpnfet w=0.86u l=0.12u m=1 
 x3 net49 s1 nmin2 vss lpnfet w=0.74u l=0.12u m=1 
 x4 net43 s0 nmin0 vdd lppfet w=1.28u l=0.12u m=1 
 x5 net43 nmsel0 nmin1 vdd lppfet w=1.28u l=0.12u m=1 
 x6 net49 s1 net43 vdd lppfet w=1.28u l=0.12u m=1 
 x7 net49 nmsel1 nmin2 vdd lppfet w=1.02u l=0.12u m=1 
 x8 vdd a nmin0 vdd lppfet w=1.28u l=0.12u m=1 
 x9 nmin0 a vss vss lpnfet w=0.86u l=0.12u m=1 
 .ends mx3x2ts 

 **** 
 *.subckt mx3x4ts y a b c s0 s1 
 .subckt mx3x4ts y a b c s0 s1 vss vdd
 x0 net43 nmsel0 nmin0 vss lpnfet w=0.86u l=0.12u m=1 
 x1 net43 s0 nmin1 vss lpnfet w=0.86u l=0.12u m=1 
 x10 vdd b nmin1 vdd lppfet w=1.28u l=0.12u m=1 
 x11 nmin1 b vss vss lpnfet w=0.86u l=0.12u m=1 
 x12 vdd c nmin2 vdd lppfet w=1.28u l=0.12u m=1 
 x13 nmin2 c vss vss lpnfet w=0.92u l=0.12u m=1 
 x14 vdd s0 nmsel0 vdd lppfet w=0.5u l=0.12u m=1 
 x15 nmsel0 s0 vss vss lpnfet w=0.36u l=0.12u m=1 
 x16 vdd net49 y vdd lppfet w=2.56u l=0.12u m=1 
 x17 y net49 vss vss lpnfet w=1.84u l=0.12u m=1 
 x18 vdd s1 nmsel1 vdd lppfet w=0.46u l=0.12u m=1 
 x19 nmsel1 s1 vss vss lpnfet w=0.36u l=0.12u m=1 
 x2 net49 nmsel1 net43 vss lpnfet w=0.88u l=0.12u m=1 
 x3 net49 s1 nmin2 vss lpnfet w=0.88u l=0.12u m=1 
 x4 net43 s0 nmin0 vdd lppfet w=1.28u l=0.12u m=1 
 x5 net43 nmsel0 nmin1 vdd lppfet w=1.28u l=0.12u m=1 
 x6 net49 s1 net43 vdd lppfet w=1.28u l=0.12u m=1 
 x7 net49 nmsel1 nmin2 vdd lppfet w=1.28u l=0.12u m=1 
 x8 vdd a nmin0 vdd lppfet w=1.28u l=0.12u m=1 
 x9 nmin0 a vss vss lpnfet w=0.86u l=0.12u m=1 
 .ends mx3x4ts 

 **** 
 *.subckt mx3xlts y a b c s0 s1 
 .subckt mx3xlts y a b c s0 s1 vss vdd
 x0 net43 nmsel0 nmin0 vss lpnfet w=0.32u l=0.12u m=1 
 x1 net43 s0 nmin1 vss lpnfet w=0.32u l=0.12u m=1 
 x10 vdd b nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x11 nmin1 b vss vss lpnfet w=0.2u l=0.12u m=1 
 x12 vdd c nmin2 vdd lppfet w=0.28u l=0.12u m=1 
 x13 nmin2 c vss vss lpnfet w=0.2u l=0.12u m=1 
 x14 vdd s0 nmsel0 vdd lppfet w=0.28u l=0.12u m=1 
 x15 nmsel0 s0 vss vss lpnfet w=0.2u l=0.12u m=1 
 x16 vdd net49 y vdd lppfet w=0.42u l=0.12u m=1 
 x17 y net49 vss vss lpnfet w=0.24u l=0.12u m=1 
 x18 vdd s1 nmsel1 vdd lppfet w=0.28u l=0.12u m=1 
 x19 nmsel1 s1 vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 net49 nmsel1 net43 vss lpnfet w=0.32u l=0.12u m=1 
 x3 net49 s1 nmin2 vss lpnfet w=0.32u l=0.12u m=1 
 x4 net43 s0 nmin0 vdd lppfet w=0.56u l=0.12u m=1 
 x5 net43 nmsel0 nmin1 vdd lppfet w=0.56u l=0.12u m=1 
 x6 net49 s1 net43 vdd lppfet w=0.56u l=0.12u m=1 
 x7 net49 nmsel1 nmin2 vdd lppfet w=0.56u l=0.12u m=1 
 x8 vdd a nmin0 vdd lppfet w=0.28u l=0.12u m=1 
 x9 nmin0 a vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends mx3xlts 

 **** 
 *.subckt mx4x1ts y a b c d s0 s1 
 .subckt mx4x1ts y a b c d s0 s1 vss vdd
 x0 net56 nmsel0 nmin0 vss lpnfet w=0.54u l=0.12u m=1 
 x1 net56 s0 nmin1 vss lpnfet w=0.54u l=0.12u m=1 
 x10 net68 s1 net56 vdd lppfet w=0.74u l=0.12u m=1 
 x11 net68 nmsel1 net62 vdd lppfet w=0.74u l=0.12u m=1 
 x12 vdd a nmin0 vdd lppfet w=0.78u l=0.12u m=1 
 x13 nmin0 a vss vss lpnfet w=0.54u l=0.12u m=1 
 x14 vdd b nmin1 vdd lppfet w=0.72u l=0.12u m=1 
 x15 nmin1 b vss vss lpnfet w=0.54u l=0.12u m=1 
 x16 vdd c nmin2 vdd lppfet w=0.74u l=0.12u m=1 
 x17 nmin2 c vss vss lpnfet w=0.5u l=0.12u m=1 
 x18 vdd d nmin3 vdd lppfet w=0.74u l=0.12u m=1 
 x19 nmin3 d vss vss lpnfet w=0.5u l=0.12u m=1 
 x2 net62 nmsel0 nmin2 vss lpnfet w=0.5u l=0.12u m=1 
 x20 vdd s0 nmsel0 vdd lppfet w=0.62u l=0.12u m=1 
 x21 nmsel0 s0 vss vss lpnfet w=0.44u l=0.12u m=1 
 x22 vdd net68 y vdd lppfet w=0.64u l=0.12u m=1 
 x23 y net68 vss vss lpnfet w=0.46u l=0.12u m=1 
 x24 vdd s1 nmsel1 vdd lppfet w=0.3u l=0.12u m=1 
 x25 nmsel1 s1 vss vss lpnfet w=0.22u l=0.12u m=1 
 x3 net62 s0 nmin3 vss lpnfet w=0.5u l=0.12u m=1 
 x4 net68 nmsel1 net56 vss lpnfet w=0.5u l=0.12u m=1 
 x5 net68 s1 net62 vss lpnfet w=0.5u l=0.12u m=1 
 x6 net56 s0 nmin0 vdd lppfet w=0.72u l=0.12u m=1 
 x7 net56 nmsel0 nmin1 vdd lppfet w=0.72u l=0.12u m=1 
 x8 net62 s0 nmin2 vdd lppfet w=0.74u l=0.12u m=1 
 x9 net62 nmsel0 nmin3 vdd lppfet w=0.74u l=0.12u m=1 
 .ends mx4x1ts 

 **** 
 *.subckt mx4x2ts y a b c d s0 s1 
 .subckt mx4x2ts y a b c d s0 s1 vss vdd
 x0 net56 nmsel0 nmin0 vss lpnfet w=0.88u l=0.12u m=1 
 x1 net56 s0 nmin1 vss lpnfet w=0.88u l=0.12u m=1 
 x10 net68 s1 net56 vdd lppfet w=1.24u l=0.12u m=1 
 x11 net68 nmsel1 net62 vdd lppfet w=1.24u l=0.12u m=1 
 x12 vdd a nmin0 vdd lppfet w=1.28u l=0.12u m=1 
 x13 nmin0 a vss vss lpnfet w=0.88u l=0.12u m=1 
 x14 vdd b nmin1 vdd lppfet w=1.28u l=0.12u m=1 
 x15 nmin1 b vss vss lpnfet w=0.88u l=0.12u m=1 
 x16 vdd c nmin2 vdd lppfet w=1.24u l=0.12u m=1 
 x17 nmin2 c vss vss lpnfet w=0.92u l=0.12u m=1 
 x18 vdd d nmin3 vdd lppfet w=1.24u l=0.12u m=1 
 x19 nmin3 d vss vss lpnfet w=0.92u l=0.12u m=1 
 x2 net62 nmsel0 nmin2 vss lpnfet w=0.92u l=0.12u m=1 
 x20 vdd s0 nmsel0 vdd lppfet w=1.02u l=0.12u m=1 
 x21 nmsel0 s0 vss vss lpnfet w=0.72u l=0.12u m=1 
 x22 vdd net68 y vdd lppfet w=1.28u l=0.12u m=1 
 x23 y net68 vss vss lpnfet w=0.92u l=0.12u m=1 
 x24 vdd s1 nmsel1 vdd lppfet w=0.5u l=0.12u m=1 
 x25 nmsel1 s1 vss vss lpnfet w=0.36u l=0.12u m=1 
 x3 net62 s0 nmin3 vss lpnfet w=0.92u l=0.12u m=1 
 x4 net68 nmsel1 net56 vss lpnfet w=0.92u l=0.12u m=1 
 x5 net68 s1 net62 vss lpnfet w=0.92u l=0.12u m=1 
 x6 net56 s0 nmin0 vdd lppfet w=1.28u l=0.12u m=1 
 x7 net56 nmsel0 nmin1 vdd lppfet w=1.28u l=0.12u m=1 
 x8 net62 s0 nmin2 vdd lppfet w=1.24u l=0.12u m=1 
 x9 net62 nmsel0 nmin3 vdd lppfet w=1.24u l=0.12u m=1 
 .ends mx4x2ts 

 **** 
 *.subckt mx4x4ts y a b c d s0 s1 
 .subckt mx4x4ts y a b c d s0 s1 vss vdd
 x0 net56 nmsel0 nmin0 vss lpnfet w=0.88u l=0.12u m=1 
 x1 net56 s0 nmin1 vss lpnfet w=0.88u l=0.12u m=1 
 x10 net68 s1 net56 vdd lppfet w=1.24u l=0.12u m=1 
 x11 net68 nmsel1 net62 vdd lppfet w=1.24u l=0.12u m=1 
 x12 vdd a nmin0 vdd lppfet w=1.28u l=0.12u m=1 
 x13 nmin0 a vss vss lpnfet w=0.88u l=0.12u m=1 
 x14 vdd b nmin1 vdd lppfet w=1.28u l=0.12u m=1 
 x15 nmin1 b vss vss lpnfet w=0.88u l=0.12u m=1 
 x16 vdd c nmin2 vdd lppfet w=1.24u l=0.12u m=1 
 x17 nmin2 c vss vss lpnfet w=0.92u l=0.12u m=1 
 x18 vdd d nmin3 vdd lppfet w=1.24u l=0.12u m=1 
 x19 nmin3 d vss vss lpnfet w=0.92u l=0.12u m=1 
 x2 net62 nmsel0 nmin2 vss lpnfet w=0.92u l=0.12u m=1 
 x20 vdd s0 nmsel0 vdd lppfet w=0.98u l=0.12u m=1 
 x21 nmsel0 s0 vss vss lpnfet w=0.7u l=0.12u m=1 
 x22 vdd net68 y vdd lppfet w=2.56u l=0.12u m=1 
 x23 y net68 vss vss lpnfet w=1.84u l=0.12u m=1 
 x24 vdd s1 nmsel1 vdd lppfet w=0.5u l=0.12u m=1 
 x25 nmsel1 s1 vss vss lpnfet w=0.36u l=0.12u m=1 
 x3 net62 s0 nmin3 vss lpnfet w=0.92u l=0.12u m=1 
 x4 net68 nmsel1 net56 vss lpnfet w=0.92u l=0.12u m=1 
 x5 net68 s1 net62 vss lpnfet w=0.92u l=0.12u m=1 
 x6 net56 s0 nmin0 vdd lppfet w=1.28u l=0.12u m=1 
 x7 net56 nmsel0 nmin1 vdd lppfet w=1.28u l=0.12u m=1 
 x8 net62 s0 nmin2 vdd lppfet w=1.24u l=0.12u m=1 
 x9 net62 nmsel0 nmin3 vdd lppfet w=1.24u l=0.12u m=1 
 .ends mx4x4ts 

 **** 
 *.subckt mx4xlts y a b c d s0 s1 
 .subckt mx4xlts y a b c d s0 s1 vss vdd
 x0 net56 nmsel0 nmin0 vss lpnfet w=0.2u l=0.12u m=1 
 x1 net56 s0 nmin1 vss lpnfet w=0.2u l=0.12u m=1 
 x10 net68 s1 net56 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net68 nmsel1 net62 vdd lppfet w=0.28u l=0.12u m=1 
 x12 vdd a nmin0 vdd lppfet w=0.28u l=0.12u m=1 
 x13 nmin0 a vss vss lpnfet w=0.2u l=0.12u m=1 
 x14 vdd b nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x15 nmin1 b vss vss lpnfet w=0.18u l=0.12u m=1 
 x16 vdd c nmin2 vdd lppfet w=0.28u l=0.12u m=1 
 x17 nmin2 c vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 vdd d nmin3 vdd lppfet w=0.28u l=0.12u m=1 
 x19 nmin3 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 net62 nmsel0 nmin2 vss lpnfet w=0.2u l=0.12u m=1 
 x20 vdd s0 nmsel0 vdd lppfet w=0.28u l=0.12u m=1 
 x21 nmsel0 s0 vss vss lpnfet w=0.18u l=0.12u m=1 
 x22 vdd net68 y vdd lppfet w=0.42u l=0.12u m=1 
 x23 y net68 vss vss lpnfet w=0.24u l=0.12u m=1 
 x24 vdd s1 nmsel1 vdd lppfet w=0.28u l=0.12u m=1 
 x25 nmsel1 s1 vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 net62 s0 nmin3 vss lpnfet w=0.2u l=0.12u m=1 
 x4 net68 nmsel1 net56 vss lpnfet w=0.2u l=0.12u m=1 
 x5 net68 s1 net62 vss lpnfet w=0.2u l=0.12u m=1 
 x6 net56 s0 nmin0 vdd lppfet w=0.28u l=0.12u m=1 
 x7 net56 nmsel0 nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x8 net62 s0 nmin2 vdd lppfet w=0.26u l=0.12u m=1 
 x9 net62 nmsel0 nmin3 vdd lppfet w=0.28u l=0.12u m=1 
 .ends mx4xlts 

 **** 
 *.subckt mxi2x1ts y a b s0 
 .subckt mxi2x1ts y a b s0 vss vdd
 x0 y nmsel nmin0 vss lpnfet w=0.46u l=0.12u m=1 
 x1 y s0 nmin1 vss lpnfet w=0.46u l=0.12u m=1 
 x2 y s0 nmin0 vdd lppfet w=0.64u l=0.12u m=1 
 x3 y nmsel nmin1 vdd lppfet w=0.64u l=0.12u m=1 
 x4 vdd a nmin0 vdd lppfet w=0.64u l=0.12u m=1 
 x5 nmin0 a vss vss lpnfet w=0.46u l=0.12u m=1 
 x6 vdd b nmin1 vdd lppfet w=0.64u l=0.12u m=1 
 x7 nmin1 b vss vss lpnfet w=0.46u l=0.12u m=1 
 x8 vdd s0 nmsel vdd lppfet w=0.28u l=0.12u m=1 
 x9 nmsel s0 vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends mxi2x1ts 

 **** 
 *.subckt mxi2x2ts y a b s0 
 .subckt mxi2x2ts y a b s0 vss vdd
 x0 y nmsel nmin0 vss lpnfet w=0.92u l=0.12u m=1 
 x1 y s0 nmin1 vss lpnfet w=0.92u l=0.12u m=1 
 x2 y s0 nmin0 vdd lppfet w=1.2u l=0.12u m=1 
 x3 y nmsel nmin1 vdd lppfet w=1.2u l=0.12u m=1 
 x4 vdd a nmin0 vdd lppfet w=1.2u l=0.12u m=1 
 x5 nmin0 a vss vss lpnfet w=0.92u l=0.12u m=1 
 x6 vdd b nmin1 vdd lppfet w=1.16u l=0.12u m=1 
 x7 nmin1 b vss vss lpnfet w=0.72u l=0.12u m=1 
 x8 vdd s0 nmsel vdd lppfet w=0.5u l=0.12u m=1 
 x9 nmsel s0 vss vss lpnfet w=0.36u l=0.12u m=1 
 .ends mxi2x2ts 

 **** 
 *.subckt mxi2x4ts y a b s0 
 .subckt mxi2x4ts y a b s0 vss vdd
 x0 y nmsel nmin0 vss lpnfet w=1.82u l=0.12u m=1 
 x1 y s0 nmin1 vss lpnfet w=1.82u l=0.12u m=1 
 x2 y s0 nmin0 vdd lppfet w=2.44u l=0.12u m=1 
 x3 y nmsel nmin1 vdd lppfet w=2.44u l=0.12u m=1 
 x4 vdd a nmin0 vdd lppfet w=2.56u l=0.12u m=1 
 x5 nmin0 a vss vss lpnfet w=1.84u l=0.12u m=1 
 x6 vdd b nmin1 vdd lppfet w=2.56u l=0.12u m=1 
 x7 nmin1 b vss vss lpnfet w=1.84u l=0.12u m=1 
 x8 vdd s0 nmsel vdd lppfet w=1.02u l=0.12u m=1 
 x9 nmsel s0 vss vss lpnfet w=0.74u l=0.12u m=1 
 .ends mxi2x4ts 

 **** 
 *.subckt mxi2x6ts y a b s0 
 .subckt mxi2x6ts y a b s0 vss vdd
 x0 hnet20 b vss vss lpnfet w=0.46u l=0.12u m=1 
 x1 hnet10 b vss vss lpnfet w=0.46u l=0.12u m=1 
 x10 y s0 hnet24 vss lpnfet w=0.46u l=0.12u m=1 
 x11 y s0 hnet18 vss lpnfet w=0.46u l=0.12u m=1 
 x12 hnet23 nmsel y vdd lppfet w=0.64u l=0.12u m=1 
 x13 hnet21 nmsel y vdd lppfet w=0.64u l=0.12u m=1 
 x14 hnet25 nmsel y vdd lppfet w=0.64u l=0.12u m=1 
 x15 hnet12 nmsel y vdd lppfet w=0.64u l=0.12u m=1 
 x16 hnet14 nmsel y vdd lppfet w=0.64u l=0.12u m=1 
 x17 hnet9 nmsel y vdd lppfet w=0.64u l=0.12u m=1 
 x18 vdd b hnet23 vdd lppfet w=0.64u l=0.12u m=1 
 x19 vdd b hnet21 vdd lppfet w=0.64u l=0.12u m=1 
 x2 hnet13 b vss vss lpnfet w=0.46u l=0.12u m=1 
 x20 vdd b hnet25 vdd lppfet w=0.64u l=0.12u m=1 
 x21 vdd b hnet12 vdd lppfet w=0.64u l=0.12u m=1 
 x22 vdd b hnet14 vdd lppfet w=0.64u l=0.12u m=1 
 x23 vdd b hnet9 vdd lppfet w=0.64u l=0.12u m=1 
 x24 hnet38 a vss vss lpnfet w=0.46u l=0.12u m=1 
 x25 hnet28 a vss vss lpnfet w=0.46u l=0.12u m=1 
 x26 hnet31 a vss vss lpnfet w=0.46u l=0.12u m=1 
 x27 hnet29 a vss vss lpnfet w=0.46u l=0.12u m=1 
 x28 hnet42 a vss vss lpnfet w=0.46u l=0.12u m=1 
 x29 hnet36 a vss vss lpnfet w=0.46u l=0.12u m=1 
 x3 hnet11 b vss vss lpnfet w=0.46u l=0.12u m=1 
 x30 y nmsel hnet38 vss lpnfet w=0.46u l=0.12u m=1 
 x31 y nmsel hnet28 vss lpnfet w=0.46u l=0.12u m=1 
 x32 y nmsel hnet31 vss lpnfet w=0.46u l=0.12u m=1 
 x33 y nmsel hnet29 vss lpnfet w=0.46u l=0.12u m=1 
 x34 y nmsel hnet42 vss lpnfet w=0.46u l=0.12u m=1 
 x35 y nmsel hnet36 vss lpnfet w=0.46u l=0.12u m=1 
 x36 hnet41 s0 y vdd lppfet w=0.64u l=0.12u m=1 
 x37 hnet39 s0 y vdd lppfet w=0.64u l=0.12u m=1 
 x38 hnet43 s0 y vdd lppfet w=0.64u l=0.12u m=1 
 x39 hnet30 s0 y vdd lppfet w=0.64u l=0.12u m=1 
 x4 hnet24 b vss vss lpnfet w=0.46u l=0.12u m=1 
 x40 hnet32 s0 y vdd lppfet w=0.64u l=0.12u m=1 
 x41 hnet27 s0 y vdd lppfet w=0.64u l=0.12u m=1 
 x42 vdd a hnet41 vdd lppfet w=0.64u l=0.12u m=1 
 x43 vdd a hnet39 vdd lppfet w=0.64u l=0.12u m=1 
 x44 vdd a hnet43 vdd lppfet w=0.64u l=0.12u m=1 
 x45 vdd a hnet30 vdd lppfet w=0.64u l=0.12u m=1 
 x46 vdd a hnet32 vdd lppfet w=0.64u l=0.12u m=1 
 x47 vdd a hnet27 vdd lppfet w=0.64u l=0.12u m=1 
 x48 vdd s0 nmsel vdd lppfet w=1.54u l=0.12u m=1 
 x49 nmsel s0 vss vss lpnfet w=1.1u l=0.12u m=1 
 x5 hnet18 b vss vss lpnfet w=0.46u l=0.12u m=1 
 x6 y s0 hnet20 vss lpnfet w=0.46u l=0.12u m=1 
 x7 y s0 hnet10 vss lpnfet w=0.46u l=0.12u m=1 
 x8 y s0 hnet13 vss lpnfet w=0.46u l=0.12u m=1 
 x9 y s0 hnet11 vss lpnfet w=0.46u l=0.12u m=1 
 .ends mxi2x6ts 

 **** 
 *.subckt mxi2x8ts y a b s0 
 .subckt mxi2x8ts y a b s0 vss vdd
 x0 hnet21 b vss vss lpnfet w=0.62u l=0.12u m=1 
 x1 hnet24 b vss vss lpnfet w=0.62u l=0.12u m=1 
 x10 y s0 hnet23 vss lpnfet w=0.62u l=0.12u m=1 
 x11 y s0 hnet27 vss lpnfet w=0.62u l=0.12u m=1 
 x12 y s0 hnet17 vss lpnfet w=0.62u l=0.12u m=1 
 x13 y s0 hnet12 vss lpnfet w=0.62u l=0.12u m=1 
 x14 y s0 hnet13 vss lpnfet w=0.62u l=0.12u m=1 
 x15 y s0 hnet11 vss lpnfet w=0.62u l=0.12u m=1 
 x16 hnet9 nmsel y vdd lppfet w=0.86u l=0.12u m=1 
 x17 hnet22 nmsel y vdd lppfet w=0.86u l=0.12u m=1 
 x18 vdd b hnet9 vdd lppfet w=0.86u l=0.12u m=1 
 x19 vdd b hnet22 vdd lppfet w=0.86u l=0.12u m=1 
 x2 y s0 hnet21 vss lpnfet w=0.62u l=0.12u m=1 
 x20 hnet18 nmsel y vdd lppfet w=0.86u l=0.12u m=1 
 x21 hnet19 nmsel y vdd lppfet w=0.86u l=0.12u m=1 
 x22 hnet16 nmsel y vdd lppfet w=0.86u l=0.12u m=1 
 x23 hnet29 nmsel y vdd lppfet w=0.86u l=0.12u m=1 
 x24 hnet10 nmsel y vdd lppfet w=0.86u l=0.12u m=1 
 x25 hnet26 nmsel y vdd lppfet w=0.86u l=0.12u m=1 
 x26 vdd b hnet18 vdd lppfet w=0.86u l=0.12u m=1 
 x27 vdd b hnet19 vdd lppfet w=0.86u l=0.12u m=1 
 x28 vdd b hnet16 vdd lppfet w=0.86u l=0.12u m=1 
 x29 vdd b hnet29 vdd lppfet w=0.86u l=0.12u m=1 
 x3 y s0 hnet24 vss lpnfet w=0.62u l=0.12u m=1 
 x30 vdd b hnet10 vdd lppfet w=0.86u l=0.12u m=1 
 x31 vdd b hnet26 vdd lppfet w=0.86u l=0.12u m=1 
 x32 hnet43 a vss vss lpnfet w=0.62u l=0.12u m=1 
 x33 hnet46 a vss vss lpnfet w=0.62u l=0.12u m=1 
 x34 y nmsel hnet43 vss lpnfet w=0.62u l=0.12u m=1 
 x35 y nmsel hnet46 vss lpnfet w=0.62u l=0.12u m=1 
 x36 hnet45 a vss vss lpnfet w=0.62u l=0.12u m=1 
 x37 hnet49 a vss vss lpnfet w=0.62u l=0.12u m=1 
 x38 hnet39 a vss vss lpnfet w=0.62u l=0.12u m=1 
 x39 hnet34 a vss vss lpnfet w=0.62u l=0.12u m=1 
 x4 hnet23 b vss vss lpnfet w=0.62u l=0.12u m=1 
 x40 hnet35 a vss vss lpnfet w=0.62u l=0.12u m=1 
 x41 hnet33 a vss vss lpnfet w=0.62u l=0.12u m=1 
 x42 y nmsel hnet45 vss lpnfet w=0.62u l=0.12u m=1 
 x43 y nmsel hnet49 vss lpnfet w=0.62u l=0.12u m=1 
 x44 y nmsel hnet39 vss lpnfet w=0.62u l=0.12u m=1 
 x45 y nmsel hnet34 vss lpnfet w=0.62u l=0.12u m=1 
 x46 y nmsel hnet35 vss lpnfet w=0.62u l=0.12u m=1 
 x47 y nmsel hnet33 vss lpnfet w=0.62u l=0.12u m=1 
 x48 hnet31 s0 y vdd lppfet w=0.86u l=0.12u m=1 
 x49 hnet44 s0 y vdd lppfet w=0.86u l=0.12u m=1 
 x5 hnet27 b vss vss lpnfet w=0.62u l=0.12u m=1 
 x50 vdd a hnet31 vdd lppfet w=0.86u l=0.12u m=1 
 x51 vdd a hnet44 vdd lppfet w=0.86u l=0.12u m=1 
 x52 hnet40 s0 y vdd lppfet w=0.86u l=0.12u m=1 
 x53 hnet41 s0 y vdd lppfet w=0.86u l=0.12u m=1 
 x54 hnet38 s0 y vdd lppfet w=0.86u l=0.12u m=1 
 x55 hnet51 s0 y vdd lppfet w=0.86u l=0.12u m=1 
 x56 hnet32 s0 y vdd lppfet w=0.86u l=0.12u m=1 
 x57 hnet48 s0 y vdd lppfet w=0.86u l=0.12u m=1 
 x58 vdd a hnet40 vdd lppfet w=0.86u l=0.12u m=1 
 x59 vdd a hnet41 vdd lppfet w=0.86u l=0.12u m=1 
 x6 hnet17 b vss vss lpnfet w=0.62u l=0.12u m=1 
 x60 vdd a hnet38 vdd lppfet w=0.86u l=0.12u m=1 
 x61 vdd a hnet51 vdd lppfet w=0.86u l=0.12u m=1 
 x62 vdd a hnet32 vdd lppfet w=0.86u l=0.12u m=1 
 x63 vdd a hnet48 vdd lppfet w=0.86u l=0.12u m=1 
 x64 vdd s0 nmsel vdd lppfet w=2.06u l=0.12u m=1 
 x65 nmsel s0 vss vss lpnfet w=1.48u l=0.12u m=1 
 x7 hnet12 b vss vss lpnfet w=0.62u l=0.12u m=1 
 x8 hnet13 b vss vss lpnfet w=0.62u l=0.12u m=1 
 x9 hnet11 b vss vss lpnfet w=0.62u l=0.12u m=1 
 .ends mxi2x8ts 

 **** 
 *.subckt mxi2xlts y a b s0 
 .subckt mxi2xlts y a b s0 vss vdd
 x0 y nmsel nmin0 vss lpnfet w=0.2u l=0.12u m=1 
 x1 y s0 nmin1 vss lpnfet w=0.2u l=0.12u m=1 
 x2 y s0 nmin0 vdd lppfet w=0.28u l=0.12u m=1 
 x3 y nmsel nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x4 vdd a nmin0 vdd lppfet w=0.42u l=0.12u m=1 
 x5 nmin0 a vss vss lpnfet w=0.24u l=0.12u m=1 
 x6 vdd b nmin1 vdd lppfet w=0.38u l=0.12u m=1 
 x7 nmin1 b vss vss lpnfet w=0.18u l=0.12u m=1 
 x8 vdd s0 nmsel vdd lppfet w=0.28u l=0.12u m=1 
 x9 nmsel s0 vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends mxi2xlts 

 **** 
 *.subckt mxi3x1ts y a b c s0 s1 
 .subckt mxi3x1ts y a b c s0 s1 vss vdd
 x0 net46 nmsel0 nmin0 vss lpnfet w=0.28u l=0.12u m=1 
 x1 net46 s0 nmin1 vss lpnfet w=0.26u l=0.12u m=1 
 x10 vdd b nmin1 vdd lppfet w=0.38u l=0.12u m=1 
 x11 nmin1 b vss vss lpnfet w=0.28u l=0.12u m=1 
 x12 vdd c nmin2 vdd lppfet w=0.28u l=0.12u m=1 
 x13 nmin2 c vss vss lpnfet w=0.2u l=0.12u m=1 
 x14 vdd net46 net74 vdd lppfet w=0.5u l=0.12u m=1 
 x15 net74 net46 vss vss lpnfet w=0.36u l=0.12u m=1 
 x16 vdd nmin2 net76 vdd lppfet w=0.5u l=0.12u m=1 
 x17 net76 nmin2 vss vss lpnfet w=0.36u l=0.12u m=1 
 x18 vdd s0 nmsel0 vdd lppfet w=0.28u l=0.12u m=1 
 x19 nmsel0 s0 vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 net52 nmsel1 net74 vss lpnfet w=0.36u l=0.12u m=1 
 x20 vdd net52 y vdd lppfet w=0.62u l=0.12u m=1 
 x21 y net52 vss vss lpnfet w=0.42u l=0.12u m=1 
 x22 vdd s1 nmsel1 vdd lppfet w=0.28u l=0.12u m=1 
 x23 nmsel1 s1 vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 net52 s1 net76 vss lpnfet w=0.36u l=0.12u m=1 
 x4 net46 s0 nmin0 vdd lppfet w=0.38u l=0.12u m=1 
 x5 net46 nmsel0 nmin1 vdd lppfet w=0.38u l=0.12u m=1 
 x6 net52 s1 net74 vdd lppfet w=0.5u l=0.12u m=1 
 x7 net52 nmsel1 net76 vdd lppfet w=0.5u l=0.12u m=1 
 x8 vdd a nmin0 vdd lppfet w=0.38u l=0.12u m=1 
 x9 nmin0 a vss vss lpnfet w=0.28u l=0.12u m=1 
 .ends mxi3x1ts 

 **** 
 *.subckt mxi3x2ts y a b c s0 s1 
 .subckt mxi3x2ts y a b c s0 s1 vss vdd
 x0 net46 nmsel0 nmin0 vss lpnfet w=0.58u l=0.12u m=1 
 x1 net46 s0 nmin1 vss lpnfet w=0.56u l=0.12u m=1 
 x10 vdd b nmin1 vdd lppfet w=0.78u l=0.12u m=1 
 x11 nmin1 b vss vss lpnfet w=0.56u l=0.12u m=1 
 x12 vdd c nmin2 vdd lppfet w=0.42u l=0.12u m=1 
 x13 nmin2 c vss vss lpnfet w=0.3u l=0.12u m=1 
 x14 vdd net46 net74 vdd lppfet w=0.92u l=0.12u m=1 
 x15 net74 net46 vss vss lpnfet w=0.62u l=0.12u m=1 
 x16 vdd nmin2 net76 vdd lppfet w=0.98u l=0.12u m=1 
 x17 net76 nmin2 vss vss lpnfet w=0.72u l=0.12u m=1 
 x18 vdd s0 nmsel0 vdd lppfet w=0.34u l=0.12u m=1 
 x19 nmsel0 s0 vss vss lpnfet w=0.24u l=0.12u m=1 
 x2 net52 nmsel1 net74 vss lpnfet w=0.62u l=0.12u m=1 
 x20 vdd net52 y vdd lppfet w=1.24u l=0.12u m=1 
 x21 y net52 vss vss lpnfet w=0.92u l=0.12u m=1 
 x22 vdd s1 nmsel1 vdd lppfet w=0.42u l=0.12u m=1 
 x23 nmsel1 s1 vss vss lpnfet w=0.3u l=0.12u m=1 
 x3 net52 s1 net76 vss lpnfet w=0.72u l=0.12u m=1 
 x4 net46 s0 nmin0 vdd lppfet w=0.78u l=0.12u m=1 
 x5 net46 nmsel0 nmin1 vdd lppfet w=0.78u l=0.12u m=1 
 x6 net52 s1 net74 vdd lppfet w=1.02u l=0.12u m=1 
 x7 net52 nmsel1 net76 vdd lppfet w=0.98u l=0.12u m=1 
 x8 vdd a nmin0 vdd lppfet w=0.78u l=0.12u m=1 
 x9 nmin0 a vss vss lpnfet w=0.58u l=0.12u m=1 
 .ends mxi3x2ts 

 **** 
 *.subckt mxi3x4ts y a b c s0 s1 
 .subckt mxi3x4ts y a b c s0 s1 vss vdd
 x0 net46 nmsel0 nmin0 vss lpnfet w=0.72u l=0.12u m=1 
 x1 net46 s0 nmin1 vss lpnfet w=0.74u l=0.12u m=1 
 x10 vdd b nmin1 vdd lppfet w=0.98u l=0.12u m=1 
 x11 nmin1 b vss vss lpnfet w=0.6u l=0.12u m=1 
 x12 vdd c nmin2 vdd lppfet w=0.5u l=0.12u m=1 
 x13 nmin2 c vss vss lpnfet w=0.36u l=0.12u m=1 
 x14 vdd net46 net74 vdd lppfet w=1.28u l=0.12u m=1 
 x15 net74 net46 vss vss lpnfet w=0.92u l=0.12u m=1 
 x16 vdd nmin2 net76 vdd lppfet w=1.16u l=0.12u m=1 
 x17 net76 nmin2 vss vss lpnfet w=0.92u l=0.12u m=1 
 x18 vdd s0 nmsel0 vdd lppfet w=0.42u l=0.12u m=1 
 x19 nmsel0 s0 vss vss lpnfet w=0.3u l=0.12u m=1 
 x2 net52 nmsel1 net74 vss lpnfet w=0.72u l=0.12u m=1 
 x20 vdd net52 y vdd lppfet w=2.56u l=0.12u m=1 
 x21 y net52 vss vss lpnfet w=1.84u l=0.12u m=1 
 x22 vdd s1 nmsel1 vdd lppfet w=0.5u l=0.12u m=1 
 x23 nmsel1 s1 vss vss lpnfet w=0.36u l=0.12u m=1 
 x3 net52 s1 net76 vss lpnfet w=0.92u l=0.12u m=1 
 x4 net46 s0 nmin0 vdd lppfet w=1.02u l=0.12u m=1 
 x5 net46 nmsel0 nmin1 vdd lppfet w=0.98u l=0.12u m=1 
 x6 net52 s1 net74 vdd lppfet w=1.16u l=0.12u m=1 
 x7 net52 nmsel1 net76 vdd lppfet w=1.16u l=0.12u m=1 
 x8 vdd a nmin0 vdd lppfet w=1.02u l=0.12u m=1 
 x9 nmin0 a vss vss lpnfet w=0.72u l=0.12u m=1 
 .ends mxi3x4ts 

 **** 
 *.subckt mxi3xlts y a b c s0 s1 
 .subckt mxi3xlts y a b c s0 s1 vss vdd
 x0 net46 nmsel0 nmin0 vss lpnfet w=0.32u l=0.12u m=1 
 x1 net46 s0 nmin1 vss lpnfet w=0.32u l=0.12u m=1 
 x10 vdd b nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x11 nmin1 b vss vss lpnfet w=0.2u l=0.12u m=1 
 x12 vdd c nmin2 vdd lppfet w=0.28u l=0.12u m=1 
 x13 nmin2 c vss vss lpnfet w=0.2u l=0.12u m=1 
 x14 vdd net46 net74 vdd lppfet w=0.28u l=0.12u m=1 
 x15 net74 net46 vss vss lpnfet w=0.2u l=0.12u m=1 
 x16 vdd nmin2 net76 vdd lppfet w=0.28u l=0.12u m=1 
 x17 net76 nmin2 vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 vdd s0 nmsel0 vdd lppfet w=0.28u l=0.12u m=1 
 x19 nmsel0 s0 vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 net52 nmsel1 net74 vss lpnfet w=0.32u l=0.12u m=1 
 x20 vdd net52 y vdd lppfet w=0.42u l=0.12u m=1 
 x21 y net52 vss vss lpnfet w=0.24u l=0.12u m=1 
 x22 vdd s1 nmsel1 vdd lppfet w=0.28u l=0.12u m=1 
 x23 nmsel1 s1 vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 net52 s1 net76 vss lpnfet w=0.32u l=0.12u m=1 
 x4 net46 s0 nmin0 vdd lppfet w=0.56u l=0.12u m=1 
 x5 net46 nmsel0 nmin1 vdd lppfet w=0.56u l=0.12u m=1 
 x6 net52 s1 net74 vdd lppfet w=0.56u l=0.12u m=1 
 x7 net52 nmsel1 net76 vdd lppfet w=0.56u l=0.12u m=1 
 x8 vdd a nmin0 vdd lppfet w=0.28u l=0.12u m=1 
 x9 nmin0 a vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends mxi3xlts 

 **** 
 *.subckt mxi4x1ts y a b c d s0 s1 
 .subckt mxi4x1ts y a b c d s0 s1 vss vdd
 x0 net58 nmsel0 nmin0 vss lpnfet w=0.28u l=0.12u m=1 
 x1 net58 s0 nmin1 vss lpnfet w=0.28u l=0.12u m=1 
 x10 net70 s1 net100 vdd lppfet w=0.5u l=0.12u m=1 
 x11 net70 nmsel1 net102 vdd lppfet w=0.5u l=0.12u m=1 
 x12 vdd a nmin0 vdd lppfet w=0.38u l=0.12u m=1 
 x13 nmin0 a vss vss lpnfet w=0.28u l=0.12u m=1 
 x14 vdd b nmin1 vdd lppfet w=0.38u l=0.12u m=1 
 x15 nmin1 b vss vss lpnfet w=0.28u l=0.12u m=1 
 x16 vdd c nmin2 vdd lppfet w=0.38u l=0.12u m=1 
 x17 nmin2 c vss vss lpnfet w=0.28u l=0.12u m=1 
 x18 vdd d nmin3 vdd lppfet w=0.38u l=0.12u m=1 
 x19 nmin3 d vss vss lpnfet w=0.28u l=0.12u m=1 
 x2 net64 nmsel0 nmin2 vss lpnfet w=0.28u l=0.12u m=1 
 x20 vdd net58 net100 vdd lppfet w=0.5u l=0.12u m=1 
 x21 net100 net58 vss vss lpnfet w=0.36u l=0.12u m=1 
 x22 vdd net64 net102 vdd lppfet w=0.5u l=0.12u m=1 
 x23 net102 net64 vss vss lpnfet w=0.36u l=0.12u m=1 
 x24 vdd s0 nmsel0 vdd lppfet w=0.3u l=0.12u m=1 
 x25 nmsel0 s0 vss vss lpnfet w=0.22u l=0.12u m=1 
 x26 vdd net70 y vdd lppfet w=0.64u l=0.12u m=1 
 x27 y net70 vss vss lpnfet w=0.46u l=0.12u m=1 
 x28 vdd s1 nmsel1 vdd lppfet w=0.28u l=0.12u m=1 
 x29 nmsel1 s1 vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 net64 s0 nmin3 vss lpnfet w=0.28u l=0.12u m=1 
 x4 net70 nmsel1 net100 vss lpnfet w=0.36u l=0.12u m=1 
 x5 net70 s1 net102 vss lpnfet w=0.36u l=0.12u m=1 
 x6 net58 s0 nmin0 vdd lppfet w=0.38u l=0.12u m=1 
 x7 net58 nmsel0 nmin1 vdd lppfet w=0.38u l=0.12u m=1 
 x8 net64 s0 nmin2 vdd lppfet w=0.38u l=0.12u m=1 
 x9 net64 nmsel0 nmin3 vdd lppfet w=0.38u l=0.12u m=1 
 .ends mxi4x1ts 

 **** 
 *.subckt mxi4x2ts y a b c d s0 s1 
 .subckt mxi4x2ts y a b c d s0 s1 vss vdd
 x0 net58 nmsel0 nmin0 vss lpnfet w=0.58u l=0.12u m=1 
 x1 net58 s0 nmin1 vss lpnfet w=0.58u l=0.12u m=1 
 x10 net70 s1 net100 vdd lppfet w=0.92u l=0.12u m=1 
 x11 net70 nmsel1 net102 vdd lppfet w=1.02u l=0.12u m=1 
 x12 vdd a nmin0 vdd lppfet w=0.8u l=0.12u m=1 
 x13 nmin0 a vss vss lpnfet w=0.58u l=0.12u m=1 
 x14 vdd b nmin1 vdd lppfet w=0.8u l=0.12u m=1 
 x15 nmin1 b vss vss lpnfet w=0.58u l=0.12u m=1 
 x16 vdd c nmin2 vdd lppfet w=0.76u l=0.12u m=1 
 x17 nmin2 c vss vss lpnfet w=0.56u l=0.12u m=1 
 x18 vdd d nmin3 vdd lppfet w=0.76u l=0.12u m=1 
 x19 nmin3 d vss vss lpnfet w=0.54u l=0.12u m=1 
 x2 net64 nmsel0 nmin2 vss lpnfet w=0.58u l=0.12u m=1 
 x20 vdd net58 net100 vdd lppfet w=1.02u l=0.12u m=1 
 x21 net100 net58 vss vss lpnfet w=0.74u l=0.12u m=1 
 x22 vdd net64 net102 vdd lppfet w=1.02u l=0.12u m=1 
 x23 net102 net64 vss vss lpnfet w=0.72u l=0.12u m=1 
 x24 vdd s0 nmsel0 vdd lppfet w=0.64u l=0.12u m=1 
 x25 nmsel0 s0 vss vss lpnfet w=0.46u l=0.12u m=1 
 x26 vdd net70 y vdd lppfet w=1.28u l=0.12u m=1 
 x27 y net70 vss vss lpnfet w=0.92u l=0.12u m=1 
 x28 vdd s1 nmsel1 vdd lppfet w=0.42u l=0.12u m=1 
 x29 nmsel1 s1 vss vss lpnfet w=0.3u l=0.12u m=1 
 x3 net64 s0 nmin3 vss lpnfet w=0.58u l=0.12u m=1 
 x4 net70 nmsel1 net100 vss lpnfet w=0.68u l=0.12u m=1 
 x5 net70 s1 net102 vss lpnfet w=0.72u l=0.12u m=1 
 x6 net58 s0 nmin0 vdd lppfet w=0.8u l=0.12u m=1 
 x7 net58 nmsel0 nmin1 vdd lppfet w=0.8u l=0.12u m=1 
 x8 net64 s0 nmin2 vdd lppfet w=0.76u l=0.12u m=1 
 x9 net64 nmsel0 nmin3 vdd lppfet w=0.76u l=0.12u m=1 
 .ends mxi4x2ts 

 **** 
 *.subckt mxi4x4ts y a b c d s0 s1 
 .subckt mxi4x4ts y a b c d s0 s1 vss vdd
 x0 net58 nmsel0 nmin0 vss lpnfet w=0.68u l=0.12u m=1 
 x1 net58 s0 nmin1 vss lpnfet w=0.66u l=0.12u m=1 
 x10 net70 s1 net100 vdd lppfet w=1.16u l=0.12u m=1 
 x11 net70 nmsel1 net102 vdd lppfet w=1.18u l=0.12u m=1 
 x12 vdd a nmin0 vdd lppfet w=1.02u l=0.12u m=1 
 x13 nmin0 a vss vss lpnfet w=0.68u l=0.12u m=1 
 x14 vdd b nmin1 vdd lppfet w=0.96u l=0.12u m=1 
 x15 nmin1 b vss vss lpnfet w=0.62u l=0.12u m=1 
 x16 vdd c nmin2 vdd lppfet w=1u l=0.12u m=1 
 x17 nmin2 c vss vss lpnfet w=0.74u l=0.12u m=1 
 x18 vdd d nmin3 vdd lppfet w=0.96u l=0.12u m=1 
 x19 nmin3 d vss vss lpnfet w=0.62u l=0.12u m=1 
 x2 net64 nmsel0 nmin2 vss lpnfet w=0.74u l=0.12u m=1 
 x20 vdd net58 net100 vdd lppfet w=1.28u l=0.12u m=1 
 x21 net100 net58 vss vss lpnfet w=0.92u l=0.12u m=1 
 x22 vdd net64 net102 vdd lppfet w=1.18u l=0.12u m=1 
 x23 net102 net64 vss vss lpnfet w=0.84u l=0.12u m=1 
 x24 vdd s0 nmsel0 vdd lppfet w=0.8u l=0.12u m=1 
 x25 nmsel0 s0 vss vss lpnfet w=0.58u l=0.12u m=1 
 x26 vdd net70 y vdd lppfet w=2.56u l=0.12u m=1 
 x27 y net70 vss vss lpnfet w=1.84u l=0.12u m=1 
 x28 vdd s1 nmsel1 vdd lppfet w=0.5u l=0.12u m=1 
 x29 nmsel1 s1 vss vss lpnfet w=0.36u l=0.12u m=1 
 x3 net64 s0 nmin3 vss lpnfet w=0.74u l=0.12u m=1 
 x4 net70 nmsel1 net100 vss lpnfet w=0.72u l=0.12u m=1 
 x5 net70 s1 net102 vss lpnfet w=0.92u l=0.12u m=1 
 x6 net58 s0 nmin0 vdd lppfet w=1.02u l=0.12u m=1 
 x7 net58 nmsel0 nmin1 vdd lppfet w=0.96u l=0.12u m=1 
 x8 net64 s0 nmin2 vdd lppfet w=1u l=0.12u m=1 
 x9 net64 nmsel0 nmin3 vdd lppfet w=0.96u l=0.12u m=1 
 .ends mxi4x4ts 

 **** 
 *.subckt mxi4xlts y a b c d s0 s1 
 .subckt mxi4xlts y a b c d s0 s1 vss vdd
 x0 net58 nmsel0 nmin0 vss lpnfet w=0.2u l=0.12u m=1 
 x1 net58 s0 nmin1 vss lpnfet w=0.2u l=0.12u m=1 
 x10 net70 s1 net100 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net70 nmsel1 net102 vdd lppfet w=0.28u l=0.12u m=1 
 x12 vdd a nmin0 vdd lppfet w=0.28u l=0.12u m=1 
 x13 nmin0 a vss vss lpnfet w=0.2u l=0.12u m=1 
 x14 vdd b nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x15 nmin1 b vss vss lpnfet w=0.2u l=0.12u m=1 
 x16 vdd c nmin2 vdd lppfet w=0.28u l=0.12u m=1 
 x17 nmin2 c vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 vdd d nmin3 vdd lppfet w=0.28u l=0.12u m=1 
 x19 nmin3 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 net64 nmsel0 nmin2 vss lpnfet w=0.2u l=0.12u m=1 
 x20 vdd net58 net100 vdd lppfet w=0.28u l=0.12u m=1 
 x21 net100 net58 vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 vdd net64 net102 vdd lppfet w=0.28u l=0.12u m=1 
 x23 net102 net64 vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 vdd s0 nmsel0 vdd lppfet w=0.28u l=0.12u m=1 
 x25 nmsel0 s0 vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 vdd net70 y vdd lppfet w=0.42u l=0.12u m=1 
 x27 y net70 vss vss lpnfet w=0.24u l=0.12u m=1 
 x28 vdd s1 nmsel1 vdd lppfet w=0.28u l=0.12u m=1 
 x29 nmsel1 s1 vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 net64 s0 nmin3 vss lpnfet w=0.2u l=0.12u m=1 
 x4 net70 nmsel1 net100 vss lpnfet w=0.2u l=0.12u m=1 
 x5 net70 s1 net102 vss lpnfet w=0.2u l=0.12u m=1 
 x6 net58 s0 nmin0 vdd lppfet w=0.28u l=0.12u m=1 
 x7 net58 nmsel0 nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x8 net64 s0 nmin2 vdd lppfet w=0.28u l=0.12u m=1 
 x9 net64 nmsel0 nmin3 vdd lppfet w=0.28u l=0.12u m=1 
 .ends mxi4xlts 

 **** 
 *.subckt nand2bx1ts y an b 
 .subckt nand2bx1ts y an b vss vdd
 x0 vdd an nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x1 nmin1 an vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet14 b vss vss lpnfet w=0.6u l=0.12u m=1 
 x3 y nmin1 hnet14 vss lpnfet w=0.6u l=0.12u m=1 
 x4 vdd b y vdd lppfet w=0.64u l=0.12u m=1 
 x5 vdd nmin1 y vdd lppfet w=0.64u l=0.12u m=1 
 .ends nand2bx1ts 

 **** 
 *.subckt nand2bx2ts y an b 
 .subckt nand2bx2ts y an b vss vdd
 x0 vdd an nmin1 vdd lppfet w=0.58u l=0.12u m=1 
 x1 nmin1 an vss vss lpnfet w=0.42u l=0.12u m=1 
 x2 hnet15 b vss vss lpnfet w=0.6u l=0.12u m=1 
 x3 y nmin1 hnet15 vss lpnfet w=0.6u l=0.12u m=1 
 x4 hnet11 b vss vss lpnfet w=0.6u l=0.12u m=1 
 x5 y nmin1 hnet11 vss lpnfet w=0.6u l=0.12u m=1 
 x6 vdd b y vdd lppfet w=1.26u l=0.12u m=1 
 x7 vdd nmin1 y vdd lppfet w=1.26u l=0.12u m=1 
 .ends nand2bx2ts 

 **** 
 *.subckt nand2bx4ts y an b 
 .subckt nand2bx4ts y an b vss vdd
 x0 vdd an nmin1 vdd lppfet w=1.16u l=0.12u m=1 
 x1 nmin1 an vss vss lpnfet w=0.84u l=0.12u m=1 
 x2 hnet11 b vss vss lpnfet w=0.82u l=0.12u m=1 
 x3 y nmin1 hnet11 vss lpnfet w=0.82u l=0.12u m=1 
 x4 hnet12 b vss vss lpnfet w=0.82u l=0.12u m=1 
 x5 y nmin1 hnet12 vss lpnfet w=0.82u l=0.12u m=1 
 x6 hnet14 b vss vss lpnfet w=0.82u l=0.12u m=1 
 x7 y nmin1 hnet14 vss lpnfet w=0.82u l=0.12u m=1 
 x8 vdd b y vdd lppfet w=2.44u l=0.12u m=1 
 x9 vdd nmin1 y vdd lppfet w=2.44u l=0.12u m=1 
 .ends nand2bx4ts 

 **** 
 *.subckt nand2bxlts y an b 
 .subckt nand2bxlts y an b vss vdd
 x0 vdd an nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x1 nmin1 an vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet14 b vss vss lpnfet w=0.4u l=0.12u m=1 
 x3 y nmin1 hnet14 vss lpnfet w=0.4u l=0.12u m=1 
 x4 vdd b y vdd lppfet w=0.42u l=0.12u m=1 
 x5 vdd nmin1 y vdd lppfet w=0.42u l=0.12u m=1 
 .ends nand2bxlts 

 **** 
 *.subckt nand2x1ts y a b 
 .subckt nand2x1ts y a b vss vdd
 x0 hnet11 b vss vss lpnfet w=0.6u l=0.12u m=1 
 x1 y a hnet11 vss lpnfet w=0.6u l=0.12u m=1 
 x2 vdd b y vdd lppfet w=0.64u l=0.12u m=1 
 x3 vdd a y vdd lppfet w=0.64u l=0.12u m=1 
 .ends nand2x1ts 

 **** 
 *.subckt nand2x2ts y a b 
 .subckt nand2x2ts y a b vss vdd
 x0 hnet12 b vss vss lpnfet w=0.6u l=0.12u m=1 
 x1 y a hnet12 vss lpnfet w=0.6u l=0.12u m=1 
 x2 hnet6 b vss vss lpnfet w=0.6u l=0.12u m=1 
 x3 y a hnet6 vss lpnfet w=0.6u l=0.12u m=1 
 x4 vdd b y vdd lppfet w=1.26u l=0.12u m=1 
 x5 vdd a y vdd lppfet w=1.26u l=0.12u m=1 
 .ends nand2x2ts 

 **** 
 *.subckt nand2x4ts y a b 
 .subckt nand2x4ts y a b vss vdd
 x0 net12 b vss vss lpnfet w=0.72u l=0.12u m=1 
 x1 y a net12 vss lpnfet w=0.72u l=0.12u m=1 
 x2 net20 b vss vss lpnfet w=0.82u l=0.12u m=1 
 x3 y a net20 vss lpnfet w=0.82u l=0.12u m=1 
 x4 net26 b vss vss lpnfet w=0.82u l=0.12u m=1 
 x5 y a net26 vss lpnfet w=0.82u l=0.12u m=1 
 x6 vdd b y vdd lppfet w=2.58u l=0.12u m=1 
 x7 vdd a y vdd lppfet w=2.58u l=0.12u m=1 
 .ends nand2x4ts 

 **** 
 *.subckt nand2x6ts y a b 
 .subckt nand2x6ts y a b vss vdd
 x0 hnet14 b vss vss lpnfet w=0.86u l=0.12u m=1 
 x1 y a hnet14 vss lpnfet w=0.86u l=0.12u m=1 
 x2 hnet7 b vss vss lpnfet w=0.86u l=0.12u m=1 
 x3 y a hnet7 vss lpnfet w=0.86u l=0.12u m=1 
 x4 hnet9 b vss vss lpnfet w=0.86u l=0.12u m=1 
 x5 y a hnet9 vss lpnfet w=0.86u l=0.12u m=1 
 x6 hnet13 b vss vss lpnfet w=0.86u l=0.12u m=1 
 x7 y a hnet13 vss lpnfet w=0.86u l=0.12u m=1 
 x8 vdd b y vdd lppfet w=3.84u l=0.12u m=1 
 x9 vdd a y vdd lppfet w=3.84u l=0.12u m=1 
 .ends nand2x6ts 

 **** 
 *.subckt nand2x8ts y a b 
 .subckt nand2x8ts y a b vss vdd
 x0 hnet15 b vss vss lpnfet w=0.88u l=0.12u m=1 
 x1 y a hnet15 vss lpnfet w=0.88u l=0.12u m=1 
 x10 vdd b y vdd lppfet w=4.84u l=0.12u m=1 
 x11 vdd a y vdd lppfet w=4.84u l=0.12u m=1 
 x2 hnet7 b vss vss lpnfet w=0.88u l=0.12u m=1 
 x3 y a hnet7 vss lpnfet w=0.88u l=0.12u m=1 
 x4 hnet10 b vss vss lpnfet w=0.88u l=0.12u m=1 
 x5 y a hnet10 vss lpnfet w=0.88u l=0.12u m=1 
 x6 hnet14 b vss vss lpnfet w=0.88u l=0.12u m=1 
 x7 y a hnet14 vss lpnfet w=0.88u l=0.12u m=1 
 x8 hnet6 b vss vss lpnfet w=0.88u l=0.12u m=1 
 x9 y a hnet6 vss lpnfet w=0.88u l=0.12u m=1 
 .ends nand2x8ts 

 **** 
 *.subckt nand2xlts y a b 
 .subckt nand2xlts y a b vss vdd
 x0 hnet11 b vss vss lpnfet w=0.4u l=0.12u m=1 
 x1 y a hnet11 vss lpnfet w=0.4u l=0.12u m=1 
 x2 vdd b y vdd lppfet w=0.42u l=0.12u m=1 
 x3 vdd a y vdd lppfet w=0.42u l=0.12u m=1 
 .ends nand2xlts 

 **** 
 *.subckt nand3bx1ts y an b c 
 .subckt nand3bx1ts y an b c vss vdd
 x0 vdd an nmin1 vdd lppfet w=0.3u l=0.12u m=1 
 x1 nmin1 an vss vss lpnfet w=0.22u l=0.12u m=1 
 x2 hnet17 c vss vss lpnfet w=0.72u l=0.12u m=1 
 x3 hnet12 b hnet17 vss lpnfet w=0.72u l=0.12u m=1 
 x4 y nmin1 hnet12 vss lpnfet w=0.72u l=0.12u m=1 
 x5 vdd c y vdd lppfet w=0.64u l=0.12u m=1 
 x6 vdd b y vdd lppfet w=0.64u l=0.12u m=1 
 x7 vdd nmin1 y vdd lppfet w=0.64u l=0.12u m=1 
 .ends nand3bx1ts 

 **** 
 *.subckt nand3bx2ts y an b c 
 .subckt nand3bx2ts y an b c vss vdd
 x0 vdd an nmin1 vdd lppfet w=0.64u l=0.12u m=1 
 x1 nmin1 an vss vss lpnfet w=0.46u l=0.12u m=1 
 x10 vdd nmin1 y vdd lppfet w=1.14u l=0.12u m=1 
 x2 hnet18 c vss vss lpnfet w=0.64u l=0.12u m=1 
 x3 hnet12 b hnet18 vss lpnfet w=0.64u l=0.12u m=1 
 x4 y nmin1 hnet12 vss lpnfet w=0.64u l=0.12u m=1 
 x5 hnet19 c vss vss lpnfet w=0.64u l=0.12u m=1 
 x6 hnet14 b hnet19 vss lpnfet w=0.64u l=0.12u m=1 
 x7 y nmin1 hnet14 vss lpnfet w=0.64u l=0.12u m=1 
 x8 vdd c y vdd lppfet w=1.14u l=0.12u m=1 
 x9 vdd b y vdd lppfet w=1.14u l=0.12u m=1 
 .ends nand3bx2ts 

 **** 
 *.subckt nand3bx4ts y an b c 
 .subckt nand3bx4ts y an b c vss vdd
 x0 vdd an nmin1 vdd lppfet w=1.2u l=0.12u m=1 
 x1 nmin1 an vss vss lpnfet w=0.86u l=0.12u m=1 
 x10 y nmin1 hnet13 vss lpnfet w=0.88u l=0.12u m=1 
 x11 vdd c y vdd lppfet w=2.28u l=0.12u m=1 
 x12 vdd b y vdd lppfet w=2.28u l=0.12u m=1 
 x13 vdd nmin1 y vdd lppfet w=2.28u l=0.12u m=1 
 x2 hnet20 c vss vss lpnfet w=0.88u l=0.12u m=1 
 x3 hnet12 b hnet20 vss lpnfet w=0.88u l=0.12u m=1 
 x4 y nmin1 hnet12 vss lpnfet w=0.88u l=0.12u m=1 
 x5 hnet21 c vss vss lpnfet w=0.88u l=0.12u m=1 
 x6 hnet16 b hnet21 vss lpnfet w=0.88u l=0.12u m=1 
 x7 y nmin1 hnet16 vss lpnfet w=0.88u l=0.12u m=1 
 x8 hnet15 c vss vss lpnfet w=0.88u l=0.12u m=1 
 x9 hnet13 b hnet15 vss lpnfet w=0.88u l=0.12u m=1 
 .ends nand3bx4ts 

 **** 
 *.subckt nand3bxlts y an b c 
 .subckt nand3bxlts y an b c vss vdd
 x0 vdd an nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x1 nmin1 an vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet17 c vss vss lpnfet w=0.48u l=0.12u m=1 
 x3 hnet12 b hnet17 vss lpnfet w=0.48u l=0.12u m=1 
 x4 y nmin1 hnet12 vss lpnfet w=0.48u l=0.12u m=1 
 x5 vdd c y vdd lppfet w=0.42u l=0.12u m=1 
 x6 vdd b y vdd lppfet w=0.42u l=0.12u m=1 
 x7 vdd nmin1 y vdd lppfet w=0.42u l=0.12u m=1 
 .ends nand3bxlts 

 **** 
 *.subckt nand3x1ts y a b c 
 .subckt nand3x1ts y a b c vss vdd
 x0 hnet14 c vss vss lpnfet w=0.72u l=0.12u m=1 
 x1 hnet7 b hnet14 vss lpnfet w=0.72u l=0.12u m=1 
 x2 y a hnet7 vss lpnfet w=0.72u l=0.12u m=1 
 x3 vdd c y vdd lppfet w=0.64u l=0.12u m=1 
 x4 vdd b y vdd lppfet w=0.64u l=0.12u m=1 
 x5 vdd a y vdd lppfet w=0.64u l=0.12u m=1 
 .ends nand3x1ts 

 **** 
 *.subckt nand3x2ts y a b c 
 .subckt nand3x2ts y a b c vss vdd
 x0 hnet15 c vss vss lpnfet w=0.66u l=0.12u m=1 
 x1 hnet7 b hnet15 vss lpnfet w=0.66u l=0.12u m=1 
 x2 y a hnet7 vss lpnfet w=0.66u l=0.12u m=1 
 x3 hnet16 c vss vss lpnfet w=0.66u l=0.12u m=1 
 x4 hnet10 b hnet16 vss lpnfet w=0.66u l=0.12u m=1 
 x5 y a hnet10 vss lpnfet w=0.66u l=0.12u m=1 
 x6 vdd c y vdd lppfet w=1.26u l=0.12u m=1 
 x7 vdd b y vdd lppfet w=1.26u l=0.12u m=1 
 x8 vdd a y vdd lppfet w=1.26u l=0.12u m=1 
 .ends nand3x2ts 

 **** 
 *.subckt nand3x4ts y a b c 
 .subckt nand3x4ts y a b c vss vdd
 x0 hnet16 c vss vss lpnfet w=0.88u l=0.12u m=1 
 x1 hnet7 b hnet16 vss lpnfet w=0.88u l=0.12u m=1 
 x10 vdd b y vdd lppfet w=2.42u l=0.12u m=1 
 x11 vdd a y vdd lppfet w=2.42u l=0.12u m=1 
 x2 y a hnet7 vss lpnfet w=0.88u l=0.12u m=1 
 x3 hnet18 c vss vss lpnfet w=0.88u l=0.12u m=1 
 x4 hnet12 b hnet18 vss lpnfet w=0.88u l=0.12u m=1 
 x5 y a hnet12 vss lpnfet w=0.88u l=0.12u m=1 
 x6 hnet11 c vss vss lpnfet w=0.88u l=0.12u m=1 
 x7 hnet8 b hnet11 vss lpnfet w=0.88u l=0.12u m=1 
 x8 y a hnet8 vss lpnfet w=0.88u l=0.12u m=1 
 x9 vdd c y vdd lppfet w=2.42u l=0.12u m=1 
 .ends nand3x4ts 

 **** 
 *.subckt nand3x6ts y a b c 
 .subckt nand3x6ts y a b c vss vdd
 x0 hnet7 c vss vss lpnfet w=0.88u l=0.12u m=1 
 x1 hnet8 b hnet7 vss lpnfet w=0.88u l=0.12u m=1 
 x10 hnet9 b hnet11 vss lpnfet w=0.88u l=0.12u m=1 
 x11 y a hnet9 vss lpnfet w=0.88u l=0.12u m=1 
 x12 vdd c y vdd lppfet w=3.84u l=0.12u m=1 
 x13 vdd b y vdd lppfet w=3.84u l=0.12u m=1 
 x14 vdd a y vdd lppfet w=3.84u l=0.12u m=1 
 x2 y a hnet8 vss lpnfet w=0.88u l=0.12u m=1 
 x3 hnet19 c vss vss lpnfet w=0.88u l=0.12u m=1 
 x4 hnet20 b hnet19 vss lpnfet w=0.88u l=0.12u m=1 
 x5 y a hnet20 vss lpnfet w=0.88u l=0.12u m=1 
 x6 hnet14 c vss vss lpnfet w=0.88u l=0.12u m=1 
 x7 hnet10 b hnet14 vss lpnfet w=0.88u l=0.12u m=1 
 x8 y a hnet10 vss lpnfet w=0.88u l=0.12u m=1 
 x9 hnet11 c vss vss lpnfet w=0.88u l=0.12u m=1 
 .ends nand3x6ts 

 **** 
 *.subckt nand3x8ts y a b c 
 .subckt nand3x8ts y a b c vss vdd
 x0 hnet21 c vss vss lpnfet w=0.86u l=0.12u m=1 
 x1 hnet8 b hnet21 vss lpnfet w=0.86u l=0.12u m=1 
 x10 hnet7 b hnet10 vss lpnfet w=0.86u l=0.12u m=1 
 x11 y a hnet7 vss lpnfet w=0.86u l=0.12u m=1 
 x12 hnet23 c vss vss lpnfet w=0.86u l=0.12u m=1 
 x13 hnet22 b hnet23 vss lpnfet w=0.86u l=0.12u m=1 
 x14 y a hnet22 vss lpnfet w=0.86u l=0.12u m=1 
 x15 hnet13 c vss vss lpnfet w=0.86u l=0.12u m=1 
 x16 hnet11 b hnet13 vss lpnfet w=0.86u l=0.12u m=1 
 x17 y a hnet11 vss lpnfet w=0.86u l=0.12u m=1 
 x18 vdd c y vdd lppfet w=4.84u l=0.12u m=1 
 x19 vdd b y vdd lppfet w=4.84u l=0.12u m=1 
 x2 y a hnet8 vss lpnfet w=0.86u l=0.12u m=1 
 x20 vdd a y vdd lppfet w=4.84u l=0.12u m=1 
 x3 hnet24 c vss vss lpnfet w=0.86u l=0.12u m=1 
 x4 hnet16 b hnet24 vss lpnfet w=0.86u l=0.12u m=1 
 x5 y a hnet16 vss lpnfet w=0.86u l=0.12u m=1 
 x6 hnet15 c vss vss lpnfet w=0.86u l=0.12u m=1 
 x7 hnet9 b hnet15 vss lpnfet w=0.86u l=0.12u m=1 
 x8 y a hnet9 vss lpnfet w=0.86u l=0.12u m=1 
 x9 hnet10 c vss vss lpnfet w=0.86u l=0.12u m=1 
 .ends nand3x8ts 

 **** 
 *.subckt nand3xlts y a b c 
 .subckt nand3xlts y a b c vss vdd
 x0 hnet14 c vss vss lpnfet w=0.48u l=0.12u m=1 
 x1 hnet7 b hnet14 vss lpnfet w=0.48u l=0.12u m=1 
 x2 y a hnet7 vss lpnfet w=0.48u l=0.12u m=1 
 x3 vdd c y vdd lppfet w=0.42u l=0.12u m=1 
 x4 vdd b y vdd lppfet w=0.42u l=0.12u m=1 
 x5 vdd a y vdd lppfet w=0.42u l=0.12u m=1 
 .ends nand3xlts 

 **** 
 *.subckt nand4bbx1ts y an bn c d 
 .subckt nand4bbx1ts y an bn c d vss vdd
 x0 vdd bn nmin2 vdd lppfet w=0.34u l=0.12u m=1 
 x1 nmin2 bn vss vss lpnfet w=0.24u l=0.12u m=1 
 x10 vdd nmin2 y vdd lppfet w=0.64u l=0.12u m=1 
 x11 vdd nmin1 y vdd lppfet w=0.64u l=0.12u m=1 
 x2 vdd an nmin1 vdd lppfet w=0.34u l=0.12u m=1 
 x3 nmin1 an vss vss lpnfet w=0.24u l=0.12u m=1 
 x4 hnet19 d vss vss lpnfet w=0.78u l=0.12u m=1 
 x5 hnet18 c hnet19 vss lpnfet w=0.78u l=0.12u m=1 
 x6 hnet20 nmin2 hnet18 vss lpnfet w=0.78u l=0.12u m=1 
 x7 y nmin1 hnet20 vss lpnfet w=0.78u l=0.12u m=1 
 x8 vdd d y vdd lppfet w=0.64u l=0.12u m=1 
 x9 vdd c y vdd lppfet w=0.64u l=0.12u m=1 
 .ends nand4bbx1ts 

 **** 
 *.subckt nand4bbx2ts y an bn c d 
 .subckt nand4bbx2ts y an bn c d vss vdd
 x0 vdd bn nmin2 vdd lppfet w=0.66u l=0.12u m=1 
 x1 nmin2 bn vss vss lpnfet w=0.48u l=0.12u m=1 
 x10 hnet22 nmin2 hnet27 vss lpnfet w=0.8u l=0.12u m=1 
 x11 y nmin1 hnet22 vss lpnfet w=0.8u l=0.12u m=1 
 x12 vdd d y vdd lppfet w=1.24u l=0.12u m=1 
 x13 vdd c y vdd lppfet w=1.24u l=0.12u m=1 
 x14 vdd nmin2 y vdd lppfet w=1.24u l=0.12u m=1 
 x15 vdd nmin1 y vdd lppfet w=1.24u l=0.12u m=1 
 x2 vdd an nmin1 vdd lppfet w=0.66u l=0.12u m=1 
 x3 nmin1 an vss vss lpnfet w=0.48u l=0.12u m=1 
 x4 hnet18 d vss vss lpnfet w=0.8u l=0.12u m=1 
 x5 hnet19 c hnet18 vss lpnfet w=0.8u l=0.12u m=1 
 x6 hnet20 nmin2 hnet19 vss lpnfet w=0.8u l=0.12u m=1 
 x7 y nmin1 hnet20 vss lpnfet w=0.8u l=0.12u m=1 
 x8 hnet23 d vss vss lpnfet w=0.8u l=0.12u m=1 
 x9 hnet27 c hnet23 vss lpnfet w=0.8u l=0.12u m=1 
 .ends nand4bbx2ts 

 **** 
 *.subckt nand4bbx4ts y an bn c d 
 .subckt nand4bbx4ts y an bn c d vss vdd
 x0 vdd bn nmin2 vdd lppfet w=1.3u l=0.12u m=1 
 x1 nmin2 bn vss vss lpnfet w=0.92u l=0.12u m=1 
 x10 hnet26 nmin2 hnet30 vss lpnfet w=0.76u l=0.12u m=1 
 x11 y nmin1 hnet26 vss lpnfet w=0.76u l=0.12u m=1 
 x12 hnet24 d vss vss lpnfet w=0.76u l=0.12u m=1 
 x13 hnet21 c hnet24 vss lpnfet w=0.76u l=0.12u m=1 
 x14 hnet18 nmin2 hnet21 vss lpnfet w=0.76u l=0.12u m=1 
 x15 y nmin1 hnet18 vss lpnfet w=0.76u l=0.12u m=1 
 x16 hnet33 d vss vss lpnfet w=0.76u l=0.12u m=1 
 x17 hnet27 c hnet33 vss lpnfet w=0.76u l=0.12u m=1 
 x18 hnet23 nmin2 hnet27 vss lpnfet w=0.76u l=0.12u m=1 
 x19 y nmin1 hnet23 vss lpnfet w=0.76u l=0.12u m=1 
 x2 vdd an nmin1 vdd lppfet w=1.3u l=0.12u m=1 
 x20 vdd d y vdd lppfet w=2.54u l=0.12u m=1 
 x21 vdd c y vdd lppfet w=2.54u l=0.12u m=1 
 x22 vdd nmin2 y vdd lppfet w=2.54u l=0.12u m=1 
 x23 vdd nmin1 y vdd lppfet w=2.54u l=0.12u m=1 
 x3 nmin1 an vss vss lpnfet w=0.92u l=0.12u m=1 
 x4 hnet20 d vss vss lpnfet w=0.76u l=0.12u m=1 
 x5 hnet19 c hnet20 vss lpnfet w=0.76u l=0.12u m=1 
 x6 hnet22 nmin2 hnet19 vss lpnfet w=0.76u l=0.12u m=1 
 x7 y nmin1 hnet22 vss lpnfet w=0.76u l=0.12u m=1 
 x8 hnet28 d vss vss lpnfet w=0.76u l=0.12u m=1 
 x9 hnet30 c hnet28 vss lpnfet w=0.76u l=0.12u m=1 
 .ends nand4bbx4ts 

 **** 
 *.subckt nand4bbxlts y an bn c d 
 .subckt nand4bbxlts y an bn c d vss vdd
 x0 vdd bn nmin2 vdd lppfet w=0.28u l=0.12u m=1 
 x1 nmin2 bn vss vss lpnfet w=0.2u l=0.12u m=1 
 x10 vdd nmin2 y vdd lppfet w=0.42u l=0.12u m=1 
 x11 vdd nmin1 y vdd lppfet w=0.42u l=0.12u m=1 
 x2 vdd an nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x3 nmin1 an vss vss lpnfet w=0.2u l=0.12u m=1 
 x4 hnet19 d vss vss lpnfet w=0.52u l=0.12u m=1 
 x5 hnet18 c hnet19 vss lpnfet w=0.52u l=0.12u m=1 
 x6 hnet20 nmin2 hnet18 vss lpnfet w=0.52u l=0.12u m=1 
 x7 y nmin1 hnet20 vss lpnfet w=0.52u l=0.12u m=1 
 x8 vdd d y vdd lppfet w=0.42u l=0.12u m=1 
 x9 vdd c y vdd lppfet w=0.42u l=0.12u m=1 
 .ends nand4bbxlts 

 **** 
 *.subckt nand4bx1ts y an b c d 
 .subckt nand4bx1ts y an b c d vss vdd
 x0 vdd an nmin1 vdd lppfet w=0.34u l=0.12u m=1 
 x1 nmin1 an vss vss lpnfet w=0.24u l=0.12u m=1 
 x2 hnet14 d vss vss lpnfet w=0.78u l=0.12u m=1 
 x3 hnet13 c hnet14 vss lpnfet w=0.78u l=0.12u m=1 
 x4 hnet15 b hnet13 vss lpnfet w=0.78u l=0.12u m=1 
 x5 y nmin1 hnet15 vss lpnfet w=0.78u l=0.12u m=1 
 x6 vdd d y vdd lppfet w=0.64u l=0.12u m=1 
 x7 vdd c y vdd lppfet w=0.64u l=0.12u m=1 
 x8 vdd b y vdd lppfet w=0.64u l=0.12u m=1 
 x9 vdd nmin1 y vdd lppfet w=0.64u l=0.12u m=1 
 .ends nand4bx1ts 

 **** 
 *.subckt nand4bx2ts y an b c d 
 .subckt nand4bx2ts y an b c d vss vdd
 x0 vdd an nmin1 vdd lppfet w=0.66u l=0.12u m=1 
 x1 nmin1 an vss vss lpnfet w=0.48u l=0.12u m=1 
 x10 vdd d y vdd lppfet w=1.22u l=0.12u m=1 
 x11 vdd c y vdd lppfet w=1.22u l=0.12u m=1 
 x12 vdd b y vdd lppfet w=1.22u l=0.12u m=1 
 x13 vdd nmin1 y vdd lppfet w=1.22u l=0.12u m=1 
 x2 hnet13 d vss vss lpnfet w=0.8u l=0.12u m=1 
 x3 hnet14 c hnet13 vss lpnfet w=0.8u l=0.12u m=1 
 x4 hnet15 b hnet14 vss lpnfet w=0.8u l=0.12u m=1 
 x5 y nmin1 hnet15 vss lpnfet w=0.8u l=0.12u m=1 
 x6 hnet18 d vss vss lpnfet w=0.8u l=0.12u m=1 
 x7 hnet22 c hnet18 vss lpnfet w=0.8u l=0.12u m=1 
 x8 hnet17 b hnet22 vss lpnfet w=0.8u l=0.12u m=1 
 x9 y nmin1 hnet17 vss lpnfet w=0.8u l=0.12u m=1 
 .ends nand4bx2ts 

 **** 
 *.subckt nand4bx4ts y an b c d 
 .subckt nand4bx4ts y an b c d vss vdd
 x0 vdd an nmin1 vdd lppfet w=1.3u l=0.12u m=1 
 x1 nmin1 an vss vss lpnfet w=0.92u l=0.12u m=1 
 x10 hnet19 d vss vss lpnfet w=0.74u l=0.12u m=1 
 x11 hnet16 c hnet19 vss lpnfet w=0.74u l=0.12u m=1 
 x12 hnet13 b hnet16 vss lpnfet w=0.74u l=0.12u m=1 
 x13 y nmin1 hnet13 vss lpnfet w=0.74u l=0.12u m=1 
 x14 hnet28 d vss vss lpnfet w=0.74u l=0.12u m=1 
 x15 hnet22 c hnet28 vss lpnfet w=0.74u l=0.12u m=1 
 x16 hnet18 b hnet22 vss lpnfet w=0.74u l=0.12u m=1 
 x17 y nmin1 hnet18 vss lpnfet w=0.74u l=0.12u m=1 
 x18 vdd d y vdd lppfet w=2.54u l=0.12u m=1 
 x19 vdd c y vdd lppfet w=2.54u l=0.12u m=1 
 x2 hnet15 d vss vss lpnfet w=0.74u l=0.12u m=1 
 x20 vdd b y vdd lppfet w=2.54u l=0.12u m=1 
 x21 vdd nmin1 y vdd lppfet w=2.54u l=0.12u m=1 
 x3 hnet14 c hnet15 vss lpnfet w=0.74u l=0.12u m=1 
 x4 hnet17 b hnet14 vss lpnfet w=0.74u l=0.12u m=1 
 x5 y nmin1 hnet17 vss lpnfet w=0.74u l=0.12u m=1 
 x6 hnet23 d vss vss lpnfet w=0.74u l=0.12u m=1 
 x7 hnet25 c hnet23 vss lpnfet w=0.74u l=0.12u m=1 
 x8 hnet21 b hnet25 vss lpnfet w=0.74u l=0.12u m=1 
 x9 y nmin1 hnet21 vss lpnfet w=0.74u l=0.12u m=1 
 .ends nand4bx4ts 

 **** 
 *.subckt nand4bxlts y an b c d 
 .subckt nand4bxlts y an b c d vss vdd
 x0 vdd an nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x1 nmin1 an vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet14 d vss vss lpnfet w=0.52u l=0.12u m=1 
 x3 hnet13 c hnet14 vss lpnfet w=0.52u l=0.12u m=1 
 x4 hnet15 b hnet13 vss lpnfet w=0.52u l=0.12u m=1 
 x5 y nmin1 hnet15 vss lpnfet w=0.52u l=0.12u m=1 
 x6 vdd d y vdd lppfet w=0.42u l=0.12u m=1 
 x7 vdd c y vdd lppfet w=0.42u l=0.12u m=1 
 x8 vdd b y vdd lppfet w=0.42u l=0.12u m=1 
 x9 vdd nmin1 y vdd lppfet w=0.42u l=0.12u m=1 
 .ends nand4bxlts 

 **** 
 *.subckt nand4x1ts y a b c d 
 .subckt nand4x1ts y a b c d vss vdd
 x0 hnet9 d vss vss lpnfet w=0.78u l=0.12u m=1 
 x1 hnet8 c hnet9 vss lpnfet w=0.78u l=0.12u m=1 
 x2 hnet10 b hnet8 vss lpnfet w=0.78u l=0.12u m=1 
 x3 y a hnet10 vss lpnfet w=0.78u l=0.12u m=1 
 x4 vdd d y vdd lppfet w=0.64u l=0.12u m=1 
 x5 vdd c y vdd lppfet w=0.64u l=0.12u m=1 
 x6 vdd b y vdd lppfet w=0.64u l=0.12u m=1 
 x7 vdd a y vdd lppfet w=0.64u l=0.12u m=1 
 .ends nand4x1ts 

 **** 
 *.subckt nand4x2ts y a b c d 
 .subckt nand4x2ts y a b c d vss vdd
 x0 hnet8 d vss vss lpnfet w=0.78u l=0.12u m=1 
 x1 hnet9 c hnet8 vss lpnfet w=0.78u l=0.12u m=1 
 x10 vdd b y vdd lppfet w=1.18u l=0.12u m=1 
 x11 vdd a y vdd lppfet w=1.18u l=0.12u m=1 
 x2 hnet10 b hnet9 vss lpnfet w=0.78u l=0.12u m=1 
 x3 y a hnet10 vss lpnfet w=0.78u l=0.12u m=1 
 x4 hnet14 d vss vss lpnfet w=0.78u l=0.12u m=1 
 x5 hnet19 c hnet14 vss lpnfet w=0.78u l=0.12u m=1 
 x6 hnet12 b hnet19 vss lpnfet w=0.78u l=0.12u m=1 
 x7 y a hnet12 vss lpnfet w=0.78u l=0.12u m=1 
 x8 vdd d y vdd lppfet w=1.18u l=0.12u m=1 
 x9 vdd c y vdd lppfet w=1.18u l=0.12u m=1 
 .ends nand4x2ts 

 **** 
 *.subckt nand4x4ts y a b c d 
 .subckt nand4x4ts y a b c d vss vdd
 x0 hnet10 d vss vss lpnfet w=0.78u l=0.12u m=1 
 x1 hnet9 c hnet10 vss lpnfet w=0.78u l=0.12u m=1 
 x10 hnet8 b hnet11 vss lpnfet w=0.78u l=0.12u m=1 
 x11 y a hnet8 vss lpnfet w=0.78u l=0.12u m=1 
 x12 hnet25 d vss vss lpnfet w=0.78u l=0.12u m=1 
 x13 hnet17 c hnet25 vss lpnfet w=0.78u l=0.12u m=1 
 x14 hnet13 b hnet17 vss lpnfet w=0.78u l=0.12u m=1 
 x15 y a hnet13 vss lpnfet w=0.78u l=0.12u m=1 
 x16 vdd d y vdd lppfet w=2.44u l=0.12u m=1 
 x17 vdd c y vdd lppfet w=2.44u l=0.12u m=1 
 x18 vdd b y vdd lppfet w=2.44u l=0.12u m=1 
 x19 vdd a y vdd lppfet w=2.44u l=0.12u m=1 
 x2 hnet12 b hnet9 vss lpnfet w=0.78u l=0.12u m=1 
 x3 y a hnet12 vss lpnfet w=0.78u l=0.12u m=1 
 x4 hnet19 d vss vss lpnfet w=0.78u l=0.12u m=1 
 x5 hnet21 c hnet19 vss lpnfet w=0.78u l=0.12u m=1 
 x6 hnet16 b hnet21 vss lpnfet w=0.78u l=0.12u m=1 
 x7 y a hnet16 vss lpnfet w=0.78u l=0.12u m=1 
 x8 hnet14 d vss vss lpnfet w=0.78u l=0.12u m=1 
 x9 hnet11 c hnet14 vss lpnfet w=0.78u l=0.12u m=1 
 .ends nand4x4ts 

 **** 
 *.subckt nand4x6ts y a b c d 
 .subckt nand4x6ts y a b c d vss vdd
 x0 hnet28 d vss vss lpnfet w=0.82u l=0.12u m=1 
 x1 hnet8 c hnet28 vss lpnfet w=0.82u l=0.12u m=1 
 x10 hnet24 b hnet12 vss lpnfet w=0.82u l=0.12u m=1 
 x11 y a hnet24 vss lpnfet w=0.82u l=0.12u m=1 
 x12 hnet25 d vss vss lpnfet w=0.82u l=0.12u m=1 
 x13 hnet16 c hnet25 vss lpnfet w=0.82u l=0.12u m=1 
 x14 hnet13 b hnet16 vss lpnfet w=0.82u l=0.12u m=1 
 x15 y a hnet13 vss lpnfet w=0.82u l=0.12u m=1 
 x16 hnet9 d vss vss lpnfet w=0.82u l=0.12u m=1 
 x17 hnet29 c hnet9 vss lpnfet w=0.82u l=0.12u m=1 
 x18 hnet26 b hnet29 vss lpnfet w=0.82u l=0.12u m=1 
 x19 y a hnet26 vss lpnfet w=0.82u l=0.12u m=1 
 x2 hnet11 b hnet8 vss lpnfet w=0.82u l=0.12u m=1 
 x20 vdd d y vdd lppfet w=3.68u l=0.12u m=1 
 x21 vdd c y vdd lppfet w=3.68u l=0.12u m=1 
 x22 vdd b y vdd lppfet w=3.68u l=0.12u m=1 
 x23 vdd a y vdd lppfet w=3.68u l=0.12u m=1 
 x3 y a hnet11 vss lpnfet w=0.82u l=0.12u m=1 
 x4 hnet18 d vss vss lpnfet w=0.82u l=0.12u m=1 
 x5 hnet20 c hnet18 vss lpnfet w=0.82u l=0.12u m=1 
 x6 hnet15 b hnet20 vss lpnfet w=0.82u l=0.12u m=1 
 x7 y a hnet15 vss lpnfet w=0.82u l=0.12u m=1 
 x8 hnet10 d vss vss lpnfet w=0.82u l=0.12u m=1 
 x9 hnet12 c hnet10 vss lpnfet w=0.82u l=0.12u m=1 
 .ends nand4x6ts 

 **** 
 *.subckt nand4x8ts y a b c d 
 .subckt nand4x8ts y a b c d vss vdd
 x0 hnet11 d vss vss lpnfet w=0.86u l=0.12u m=1 
 x1 hnet13 c hnet11 vss lpnfet w=0.86u l=0.12u m=1 
 x10 hnet26 b hnet25 vss lpnfet w=0.86u l=0.12u m=1 
 x11 y a hnet26 vss lpnfet w=0.86u l=0.12u m=1 
 x12 hnet15 d vss vss lpnfet w=0.86u l=0.12u m=1 
 x13 hnet14 c hnet15 vss lpnfet w=0.86u l=0.12u m=1 
 x14 hnet31 b hnet14 vss lpnfet w=0.86u l=0.12u m=1 
 x15 y a hnet31 vss lpnfet w=0.86u l=0.12u m=1 
 x16 hnet30 d vss vss lpnfet w=0.86u l=0.12u m=1 
 x17 hnet20 c hnet30 vss lpnfet w=0.86u l=0.12u m=1 
 x18 hnet12 b hnet20 vss lpnfet w=0.86u l=0.12u m=1 
 x19 y a hnet12 vss lpnfet w=0.86u l=0.12u m=1 
 x2 hnet23 b hnet13 vss lpnfet w=0.86u l=0.12u m=1 
 x20 hnet9 d vss vss lpnfet w=0.86u l=0.12u m=1 
 x21 hnet35 c hnet9 vss lpnfet w=0.86u l=0.12u m=1 
 x22 hnet32 b hnet35 vss lpnfet w=0.86u l=0.12u m=1 
 x23 y a hnet32 vss lpnfet w=0.86u l=0.12u m=1 
 x24 hnet17 d vss vss lpnfet w=0.86u l=0.12u m=1 
 x25 hnet16 c hnet17 vss lpnfet w=0.86u l=0.12u m=1 
 x26 hnet19 b hnet16 vss lpnfet w=0.86u l=0.12u m=1 
 x27 y a hnet19 vss lpnfet w=0.86u l=0.12u m=1 
 x28 vdd d y vdd lppfet w=4.72u l=0.12u m=1 
 x29 vdd c y vdd lppfet w=4.72u l=0.12u m=1 
 x3 y a hnet23 vss lpnfet w=0.86u l=0.12u m=1 
 x30 vdd b y vdd lppfet w=4.72u l=0.12u m=1 
 x31 vdd a y vdd lppfet w=4.72u l=0.12u m=1 
 x4 hnet34 d vss vss lpnfet w=0.86u l=0.12u m=1 
 x5 hnet8 c hnet34 vss lpnfet w=0.86u l=0.12u m=1 
 x6 hnet10 b hnet8 vss lpnfet w=0.86u l=0.12u m=1 
 x7 y a hnet10 vss lpnfet w=0.86u l=0.12u m=1 
 x8 hnet22 d vss vss lpnfet w=0.86u l=0.12u m=1 
 x9 hnet25 c hnet22 vss lpnfet w=0.86u l=0.12u m=1 
 .ends nand4x8ts 

 **** 
 *.subckt nand4xlts y a b c d 
 .subckt nand4xlts y a b c d vss vdd
 x0 hnet9 d vss vss lpnfet w=0.52u l=0.12u m=1 
 x1 hnet8 c hnet9 vss lpnfet w=0.52u l=0.12u m=1 
 x2 hnet10 b hnet8 vss lpnfet w=0.52u l=0.12u m=1 
 x3 y a hnet10 vss lpnfet w=0.52u l=0.12u m=1 
 x4 vdd d y vdd lppfet w=0.42u l=0.12u m=1 
 x5 vdd c y vdd lppfet w=0.42u l=0.12u m=1 
 x6 vdd b y vdd lppfet w=0.42u l=0.12u m=1 
 x7 vdd a y vdd lppfet w=0.42u l=0.12u m=1 
 .ends nand4xlts 

 **** 
 *.subckt nor2bx1ts y an b 
 .subckt nor2bx1ts y an b vss vdd
 x0 vdd an nmin1 vdd lppfet w=0.3u l=0.12u m=1 
 x1 nmin1 an vss vss lpnfet w=0.22u l=0.12u m=1 
 x2 y b vss vss lpnfet w=0.46u l=0.12u m=1 
 x3 y nmin1 vss vss lpnfet w=0.46u l=0.12u m=1 
 x4 vdd b hnet12 vdd lppfet w=0.84u l=0.12u m=1 
 x5 hnet12 nmin1 y vdd lppfet w=0.84u l=0.12u m=1 
 .ends nor2bx1ts 

 **** 
 *.subckt nor2bx2ts y an b 
 .subckt nor2bx2ts y an b vss vdd
 x0 vdd an nmin1 vdd lppfet w=0.62u l=0.12u m=1 
 x1 nmin1 an vss vss lpnfet w=0.44u l=0.12u m=1 
 x2 y b vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 y nmin1 vss vss lpnfet w=0.92u l=0.12u m=1 
 x4 vdd b hnet13 vdd lppfet w=0.84u l=0.12u m=1 
 x5 hnet13 nmin1 y vdd lppfet w=0.84u l=0.12u m=1 
 x6 vdd b hnet11 vdd lppfet w=0.84u l=0.12u m=1 
 x7 hnet11 nmin1 y vdd lppfet w=0.84u l=0.12u m=1 
 .ends nor2bx2ts 

 **** 
 *.subckt nor2bx4ts y an b 
 .subckt nor2bx4ts y an b vss vdd
 x0 vdd an nmin1 vdd lppfet w=1.2u l=0.12u m=1 
 x1 nmin1 an vss vss lpnfet w=0.86u l=0.12u m=1 
 x2 y b vss vss lpnfet w=1.84u l=0.12u m=1 
 x3 y nmin1 vss vss lpnfet w=1.84u l=0.12u m=1 
 x4 vdd b hnet13 vdd lppfet w=1.04u l=0.12u m=1 
 x5 hnet13 nmin1 y vdd lppfet w=1.04u l=0.12u m=1 
 x6 vdd b hnet11 vdd lppfet w=1.04u l=0.12u m=1 
 x7 hnet11 nmin1 y vdd lppfet w=1.04u l=0.12u m=1 
 x8 vdd b hnet14 vdd lppfet w=1.04u l=0.12u m=1 
 x9 hnet14 nmin1 y vdd lppfet w=1.04u l=0.12u m=1 
 .ends nor2bx4ts 

 **** 
 *.subckt nor2bxlts y an b 
 .subckt nor2bxlts y an b vss vdd
 x0 vdd an nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x1 nmin1 an vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 y b vss vss lpnfet w=0.24u l=0.12u m=1 
 x3 y nmin1 vss vss lpnfet w=0.24u l=0.12u m=1 
 x4 vdd b hnet12 vdd lppfet w=0.44u l=0.12u m=1 
 x5 hnet12 nmin1 y vdd lppfet w=0.44u l=0.12u m=1 
 .ends nor2bxlts 

 **** 
 *.subckt nor2x1ts y a b 
 .subckt nor2x1ts y a b vss vdd
 x0 y b vss vss lpnfet w=0.46u l=0.12u m=1 
 x1 y a vss vss lpnfet w=0.46u l=0.12u m=1 
 x2 vdd b hnet7 vdd lppfet w=0.84u l=0.12u m=1 
 x3 hnet7 a y vdd lppfet w=0.84u l=0.12u m=1 
 .ends nor2x1ts 

 **** 
 *.subckt nor2x2ts y a b 
 .subckt nor2x2ts y a b vss vdd
 x0 y b vss vss lpnfet w=0.92u l=0.12u m=1 
 x1 y a vss vss lpnfet w=0.92u l=0.12u m=1 
 x2 vdd b hnet8 vdd lppfet w=0.84u l=0.12u m=1 
 x3 hnet8 a y vdd lppfet w=0.84u l=0.12u m=1 
 x4 vdd b hnet6 vdd lppfet w=0.84u l=0.12u m=1 
 x5 hnet6 a y vdd lppfet w=0.84u l=0.12u m=1 
 .ends nor2x2ts 

 **** 
 *.subckt nor2x4ts y a b 
 .subckt nor2x4ts y a b vss vdd
 x0 vdd b net15 vdd lppfet w=1.12u l=0.12u m=1 
 x1 net15 a y vdd lppfet w=1.12u l=0.12u m=1 
 x2 vdd b net17 vdd lppfet w=1.12u l=0.12u m=1 
 x3 net17 a y vdd lppfet w=1.12u l=0.12u m=1 
 x4 vdd b net27 vdd lppfet w=1.06u l=0.12u m=1 
 x5 net27 a y vdd lppfet w=1.06u l=0.12u m=1 
 x6 y b vss vss lpnfet w=1.84u l=0.12u m=1 
 x7 y a vss vss lpnfet w=1.84u l=0.12u m=1 
 .ends nor2x4ts 

 **** 
 *.subckt nor2x6ts y a b 
 .subckt nor2x6ts y a b vss vdd
 x0 y b vss vss lpnfet w=2.76u l=0.12u m=1 
 x1 y a vss vss lpnfet w=2.76u l=0.12u m=1 
 x2 vdd b hnet9 vdd lppfet w=1.16u l=0.12u m=1 
 x3 hnet9 a y vdd lppfet w=1.16u l=0.12u m=1 
 x4 vdd b hnet6 vdd lppfet w=1.16u l=0.12u m=1 
 x5 hnet6 a y vdd lppfet w=1.16u l=0.12u m=1 
 x6 vdd b hnet11 vdd lppfet w=1.16u l=0.12u m=1 
 x7 hnet11 a y vdd lppfet w=1.16u l=0.12u m=1 
 x8 vdd b hnet8 vdd lppfet w=1.16u l=0.12u m=1 
 x9 hnet8 a y vdd lppfet w=1.16u l=0.12u m=1 
 .ends nor2x6ts 

 **** 
 *.subckt nor2x8ts y a b 
 .subckt nor2x8ts y a b vss vdd
 x0 y b vss vss lpnfet w=3.44u l=0.12u m=1 
 x1 y a vss vss lpnfet w=3.44u l=0.12u m=1 
 x10 vdd b hnet6 vdd lppfet w=1.3u l=0.12u m=1 
 x11 hnet6 a y vdd lppfet w=1.3u l=0.12u m=1 
 x2 vdd b hnet9 vdd lppfet w=1.3u l=0.12u m=1 
 x3 hnet9 a y vdd lppfet w=1.3u l=0.12u m=1 
 x4 vdd b hnet8 vdd lppfet w=1.3u l=0.12u m=1 
 x5 hnet8 a y vdd lppfet w=1.3u l=0.12u m=1 
 x6 vdd b hnet12 vdd lppfet w=1.3u l=0.12u m=1 
 x7 hnet12 a y vdd lppfet w=1.3u l=0.12u m=1 
 x8 vdd b hnet7 vdd lppfet w=1.3u l=0.12u m=1 
 x9 hnet7 a y vdd lppfet w=1.3u l=0.12u m=1 
 .ends nor2x8ts 

 **** 
 *.subckt nor2xlts y a b 
 .subckt nor2xlts y a b vss vdd
 x0 y b vss vss lpnfet w=0.24u l=0.12u m=1 
 x1 y a vss vss lpnfet w=0.24u l=0.12u m=1 
 x2 vdd b hnet7 vdd lppfet w=0.44u l=0.12u m=1 
 x3 hnet7 a y vdd lppfet w=0.44u l=0.12u m=1 
 .ends nor2xlts 

 **** 
 *.subckt nor3bx1ts y an b c 
 .subckt nor3bx1ts y an b c vss vdd
 x0 vdd an nmin1 vdd lppfet w=0.34u l=0.12u m=1 
 x1 nmin1 an vss vss lpnfet w=0.24u l=0.12u m=1 
 x2 y c vss vss lpnfet w=0.46u l=0.12u m=1 
 x3 y b vss vss lpnfet w=0.46u l=0.12u m=1 
 x4 y nmin1 vss vss lpnfet w=0.46u l=0.12u m=1 
 x5 vdd c hnet17 vdd lppfet w=1.02u l=0.12u m=1 
 x6 hnet17 b hnet16 vdd lppfet w=1.02u l=0.12u m=1 
 x7 hnet16 nmin1 y vdd lppfet w=1.02u l=0.12u m=1 
 .ends nor3bx1ts 

 **** 
 *.subckt nor3bx2ts y an b c 
 .subckt nor3bx2ts y an b c vss vdd
 x0 vdd an nmin1 vdd lppfet w=0.64u l=0.12u m=1 
 x1 nmin1 an vss vss lpnfet w=0.5u l=0.12u m=1 
 x10 hnet12 nmin1 y vdd lppfet w=1.04u l=0.12u m=1 
 x2 y c vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 y b vss vss lpnfet w=0.92u l=0.12u m=1 
 x4 y nmin1 vss vss lpnfet w=0.92u l=0.12u m=1 
 x5 vdd c hnet19 vdd lppfet w=1.04u l=0.12u m=1 
 x6 hnet19 b hnet15 vdd lppfet w=1.04u l=0.12u m=1 
 x7 hnet15 nmin1 y vdd lppfet w=1.04u l=0.12u m=1 
 x8 vdd c hnet14 vdd lppfet w=1.04u l=0.12u m=1 
 x9 hnet14 b hnet12 vdd lppfet w=1.04u l=0.12u m=1 
 .ends nor3bx2ts 

 **** 
 *.subckt nor3bx4ts y an b c 
 .subckt nor3bx4ts y an b c vss vdd
 x0 y c vss vss lpnfet w=1.84u l=0.12u m=1 
 x1 y b vss vss lpnfet w=1.84u l=0.12u m=1 
 x10 hnet9 b hnet10 vdd lppfet w=0.88u l=0.12u m=1 
 x11 hnet10 nmin1 y vdd lppfet w=0.88u l=0.12u m=1 
 x12 vdd c hnet18 vdd lppfet w=0.88u l=0.12u m=1 
 x13 hnet18 b hnet21 vdd lppfet w=0.88u l=0.12u m=1 
 x14 hnet21 nmin1 y vdd lppfet w=0.88u l=0.12u m=1 
 x15 vdd an nmin1 vdd lppfet w=1.3u l=0.12u m=1 
 x16 nmin1 an vss vss lpnfet w=0.92u l=0.12u m=1 
 x2 y nmin1 vss vss lpnfet w=1.84u l=0.12u m=1 
 x3 vdd c hnet20 vdd lppfet w=0.88u l=0.12u m=1 
 x4 hnet20 b hnet19 vdd lppfet w=0.88u l=0.12u m=1 
 x5 hnet19 nmin1 y vdd lppfet w=0.88u l=0.12u m=1 
 x6 vdd c hnet12 vdd lppfet w=0.88u l=0.12u m=1 
 x7 hnet12 b hnet8 vdd lppfet w=0.88u l=0.12u m=1 
 x8 hnet8 nmin1 y vdd lppfet w=0.88u l=0.12u m=1 
 x9 vdd c hnet9 vdd lppfet w=0.88u l=0.12u m=1 
 .ends nor3bx4ts 

 **** 
 *.subckt nor3bxlts y an b c 
 .subckt nor3bxlts y an b c vss vdd
 x0 vdd an nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x1 nmin1 an vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 y c vss vss lpnfet w=0.24u l=0.12u m=1 
 x3 y b vss vss lpnfet w=0.24u l=0.12u m=1 
 x4 y nmin1 vss vss lpnfet w=0.24u l=0.12u m=1 
 x5 vdd c hnet17 vdd lppfet w=0.54u l=0.12u m=1 
 x6 hnet17 b hnet16 vdd lppfet w=0.54u l=0.12u m=1 
 x7 hnet16 nmin1 y vdd lppfet w=0.54u l=0.12u m=1 
 .ends nor3bxlts 

 **** 
 *.subckt nor3x1ts y a b c 
 .subckt nor3x1ts y a b c vss vdd
 x0 y c vss vss lpnfet w=0.46u l=0.12u m=1 
 x1 y b vss vss lpnfet w=0.46u l=0.12u m=1 
 x2 y a vss vss lpnfet w=0.46u l=0.12u m=1 
 x3 vdd c hnet14 vdd lppfet w=1.02u l=0.12u m=1 
 x4 hnet14 b hnet13 vdd lppfet w=1.02u l=0.12u m=1 
 x5 hnet13 a y vdd lppfet w=1.02u l=0.12u m=1 
 .ends nor3x1ts 

 **** 
 *.subckt nor3x2ts y a b c 
 .subckt nor3x2ts y a b c vss vdd
 x0 y c vss vss lpnfet w=0.84u l=0.12u m=1 
 x1 y b vss vss lpnfet w=0.84u l=0.12u m=1 
 x2 y a vss vss lpnfet w=0.84u l=0.12u m=1 
 x3 vdd c hnet16 vdd lppfet w=0.94u l=0.12u m=1 
 x4 hnet16 b hnet11 vdd lppfet w=0.94u l=0.12u m=1 
 x5 hnet11 a y vdd lppfet w=0.94u l=0.12u m=1 
 x6 vdd c hnet9 vdd lppfet w=0.94u l=0.12u m=1 
 x7 hnet9 b hnet7 vdd lppfet w=0.94u l=0.12u m=1 
 x8 hnet7 a y vdd lppfet w=0.94u l=0.12u m=1 
 .ends nor3x2ts 

 **** 
 *.subckt nor3x4ts y a b c 
 .subckt nor3x4ts y a b c vss vdd
 x0 y c vss vss lpnfet w=1.84u l=0.12u m=1 
 x1 y b vss vss lpnfet w=1.84u l=0.12u m=1 
 x10 hnet8 b hnet9 vdd lppfet w=0.98u l=0.12u m=1 
 x11 hnet9 a y vdd lppfet w=0.98u l=0.12u m=1 
 x12 vdd c hnet17 vdd lppfet w=0.98u l=0.12u m=1 
 x13 hnet17 b hnet20 vdd lppfet w=0.98u l=0.12u m=1 
 x14 hnet20 a y vdd lppfet w=0.98u l=0.12u m=1 
 x2 y a vss vss lpnfet w=1.84u l=0.12u m=1 
 x3 vdd c hnet19 vdd lppfet w=0.98u l=0.12u m=1 
 x4 hnet19 b hnet18 vdd lppfet w=0.98u l=0.12u m=1 
 x5 hnet18 a y vdd lppfet w=0.98u l=0.12u m=1 
 x6 vdd c hnet11 vdd lppfet w=0.98u l=0.12u m=1 
 x7 hnet11 b hnet7 vdd lppfet w=0.98u l=0.12u m=1 
 x8 hnet7 a y vdd lppfet w=0.98u l=0.12u m=1 
 x9 vdd c hnet8 vdd lppfet w=0.98u l=0.12u m=1 
 .ends nor3x4ts 

 **** 
 *.subckt nor3x6ts y a b c 
 .subckt nor3x6ts y a b c vss vdd
 x0 y c vss vss lpnfet w=2.76u l=0.12u m=1 
 x1 y b vss vss lpnfet w=2.76u l=0.12u m=1 
 x10 hnet7 b hnet18 vdd lppfet w=1.24u l=0.12u m=1 
 x11 hnet18 a y vdd lppfet w=1.24u l=0.12u m=1 
 x12 vdd c hnet19 vdd lppfet w=1.24u l=0.12u m=1 
 x13 hnet19 b hnet20 vdd lppfet w=1.24u l=0.12u m=1 
 x14 hnet20 a y vdd lppfet w=1.24u l=0.12u m=1 
 x15 vdd c hnet9 vdd lppfet w=1.24u l=0.12u m=1 
 x16 hnet9 b hnet10 vdd lppfet w=1.24u l=0.12u m=1 
 x17 hnet10 a y vdd lppfet w=1.24u l=0.12u m=1 
 x2 y a vss vss lpnfet w=2.76u l=0.12u m=1 
 x3 vdd c hnet21 vdd lppfet w=1.24u l=0.12u m=1 
 x4 hnet21 b hnet22 vdd lppfet w=1.24u l=0.12u m=1 
 x5 hnet22 a y vdd lppfet w=1.24u l=0.12u m=1 
 x6 vdd c hnet11 vdd lppfet w=1.24u l=0.12u m=1 
 x7 hnet11 b hnet13 vdd lppfet w=1.24u l=0.12u m=1 
 x8 hnet13 a y vdd lppfet w=1.24u l=0.12u m=1 
 x9 vdd c hnet7 vdd lppfet w=1.24u l=0.12u m=1 
 .ends nor3x6ts 

 **** 
 *.subckt nor3x8ts y a b c 
 .subckt nor3x8ts y a b c vss vdd
 x0 y c vss vss lpnfet w=3.68u l=0.12u m=1 
 x1 y b vss vss lpnfet w=3.68u l=0.12u m=1 
 x10 hnet7 b hnet19 vdd lppfet w=1.28u l=0.12u m=1 
 x11 hnet19 a y vdd lppfet w=1.28u l=0.12u m=1 
 x12 vdd c hnet18 vdd lppfet w=1.28u l=0.12u m=1 
 x13 hnet18 b hnet12 vdd lppfet w=1.28u l=0.12u m=1 
 x14 hnet12 a y vdd lppfet w=1.28u l=0.12u m=1 
 x15 vdd c hnet10 vdd lppfet w=1.28u l=0.12u m=1 
 x16 hnet10 b hnet8 vdd lppfet w=1.28u l=0.12u m=1 
 x17 hnet8 a y vdd lppfet w=1.28u l=0.12u m=1 
 x18 vdd c hnet22 vdd lppfet w=1.28u l=0.12u m=1 
 x19 hnet22 b hnet21 vdd lppfet w=1.28u l=0.12u m=1 
 x2 y a vss vss lpnfet w=3.68u l=0.12u m=1 
 x20 hnet21 a y vdd lppfet w=1.28u l=0.12u m=1 
 x3 vdd c hnet23 vdd lppfet w=1.28u l=0.12u m=1 
 x4 hnet23 b hnet24 vdd lppfet w=1.28u l=0.12u m=1 
 x5 hnet24 a y vdd lppfet w=1.28u l=0.12u m=1 
 x6 vdd c hnet20 vdd lppfet w=1.28u l=0.12u m=1 
 x7 hnet20 b hnet9 vdd lppfet w=1.28u l=0.12u m=1 
 x8 hnet9 a y vdd lppfet w=1.28u l=0.12u m=1 
 x9 vdd c hnet7 vdd lppfet w=1.28u l=0.12u m=1 
 .ends nor3x8ts 

 **** 
 *.subckt nor3xlts y a b c 
 .subckt nor3xlts y a b c vss vdd
 x0 y c vss vss lpnfet w=0.24u l=0.12u m=1 
 x1 y b vss vss lpnfet w=0.24u l=0.12u m=1 
 x2 y a vss vss lpnfet w=0.24u l=0.12u m=1 
 x3 vdd c hnet14 vdd lppfet w=0.54u l=0.12u m=1 
 x4 hnet14 b hnet13 vdd lppfet w=0.54u l=0.12u m=1 
 x5 hnet13 a y vdd lppfet w=0.54u l=0.12u m=1 
 .ends nor3xlts 

 **** 
 *.subckt nor4bbx1ts y an bn c d 
 .subckt nor4bbx1ts y an bn c d vss vdd
 x0 y d vss vss lpnfet w=0.46u l=0.12u m=1 
 x1 y c vss vss lpnfet w=0.46u l=0.12u m=1 
 x10 vdd an nmin1 vdd lppfet w=0.38u l=0.12u m=1 
 x11 nmin1 an vss vss lpnfet w=0.28u l=0.12u m=1 
 x2 y nmin2 vss vss lpnfet w=0.46u l=0.12u m=1 
 x3 y nmin1 vss vss lpnfet w=0.46u l=0.12u m=1 
 x4 vdd d hnet13 vdd lppfet w=1.2u l=0.12u m=1 
 x5 hnet13 c hnet17 vdd lppfet w=1.2u l=0.12u m=1 
 x6 hnet17 nmin2 hnet11 vdd lppfet w=1.2u l=0.12u m=1 
 x7 hnet11 nmin1 y vdd lppfet w=1.2u l=0.12u m=1 
 x8 vdd bn nmin2 vdd lppfet w=0.38u l=0.12u m=1 
 x9 nmin2 bn vss vss lpnfet w=0.28u l=0.12u m=1 
 .ends nor4bbx1ts 

 **** 
 *.subckt nor4bbx2ts y an bn c d 
 .subckt nor4bbx2ts y an bn c d vss vdd
 x0 y d vss vss lpnfet w=0.88u l=0.12u m=1 
 x1 y c vss vss lpnfet w=0.88u l=0.12u m=1 
 x10 hnet10 nmin2 hnet21 vdd lppfet w=1.04u l=0.12u m=1 
 x11 hnet21 nmin1 y vdd lppfet w=1.04u l=0.12u m=1 
 x12 vdd bn nmin2 vdd lppfet w=0.78u l=0.12u m=1 
 x13 nmin2 bn vss vss lpnfet w=0.56u l=0.12u m=1 
 x14 vdd an nmin1 vdd lppfet w=0.78u l=0.12u m=1 
 x15 nmin1 an vss vss lpnfet w=0.56u l=0.12u m=1 
 x2 y nmin2 vss vss lpnfet w=0.88u l=0.12u m=1 
 x3 y nmin1 vss vss lpnfet w=0.88u l=0.12u m=1 
 x4 vdd d hnet16 vdd lppfet w=1.04u l=0.12u m=1 
 x5 hnet16 c hnet15 vdd lppfet w=1.04u l=0.12u m=1 
 x6 hnet15 nmin2 hnet13 vdd lppfet w=1.04u l=0.12u m=1 
 x7 hnet13 nmin1 y vdd lppfet w=1.04u l=0.12u m=1 
 x8 vdd d hnet11 vdd lppfet w=1.04u l=0.12u m=1 
 x9 hnet11 c hnet10 vdd lppfet w=1.04u l=0.12u m=1 
 .ends nor4bbx2ts 

 **** 
 *.subckt nor4bbx4ts y an bn c d 
 .subckt nor4bbx4ts y an bn c d vss vdd
 x0 y d vss vss lpnfet w=1.68u l=0.12u m=1 
 x1 y c vss vss lpnfet w=1.68u l=0.12u m=1 
 x10 hnet10 nmin2 hnet20 vdd lppfet w=1.02u l=0.12u m=1 
 x11 hnet20 nmin1 y vdd lppfet w=1.02u l=0.12u m=1 
 x12 vdd d hnet18 vdd lppfet w=1.02u l=0.12u m=1 
 x13 hnet18 c hnet13 vdd lppfet w=1.02u l=0.12u m=1 
 x14 hnet13 nmin2 hnet15 vdd lppfet w=1.02u l=0.12u m=1 
 x15 hnet15 nmin1 y vdd lppfet w=1.02u l=0.12u m=1 
 x16 vdd d hnet11 vdd lppfet w=1.02u l=0.12u m=1 
 x17 hnet11 c hnet26 vdd lppfet w=1.02u l=0.12u m=1 
 x18 hnet26 nmin2 hnet28 vdd lppfet w=1.02u l=0.12u m=1 
 x19 hnet28 nmin1 y vdd lppfet w=1.02u l=0.12u m=1 
 x2 y nmin2 vss vss lpnfet w=1.68u l=0.12u m=1 
 x20 vdd bn nmin2 vdd lppfet w=1.3u l=0.12u m=1 
 x21 nmin2 bn vss vss lpnfet w=0.92u l=0.12u m=1 
 x22 vdd an nmin1 vdd lppfet w=1.3u l=0.12u m=1 
 x23 nmin1 an vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 y nmin1 vss vss lpnfet w=1.68u l=0.12u m=1 
 x4 vdd d hnet17 vdd lppfet w=1.02u l=0.12u m=1 
 x5 hnet17 c hnet22 vdd lppfet w=1.02u l=0.12u m=1 
 x6 hnet22 nmin2 hnet21 vdd lppfet w=1.02u l=0.12u m=1 
 x7 hnet21 nmin1 y vdd lppfet w=1.02u l=0.12u m=1 
 x8 vdd d hnet12 vdd lppfet w=1.02u l=0.12u m=1 
 x9 hnet12 c hnet10 vdd lppfet w=1.02u l=0.12u m=1 
 .ends nor4bbx4ts 

 **** 
 *.subckt nor4bbxlts y an bn c d 
 .subckt nor4bbxlts y an bn c d vss vdd
 x0 y d vss vss lpnfet w=0.24u l=0.12u m=1 
 x1 y c vss vss lpnfet w=0.24u l=0.12u m=1 
 x10 vdd an nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x11 nmin1 an vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 y nmin2 vss vss lpnfet w=0.24u l=0.12u m=1 
 x3 y nmin1 vss vss lpnfet w=0.24u l=0.12u m=1 
 x4 vdd d hnet13 vdd lppfet w=0.62u l=0.12u m=1 
 x5 hnet13 c hnet17 vdd lppfet w=0.62u l=0.12u m=1 
 x6 hnet17 nmin2 hnet11 vdd lppfet w=0.62u l=0.12u m=1 
 x7 hnet11 nmin1 y vdd lppfet w=0.62u l=0.12u m=1 
 x8 vdd bn nmin2 vdd lppfet w=0.28u l=0.12u m=1 
 x9 nmin2 bn vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends nor4bbxlts 

 **** 
 *.subckt nor4bx1ts y an b c d 
 .subckt nor4bx1ts y an b c d vss vdd
 x0 y d vss vss lpnfet w=0.46u l=0.12u m=1 
 x1 y c vss vss lpnfet w=0.46u l=0.12u m=1 
 x2 y b vss vss lpnfet w=0.46u l=0.12u m=1 
 x3 y nmin1 vss vss lpnfet w=0.46u l=0.12u m=1 
 x4 vdd d hnet12 vdd lppfet w=1.2u l=0.12u m=1 
 x5 hnet12 c hnet16 vdd lppfet w=1.2u l=0.12u m=1 
 x6 hnet16 b hnet10 vdd lppfet w=1.2u l=0.12u m=1 
 x7 hnet10 nmin1 y vdd lppfet w=1.2u l=0.12u m=1 
 x8 vdd an nmin1 vdd lppfet w=0.38u l=0.12u m=1 
 x9 nmin1 an vss vss lpnfet w=0.28u l=0.12u m=1 
 .ends nor4bx1ts 

 **** 
 *.subckt nor4bx2ts y an b c d 
 .subckt nor4bx2ts y an b c d vss vdd
 x0 y d vss vss lpnfet w=0.92u l=0.12u m=1 
 x1 y c vss vss lpnfet w=0.92u l=0.12u m=1 
 x10 hnet9 b hnet20 vdd lppfet w=1.12u l=0.12u m=1 
 x11 hnet20 nmin1 y vdd lppfet w=1.12u l=0.12u m=1 
 x12 vdd an nmin1 vdd lppfet w=0.78u l=0.12u m=1 
 x13 nmin1 an vss vss lpnfet w=0.56u l=0.12u m=1 
 x2 y b vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 y nmin1 vss vss lpnfet w=0.92u l=0.12u m=1 
 x4 vdd d hnet15 vdd lppfet w=1.12u l=0.12u m=1 
 x5 hnet15 c hnet14 vdd lppfet w=1.12u l=0.12u m=1 
 x6 hnet14 b hnet12 vdd lppfet w=1.12u l=0.12u m=1 
 x7 hnet12 nmin1 y vdd lppfet w=1.12u l=0.12u m=1 
 x8 vdd d hnet10 vdd lppfet w=1.12u l=0.12u m=1 
 x9 hnet10 c hnet9 vdd lppfet w=1.12u l=0.12u m=1 
 .ends nor4bx2ts 

 **** 
 *.subckt nor4bx4ts y an b c d 
 .subckt nor4bx4ts y an b c d vss vdd
 x0 y d vss vss lpnfet w=1.68u l=0.12u m=1 
 x1 y c vss vss lpnfet w=1.68u l=0.12u m=1 
 x10 hnet9 b hnet19 vdd lppfet w=1.02u l=0.12u m=1 
 x11 hnet19 nmin1 y vdd lppfet w=1.02u l=0.12u m=1 
 x12 vdd d hnet17 vdd lppfet w=1.02u l=0.12u m=1 
 x13 hnet17 c hnet12 vdd lppfet w=1.02u l=0.12u m=1 
 x14 hnet12 b hnet14 vdd lppfet w=1.02u l=0.12u m=1 
 x15 hnet14 nmin1 y vdd lppfet w=1.02u l=0.12u m=1 
 x16 vdd d hnet10 vdd lppfet w=1.02u l=0.12u m=1 
 x17 hnet10 c hnet25 vdd lppfet w=1.02u l=0.12u m=1 
 x18 hnet25 b hnet27 vdd lppfet w=1.02u l=0.12u m=1 
 x19 hnet27 nmin1 y vdd lppfet w=1.02u l=0.12u m=1 
 x2 y b vss vss lpnfet w=1.68u l=0.12u m=1 
 x20 vdd an nmin1 vdd lppfet w=1.3u l=0.12u m=1 
 x21 nmin1 an vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 y nmin1 vss vss lpnfet w=1.68u l=0.12u m=1 
 x4 vdd d hnet16 vdd lppfet w=1.02u l=0.12u m=1 
 x5 hnet16 c hnet21 vdd lppfet w=1.02u l=0.12u m=1 
 x6 hnet21 b hnet20 vdd lppfet w=1.02u l=0.12u m=1 
 x7 hnet20 nmin1 y vdd lppfet w=1.02u l=0.12u m=1 
 x8 vdd d hnet11 vdd lppfet w=1.02u l=0.12u m=1 
 x9 hnet11 c hnet9 vdd lppfet w=1.02u l=0.12u m=1 
 .ends nor4bx4ts 

 **** 
 *.subckt nor4bxlts y an b c d 
 .subckt nor4bxlts y an b c d vss vdd
 x0 y d vss vss lpnfet w=0.24u l=0.12u m=1 
 x1 y c vss vss lpnfet w=0.24u l=0.12u m=1 
 x2 y b vss vss lpnfet w=0.24u l=0.12u m=1 
 x3 y nmin1 vss vss lpnfet w=0.24u l=0.12u m=1 
 x4 vdd d hnet12 vdd lppfet w=0.62u l=0.12u m=1 
 x5 hnet12 c hnet16 vdd lppfet w=0.62u l=0.12u m=1 
 x6 hnet16 b hnet10 vdd lppfet w=0.62u l=0.12u m=1 
 x7 hnet10 nmin1 y vdd lppfet w=0.62u l=0.12u m=1 
 x8 vdd an nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x9 nmin1 an vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends nor4bxlts 

 **** 
 *.subckt nor4x1ts y a b c d 
 .subckt nor4x1ts y a b c d vss vdd
 x0 y d vss vss lpnfet w=0.46u l=0.12u m=1 
 x1 y c vss vss lpnfet w=0.46u l=0.12u m=1 
 x2 y b vss vss lpnfet w=0.46u l=0.12u m=1 
 x3 y a vss vss lpnfet w=0.46u l=0.12u m=1 
 x4 vdd d hnet11 vdd lppfet w=1.2u l=0.12u m=1 
 x5 hnet11 c hnet15 vdd lppfet w=1.2u l=0.12u m=1 
 x6 hnet15 b hnet9 vdd lppfet w=1.2u l=0.12u m=1 
 x7 hnet9 a y vdd lppfet w=1.2u l=0.12u m=1 
 .ends nor4x1ts 

 **** 
 *.subckt nor4x2ts y a b c d 
 .subckt nor4x2ts y a b c d vss vdd
 x0 y d vss vss lpnfet w=0.92u l=0.12u m=1 
 x1 y c vss vss lpnfet w=0.92u l=0.12u m=1 
 x10 hnet8 b hnet19 vdd lppfet w=1.2u l=0.12u m=1 
 x11 hnet19 a y vdd lppfet w=1.2u l=0.12u m=1 
 x2 y b vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 y a vss vss lpnfet w=0.92u l=0.12u m=1 
 x4 vdd d hnet14 vdd lppfet w=1.2u l=0.12u m=1 
 x5 hnet14 c hnet13 vdd lppfet w=1.2u l=0.12u m=1 
 x6 hnet13 b hnet11 vdd lppfet w=1.2u l=0.12u m=1 
 x7 hnet11 a y vdd lppfet w=1.2u l=0.12u m=1 
 x8 vdd d hnet9 vdd lppfet w=1.2u l=0.12u m=1 
 x9 hnet9 c hnet8 vdd lppfet w=1.2u l=0.12u m=1 
 .ends nor4x2ts 

 **** 
 *.subckt nor4x4ts y a b c d 
 .subckt nor4x4ts y a b c d vss vdd
 x0 y d vss vss lpnfet w=1.68u l=0.12u m=1 
 x1 y c vss vss lpnfet w=1.68u l=0.12u m=1 
 x10 hnet8 b hnet18 vdd lppfet w=1.08u l=0.12u m=1 
 x11 hnet18 a y vdd lppfet w=1.08u l=0.12u m=1 
 x12 vdd d hnet16 vdd lppfet w=1.08u l=0.12u m=1 
 x13 hnet16 c hnet11 vdd lppfet w=1.08u l=0.12u m=1 
 x14 hnet11 b hnet13 vdd lppfet w=1.08u l=0.12u m=1 
 x15 hnet13 a y vdd lppfet w=1.08u l=0.12u m=1 
 x16 vdd d hnet9 vdd lppfet w=1.08u l=0.12u m=1 
 x17 hnet9 c hnet24 vdd lppfet w=1.08u l=0.12u m=1 
 x18 hnet24 b hnet26 vdd lppfet w=1.08u l=0.12u m=1 
 x19 hnet26 a y vdd lppfet w=1.08u l=0.12u m=1 
 x2 y b vss vss lpnfet w=1.68u l=0.12u m=1 
 x3 y a vss vss lpnfet w=1.68u l=0.12u m=1 
 x4 vdd d hnet15 vdd lppfet w=1.08u l=0.12u m=1 
 x5 hnet15 c hnet20 vdd lppfet w=1.08u l=0.12u m=1 
 x6 hnet20 b hnet19 vdd lppfet w=1.08u l=0.12u m=1 
 x7 hnet19 a y vdd lppfet w=1.08u l=0.12u m=1 
 x8 vdd d hnet10 vdd lppfet w=1.08u l=0.12u m=1 
 x9 hnet10 c hnet8 vdd lppfet w=1.08u l=0.12u m=1 
 .ends nor4x4ts 

 **** 
 *.subckt nor4x6ts y a b c d 
 .subckt nor4x6ts y a b c d vss vdd
 x0 y d vss vss lpnfet w=2.5u l=0.12u m=1 
 x1 y c vss vss lpnfet w=2.5u l=0.12u m=1 
 x10 hnet8 b hnet12 vdd lppfet w=1.04u l=0.12u m=1 
 x11 hnet12 a y vdd lppfet w=1.04u l=0.12u m=1 
 x12 vdd d hnet28 vdd lppfet w=1.04u l=0.12u m=1 
 x13 hnet28 c hnet27 vdd lppfet w=1.04u l=0.12u m=1 
 x14 hnet27 b hnet13 vdd lppfet w=1.04u l=0.12u m=1 
 x15 hnet13 a y vdd lppfet w=1.04u l=0.12u m=1 
 x16 vdd d hnet10 vdd lppfet w=1.04u l=0.12u m=1 
 x17 hnet10 c hnet11 vdd lppfet w=1.04u l=0.12u m=1 
 x18 hnet11 b hnet32 vdd lppfet w=1.04u l=0.12u m=1 
 x19 hnet32 a y vdd lppfet w=1.04u l=0.12u m=1 
 x2 y b vss vss lpnfet w=2.5u l=0.12u m=1 
 x20 vdd d hnet18 vdd lppfet w=1.04u l=0.12u m=1 
 x21 hnet18 c hnet19 vdd lppfet w=1.04u l=0.12u m=1 
 x22 hnet19 b hnet15 vdd lppfet w=1.04u l=0.12u m=1 
 x23 hnet15 a y vdd lppfet w=1.04u l=0.12u m=1 
 x24 vdd d hnet30 vdd lppfet w=1.04u l=0.12u m=1 
 x25 hnet30 c hnet9 vdd lppfet w=1.04u l=0.12u m=1 
 x26 hnet9 b hnet23 vdd lppfet w=1.04u l=0.12u m=1 
 x27 hnet23 a y vdd lppfet w=1.04u l=0.12u m=1 
 x3 y a vss vss lpnfet w=2.5u l=0.12u m=1 
 x4 vdd d hnet31 vdd lppfet w=1.04u l=0.12u m=1 
 x5 hnet31 c hnet21 vdd lppfet w=1.04u l=0.12u m=1 
 x6 hnet21 b hnet17 vdd lppfet w=1.04u l=0.12u m=1 
 x7 hnet17 a y vdd lppfet w=1.04u l=0.12u m=1 
 x8 vdd d hnet14 vdd lppfet w=1.04u l=0.12u m=1 
 x9 hnet14 c hnet8 vdd lppfet w=1.04u l=0.12u m=1 
 .ends nor4x6ts 

 **** 
 *.subckt nor4x8ts y a b c d 
 .subckt nor4x8ts y a b c d vss vdd
 x0 y d vss vss lpnfet w=3.36u l=0.12u m=1 
 x1 y c vss vss lpnfet w=3.36u l=0.12u m=1 
 x10 hnet17 b hnet12 vdd lppfet w=1.04u l=0.12u m=1 
 x11 hnet12 a y vdd lppfet w=1.04u l=0.12u m=1 
 x12 vdd d hnet34 vdd lppfet w=1.04u l=0.12u m=1 
 x13 hnet34 c hnet36 vdd lppfet w=1.04u l=0.12u m=1 
 x14 hnet36 b hnet15 vdd lppfet w=1.04u l=0.12u m=1 
 x15 hnet15 a y vdd lppfet w=1.04u l=0.12u m=1 
 x16 vdd d hnet11 vdd lppfet w=1.04u l=0.12u m=1 
 x17 hnet11 c hnet37 vdd lppfet w=1.04u l=0.12u m=1 
 x18 hnet37 b hnet8 vdd lppfet w=1.04u l=0.12u m=1 
 x19 hnet8 a y vdd lppfet w=1.04u l=0.12u m=1 
 x2 y b vss vss lpnfet w=3.36u l=0.12u m=1 
 x20 vdd d hnet19 vdd lppfet w=1.04u l=0.12u m=1 
 x21 hnet19 c hnet16 vdd lppfet w=1.04u l=0.12u m=1 
 x22 hnet16 b hnet20 vdd lppfet w=1.04u l=0.12u m=1 
 x23 hnet20 a y vdd lppfet w=1.04u l=0.12u m=1 
 x24 vdd d hnet13 vdd lppfet w=1.04u l=0.12u m=1 
 x25 hnet13 c hnet10 vdd lppfet w=1.04u l=0.12u m=1 
 x26 hnet10 b hnet27 vdd lppfet w=1.04u l=0.12u m=1 
 x27 hnet27 a y vdd lppfet w=1.04u l=0.12u m=1 
 x28 vdd d hnet25 vdd lppfet w=1.04u l=0.12u m=1 
 x29 hnet25 c hnet23 vdd lppfet w=1.04u l=0.12u m=1 
 x3 y a vss vss lpnfet w=3.36u l=0.12u m=1 
 x30 hnet23 b hnet22 vdd lppfet w=1.04u l=0.12u m=1 
 x31 hnet22 a y vdd lppfet w=1.04u l=0.12u m=1 
 x32 vdd d hnet33 vdd lppfet w=1.04u l=0.12u m=1 
 x33 hnet33 c hnet21 vdd lppfet w=1.04u l=0.12u m=1 
 x34 hnet21 b hnet14 vdd lppfet w=1.04u l=0.12u m=1 
 x35 hnet14 a y vdd lppfet w=1.04u l=0.12u m=1 
 x4 vdd d hnet29 vdd lppfet w=1.04u l=0.12u m=1 
 x5 hnet29 c hnet35 vdd lppfet w=1.04u l=0.12u m=1 
 x6 hnet35 b hnet26 vdd lppfet w=1.04u l=0.12u m=1 
 x7 hnet26 a y vdd lppfet w=1.04u l=0.12u m=1 
 x8 vdd d hnet9 vdd lppfet w=1.04u l=0.12u m=1 
 x9 hnet9 c hnet17 vdd lppfet w=1.04u l=0.12u m=1 
 .ends nor4x8ts 

 **** 
 *.subckt nor4xlts y a b c d 
 .subckt nor4xlts y a b c d vss vdd
 x0 y d vss vss lpnfet w=0.24u l=0.12u m=1 
 x1 y c vss vss lpnfet w=0.24u l=0.12u m=1 
 x2 y b vss vss lpnfet w=0.24u l=0.12u m=1 
 x3 y a vss vss lpnfet w=0.24u l=0.12u m=1 
 x4 vdd d hnet11 vdd lppfet w=0.62u l=0.12u m=1 
 x5 hnet11 c hnet15 vdd lppfet w=0.62u l=0.12u m=1 
 x6 hnet15 b hnet9 vdd lppfet w=0.62u l=0.12u m=1 
 x7 hnet9 a y vdd lppfet w=0.62u l=0.12u m=1 
 .ends nor4xlts 

 **** 
 *.subckt oa21x1ts y a0 a1 b0 
 .subckt oa21x1ts y a0 a1 b0 vss vdd
 x0 vdd nmin y vdd lppfet w=0.64u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.46u l=0.12u m=1 
 x2 vdd a1 hnet16 vdd lppfet w=0.34u l=0.12u m=1 
 x3 hnet16 a0 nmin vdd lppfet w=0.34u l=0.12u m=1 
 x4 nmin b0 net27 vss lpnfet w=0.26u l=0.12u m=1 
 x5 net27 a1 vss vss lpnfet w=0.26u l=0.12u m=1 
 x6 net27 a0 vss vss lpnfet w=0.26u l=0.12u m=1 
 x7 nmin b0 vdd vdd lppfet w=0.28u l=0.12u m=1 
 .ends oa21x1ts 

 **** 
 *.subckt oa21x2ts y a0 a1 b0 
 .subckt oa21x2ts y a0 a1 b0 vss vdd
 x0 vdd nmin y vdd lppfet w=1.28u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.92u l=0.12u m=1 
 x2 vdd a1 hnet16 vdd lppfet w=0.68u l=0.12u m=1 
 x3 hnet16 a0 nmin vdd lppfet w=0.68u l=0.12u m=1 
 x4 nmin b0 net27 vss lpnfet w=0.5u l=0.12u m=1 
 x5 net27 a1 vss vss lpnfet w=0.5u l=0.12u m=1 
 x6 net27 a0 vss vss lpnfet w=0.5u l=0.12u m=1 
 x7 nmin b0 vdd vdd lppfet w=0.52u l=0.12u m=1 
 .ends oa21x2ts 

 **** 
 *.subckt oa21x4ts y a0 a1 b0 
 .subckt oa21x4ts y a0 a1 b0 vss vdd
 x0 vdd nmin y vdd lppfet w=2.58u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=1.7u l=0.12u m=1 
 x2 vdd a1 hnet16 vdd lppfet w=1.3u l=0.12u m=1 
 x3 hnet16 a0 nmin vdd lppfet w=1.3u l=0.12u m=1 
 x4 nmin b0 net27 vss lpnfet w=0.92u l=0.12u m=1 
 x5 net27 a1 vss vss lpnfet w=0.92u l=0.12u m=1 
 x6 net27 a0 vss vss lpnfet w=0.92u l=0.12u m=1 
 x7 nmin b0 vdd vdd lppfet w=1.02u l=0.12u m=1 
 .ends oa21x4ts 

 **** 
 *.subckt oa21xlts y a0 a1 b0 
 .subckt oa21xlts y a0 a1 b0 vss vdd
 x0 vdd nmin y vdd lppfet w=0.42u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.24u l=0.12u m=1 
 x2 vdd a1 hnet16 vdd lppfet w=0.3u l=0.12u m=1 
 x3 hnet16 a0 nmin vdd lppfet w=0.3u l=0.12u m=1 
 x4 nmin b0 net27 vss lpnfet w=0.26u l=0.12u m=1 
 x5 net27 a1 vss vss lpnfet w=0.26u l=0.12u m=1 
 x6 net27 a0 vss vss lpnfet w=0.26u l=0.12u m=1 
 x7 nmin b0 vdd vdd lppfet w=0.28u l=0.12u m=1 
 .ends oa21xlts 

 **** 
 *.subckt oa22x1ts y a0 a1 b0 b1 
 .subckt oa22x1ts y a0 a1 b0 b1 vss vdd
 x0 vdd nmin y vdd lppfet w=0.64u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.46u l=0.12u m=1 
 x2 vdd b1 hnet17 vdd lppfet w=0.34u l=0.12u m=1 
 x3 hnet17 b0 nmin vdd lppfet w=0.34u l=0.12u m=1 
 x4 vdd a1 hnet21 vdd lppfet w=0.34u l=0.12u m=1 
 x5 hnet21 a0 nmin vdd lppfet w=0.34u l=0.12u m=1 
 x6 nmin a0 net40 vss lpnfet w=0.24u l=0.12u m=1 
 x7 nmin a1 net40 vss lpnfet w=0.24u l=0.12u m=1 
 x8 net40 b0 vss vss lpnfet w=0.24u l=0.12u m=1 
 x9 net40 b1 vss vss lpnfet w=0.24u l=0.12u m=1 
 .ends oa22x1ts 

 **** 
 *.subckt oa22x2ts y a0 a1 b0 b1 
 .subckt oa22x2ts y a0 a1 b0 b1 vss vdd
 x0 vdd nmin y vdd lppfet w=1.28u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.92u l=0.12u m=1 
 x2 vdd b1 hnet17 vdd lppfet w=0.68u l=0.12u m=1 
 x3 hnet17 b0 nmin vdd lppfet w=0.68u l=0.12u m=1 
 x4 vdd a1 hnet21 vdd lppfet w=0.68u l=0.12u m=1 
 x5 hnet21 a0 nmin vdd lppfet w=0.68u l=0.12u m=1 
 x6 nmin a0 net40 vss lpnfet w=0.48u l=0.12u m=1 
 x7 nmin a1 net40 vss lpnfet w=0.48u l=0.12u m=1 
 x8 net40 b0 vss vss lpnfet w=0.48u l=0.12u m=1 
 x9 net40 b1 vss vss lpnfet w=0.48u l=0.12u m=1 
 .ends oa22x2ts 

 **** 
 *.subckt oa22x4ts y a0 a1 b0 b1 
 .subckt oa22x4ts y a0 a1 b0 b1 vss vdd
 x0 vdd nmin y vdd lppfet w=2.4u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=1.84u l=0.12u m=1 
 x2 vdd b1 hnet17 vdd lppfet w=1.2u l=0.12u m=1 
 x3 hnet17 b0 nmin vdd lppfet w=1.2u l=0.12u m=1 
 x4 vdd a1 hnet21 vdd lppfet w=1.2u l=0.12u m=1 
 x5 hnet21 a0 nmin vdd lppfet w=1.2u l=0.12u m=1 
 x6 nmin a0 net40 vss lpnfet w=0.92u l=0.12u m=1 
 x7 nmin a1 net40 vss lpnfet w=0.92u l=0.12u m=1 
 x8 net40 b0 vss vss lpnfet w=0.78u l=0.12u m=1 
 x9 net40 b1 vss vss lpnfet w=0.92u l=0.12u m=1 
 .ends oa22x4ts 

 **** 
 *.subckt oa22xlts y a0 a1 b0 b1 
 .subckt oa22xlts y a0 a1 b0 b1 vss vdd
 x0 vdd nmin y vdd lppfet w=0.42u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.24u l=0.12u m=1 
 x2 vdd b1 hnet17 vdd lppfet w=0.3u l=0.12u m=1 
 x3 hnet17 b0 nmin vdd lppfet w=0.3u l=0.12u m=1 
 x4 vdd a1 hnet21 vdd lppfet w=0.3u l=0.12u m=1 
 x5 hnet21 a0 nmin vdd lppfet w=0.3u l=0.12u m=1 
 x6 nmin a0 net40 vss lpnfet w=0.26u l=0.12u m=1 
 x7 nmin a1 net40 vss lpnfet w=0.26u l=0.12u m=1 
 x8 net40 b0 vss vss lpnfet w=0.26u l=0.12u m=1 
 x9 net40 b1 vss vss lpnfet w=0.26u l=0.12u m=1 
 .ends oa22xlts 

 **** 
 *.subckt oai211x1ts y a0 a1 b0 c0 
 .subckt oai211x1ts y a0 a1 b0 c0 vss vdd
 x0 vdd a1 hnet15 vdd lppfet w=0.84u l=0.12u m=1 
 x1 hnet15 a0 y vdd lppfet w=0.84u l=0.12u m=1 
 x2 net25 c0 net32 vss lpnfet w=0.72u l=0.12u m=1 
 x3 y b0 net25 vss lpnfet w=0.72u l=0.12u m=1 
 x4 net32 a1 vss vss lpnfet w=0.72u l=0.12u m=1 
 x5 net32 a0 vss vss lpnfet w=0.72u l=0.12u m=1 
 x6 y c0 vdd vdd lppfet w=0.64u l=0.12u m=1 
 x7 y b0 vdd vdd lppfet w=0.64u l=0.12u m=1 
 .ends oai211x1ts 

 **** 
 *.subckt oai211x2ts y a0 a1 b0 c0 
 .subckt oai211x2ts y a0 a1 b0 c0 vss vdd
 x0 vdd a1 hnet17 vdd lppfet w=0.84u l=0.12u m=1 
 x1 hnet17 a0 y vdd lppfet w=0.84u l=0.12u m=1 
 x10 y c0 vdd vdd lppfet w=1.28u l=0.12u m=1 
 x11 y b0 vdd vdd lppfet w=1.28u l=0.12u m=1 
 x2 vdd a1 hnet14 vdd lppfet w=0.84u l=0.12u m=1 
 x3 hnet14 a0 y vdd lppfet w=0.84u l=0.12u m=1 
 x4 net25 c0 net38 vss lpnfet w=0.58u l=0.12u m=1 
 x5 y b0 net25 vss lpnfet w=0.58u l=0.12u m=1 
 x6 net31 c0 net38 vss lpnfet w=0.58u l=0.12u m=1 
 x7 y b0 net31 vss lpnfet w=0.58u l=0.12u m=1 
 x8 net38 a1 vss vss lpnfet w=1.32u l=0.12u m=1 
 x9 net38 a0 vss vss lpnfet w=1.32u l=0.12u m=1 
 .ends oai211x2ts 

 **** 
 *.subckt oai211x4ts y a0 a1 b0 c0 
 .subckt oai211x4ts y a0 a1 b0 c0 vss vdd
 x0 vdd net23 net19 vdd lppfet w=1.02u l=0.12u m=1 
 x1 net19 net23 vss vss lpnfet w=0.74u l=0.12u m=1 
 x10 net23 c0 vdd vdd lppfet w=0.4u l=0.12u m=1 
 x11 net23 b0 vdd vdd lppfet w=0.4u l=0.12u m=1 
 x2 vdd net19 y vdd lppfet w=2.56u l=0.12u m=1 
 x3 y net19 vss vss lpnfet w=1.84u l=0.12u m=1 
 x4 vdd a1 hnet21 vdd lppfet w=0.54u l=0.12u m=1 
 x5 hnet21 a0 net23 vdd lppfet w=0.54u l=0.12u m=1 
 x6 net30 c0 net37 vss lpnfet w=0.46u l=0.12u m=1 
 x7 net23 b0 net30 vss lpnfet w=0.46u l=0.12u m=1 
 x8 net37 a1 vss vss lpnfet w=0.46u l=0.12u m=1 
 x9 net37 a0 vss vss lpnfet w=0.46u l=0.12u m=1 
 .ends oai211x4ts 

 **** 
 *.subckt oai211xlts y a0 a1 b0 c0 
 .subckt oai211xlts y a0 a1 b0 c0 vss vdd
 x0 vdd a1 hnet15 vdd lppfet w=0.44u l=0.12u m=1 
 x1 hnet15 a0 y vdd lppfet w=0.44u l=0.12u m=1 
 x2 net25 c0 net32 vss lpnfet w=0.48u l=0.12u m=1 
 x3 y b0 net25 vss lpnfet w=0.48u l=0.12u m=1 
 x4 net32 a1 vss vss lpnfet w=0.48u l=0.12u m=1 
 x5 net32 a0 vss vss lpnfet w=0.48u l=0.12u m=1 
 x6 y c0 vdd vdd lppfet w=0.42u l=0.12u m=1 
 x7 y b0 vdd vdd lppfet w=0.42u l=0.12u m=1 
 .ends oai211xlts 

 **** 
 *.subckt oai21x1ts y a0 a1 b0 
 .subckt oai21x1ts y a0 a1 b0 vss vdd
 x0 vdd a1 hnet13 vdd lppfet w=0.84u l=0.12u m=1 
 x1 hnet13 a0 y vdd lppfet w=0.84u l=0.12u m=1 
 x2 y b0 net25 vss lpnfet w=0.6u l=0.12u m=1 
 x3 net25 a1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x4 net25 a0 vss vss lpnfet w=0.6u l=0.12u m=1 
 x5 y b0 vdd vdd lppfet w=0.64u l=0.12u m=1 
 .ends oai21x1ts 

 **** 
 *.subckt oai21x2ts y a0 a1 b0 
 .subckt oai21x2ts y a0 a1 b0 vss vdd
 x0 vdd a1 hnet14 vdd lppfet w=0.84u l=0.12u m=1 
 x1 hnet14 a0 y vdd lppfet w=0.84u l=0.12u m=1 
 x2 vdd a1 hnet11 vdd lppfet w=0.84u l=0.12u m=1 
 x3 hnet11 a0 y vdd lppfet w=0.84u l=0.12u m=1 
 x4 y b0 net25 vss lpnfet w=1.22u l=0.12u m=1 
 x5 net25 a1 vss vss lpnfet w=1.22u l=0.12u m=1 
 x6 net25 a0 vss vss lpnfet w=1.22u l=0.12u m=1 
 x7 y b0 vdd vdd lppfet w=1.28u l=0.12u m=1 
 .ends oai21x2ts 

 **** 
 *.subckt oai21x4ts y a0 a1 b0 
 .subckt oai21x4ts y a0 a1 b0 vss vdd
 x0 vdd a1 hnet14 vdd lppfet w=1.12u l=0.12u m=1 
 x1 hnet14 a0 y vdd lppfet w=1.12u l=0.12u m=1 
 x2 vdd a1 hnet11 vdd lppfet w=1.12u l=0.12u m=1 
 x3 hnet11 a0 y vdd lppfet w=1.12u l=0.12u m=1 
 x4 vdd a1 hnet10 vdd lppfet w=1.12u l=0.12u m=1 
 x5 hnet10 a0 y vdd lppfet w=1.12u l=0.12u m=1 
 x6 y b0 net25 vss lpnfet w=2.46u l=0.12u m=1 
 x7 net25 a1 vss vss lpnfet w=2.24u l=0.12u m=1 
 x8 net25 a0 vss vss lpnfet w=2.24u l=0.12u m=1 
 x9 y b0 vdd vdd lppfet w=2.56u l=0.12u m=1 
 .ends oai21x4ts 

 **** 
 *.subckt oai21xlts y a0 a1 b0 
 .subckt oai21xlts y a0 a1 b0 vss vdd
 x0 vdd a1 hnet13 vdd lppfet w=0.44u l=0.12u m=1 
 x1 hnet13 a0 y vdd lppfet w=0.44u l=0.12u m=1 
 x2 y b0 net25 vss lpnfet w=0.4u l=0.12u m=1 
 x3 net25 a1 vss vss lpnfet w=0.4u l=0.12u m=1 
 x4 net25 a0 vss vss lpnfet w=0.4u l=0.12u m=1 
 x5 y b0 vdd vdd lppfet w=0.42u l=0.12u m=1 
 .ends oai21xlts 

 **** 
 *.subckt oai221x1ts y a0 a1 b0 b1 c0 
 .subckt oai221x1ts y a0 a1 b0 b1 c0 vss vdd
 x0 vdd b1 hnet16 vdd lppfet w=0.84u l=0.12u m=1 
 x1 hnet16 b0 y vdd lppfet w=0.84u l=0.12u m=1 
 x2 vdd a1 hnet20 vdd lppfet w=0.84u l=0.12u m=1 
 x3 hnet20 a0 y vdd lppfet w=0.84u l=0.12u m=1 
 x4 y c0 vdd vdd lppfet w=0.64u l=0.12u m=1 
 x5 y c0 net42 vss lpnfet w=0.66u l=0.12u m=1 
 x6 net42 a0 net48 vss lpnfet w=0.66u l=0.12u m=1 
 x7 net42 a1 net48 vss lpnfet w=0.66u l=0.12u m=1 
 x8 net48 b0 vss vss lpnfet w=0.72u l=0.12u m=1 
 x9 net48 b1 vss vss lpnfet w=0.72u l=0.12u m=1 
 .ends oai221x1ts 

 **** 
 *.subckt oai221x2ts y a0 a1 b0 b1 c0 
 .subckt oai221x2ts y a0 a1 b0 b1 c0 vss vdd
 x0 vdd b1 hnet17 vdd lppfet w=0.84u l=0.12u m=1 
 x1 hnet17 b0 y vdd lppfet w=0.84u l=0.12u m=1 
 x10 net42 a0 net48 vss lpnfet w=1.46u l=0.12u m=1 
 x11 net42 a1 net48 vss lpnfet w=1.46u l=0.12u m=1 
 x12 net48 b0 vss vss lpnfet w=1.46u l=0.12u m=1 
 x13 net48 b1 vss vss lpnfet w=1.46u l=0.12u m=1 
 x2 vdd b1 hnet14 vdd lppfet w=0.84u l=0.12u m=1 
 x3 hnet14 b0 y vdd lppfet w=0.84u l=0.12u m=1 
 x4 vdd a1 hnet22 vdd lppfet w=0.76u l=0.12u m=1 
 x5 hnet22 a0 y vdd lppfet w=0.76u l=0.12u m=1 
 x6 vdd a1 hnet19 vdd lppfet w=0.76u l=0.12u m=1 
 x7 hnet19 a0 y vdd lppfet w=0.76u l=0.12u m=1 
 x8 y c0 vdd vdd lppfet w=1.28u l=0.12u m=1 
 x9 y c0 net42 vss lpnfet w=1.32u l=0.12u m=1 
 .ends oai221x2ts 

 **** 
 *.subckt oai221x4ts y a0 a1 b0 b1 c0 
 .subckt oai221x4ts y a0 a1 b0 b1 c0 vss vdd
 x0 vdd net30 net26 vdd lppfet w=1.02u l=0.12u m=1 
 x1 net26 net30 vss vss lpnfet w=0.74u l=0.12u m=1 
 x10 net47 a0 net53 vss lpnfet w=0.46u l=0.12u m=1 
 x11 net47 a1 net53 vss lpnfet w=0.46u l=0.12u m=1 
 x12 net53 b0 vss vss lpnfet w=0.46u l=0.12u m=1 
 x13 net53 b1 vss vss lpnfet w=0.46u l=0.12u m=1 
 x2 vdd net26 y vdd lppfet w=2.56u l=0.12u m=1 
 x3 y net26 vss vss lpnfet w=1.84u l=0.12u m=1 
 x4 vdd b1 hnet22 vdd lppfet w=0.54u l=0.12u m=1 
 x5 hnet22 b0 net30 vdd lppfet w=0.54u l=0.12u m=1 
 x6 vdd a1 hnet26 vdd lppfet w=0.54u l=0.12u m=1 
 x7 hnet26 a0 net30 vdd lppfet w=0.54u l=0.12u m=1 
 x8 net30 c0 vdd vdd lppfet w=0.4u l=0.12u m=1 
 x9 net30 c0 net47 vss lpnfet w=0.44u l=0.12u m=1 
 .ends oai221x4ts 

 **** 
 *.subckt oai221xlts y a0 a1 b0 b1 c0 
 .subckt oai221xlts y a0 a1 b0 b1 c0 vss vdd
 x0 vdd b1 hnet16 vdd lppfet w=0.44u l=0.12u m=1 
 x1 hnet16 b0 y vdd lppfet w=0.44u l=0.12u m=1 
 x2 vdd a1 hnet20 vdd lppfet w=0.44u l=0.12u m=1 
 x3 hnet20 a0 y vdd lppfet w=0.44u l=0.12u m=1 
 x4 y c0 vdd vdd lppfet w=0.42u l=0.12u m=1 
 x5 y c0 net42 vss lpnfet w=0.48u l=0.12u m=1 
 x6 net42 a0 net48 vss lpnfet w=0.48u l=0.12u m=1 
 x7 net42 a1 net48 vss lpnfet w=0.48u l=0.12u m=1 
 x8 net48 b0 vss vss lpnfet w=0.48u l=0.12u m=1 
 x9 net48 b1 vss vss lpnfet w=0.48u l=0.12u m=1 
 .ends oai221xlts 

 **** 
 *.subckt oai222x1ts y a0 a1 b0 b1 c0 c1 
 .subckt oai222x1ts y a0 a1 b0 b1 c0 c1 vss vdd
 x0 vdd b1 hnet17 vdd lppfet w=0.84u l=0.12u m=1 
 x1 hnet17 b0 y vdd lppfet w=0.84u l=0.12u m=1 
 x10 net55 b0 vss vss lpnfet w=0.66u l=0.12u m=1 
 x11 net55 b1 vss vss lpnfet w=0.66u l=0.12u m=1 
 x2 vdd a1 hnet22 vdd lppfet w=0.84u l=0.12u m=1 
 x3 hnet22 a0 y vdd lppfet w=0.84u l=0.12u m=1 
 x4 vdd c1 hnet27 vdd lppfet w=0.84u l=0.12u m=1 
 x5 hnet27 c0 y vdd lppfet w=0.84u l=0.12u m=1 
 x6 y c0 net49 vss lpnfet w=0.66u l=0.12u m=1 
 x7 y c1 net49 vss lpnfet w=0.66u l=0.12u m=1 
 x8 net49 a0 net55 vss lpnfet w=0.66u l=0.12u m=1 
 x9 net49 a1 net55 vss lpnfet w=0.66u l=0.12u m=1 
 .ends oai222x1ts 

 **** 
 *.subckt oai222x2ts y a0 a1 b0 b1 c0 c1 
 .subckt oai222x2ts y a0 a1 b0 b1 c0 c1 vss vdd
 x0 vdd b1 hnet18 vdd lppfet w=0.84u l=0.12u m=1 
 x1 hnet18 b0 y vdd lppfet w=0.84u l=0.12u m=1 
 x10 vdd c1 hnet26 vdd lppfet w=0.84u l=0.12u m=1 
 x11 hnet26 c0 y vdd lppfet w=0.84u l=0.12u m=1 
 x12 y c0 net49 vss lpnfet w=1.46u l=0.12u m=1 
 x13 y c1 net49 vss lpnfet w=1.46u l=0.12u m=1 
 x14 net49 a0 net55 vss lpnfet w=1.46u l=0.12u m=1 
 x15 net49 a1 net55 vss lpnfet w=1.46u l=0.12u m=1 
 x16 net55 b0 vss vss lpnfet w=1.32u l=0.12u m=1 
 x17 net55 b1 vss vss lpnfet w=1.32u l=0.12u m=1 
 x2 vdd b1 hnet14 vdd lppfet w=0.84u l=0.12u m=1 
 x3 hnet14 b0 y vdd lppfet w=0.84u l=0.12u m=1 
 x4 vdd a1 hnet24 vdd lppfet w=0.84u l=0.12u m=1 
 x5 hnet24 a0 y vdd lppfet w=0.84u l=0.12u m=1 
 x6 vdd a1 hnet20 vdd lppfet w=0.84u l=0.12u m=1 
 x7 hnet20 a0 y vdd lppfet w=0.84u l=0.12u m=1 
 x8 vdd c1 hnet30 vdd lppfet w=0.84u l=0.12u m=1 
 x9 hnet30 c0 y vdd lppfet w=0.84u l=0.12u m=1 
 .ends oai222x2ts 

 **** 
 *.subckt oai222x4ts y a0 a1 b0 b1 c0 c1 
 .subckt oai222x4ts y a0 a1 b0 b1 c0 c1 vss vdd
 x0 vdd net34 net30 vdd lppfet w=1.02u l=0.12u m=1 
 x1 net30 net34 vss vss lpnfet w=0.68u l=0.12u m=1 
 x10 net34 c0 net54 vss lpnfet w=0.46u l=0.12u m=1 
 x11 net34 c1 net54 vss lpnfet w=0.46u l=0.12u m=1 
 x12 net54 a0 net60 vss lpnfet w=0.46u l=0.12u m=1 
 x13 net54 a1 net60 vss lpnfet w=0.46u l=0.12u m=1 
 x14 net60 b0 vss vss lpnfet w=0.46u l=0.12u m=1 
 x15 net60 b1 vss vss lpnfet w=0.46u l=0.12u m=1 
 x2 vdd net30 y vdd lppfet w=2.56u l=0.12u m=1 
 x3 y net30 vss vss lpnfet w=1.84u l=0.12u m=1 
 x4 vdd b1 hnet24 vdd lppfet w=0.54u l=0.12u m=1 
 x5 hnet24 b0 net34 vdd lppfet w=0.54u l=0.12u m=1 
 x6 vdd a1 hnet28 vdd lppfet w=0.54u l=0.12u m=1 
 x7 hnet28 a0 net34 vdd lppfet w=0.54u l=0.12u m=1 
 x8 vdd c1 hnet32 vdd lppfet w=0.54u l=0.12u m=1 
 x9 hnet32 c0 net34 vdd lppfet w=0.54u l=0.12u m=1 
 .ends oai222x4ts 

 **** 
 *.subckt oai222xlts y a0 a1 b0 b1 c0 c1 
 .subckt oai222xlts y a0 a1 b0 b1 c0 c1 vss vdd
 x0 vdd b1 hnet17 vdd lppfet w=0.44u l=0.12u m=1 
 x1 hnet17 b0 y vdd lppfet w=0.44u l=0.12u m=1 
 x10 net55 b0 vss vss lpnfet w=0.48u l=0.12u m=1 
 x11 net55 b1 vss vss lpnfet w=0.48u l=0.12u m=1 
 x2 vdd a1 hnet22 vdd lppfet w=0.44u l=0.12u m=1 
 x3 hnet22 a0 y vdd lppfet w=0.44u l=0.12u m=1 
 x4 vdd c1 hnet27 vdd lppfet w=0.44u l=0.12u m=1 
 x5 hnet27 c0 y vdd lppfet w=0.44u l=0.12u m=1 
 x6 y c0 net49 vss lpnfet w=0.48u l=0.12u m=1 
 x7 y c1 net49 vss lpnfet w=0.48u l=0.12u m=1 
 x8 net49 a0 net55 vss lpnfet w=0.48u l=0.12u m=1 
 x9 net49 a1 net55 vss lpnfet w=0.48u l=0.12u m=1 
 .ends oai222xlts 

 **** 
 *.subckt oai22x1ts y a0 a1 b0 b1 
 .subckt oai22x1ts y a0 a1 b0 b1 vss vdd
 x0 vdd b1 hnet14 vdd lppfet w=0.84u l=0.12u m=1 
 x1 hnet14 b0 y vdd lppfet w=0.84u l=0.12u m=1 
 x2 vdd a1 hnet19 vdd lppfet w=0.84u l=0.12u m=1 
 x3 hnet19 a0 y vdd lppfet w=0.84u l=0.12u m=1 
 x4 y a0 net38 vss lpnfet w=0.6u l=0.12u m=1 
 x5 y a1 net38 vss lpnfet w=0.6u l=0.12u m=1 
 x6 net38 b0 vss vss lpnfet w=0.6u l=0.12u m=1 
 x7 net38 b1 vss vss lpnfet w=0.6u l=0.12u m=1 
 .ends oai22x1ts 

 **** 
 *.subckt oai22x2ts y a0 a1 b0 b1 
 .subckt oai22x2ts y a0 a1 b0 b1 vss vdd
 x0 vdd b1 hnet15 vdd lppfet w=0.84u l=0.12u m=1 
 x1 hnet15 b0 y vdd lppfet w=0.84u l=0.12u m=1 
 x10 net38 b0 vss vss lpnfet w=1.22u l=0.12u m=1 
 x11 net38 b1 vss vss lpnfet w=1.22u l=0.12u m=1 
 x2 vdd b1 hnet11 vdd lppfet w=0.84u l=0.12u m=1 
 x3 hnet11 b0 y vdd lppfet w=0.84u l=0.12u m=1 
 x4 vdd a1 hnet21 vdd lppfet w=0.84u l=0.12u m=1 
 x5 hnet21 a0 y vdd lppfet w=0.84u l=0.12u m=1 
 x6 vdd a1 hnet17 vdd lppfet w=0.84u l=0.12u m=1 
 x7 hnet17 a0 y vdd lppfet w=0.84u l=0.12u m=1 
 x8 y a0 net38 vss lpnfet w=1.22u l=0.12u m=1 
 x9 y a1 net38 vss lpnfet w=1.22u l=0.12u m=1 
 .ends oai22x2ts 

 **** 
 *.subckt oai22x4ts y a0 a1 b0 b1 
 .subckt oai22x4ts y a0 a1 b0 b1 vss vdd
 x0 vdd b1 hnet15 vdd lppfet w=1.12u l=0.12u m=1 
 x1 hnet15 b0 y vdd lppfet w=1.12u l=0.12u m=1 
 x10 vdd a1 hnet17 vdd lppfet w=1.12u l=0.12u m=1 
 x11 hnet17 a0 y vdd lppfet w=1.12u l=0.12u m=1 
 x12 y a0 net38 vss lpnfet w=2.44u l=0.12u m=1 
 x13 y a1 net38 vss lpnfet w=2.44u l=0.12u m=1 
 x14 net38 b0 vss vss lpnfet w=2.44u l=0.12u m=1 
 x15 net38 b1 vss vss lpnfet w=2.44u l=0.12u m=1 
 x2 vdd b1 hnet11 vdd lppfet w=1.12u l=0.12u m=1 
 x3 hnet11 b0 y vdd lppfet w=1.12u l=0.12u m=1 
 x4 vdd b1 hnet10 vdd lppfet w=1.12u l=0.12u m=1 
 x5 hnet10 b0 y vdd lppfet w=1.12u l=0.12u m=1 
 x6 vdd a1 hnet22 vdd lppfet w=1.12u l=0.12u m=1 
 x7 hnet22 a0 y vdd lppfet w=1.12u l=0.12u m=1 
 x8 vdd a1 hnet18 vdd lppfet w=1.12u l=0.12u m=1 
 x9 hnet18 a0 y vdd lppfet w=1.12u l=0.12u m=1 
 .ends oai22x4ts 

 **** 
 *.subckt oai22xlts y a0 a1 b0 b1 
 .subckt oai22xlts y a0 a1 b0 b1 vss vdd
 x0 vdd b1 hnet14 vdd lppfet w=0.44u l=0.12u m=1 
 x1 hnet14 b0 y vdd lppfet w=0.44u l=0.12u m=1 
 x2 vdd a1 hnet19 vdd lppfet w=0.44u l=0.12u m=1 
 x3 hnet19 a0 y vdd lppfet w=0.44u l=0.12u m=1 
 x4 y a0 net38 vss lpnfet w=0.4u l=0.12u m=1 
 x5 y a1 net38 vss lpnfet w=0.4u l=0.12u m=1 
 x6 net38 b0 vss vss lpnfet w=0.4u l=0.12u m=1 
 x7 net38 b1 vss vss lpnfet w=0.4u l=0.12u m=1 
 .ends oai22xlts 

 **** 
 *.subckt oai2bb1x1ts y a0n a1n b0 
 .subckt oai2bb1x1ts y a0n a1n b0 vss vdd
 x0 hnet13 a0n vss vss lpnfet w=0.28u l=0.12u m=1 
 x1 net11 a1n hnet13 vss lpnfet w=0.28u l=0.12u m=1 
 x2 vdd a0n net11 vdd lppfet w=0.3u l=0.12u m=1 
 x3 vdd a1n net11 vdd lppfet w=0.3u l=0.12u m=1 
 x4 hnet19 b0 vss vss lpnfet w=0.6u l=0.12u m=1 
 x5 y net11 hnet19 vss lpnfet w=0.6u l=0.12u m=1 
 x6 vdd b0 y vdd lppfet w=0.64u l=0.12u m=1 
 x7 vdd net11 y vdd lppfet w=0.64u l=0.12u m=1 
 .ends oai2bb1x1ts 

 **** 
 *.subckt oai2bb1x2ts y a0n a1n b0 
 .subckt oai2bb1x2ts y a0n a1n b0 vss vdd
 x0 hnet13 a0n vss vss lpnfet w=0.54u l=0.12u m=1 
 x1 net11 a1n hnet13 vss lpnfet w=0.54u l=0.12u m=1 
 x2 vdd a0n net11 vdd lppfet w=0.56u l=0.12u m=1 
 x3 vdd a1n net11 vdd lppfet w=0.56u l=0.12u m=1 
 x4 hnet18 b0 vss vss lpnfet w=0.6u l=0.12u m=1 
 x5 y net11 hnet18 vss lpnfet w=0.6u l=0.12u m=1 
 x6 hnet14 b0 vss vss lpnfet w=0.6u l=0.12u m=1 
 x7 y net11 hnet14 vss lpnfet w=0.6u l=0.12u m=1 
 x8 vdd b0 y vdd lppfet w=1.26u l=0.12u m=1 
 x9 vdd net11 y vdd lppfet w=1.26u l=0.12u m=1 
 .ends oai2bb1x2ts 

 **** 
 *.subckt oai2bb1x4ts y a0n a1n b0 
 .subckt oai2bb1x4ts y a0n a1n b0 vss vdd
 x0 hnet8 b0 vss vss lpnfet w=0.82u l=0.12u m=1 
 x1 y net14 hnet8 vss lpnfet w=0.82u l=0.12u m=1 
 x10 vdd a0n net14 vdd lppfet w=1.06u l=0.12u m=1 
 x11 vdd a1n net14 vdd lppfet w=1.06u l=0.12u m=1 
 x2 hnet9 b0 vss vss lpnfet w=0.82u l=0.12u m=1 
 x3 y net14 hnet9 vss lpnfet w=0.82u l=0.12u m=1 
 x4 hnet12 b0 vss vss lpnfet w=0.82u l=0.12u m=1 
 x5 y net14 hnet12 vss lpnfet w=0.82u l=0.12u m=1 
 x6 vdd b0 y vdd lppfet w=2.56u l=0.12u m=1 
 x7 vdd net14 y vdd lppfet w=2.56u l=0.12u m=1 
 x8 hnet19 a0n vss vss lpnfet w=0.84u l=0.12u m=1 
 x9 net14 a1n hnet19 vss lpnfet w=0.84u l=0.12u m=1 
 .ends oai2bb1x4ts 

 **** 
 *.subckt oai2bb1xlts y a0n a1n b0 
 .subckt oai2bb1xlts y a0n a1n b0 vss vdd
 x0 hnet13 a0n vss vss lpnfet w=0.26u l=0.12u m=1 
 x1 net11 a1n hnet13 vss lpnfet w=0.26u l=0.12u m=1 
 x2 vdd a0n net11 vdd lppfet w=0.28u l=0.12u m=1 
 x3 vdd a1n net11 vdd lppfet w=0.28u l=0.12u m=1 
 x4 hnet19 b0 vss vss lpnfet w=0.4u l=0.12u m=1 
 x5 y net11 hnet19 vss lpnfet w=0.4u l=0.12u m=1 
 x6 vdd b0 y vdd lppfet w=0.42u l=0.12u m=1 
 x7 vdd net11 y vdd lppfet w=0.42u l=0.12u m=1 
 .ends oai2bb1xlts 

 **** 
 *.subckt oai2bb2x1ts y a0n a1n b0 b1 
 .subckt oai2bb2x1ts y a0n a1n b0 b1 vss vdd
 x0 vdd b1 hnet15 vdd lppfet w=0.84u l=0.12u m=1 
 x1 hnet15 b0 y vdd lppfet w=0.84u l=0.12u m=1 
 x2 hnet19 a0n vss vss lpnfet w=0.28u l=0.12u m=1 
 x3 nmin1 a1n hnet19 vss lpnfet w=0.28u l=0.12u m=1 
 x4 vdd a0n nmin1 vdd lppfet w=0.3u l=0.12u m=1 
 x5 vdd a1n nmin1 vdd lppfet w=0.3u l=0.12u m=1 
 x6 y nmin1 vdd vdd lppfet w=0.64u l=0.12u m=1 
 x7 net33 b0 vss vss lpnfet w=0.6u l=0.12u m=1 
 x8 y nmin1 net33 vss lpnfet w=0.6u l=0.12u m=1 
 x9 net33 b1 vss vss lpnfet w=0.6u l=0.12u m=1 
 .ends oai2bb2x1ts 

 **** 
 *.subckt oai2bb2x2ts y a0n a1n b0 b1 
 .subckt oai2bb2x2ts y a0n a1n b0 b1 vss vdd
 x0 vdd b1 hnet16 vdd lppfet w=0.84u l=0.12u m=1 
 x1 hnet16 b0 y vdd lppfet w=0.84u l=0.12u m=1 
 x10 y nmin1 net33 vss lpnfet w=1.22u l=0.12u m=1 
 x11 net33 b1 vss vss lpnfet w=1.22u l=0.12u m=1 
 x2 vdd b1 hnet13 vdd lppfet w=0.84u l=0.12u m=1 
 x3 hnet13 b0 y vdd lppfet w=0.84u l=0.12u m=1 
 x4 hnet20 a0n vss vss lpnfet w=0.56u l=0.12u m=1 
 x5 nmin1 a1n hnet20 vss lpnfet w=0.56u l=0.12u m=1 
 x6 vdd a0n nmin1 vdd lppfet w=0.58u l=0.12u m=1 
 x7 vdd a1n nmin1 vdd lppfet w=0.58u l=0.12u m=1 
 x8 y nmin1 vdd vdd lppfet w=1.28u l=0.12u m=1 
 x9 net33 b0 vss vss lpnfet w=1.22u l=0.12u m=1 
 .ends oai2bb2x2ts 

 **** 
 *.subckt oai2bb2x4ts y a0n a1n b0 b1 
 .subckt oai2bb2x4ts y a0n a1n b0 b1 vss vdd
 x0 vdd b1 hnet16 vdd lppfet w=1.12u l=0.12u m=1 
 x1 hnet16 b0 y vdd lppfet w=1.12u l=0.12u m=1 
 x10 y nmin1 vdd vdd lppfet w=2.56u l=0.12u m=1 
 x11 net33 b0 vss vss lpnfet w=2.44u l=0.12u m=1 
 x12 y nmin1 net33 vss lpnfet w=2.42u l=0.12u m=1 
 x13 net33 b1 vss vss lpnfet w=2.44u l=0.12u m=1 
 x2 vdd b1 hnet13 vdd lppfet w=1.12u l=0.12u m=1 
 x3 hnet13 b0 y vdd lppfet w=1.12u l=0.12u m=1 
 x4 vdd b1 hnet12 vdd lppfet w=1.12u l=0.12u m=1 
 x5 hnet12 b0 y vdd lppfet w=1.12u l=0.12u m=1 
 x6 hnet21 a0n vss vss lpnfet w=0.92u l=0.12u m=1 
 x7 nmin1 a1n hnet21 vss lpnfet w=0.92u l=0.12u m=1 
 x8 vdd a0n nmin1 vdd lppfet w=1.18u l=0.12u m=1 
 x9 vdd a1n nmin1 vdd lppfet w=1.18u l=0.12u m=1 
 .ends oai2bb2x4ts 

 **** 
 *.subckt oai2bb2xlts y a0n a1n b0 b1 
 .subckt oai2bb2xlts y a0n a1n b0 b1 vss vdd
 x0 vdd b1 hnet15 vdd lppfet w=0.44u l=0.12u m=1 
 x1 hnet15 b0 y vdd lppfet w=0.44u l=0.12u m=1 
 x2 hnet19 a0n vss vss lpnfet w=0.26u l=0.12u m=1 
 x3 nmin1 a1n hnet19 vss lpnfet w=0.26u l=0.12u m=1 
 x4 vdd a0n nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x5 vdd a1n nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x6 y nmin1 vdd vdd lppfet w=0.42u l=0.12u m=1 
 x7 net33 b0 vss vss lpnfet w=0.4u l=0.12u m=1 
 x8 y nmin1 net33 vss lpnfet w=0.4u l=0.12u m=1 
 x9 net33 b1 vss vss lpnfet w=0.4u l=0.12u m=1 
 .ends oai2bb2xlts 

 **** 
 *.subckt oai31x1ts y a0 a1 a2 b0 
 .subckt oai31x1ts y a0 a1 a2 b0 vss vdd
 x0 vdd a2 hnet11 vdd lppfet w=1.02u l=0.12u m=1 
 x1 hnet11 a1 hnet16 vdd lppfet w=1.02u l=0.12u m=1 
 x2 hnet16 a0 y vdd lppfet w=1.02u l=0.12u m=1 
 x3 net24 a0 vss vss lpnfet w=0.6u l=0.12u m=1 
 x4 y b0 net24 vss lpnfet w=0.6u l=0.12u m=1 
 x5 net24 a2 vss vss lpnfet w=0.6u l=0.12u m=1 
 x6 net24 a1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x7 y b0 vdd vdd lppfet w=0.64u l=0.12u m=1 
 .ends oai31x1ts 

 **** 
 *.subckt oai31x2ts y a0 a1 a2 b0 
 .subckt oai31x2ts y a0 a1 a2 b0 vss vdd
 x0 vdd a2 hnet12 vdd lppfet w=1.04u l=0.12u m=1 
 x1 hnet12 a1 hnet11 vdd lppfet w=1.04u l=0.12u m=1 
 x10 y b0 vdd vdd lppfet w=1.28u l=0.12u m=1 
 x2 hnet11 a0 y vdd lppfet w=1.04u l=0.12u m=1 
 x3 vdd a2 hnet14 vdd lppfet w=1.04u l=0.12u m=1 
 x4 hnet14 a1 hnet15 vdd lppfet w=1.04u l=0.12u m=1 
 x5 hnet15 a0 y vdd lppfet w=1.04u l=0.12u m=1 
 x6 net24 a0 vss vss lpnfet w=1.22u l=0.12u m=1 
 x7 y b0 net24 vss lpnfet w=1.22u l=0.12u m=1 
 x8 net24 a2 vss vss lpnfet w=1.22u l=0.12u m=1 
 x9 net24 a1 vss vss lpnfet w=1.22u l=0.12u m=1 
 .ends oai31x2ts 

 **** 
 *.subckt oai31x4ts y a0 a1 a2 b0 
 .subckt oai31x4ts y a0 a1 a2 b0 vss vdd
 x0 vdd net23 net19 vdd lppfet w=1.02u l=0.12u m=1 
 x1 net19 net23 vss vss lpnfet w=0.74u l=0.12u m=1 
 x10 net29 a1 vss vss lpnfet w=0.38u l=0.12u m=1 
 x11 net23 b0 vdd vdd lppfet w=0.4u l=0.12u m=1 
 x2 vdd net19 y vdd lppfet w=2.56u l=0.12u m=1 
 x3 y net19 vss vss lpnfet w=1.84u l=0.12u m=1 
 x4 vdd a2 hnet17 vdd lppfet w=0.66u l=0.12u m=1 
 x5 hnet17 a1 hnet22 vdd lppfet w=0.66u l=0.12u m=1 
 x6 hnet22 a0 net23 vdd lppfet w=0.66u l=0.12u m=1 
 x7 net29 a0 vss vss lpnfet w=0.38u l=0.12u m=1 
 x8 net23 b0 net29 vss lpnfet w=0.38u l=0.12u m=1 
 x9 net29 a2 vss vss lpnfet w=0.38u l=0.12u m=1 
 .ends oai31x4ts 

 **** 
 *.subckt oai31xlts y a0 a1 a2 b0 
 .subckt oai31xlts y a0 a1 a2 b0 vss vdd
 x0 vdd a2 hnet11 vdd lppfet w=0.54u l=0.12u m=1 
 x1 hnet11 a1 hnet16 vdd lppfet w=0.54u l=0.12u m=1 
 x2 hnet16 a0 y vdd lppfet w=0.54u l=0.12u m=1 
 x3 net24 a0 vss vss lpnfet w=0.4u l=0.12u m=1 
 x4 y b0 net24 vss lpnfet w=0.4u l=0.12u m=1 
 x5 net24 a2 vss vss lpnfet w=0.4u l=0.12u m=1 
 x6 net24 a1 vss vss lpnfet w=0.4u l=0.12u m=1 
 x7 y b0 vdd vdd lppfet w=0.42u l=0.12u m=1 
 .ends oai31xlts 

 **** 
 *.subckt oai32x1ts y a0 a1 a2 b0 b1 
 .subckt oai32x1ts y a0 a1 a2 b0 b1 vss vdd
 x0 vdd a2 hnet11 vdd lppfet w=1.02u l=0.12u m=1 
 x1 hnet11 a1 hnet17 vdd lppfet w=1.02u l=0.12u m=1 
 x2 hnet17 a0 y vdd lppfet w=1.02u l=0.12u m=1 
 x3 vdd b1 hnet21 vdd lppfet w=0.84u l=0.12u m=1 
 x4 hnet21 b0 y vdd lppfet w=0.84u l=0.12u m=1 
 x5 net46 a0 vss vss lpnfet w=0.6u l=0.12u m=1 
 x6 y b0 net46 vss lpnfet w=0.6u l=0.12u m=1 
 x7 y b1 net46 vss lpnfet w=0.6u l=0.12u m=1 
 x8 net46 a1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x9 net46 a2 vss vss lpnfet w=0.6u l=0.12u m=1 
 .ends oai32x1ts 

 **** 
 *.subckt oai32x2ts y a0 a1 a2 b0 b1 
 .subckt oai32x2ts y a0 a1 a2 b0 b1 vss vdd
 x0 vdd a2 hnet12 vdd lppfet w=1.04u l=0.12u m=1 
 x1 hnet12 a1 hnet11 vdd lppfet w=1.04u l=0.12u m=1 
 x10 net46 a0 vss vss lpnfet w=1.22u l=0.12u m=1 
 x11 y b0 net46 vss lpnfet w=1.16u l=0.12u m=1 
 x12 y b1 net46 vss lpnfet w=1.16u l=0.12u m=1 
 x13 net46 a1 vss vss lpnfet w=1.22u l=0.12u m=1 
 x14 net46 a2 vss vss lpnfet w=1.22u l=0.12u m=1 
 x2 hnet11 a0 y vdd lppfet w=1.04u l=0.12u m=1 
 x3 vdd a2 hnet14 vdd lppfet w=1.04u l=0.12u m=1 
 x4 hnet14 a1 hnet15 vdd lppfet w=1.04u l=0.12u m=1 
 x5 hnet15 a0 y vdd lppfet w=1.04u l=0.12u m=1 
 x6 vdd b1 hnet24 vdd lppfet w=0.84u l=0.12u m=1 
 x7 hnet24 b0 y vdd lppfet w=0.84u l=0.12u m=1 
 x8 vdd b1 hnet21 vdd lppfet w=0.84u l=0.12u m=1 
 x9 hnet21 b0 y vdd lppfet w=0.84u l=0.12u m=1 
 .ends oai32x2ts 

 **** 
 *.subckt oai32x4ts y a0 a1 a2 b0 b1 
 .subckt oai32x4ts y a0 a1 a2 b0 b1 vss vdd
 x0 vdd net26 net22 vdd lppfet w=1.02u l=0.12u m=1 
 x1 net22 net26 vss vss lpnfet w=0.74u l=0.12u m=1 
 x10 net26 b0 net47 vss lpnfet w=0.38u l=0.12u m=1 
 x11 net26 b1 net47 vss lpnfet w=0.38u l=0.12u m=1 
 x12 net47 a1 vss vss lpnfet w=0.38u l=0.12u m=1 
 x13 net47 a2 vss vss lpnfet w=0.38u l=0.12u m=1 
 x2 vdd net22 y vdd lppfet w=2.56u l=0.12u m=1 
 x3 y net22 vss vss lpnfet w=1.84u l=0.12u m=1 
 x4 vdd a2 hnet19 vdd lppfet w=0.66u l=0.12u m=1 
 x5 hnet19 a1 hnet24 vdd lppfet w=0.66u l=0.12u m=1 
 x6 hnet24 a0 net26 vdd lppfet w=0.66u l=0.12u m=1 
 x7 vdd b1 hnet28 vdd lppfet w=0.54u l=0.12u m=1 
 x8 hnet28 b0 net26 vdd lppfet w=0.54u l=0.12u m=1 
 x9 net47 a0 vss vss lpnfet w=0.38u l=0.12u m=1 
 .ends oai32x4ts 

 **** 
 *.subckt oai32xlts y a0 a1 a2 b0 b1 
 .subckt oai32xlts y a0 a1 a2 b0 b1 vss vdd
 x0 vdd a2 hnet11 vdd lppfet w=0.54u l=0.12u m=1 
 x1 hnet11 a1 hnet17 vdd lppfet w=0.54u l=0.12u m=1 
 x2 hnet17 a0 y vdd lppfet w=0.54u l=0.12u m=1 
 x3 vdd b1 hnet21 vdd lppfet w=0.44u l=0.12u m=1 
 x4 hnet21 b0 y vdd lppfet w=0.44u l=0.12u m=1 
 x5 net46 a0 vss vss lpnfet w=0.4u l=0.12u m=1 
 x6 y b0 net46 vss lpnfet w=0.4u l=0.12u m=1 
 x7 y b1 net46 vss lpnfet w=0.4u l=0.12u m=1 
 x8 net46 a1 vss vss lpnfet w=0.4u l=0.12u m=1 
 x9 net46 a2 vss vss lpnfet w=0.4u l=0.12u m=1 
 .ends oai32xlts 

 **** 
 *.subckt oai33x1ts y a0 a1 a2 b0 b1 b2 
 .subckt oai33x1ts y a0 a1 a2 b0 b1 b2 vss vdd
 x0 vdd a2 hnet12 vdd lppfet w=1.02u l=0.12u m=1 
 x1 hnet12 a1 hnet18 vdd lppfet w=1.02u l=0.12u m=1 
 x10 net57 b1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x11 net57 b2 vss vss lpnfet w=0.6u l=0.12u m=1 
 x2 hnet18 a0 y vdd lppfet w=1.02u l=0.12u m=1 
 x3 vdd b2 hnet19 vdd lppfet w=1.02u l=0.12u m=1 
 x4 hnet19 b1 hnet25 vdd lppfet w=1.02u l=0.12u m=1 
 x5 hnet25 b0 y vdd lppfet w=1.02u l=0.12u m=1 
 x6 net57 b0 vss vss lpnfet w=0.6u l=0.12u m=1 
 x7 y a0 net57 vss lpnfet w=0.6u l=0.12u m=1 
 x8 y a1 net57 vss lpnfet w=0.6u l=0.12u m=1 
 x9 y a2 net57 vss lpnfet w=0.6u l=0.12u m=1 
 .ends oai33x1ts 

 **** 
 *.subckt oai33x2ts y a0 a1 a2 b0 b1 b2 
 .subckt oai33x2ts y a0 a1 a2 b0 b1 b2 vss vdd
 x0 vdd a2 hnet13 vdd lppfet w=1.04u l=0.12u m=1 
 x1 hnet13 a1 hnet12 vdd lppfet w=1.04u l=0.12u m=1 
 x10 hnet24 b1 hnet25 vdd lppfet w=1.04u l=0.12u m=1 
 x11 hnet25 b0 y vdd lppfet w=1.04u l=0.12u m=1 
 x12 net57 b0 vss vss lpnfet w=1.22u l=0.12u m=1 
 x13 y a0 net57 vss lpnfet w=1.16u l=0.12u m=1 
 x14 y a1 net57 vss lpnfet w=1.16u l=0.12u m=1 
 x15 y a2 net57 vss lpnfet w=1.16u l=0.12u m=1 
 x16 net57 b1 vss vss lpnfet w=1.22u l=0.12u m=1 
 x17 net57 b2 vss vss lpnfet w=1.22u l=0.12u m=1 
 x2 hnet12 a0 y vdd lppfet w=1.04u l=0.12u m=1 
 x3 vdd a2 hnet15 vdd lppfet w=1.04u l=0.12u m=1 
 x4 hnet15 a1 hnet16 vdd lppfet w=1.04u l=0.12u m=1 
 x5 hnet16 a0 y vdd lppfet w=1.04u l=0.12u m=1 
 x6 vdd b2 hnet22 vdd lppfet w=1.04u l=0.12u m=1 
 x7 hnet22 b1 hnet21 vdd lppfet w=1.04u l=0.12u m=1 
 x8 hnet21 b0 y vdd lppfet w=1.04u l=0.12u m=1 
 x9 vdd b2 hnet24 vdd lppfet w=1.04u l=0.12u m=1 
 .ends oai33x2ts 

 **** 
 *.subckt oai33x4ts y a0 a1 a2 b0 b1 b2 
 .subckt oai33x4ts y a0 a1 a2 b0 b1 b2 vss vdd
 x0 vdd net41 net33 vdd lppfet w=1.02u l=0.12u m=1 
 x1 net33 net41 vss vss lpnfet w=0.74u l=0.12u m=1 
 x10 net62 b0 vss vss lpnfet w=0.38u l=0.12u m=1 
 x11 net41 a0 net62 vss lpnfet w=0.38u l=0.12u m=1 
 x12 net41 a1 net62 vss lpnfet w=0.38u l=0.12u m=1 
 x13 net41 a2 net62 vss lpnfet w=0.38u l=0.12u m=1 
 x14 net62 b1 vss vss lpnfet w=0.38u l=0.12u m=1 
 x15 net62 b2 vss vss lpnfet w=0.38u l=0.12u m=1 
 x2 vdd net33 y vdd lppfet w=2.48u l=0.12u m=1 
 x3 y net33 vss vss lpnfet w=1.78u l=0.12u m=1 
 x4 vdd a2 hnet20 vdd lppfet w=0.66u l=0.12u m=1 
 x5 hnet20 a1 hnet25 vdd lppfet w=0.66u l=0.12u m=1 
 x6 hnet25 a0 net41 vdd lppfet w=0.66u l=0.12u m=1 
 x7 vdd b2 hnet26 vdd lppfet w=0.66u l=0.12u m=1 
 x8 hnet26 b1 hnet31 vdd lppfet w=0.66u l=0.12u m=1 
 x9 hnet31 b0 net41 vdd lppfet w=0.66u l=0.12u m=1 
 .ends oai33x4ts 

 **** 
 *.subckt oai33xlts y a0 a1 a2 b0 b1 b2 
 .subckt oai33xlts y a0 a1 a2 b0 b1 b2 vss vdd
 x0 vdd a2 hnet12 vdd lppfet w=0.54u l=0.12u m=1 
 x1 hnet12 a1 hnet18 vdd lppfet w=0.54u l=0.12u m=1 
 x10 net57 b1 vss vss lpnfet w=0.4u l=0.12u m=1 
 x11 net57 b2 vss vss lpnfet w=0.4u l=0.12u m=1 
 x2 hnet18 a0 y vdd lppfet w=0.54u l=0.12u m=1 
 x3 vdd b2 hnet19 vdd lppfet w=0.54u l=0.12u m=1 
 x4 hnet19 b1 hnet25 vdd lppfet w=0.54u l=0.12u m=1 
 x5 hnet25 b0 y vdd lppfet w=0.54u l=0.12u m=1 
 x6 net57 b0 vss vss lpnfet w=0.4u l=0.12u m=1 
 x7 y a0 net57 vss lpnfet w=0.4u l=0.12u m=1 
 x8 y a1 net57 vss lpnfet w=0.4u l=0.12u m=1 
 x9 y a2 net57 vss lpnfet w=0.4u l=0.12u m=1 
 .ends oai33xlts 

 **** 
 *.subckt or2x1ts y a b 
 .subckt or2x1ts y a b vss vdd
 x0 vdd nmin y vdd lppfet w=0.64u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.46u l=0.12u m=1 
 x2 nmin b vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 nmin a vss vss lpnfet w=0.2u l=0.12u m=1 
 x4 vdd b hnet12 vdd lppfet w=0.36u l=0.12u m=1 
 x5 hnet12 a nmin vdd lppfet w=0.36u l=0.12u m=1 
 .ends or2x1ts 

 **** 
 *.subckt or2x2ts y a b 
 .subckt or2x2ts y a b vss vdd
 x0 vdd nmin y vdd lppfet w=1.28u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.92u l=0.12u m=1 
 x2 nmin b vss vss lpnfet w=0.36u l=0.12u m=1 
 x3 nmin a vss vss lpnfet w=0.36u l=0.12u m=1 
 x4 vdd b hnet12 vdd lppfet w=0.66u l=0.12u m=1 
 x5 hnet12 a nmin vdd lppfet w=0.66u l=0.12u m=1 
 .ends or2x2ts 

 **** 
 *.subckt or2x4ts y a b 
 .subckt or2x4ts y a b vss vdd
 x0 vdd nmin y vdd lppfet w=2.46u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=1.84u l=0.12u m=1 
 x2 nmin b vss vss lpnfet w=0.66u l=0.12u m=1 
 x3 nmin a vss vss lpnfet w=0.66u l=0.12u m=1 
 x4 vdd b hnet12 vdd lppfet w=1.3u l=0.12u m=1 
 x5 hnet12 a nmin vdd lppfet w=1.3u l=0.12u m=1 
 .ends or2x4ts 

 **** 
 *.subckt or2x6ts y a b 
 .subckt or2x6ts y a b vss vdd
 x0 vdd nmin y vdd lppfet w=3.84u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=2.76u l=0.12u m=1 
 x2 nmin b vss vss lpnfet w=1.1u l=0.12u m=1 
 x3 nmin a vss vss lpnfet w=1.1u l=0.12u m=1 
 x4 vdd b hnet13 vdd lppfet w=1u l=0.12u m=1 
 x5 hnet13 a nmin vdd lppfet w=1u l=0.12u m=1 
 x6 vdd b hnet11 vdd lppfet w=1u l=0.12u m=1 
 x7 hnet11 a nmin vdd lppfet w=1u l=0.12u m=1 
 .ends or2x6ts 

 **** 
 *.subckt or2x8ts y a b 
 .subckt or2x8ts y a b vss vdd
 x0 vdd nmin y vdd lppfet w=4.68u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=3.42u l=0.12u m=1 
 x2 nmin b vss vss lpnfet w=1.32u l=0.12u m=1 
 x3 nmin a vss vss lpnfet w=1.32u l=0.12u m=1 
 x4 vdd b hnet13 vdd lppfet w=1.3u l=0.12u m=1 
 x5 hnet13 a nmin vdd lppfet w=1.3u l=0.12u m=1 
 x6 vdd b hnet11 vdd lppfet w=1.3u l=0.12u m=1 
 x7 hnet11 a nmin vdd lppfet w=1.3u l=0.12u m=1 
 .ends or2x8ts 

 **** 
 *.subckt or2xlts a b y 
 .subckt or2xlts a b y vss vdd
 x0 vdd nmin y vdd lppfet w=0.42u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.24u l=0.12u m=1 
 x2 nmin b vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 nmin a vss vss lpnfet w=0.2u l=0.12u m=1 
 x4 vdd b hnet12 vdd lppfet w=0.3u l=0.12u m=1 
 x5 hnet12 a nmin vdd lppfet w=0.3u l=0.12u m=1 
 .ends or2xlts 

 **** 
 *.subckt or3x1ts y a b c 
 .subckt or3x1ts y a b c vss vdd
 x0 vdd nmin y vdd lppfet w=0.64u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.46u l=0.12u m=1 
 x2 nmin c vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 nmin b vss vss lpnfet w=0.2u l=0.12u m=1 
 x4 nmin a vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 vdd c hnet17 vdd lppfet w=0.44u l=0.12u m=1 
 x6 hnet17 b hnet16 vdd lppfet w=0.44u l=0.12u m=1 
 x7 hnet16 a nmin vdd lppfet w=0.44u l=0.12u m=1 
 .ends or3x1ts 

 **** 
 *.subckt or3x2ts y a b c 
 .subckt or3x2ts y a b c vss vdd
 x0 vdd nmin y vdd lppfet w=1.28u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.92u l=0.12u m=1 
 x2 nmin c vss vss lpnfet w=0.36u l=0.12u m=1 
 x3 nmin b vss vss lpnfet w=0.36u l=0.12u m=1 
 x4 nmin a vss vss lpnfet w=0.36u l=0.12u m=1 
 x5 vdd c hnet17 vdd lppfet w=0.8u l=0.12u m=1 
 x6 hnet17 b hnet16 vdd lppfet w=0.8u l=0.12u m=1 
 x7 hnet16 a nmin vdd lppfet w=0.8u l=0.12u m=1 
 .ends or3x2ts 

 **** 
 *.subckt or3x4ts y a b c 
 .subckt or3x4ts y a b c vss vdd
 x0 vdd nmin y vdd lppfet w=2.56u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=1.84u l=0.12u m=1 
 x10 hnet12 a nmin vdd lppfet w=0.84u l=0.12u m=1 
 x2 nmin c vss vss lpnfet w=0.74u l=0.12u m=1 
 x3 nmin b vss vss lpnfet w=0.74u l=0.12u m=1 
 x4 nmin a vss vss lpnfet w=0.74u l=0.12u m=1 
 x5 vdd c hnet19 vdd lppfet w=0.84u l=0.12u m=1 
 x6 hnet19 b hnet15 vdd lppfet w=0.84u l=0.12u m=1 
 x7 hnet15 a nmin vdd lppfet w=0.84u l=0.12u m=1 
 x8 vdd c hnet14 vdd lppfet w=0.84u l=0.12u m=1 
 x9 hnet14 b hnet12 vdd lppfet w=0.84u l=0.12u m=1 
 .ends or3x4ts 

 **** 
 *.subckt or3x6ts y a b c 
 .subckt or3x6ts y a b c vss vdd
 x0 vdd nmin y vdd lppfet w=3.5u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=2.76u l=0.12u m=1 
 x10 hnet12 a nmin vdd lppfet w=1.24u l=0.12u m=1 
 x2 nmin c vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 nmin b vss vss lpnfet w=0.92u l=0.12u m=1 
 x4 nmin a vss vss lpnfet w=0.92u l=0.12u m=1 
 x5 vdd c hnet19 vdd lppfet w=1.24u l=0.12u m=1 
 x6 hnet19 b hnet15 vdd lppfet w=1.24u l=0.12u m=1 
 x7 hnet15 a nmin vdd lppfet w=1.24u l=0.12u m=1 
 x8 vdd c hnet14 vdd lppfet w=1.24u l=0.12u m=1 
 x9 hnet14 b hnet12 vdd lppfet w=1.24u l=0.12u m=1 
 .ends or3x6ts 

 **** 
 *.subckt or3x8ts y a b c 
 .subckt or3x8ts y a b c vss vdd
 x0 vdd nmin y vdd lppfet w=5.12u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=3.68u l=0.12u m=1 
 x10 hnet15 a nmin vdd lppfet w=1.06u l=0.12u m=1 
 x11 vdd c hnet12 vdd lppfet w=1.06u l=0.12u m=1 
 x12 hnet12 b hnet20 vdd lppfet w=1.06u l=0.12u m=1 
 x13 hnet20 a nmin vdd lppfet w=1.06u l=0.12u m=1 
 x2 nmin c vss vss lpnfet w=1.48u l=0.12u m=1 
 x3 nmin b vss vss lpnfet w=1.48u l=0.12u m=1 
 x4 nmin a vss vss lpnfet w=1.48u l=0.12u m=1 
 x5 vdd c hnet21 vdd lppfet w=1.06u l=0.12u m=1 
 x6 hnet21 b hnet16 vdd lppfet w=1.06u l=0.12u m=1 
 x7 hnet16 a nmin vdd lppfet w=1.06u l=0.12u m=1 
 x8 vdd c hnet14 vdd lppfet w=1.06u l=0.12u m=1 
 x9 hnet14 b hnet15 vdd lppfet w=1.06u l=0.12u m=1 
 .ends or3x8ts 

 **** 
 *.subckt or3xlts y a b c 
 .subckt or3xlts y a b c vss vdd
 x0 vdd nmin y vdd lppfet w=0.42u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.24u l=0.12u m=1 
 x2 nmin c vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 nmin b vss vss lpnfet w=0.2u l=0.12u m=1 
 x4 nmin a vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 vdd c hnet17 vdd lppfet w=0.36u l=0.12u m=1 
 x6 hnet17 b hnet16 vdd lppfet w=0.36u l=0.12u m=1 
 x7 hnet16 a nmin vdd lppfet w=0.36u l=0.12u m=1 
 .ends or3xlts 

 **** 
 *.subckt or4x1ts y a b c d 
 .subckt or4x1ts y a b c d vss vdd
 x0 vdd nmin y vdd lppfet w=0.64u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.46u l=0.12u m=1 
 x2 nmin d vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 nmin c vss vss lpnfet w=0.2u l=0.12u m=1 
 x4 nmin b vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 nmin a vss vss lpnfet w=0.2u l=0.12u m=1 
 x6 vdd d hnet15 vdd lppfet w=0.52u l=0.12u m=1 
 x7 hnet15 c hnet18 vdd lppfet w=0.52u l=0.12u m=1 
 x8 hnet18 b hnet14 vdd lppfet w=0.52u l=0.12u m=1 
 x9 hnet14 a nmin vdd lppfet w=0.52u l=0.12u m=1 
 .ends or4x1ts 

 **** 
 *.subckt or4x2ts y a b c d 
 .subckt or4x2ts y a b c d vss vdd
 x0 vdd nmin y vdd lppfet w=1.28u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.92u l=0.12u m=1 
 x2 nmin d vss vss lpnfet w=0.36u l=0.12u m=1 
 x3 nmin c vss vss lpnfet w=0.36u l=0.12u m=1 
 x4 nmin b vss vss lpnfet w=0.36u l=0.12u m=1 
 x5 nmin a vss vss lpnfet w=0.36u l=0.12u m=1 
 x6 vdd d hnet15 vdd lppfet w=0.94u l=0.12u m=1 
 x7 hnet15 c hnet18 vdd lppfet w=0.94u l=0.12u m=1 
 x8 hnet18 b hnet14 vdd lppfet w=0.94u l=0.12u m=1 
 x9 hnet14 a nmin vdd lppfet w=0.94u l=0.12u m=1 
 .ends or4x2ts 

 **** 
 *.subckt or4x4ts y a b c d 
 .subckt or4x4ts y a b c d vss vdd
 x0 vdd nmin y vdd lppfet w=2.56u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=1.84u l=0.12u m=1 
 x10 vdd d hnet14 vdd lppfet w=0.96u l=0.12u m=1 
 x11 hnet14 c hnet13 vdd lppfet w=0.96u l=0.12u m=1 
 x12 hnet13 b hnet22 vdd lppfet w=0.96u l=0.12u m=1 
 x13 hnet22 a nmin vdd lppfet w=0.96u l=0.12u m=1 
 x2 nmin d vss vss lpnfet w=0.74u l=0.12u m=1 
 x3 nmin c vss vss lpnfet w=0.74u l=0.12u m=1 
 x4 nmin b vss vss lpnfet w=0.74u l=0.12u m=1 
 x5 nmin a vss vss lpnfet w=0.74u l=0.12u m=1 
 x6 vdd d hnet18 vdd lppfet w=0.96u l=0.12u m=1 
 x7 hnet18 c hnet17 vdd lppfet w=0.96u l=0.12u m=1 
 x8 hnet17 b hnet16 vdd lppfet w=0.96u l=0.12u m=1 
 x9 hnet16 a nmin vdd lppfet w=0.96u l=0.12u m=1 
 .ends or4x4ts 

 **** 
 *.subckt or4x6ts y a b c d 
 .subckt or4x6ts y a b c d vss vdd
 x0 vdd nmin y vdd lppfet w=3.64u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=2.76u l=0.12u m=1 
 x10 vdd d hnet14 vdd lppfet w=1.3u l=0.12u m=1 
 x11 hnet14 c hnet13 vdd lppfet w=1.3u l=0.12u m=1 
 x12 hnet13 b hnet22 vdd lppfet w=1.3u l=0.12u m=1 
 x13 hnet22 a nmin vdd lppfet w=1.3u l=0.12u m=1 
 x2 nmin d vss vss lpnfet w=1.08u l=0.12u m=1 
 x3 nmin c vss vss lpnfet w=1.08u l=0.12u m=1 
 x4 nmin b vss vss lpnfet w=1.08u l=0.12u m=1 
 x5 nmin a vss vss lpnfet w=1.08u l=0.12u m=1 
 x6 vdd d hnet18 vdd lppfet w=1.3u l=0.12u m=1 
 x7 hnet18 c hnet17 vdd lppfet w=1.3u l=0.12u m=1 
 x8 hnet17 b hnet16 vdd lppfet w=1.3u l=0.12u m=1 
 x9 hnet16 a nmin vdd lppfet w=1.3u l=0.12u m=1 
 .ends or4x6ts 

 **** 
 *.subckt or4x8ts y a b c d 
 .subckt or4x8ts y a b c d vss vdd
 x0 vdd nmin y vdd lppfet w=4.94u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=3.68u l=0.12u m=1 
 x10 vdd d hnet14 vdd lppfet w=1.18u l=0.12u m=1 
 x11 hnet14 c hnet13 vdd lppfet w=1.18u l=0.12u m=1 
 x12 hnet13 b hnet15 vdd lppfet w=1.18u l=0.12u m=1 
 x13 hnet15 a nmin vdd lppfet w=1.18u l=0.12u m=1 
 x14 vdd d hnet24 vdd lppfet w=1.18u l=0.12u m=1 
 x15 hnet24 c hnet16 vdd lppfet w=1.18u l=0.12u m=1 
 x16 hnet16 b hnet19 vdd lppfet w=1.18u l=0.12u m=1 
 x17 hnet19 a nmin vdd lppfet w=1.18u l=0.12u m=1 
 x2 nmin d vss vss lpnfet w=1.24u l=0.12u m=1 
 x3 nmin c vss vss lpnfet w=1.24u l=0.12u m=1 
 x4 nmin b vss vss lpnfet w=1.24u l=0.12u m=1 
 x5 nmin a vss vss lpnfet w=1.24u l=0.12u m=1 
 x6 vdd d hnet26 vdd lppfet w=1.18u l=0.12u m=1 
 x7 hnet26 c hnet23 vdd lppfet w=1.18u l=0.12u m=1 
 x8 hnet23 b hnet18 vdd lppfet w=1.18u l=0.12u m=1 
 x9 hnet18 a nmin vdd lppfet w=1.18u l=0.12u m=1 
 .ends or4x8ts 

 **** 
 *.subckt or4xlts y a b c d 
 .subckt or4xlts y a b c d vss vdd
 x0 vdd nmin y vdd lppfet w=0.42u l=0.12u m=1 
 x1 y nmin vss vss lpnfet w=0.28u l=0.12u m=1 
 x2 nmin d vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 nmin c vss vss lpnfet w=0.2u l=0.12u m=1 
 x4 nmin b vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 nmin a vss vss lpnfet w=0.2u l=0.12u m=1 
 x6 vdd d hnet15 vdd lppfet w=0.42u l=0.12u m=1 
 x7 hnet15 c hnet18 vdd lppfet w=0.42u l=0.12u m=1 
 x8 hnet18 b hnet14 vdd lppfet w=0.42u l=0.12u m=1 
 x9 hnet14 a nmin vdd lppfet w=0.42u l=0.12u m=1 
 .ends or4xlts 

 **** 
 *.subckt rf1r1wx1ts rb rw rwn wb ww 
 .subckt rf1r1wx1ts rb rw rwn wb ww vss vdd
 x0 hnet12 wb vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 nmwrbl ww hnet12 vss lpnfet w=0.2u l=0.12u m=1 
 x10 hnet30 rwn rb vdd lppfet w=0.64u l=0.12u m=1 
 x11 vdd q hnet30 vdd lppfet w=0.64u l=0.12u m=1 
 x12 vdd ww nmwrwl vdd lppfet w=0.36u l=0.12u m=1 
 x13 nmwrwl ww vss vss lpnfet w=0.2u l=0.12u m=1 
 x14 vdd nmwrbl q vdd lppfet w=0.4u l=0.12u m=1 
 x15 q nmwrbl vss vss lpnfet w=0.18u l=0.12u m=1 
 x2 hnet14 nmwrwl nmwrbl vdd lppfet w=0.38u l=0.12u m=1 
 x3 vdd wb hnet14 vdd lppfet w=0.38u l=0.12u m=1 
 x4 hnet20 q vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 nmwrbl nmwrwl hnet20 vss lpnfet w=0.2u l=0.12u m=1 
 x6 hnet22 ww nmwrbl vdd lppfet w=0.28u l=0.12u m=1 
 x7 vdd q hnet22 vdd lppfet w=0.28u l=0.12u m=1 
 x8 hnet28 q vss vss lpnfet w=0.42u l=0.12u m=1 
 x9 rb rw hnet28 vss lpnfet w=0.42u l=0.12u m=1 
 .ends rf1r1wx1ts 

 **** 
 *.subckt rf2r1wx1ts r1b r2b r1w r2w wb ww 
 .subckt rf2r1wx1ts r1b r2b r1w r2w wb ww vss vdd
 x0 hnet15 q vss vss lpnfet w=0.88u l=0.12u m=1 
 x1 r2b r2w hnet15 vss lpnfet w=0.88u l=0.12u m=1 
 x10 hnet33 ww nmwrbl vdd lppfet w=0.28u l=0.12u m=1 
 x11 vdd q hnet33 vdd lppfet w=0.28u l=0.12u m=1 
 x12 hnet39 q vss vss lpnfet w=0.88u l=0.12u m=1 
 x13 r1b r1w hnet39 vss lpnfet w=0.88u l=0.12u m=1 
 x14 hnet41 nmrdwl1 r1b vdd lppfet w=1.26u l=0.12u m=1 
 x15 vdd q hnet41 vdd lppfet w=1.26u l=0.12u m=1 
 x16 vdd r2w nmrdwl2 vdd lppfet w=0.3u l=0.12u m=1 
 x17 nmrdwl2 r2w vss vss lpnfet w=0.22u l=0.12u m=1 
 x18 vdd r1w nmrdwl1 vdd lppfet w=0.3u l=0.12u m=1 
 x19 nmrdwl1 r1w vss vss lpnfet w=0.22u l=0.12u m=1 
 x2 hnet17 nmrdwl2 r2b vdd lppfet w=1.28u l=0.12u m=1 
 x20 vdd ww nmwrwl vdd lppfet w=0.28u l=0.12u m=1 
 x21 nmwrwl ww vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 vdd nmwrbl q vdd lppfet w=1.12u l=0.12u m=1 
 x23 q nmwrbl vss vss lpnfet w=0.78u l=0.12u m=1 
 x3 vdd q hnet17 vdd lppfet w=1.28u l=0.12u m=1 
 x4 hnet23 wb vss vss lpnfet w=0.6u l=0.12u m=1 
 x5 nmwrbl ww hnet23 vss lpnfet w=0.6u l=0.12u m=1 
 x6 hnet25 nmwrwl nmwrbl vdd lppfet w=0.86u l=0.12u m=1 
 x7 vdd wb hnet25 vdd lppfet w=0.86u l=0.12u m=1 
 x8 hnet31 q vss vss lpnfet w=0.2u l=0.12u m=1 
 x9 nmwrbl nmwrwl hnet31 vss lpnfet w=0.2u l=0.12u m=1 
 .ends rf2r1wx1ts 

 **** 
 *.subckt rfrdx1ts brb rb 
 .subckt rfrdx1ts brb rb vss vdd
 x0 vdd brb rb vdd lppfet w=0.28u l=0.38u m=1 
 x1 rb brb vss vss lpnfet w=0.2u l=0.76u m=1 
 x2 vdd rb brb vdd lppfet w=0.64u l=0.12u m=1 
 x3 brb rb vss vss lpnfet w=0.46u l=0.12u m=1 
 .ends rfrdx1ts 

 **** 
 *.subckt rfrdx2ts brb rb 
 .subckt rfrdx2ts brb rb vss vdd
 x0 vdd brb rb vdd lppfet w=0.28u l=0.38u m=1 
 x1 rb brb vss vss lpnfet w=0.2u l=0.76u m=1 
 x2 vdd rb brb vdd lppfet w=1.28u l=0.12u m=1 
 x3 brb rb vss vss lpnfet w=0.92u l=0.12u m=1 
 .ends rfrdx2ts 

 **** 
 *.subckt rfrdx4ts brb rb 
 .subckt rfrdx4ts brb rb vss vdd
 x0 vdd brb rb vdd lppfet w=0.28u l=0.38u m=1 
 x1 rb brb vss vss lpnfet w=0.2u l=0.76u m=1 
 x2 vdd rb brb vdd lppfet w=2.56u l=0.12u m=1 
 x3 brb rb vss vss lpnfet w=1.84u l=0.12u m=1 
 .ends rfrdx4ts 

 **** 
 *.subckt sdffhqx1ts q ck d se si 
 .subckt sdffhqx1ts q ck d se si vss vdd
 x0 vdd c hnet24 vdd lppfet w=0.58u l=0.12u m=1 
 x1 hnet24 nmsi pm vdd lppfet w=0.58u l=0.12u m=1 
 x10 net95 c m vss lpnfet w=0.48u l=0.12u m=1 
 x11 hnet30 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x12 nmsi se hnet30 vss lpnfet w=0.2u l=0.12u m=1 
 x13 hnet32 nmse nmsi vdd lppfet w=0.28u l=0.12u m=1 
 x14 vdd si hnet32 vdd lppfet w=0.28u l=0.12u m=1 
 x15 hnet36 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x16 pm c hnet36 vss lpnfet w=0.2u l=0.12u m=1 
 x17 hnet38 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x18 vdd m hnet38 vdd lppfet w=0.28u l=0.12u m=1 
 x19 hnet42 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet28 cn vss vss lpnfet w=0.42u l=0.12u m=1 
 x20 net95 cn hnet42 vss lpnfet w=0.2u l=0.12u m=1 
 x21 hnet44 c net95 vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd s hnet44 vdd lppfet w=0.28u l=0.12u m=1 
 x23 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x24 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 vdd d nmin vdd lppfet w=0.38u l=0.12u m=1 
 x26 nmin d vss vss lpnfet w=0.28u l=0.12u m=1 
 x27 vdd pm m vdd lppfet w=0.96u l=0.12u m=1 
 x28 m pm vss vss lpnfet w=0.5u l=0.12u m=1 
 x29 vdd net95 s vdd lppfet w=0.28u l=0.12u m=1 
 x3 pm nmsi hnet28 vss lpnfet w=0.42u l=0.12u m=1 
 x30 s net95 vss vss lpnfet w=0.2u l=0.12u m=1 
 x31 vdd net95 q vdd lppfet w=0.74u l=0.12u m=1 
 x32 q net95 vss vss lpnfet w=0.46u l=0.12u m=1 
 x33 vdd net110 c vdd lppfet w=0.84u l=0.12u m=1 
 x34 c net110 vss vss lpnfet w=0.3u l=0.12u m=1 
 x35 vdd ck net110 vdd lppfet w=0.28u l=0.12u m=1 
 x36 net110 ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x4 net69 ck vdd vdd lppfet w=0.7u l=0.12u m=1 
 x5 cn c net69 vdd lppfet w=0.52u l=0.12u m=1 
 x6 nmsi se nmin vdd lppfet w=0.38u l=0.12u m=1 
 x7 net95 cn m vdd lppfet w=0.96u l=0.12u m=1 
 x8 cn ck vss vss lpnfet w=0.2u l=0.12u m=1 
 x9 nmsi nmse nmin vss lpnfet w=0.28u l=0.12u m=1 
 .ends sdffhqx1ts 

 **** 
 *.subckt sdffhqx2ts q ck d se si 
 .subckt sdffhqx2ts q ck d se si vss vdd
 x0 vdd c hnet24 vdd lppfet w=1u l=0.12u m=1 
 x1 hnet24 nmsi pm vdd lppfet w=1u l=0.12u m=1 
 x10 net95 c m vss lpnfet w=0.82u l=0.12u m=1 
 x11 hnet30 si vss vss lpnfet w=0.24u l=0.12u m=1 
 x12 nmsi se hnet30 vss lpnfet w=0.24u l=0.12u m=1 
 x13 hnet32 nmse nmsi vdd lppfet w=0.34u l=0.12u m=1 
 x14 vdd si hnet32 vdd lppfet w=0.34u l=0.12u m=1 
 x15 hnet36 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x16 pm c hnet36 vss lpnfet w=0.2u l=0.12u m=1 
 x17 hnet38 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x18 vdd m hnet38 vdd lppfet w=0.28u l=0.12u m=1 
 x19 hnet42 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet28 cn vss vss lpnfet w=0.72u l=0.12u m=1 
 x20 net95 cn hnet42 vss lpnfet w=0.2u l=0.12u m=1 
 x21 hnet44 c net95 vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd s hnet44 vdd lppfet w=0.28u l=0.12u m=1 
 x23 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x24 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 vdd d nmin vdd lppfet w=0.68u l=0.12u m=1 
 x26 nmin d vss vss lpnfet w=0.5u l=0.12u m=1 
 x27 vdd pm m vdd lppfet w=1.64u l=0.12u m=1 
 x28 m pm vss vss lpnfet w=0.86u l=0.12u m=1 
 x29 vdd net95 s vdd lppfet w=0.28u l=0.12u m=1 
 x3 pm nmsi hnet28 vss lpnfet w=0.72u l=0.12u m=1 
 x30 s net95 vss vss lpnfet w=0.2u l=0.12u m=1 
 x31 vdd net95 q vdd lppfet w=1.3u l=0.12u m=1 
 x32 q net95 vss vss lpnfet w=0.92u l=0.12u m=1 
 x33 vdd net110 c vdd lppfet w=1.18u l=0.12u m=1 
 x34 c net110 vss vss lpnfet w=0.42u l=0.12u m=1 
 x35 vdd ck net110 vdd lppfet w=0.32u l=0.12u m=1 
 x36 net110 ck vss vss lpnfet w=0.32u l=0.12u m=1 
 x4 net67 ck vdd vdd lppfet w=0.9u l=0.12u m=1 
 x5 cn c net67 vdd lppfet w=0.68u l=0.12u m=1 
 x6 nmsi se nmin vdd lppfet w=0.68u l=0.12u m=1 
 x7 net95 cn m vdd lppfet w=1.64u l=0.12u m=1 
 x8 cn ck vss vss lpnfet w=0.26u l=0.12u m=1 
 x9 nmsi nmse nmin vss lpnfet w=0.5u l=0.12u m=1 
 .ends sdffhqx2ts 

 **** 
 *.subckt sdffhqx4ts q ck d se si 
 .subckt sdffhqx4ts q ck d se si vss vdd
 x0 hnet26 cn vss vss lpnfet w=0.6u l=0.12u m=1 
 x1 pm nmsi hnet26 vss lpnfet w=0.6u l=0.12u m=1 
 x10 net75 ck vdd vdd lppfet w=0.84u l=0.12u m=1 
 x11 cn c net75 vdd lppfet w=0.64u l=0.12u m=1 
 x12 nmsi se nmin vdd lppfet w=1.22u l=0.12u m=1 
 x13 net101 cn m vdd lppfet w=3u l=0.12u m=1 
 x14 cn ck vss vss lpnfet w=0.48u l=0.12u m=1 
 x15 nmsi nmse nmin vss lpnfet w=0.88u l=0.12u m=1 
 x16 net101 c m vss lpnfet w=1.5u l=0.12u m=1 
 x17 hnet33 si vss vss lpnfet w=0.44u l=0.12u m=1 
 x18 nmsi se hnet33 vss lpnfet w=0.44u l=0.12u m=1 
 x19 hnet35 nmse nmsi vdd lppfet w=0.62u l=0.12u m=1 
 x2 hnet22 cn vss vss lpnfet w=0.6u l=0.12u m=1 
 x20 vdd si hnet35 vdd lppfet w=0.62u l=0.12u m=1 
 x21 hnet39 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 pm c hnet39 vss lpnfet w=0.2u l=0.12u m=1 
 x23 hnet41 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x24 vdd m hnet41 vdd lppfet w=0.28u l=0.12u m=1 
 x25 hnet45 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 net101 cn hnet45 vss lpnfet w=0.2u l=0.12u m=1 
 x27 hnet47 c net101 vdd lppfet w=0.28u l=0.12u m=1 
 x28 vdd s hnet47 vdd lppfet w=0.28u l=0.12u m=1 
 x29 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x3 pm nmsi hnet22 vss lpnfet w=0.6u l=0.12u m=1 
 x30 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x31 vdd d nmin vdd lppfet w=1.22u l=0.12u m=1 
 x32 nmin d vss vss lpnfet w=0.88u l=0.12u m=1 
 x33 vdd pm m vdd lppfet w=2.6u l=0.12u m=1 
 x34 m pm vss vss lpnfet w=1.56u l=0.12u m=1 
 x35 vdd net101 s vdd lppfet w=0.28u l=0.12u m=1 
 x36 s net101 vss vss lpnfet w=0.2u l=0.12u m=1 
 x37 vdd net101 q vdd lppfet w=2.62u l=0.12u m=1 
 x38 q net101 vss vss lpnfet w=1.84u l=0.12u m=1 
 x39 vdd net116 c vdd lppfet w=2u l=0.12u m=1 
 x4 vdd c hnet31 vdd lppfet w=0.9u l=0.12u m=1 
 x40 c net116 vss vss lpnfet w=0.72u l=0.12u m=1 
 x41 vdd ck net116 vdd lppfet w=0.54u l=0.12u m=1 
 x42 net116 ck vss vss lpnfet w=0.54u l=0.12u m=1 
 x5 hnet31 nmsi pm vdd lppfet w=0.9u l=0.12u m=1 
 x6 vdd c hnet28 vdd lppfet w=0.9u l=0.12u m=1 
 x7 hnet28 nmsi pm vdd lppfet w=0.9u l=0.12u m=1 
 x8 cn c net70 vdd lppfet w=0.64u l=0.12u m=1 
 x9 net70 ck vdd vdd lppfet w=0.84u l=0.12u m=1 
 .ends sdffhqx4ts 

 **** 
 *.subckt sdffhqx8ts q ck d se si 
 .subckt sdffhqx8ts q ck d se si vss vdd
 x0 hnet26 cn vss vss lpnfet w=0.6u l=0.12u m=1 
 x1 pm nmsi hnet26 vss lpnfet w=0.6u l=0.12u m=1 
 x10 net75 ck vdd vdd lppfet w=0.84u l=0.12u m=1 
 x11 cn c net75 vdd lppfet w=0.64u l=0.12u m=1 
 x12 nmsi se nmin vdd lppfet w=1.22u l=0.12u m=1 
 x13 net101 cn m vdd lppfet w=3u l=0.12u m=1 
 x14 cn ck vss vss lpnfet w=0.48u l=0.12u m=1 
 x15 nmsi nmse nmin vss lpnfet w=0.88u l=0.12u m=1 
 x16 net101 c m vss lpnfet w=1.5u l=0.12u m=1 
 x17 hnet33 si vss vss lpnfet w=0.44u l=0.12u m=1 
 x18 nmsi se hnet33 vss lpnfet w=0.44u l=0.12u m=1 
 x19 hnet35 nmse nmsi vdd lppfet w=0.62u l=0.12u m=1 
 x2 hnet22 cn vss vss lpnfet w=0.6u l=0.12u m=1 
 x20 vdd si hnet35 vdd lppfet w=0.62u l=0.12u m=1 
 x21 hnet39 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 pm c hnet39 vss lpnfet w=0.2u l=0.12u m=1 
 x23 hnet41 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x24 vdd m hnet41 vdd lppfet w=0.28u l=0.12u m=1 
 x25 hnet45 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 net101 cn hnet45 vss lpnfet w=0.2u l=0.12u m=1 
 x27 hnet47 c net101 vdd lppfet w=0.28u l=0.12u m=1 
 x28 vdd s hnet47 vdd lppfet w=0.28u l=0.12u m=1 
 x29 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x3 pm nmsi hnet22 vss lpnfet w=0.6u l=0.12u m=1 
 x30 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x31 vdd d nmin vdd lppfet w=1.22u l=0.12u m=1 
 x32 nmin d vss vss lpnfet w=0.88u l=0.12u m=1 
 x33 vdd pm m vdd lppfet w=2.6u l=0.12u m=1 
 x34 m pm vss vss lpnfet w=1.56u l=0.12u m=1 
 x35 vdd net101 s vdd lppfet w=0.28u l=0.12u m=1 
 x36 s net101 vss vss lpnfet w=0.2u l=0.12u m=1 
 x37 vdd net101 q vdd lppfet w=5.2u l=0.12u m=1 
 x38 q net101 vss vss lpnfet w=3.68u l=0.12u m=1 
 x39 vdd net116 c vdd lppfet w=2u l=0.12u m=1 
 x4 vdd c hnet31 vdd lppfet w=0.9u l=0.12u m=1 
 x40 c net116 vss vss lpnfet w=0.72u l=0.12u m=1 
 x41 vdd ck net116 vdd lppfet w=0.54u l=0.12u m=1 
 x42 net116 ck vss vss lpnfet w=0.54u l=0.12u m=1 
 x5 hnet31 nmsi pm vdd lppfet w=0.9u l=0.12u m=1 
 x6 vdd c hnet28 vdd lppfet w=0.9u l=0.12u m=1 
 x7 hnet28 nmsi pm vdd lppfet w=0.9u l=0.12u m=1 
 x8 cn c net70 vdd lppfet w=0.64u l=0.12u m=1 
 x9 net70 ck vdd vdd lppfet w=0.84u l=0.12u m=1 
 .ends sdffhqx8ts 

 **** 
 *.subckt sdffnsrx1ts q qn ckn d rn se si sn 
 .subckt sdffnsrx1ts q qn ckn d rn se si sn vss vdd
 x0 vdd d hnet32 vdd lppfet w=0.28u l=0.12u m=1 
 x1 hnet32 se nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x10 net148 c net106 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net148 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x12 net117 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x13 nminsi nmse net117 vss lpnfet w=0.2u l=0.12u m=1 
 x14 net121 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 nminsi se net121 vss lpnfet w=0.2u l=0.12u m=1 
 x16 pm cn nminsi vss lpnfet w=0.2u l=0.12u m=1 
 x17 m net159 net142 vss lpnfet w=0.2u l=0.12u m=1 
 x18 m pm net142 vss lpnfet w=0.3u l=0.12u m=1 
 x19 net148 net159 net142 vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd si hnet36 vdd lppfet w=0.28u l=0.12u m=1 
 x20 net139 s net142 vss lpnfet w=0.2u l=0.12u m=1 
 x21 net142 sn vss vss lpnfet w=0.4u l=0.12u m=1 
 x22 net148 cn net139 vss lpnfet w=0.2u l=0.12u m=1 
 x23 net148 c m vss lpnfet w=0.2u l=0.12u m=1 
 x24 hnet38 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 pm c hnet38 vss lpnfet w=0.2u l=0.12u m=1 
 x26 hnet40 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x27 vdd m hnet40 vdd lppfet w=0.28u l=0.12u m=1 
 x28 vdd s net153 vdd lppfet w=0.28u l=0.12u m=1 
 x29 net153 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet36 nmse nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x30 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x31 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x32 vdd s q vdd lppfet w=0.64u l=0.12u m=1 
 x33 q s vss vss lpnfet w=0.46u l=0.12u m=1 
 x34 vdd rn net159 vdd lppfet w=0.28u l=0.12u m=1 
 x35 net159 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x36 vdd net148 s vdd lppfet w=0.28u l=0.12u m=1 
 x37 s net148 vss vss lpnfet w=0.2u l=0.12u m=1 
 x38 vdd net153 qn vdd lppfet w=0.64u l=0.12u m=1 
 x39 qn net153 vss vss lpnfet w=0.46u l=0.12u m=1 
 x4 pm c nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x40 vdd ckn c vdd lppfet w=0.42u l=0.12u m=1 
 x41 c ckn vss vss lpnfet w=0.3u l=0.12u m=1 
 x42 vdd c cn vdd lppfet w=0.28u l=0.12u m=1 
 x43 cn c vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 m sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x6 m pm net96 vdd lppfet w=0.42u l=0.12u m=1 
 x7 net96 net159 vdd vdd lppfet w=0.56u l=0.12u m=1 
 x8 net148 sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x9 net106 s net96 vdd lppfet w=0.28u l=0.12u m=1 
 .ends sdffnsrx1ts 

 **** 
 *.subckt sdffnsrx2ts q qn ckn d rn se si sn 
 .subckt sdffnsrx2ts q qn ckn d rn se si sn vss vdd
 x0 vdd d hnet32 vdd lppfet w=0.28u l=0.12u m=1 
 x1 hnet32 se nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x10 net148 c net106 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net148 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x12 net117 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x13 nminsi nmse net117 vss lpnfet w=0.2u l=0.12u m=1 
 x14 net123 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 nminsi se net123 vss lpnfet w=0.2u l=0.12u m=1 
 x16 pm cn nminsi vss lpnfet w=0.2u l=0.12u m=1 
 x17 m net159 net142 vss lpnfet w=0.2u l=0.12u m=1 
 x18 m pm net142 vss lpnfet w=0.3u l=0.12u m=1 
 x19 net148 net159 net142 vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd si hnet36 vdd lppfet w=0.28u l=0.12u m=1 
 x20 net144 s net142 vss lpnfet w=0.2u l=0.12u m=1 
 x21 net142 sn vss vss lpnfet w=0.4u l=0.12u m=1 
 x22 net148 cn net144 vss lpnfet w=0.2u l=0.12u m=1 
 x23 net148 c m vss lpnfet w=0.2u l=0.12u m=1 
 x24 hnet38 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 pm c hnet38 vss lpnfet w=0.2u l=0.12u m=1 
 x26 hnet40 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x27 vdd m hnet40 vdd lppfet w=0.28u l=0.12u m=1 
 x28 vdd s net153 vdd lppfet w=0.3u l=0.12u m=1 
 x29 net153 s vss vss lpnfet w=0.22u l=0.12u m=1 
 x3 hnet36 nmse nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x30 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x31 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x32 vdd s q vdd lppfet w=1.28u l=0.12u m=1 
 x33 q s vss vss lpnfet w=0.92u l=0.12u m=1 
 x34 vdd rn net159 vdd lppfet w=0.28u l=0.12u m=1 
 x35 net159 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x36 vdd net148 s vdd lppfet w=0.34u l=0.12u m=1 
 x37 s net148 vss vss lpnfet w=0.26u l=0.12u m=1 
 x38 vdd net153 qn vdd lppfet w=1.28u l=0.12u m=1 
 x39 qn net153 vss vss lpnfet w=0.92u l=0.12u m=1 
 x4 pm c nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x40 vdd ckn c vdd lppfet w=0.42u l=0.12u m=1 
 x41 c ckn vss vss lpnfet w=0.3u l=0.12u m=1 
 x42 vdd c cn vdd lppfet w=0.28u l=0.12u m=1 
 x43 cn c vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 m sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x6 m pm net96 vdd lppfet w=0.42u l=0.12u m=1 
 x7 net96 net159 vdd vdd lppfet w=0.56u l=0.12u m=1 
 x8 net148 sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x9 net106 s net96 vdd lppfet w=0.28u l=0.12u m=1 
 .ends sdffnsrx2ts 

 **** 
 *.subckt sdffnsrx4ts q qn ckn d rn se si sn 
 .subckt sdffnsrx4ts q qn ckn d rn se si sn vss vdd
 x0 vdd d hnet32 vdd lppfet w=0.28u l=0.12u m=1 
 x1 hnet32 se nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x10 net148 c net106 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net148 cn m vdd lppfet w=0.3u l=0.12u m=1 
 x12 net117 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x13 nminsi nmse net117 vss lpnfet w=0.2u l=0.12u m=1 
 x14 net123 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 nminsi se net123 vss lpnfet w=0.2u l=0.12u m=1 
 x16 pm cn nminsi vss lpnfet w=0.2u l=0.12u m=1 
 x17 m net159 net142 vss lpnfet w=0.2u l=0.12u m=1 
 x18 m pm net142 vss lpnfet w=0.34u l=0.12u m=1 
 x19 net148 net159 net142 vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd si hnet36 vdd lppfet w=0.28u l=0.12u m=1 
 x20 net144 s net142 vss lpnfet w=0.2u l=0.12u m=1 
 x21 net142 sn vss vss lpnfet w=0.46u l=0.12u m=1 
 x22 net148 cn net144 vss lpnfet w=0.2u l=0.12u m=1 
 x23 net148 c m vss lpnfet w=0.22u l=0.12u m=1 
 x24 hnet38 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 pm c hnet38 vss lpnfet w=0.2u l=0.12u m=1 
 x26 hnet40 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x27 vdd m hnet40 vdd lppfet w=0.28u l=0.12u m=1 
 x28 vdd s net153 vdd lppfet w=0.62u l=0.12u m=1 
 x29 net153 s vss vss lpnfet w=0.4u l=0.12u m=1 
 x3 hnet36 nmse nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x30 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x31 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x32 vdd s q vdd lppfet w=2.4u l=0.12u m=1 
 x33 q s vss vss lpnfet w=1.84u l=0.12u m=1 
 x34 vdd rn net159 vdd lppfet w=0.28u l=0.12u m=1 
 x35 net159 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x36 vdd net148 s vdd lppfet w=0.66u l=0.12u m=1 
 x37 s net148 vss vss lpnfet w=0.44u l=0.12u m=1 
 x38 vdd net153 qn vdd lppfet w=2.4u l=0.12u m=1 
 x39 qn net153 vss vss lpnfet w=1.84u l=0.12u m=1 
 x4 pm c nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x40 vdd ckn c vdd lppfet w=0.44u l=0.12u m=1 
 x41 c ckn vss vss lpnfet w=0.32u l=0.12u m=1 
 x42 vdd c cn vdd lppfet w=0.28u l=0.12u m=1 
 x43 cn c vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 m sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x6 m pm net96 vdd lppfet w=0.46u l=0.12u m=1 
 x7 net96 net159 vdd vdd lppfet w=0.62u l=0.12u m=1 
 x8 net148 sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x9 net106 s net96 vdd lppfet w=0.28u l=0.12u m=1 
 .ends sdffnsrx4ts 

 **** 
 *.subckt sdffnsrxlts q qn ckn d rn se si sn 
 .subckt sdffnsrxlts q qn ckn d rn se si sn vss vdd
 x0 vdd d hnet32 vdd lppfet w=0.28u l=0.12u m=1 
 x1 hnet32 se nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x10 net148 c net106 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net148 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x12 net117 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x13 nminsi nmse net117 vss lpnfet w=0.2u l=0.12u m=1 
 x14 net123 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 nminsi se net123 vss lpnfet w=0.2u l=0.12u m=1 
 x16 pm cn nminsi vss lpnfet w=0.2u l=0.12u m=1 
 x17 m net159 net142 vss lpnfet w=0.2u l=0.12u m=1 
 x18 m pm net142 vss lpnfet w=0.3u l=0.12u m=1 
 x19 net148 net159 net142 vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd si hnet36 vdd lppfet w=0.28u l=0.12u m=1 
 x20 net144 s net142 vss lpnfet w=0.2u l=0.12u m=1 
 x21 net142 sn vss vss lpnfet w=0.4u l=0.12u m=1 
 x22 net148 cn net144 vss lpnfet w=0.2u l=0.12u m=1 
 x23 net148 c m vss lpnfet w=0.2u l=0.12u m=1 
 x24 hnet38 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 pm c hnet38 vss lpnfet w=0.2u l=0.12u m=1 
 x26 hnet40 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x27 vdd m hnet40 vdd lppfet w=0.28u l=0.12u m=1 
 x28 vdd s net153 vdd lppfet w=0.28u l=0.12u m=1 
 x29 net153 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet36 nmse nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x30 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x31 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x32 vdd s q vdd lppfet w=0.34u l=0.12u m=1 
 x33 q s vss vss lpnfet w=0.24u l=0.12u m=1 
 x34 vdd rn net159 vdd lppfet w=0.28u l=0.12u m=1 
 x35 net159 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x36 vdd net148 s vdd lppfet w=0.28u l=0.12u m=1 
 x37 s net148 vss vss lpnfet w=0.2u l=0.12u m=1 
 x38 vdd net153 qn vdd lppfet w=0.34u l=0.12u m=1 
 x39 qn net153 vss vss lpnfet w=0.24u l=0.12u m=1 
 x4 pm c nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x40 vdd ckn c vdd lppfet w=0.42u l=0.12u m=1 
 x41 c ckn vss vss lpnfet w=0.3u l=0.12u m=1 
 x42 vdd c cn vdd lppfet w=0.28u l=0.12u m=1 
 x43 cn c vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 m sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x6 m pm net96 vdd lppfet w=0.42u l=0.12u m=1 
 x7 net96 net159 vdd vdd lppfet w=0.56u l=0.12u m=1 
 x8 net148 sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x9 net106 s net96 vdd lppfet w=0.28u l=0.12u m=1 
 .ends sdffnsrxlts 

 **** 
 *.subckt sdffqx1ts q ck d se si 
 .subckt sdffqx1ts q ck d se si vss vdd
 x0 net56 se net65 vss lpnfet w=0.2u l=0.12u m=1 
 x1 net56 d net59 vss lpnfet w=0.2u l=0.12u m=1 
 x10 net83 si vdd vdd lppfet w=0.28u l=0.12u m=1 
 x11 net68 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x12 hnet24 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x13 net68 cn hnet24 vss lpnfet w=0.2u l=0.12u m=1 
 x14 hnet26 c net68 vdd lppfet w=0.28u l=0.12u m=1 
 x15 vdd s hnet26 vdd lppfet w=0.28u l=0.12u m=1 
 x16 hnet30 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x17 pm c hnet30 vss lpnfet w=0.2u l=0.12u m=1 
 x18 hnet32 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x19 vdd m hnet32 vdd lppfet w=0.28u l=0.12u m=1 
 x2 net59 nmse vss vss lpnfet w=0.2u l=0.12u m=1 
 x20 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x21 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 vdd net68 s vdd lppfet w=0.28u l=0.12u m=1 
 x23 s net68 vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x25 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x27 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 vdd ck cn vdd lppfet w=0.38u l=0.12u m=1 
 x29 cn ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x3 pm cn net56 vss lpnfet w=0.2u l=0.12u m=1 
 x30 vdd s q vdd lppfet w=0.64u l=0.12u m=1 
 x31 q s vss vss lpnfet w=0.48u l=0.12u m=1 
 x4 net65 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 net68 c m vss lpnfet w=0.2u l=0.12u m=1 
 x6 net71 d net74 vdd lppfet w=0.28u l=0.12u m=1 
 x7 net74 se vdd vdd lppfet w=0.28u l=0.12u m=1 
 x8 net71 nmse net83 vdd lppfet w=0.28u l=0.12u m=1 
 x9 pm c net71 vdd lppfet w=0.28u l=0.12u m=1 
 .ends sdffqx1ts 

 **** 
 *.subckt sdffqx2ts q ck d se si 
 .subckt sdffqx2ts q ck d se si vss vdd
 x0 net56 se net65 vss lpnfet w=0.2u l=0.12u m=1 
 x1 net56 d net59 vss lpnfet w=0.2u l=0.12u m=1 
 x10 net83 si vdd vdd lppfet w=0.28u l=0.12u m=1 
 x11 net68 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x12 hnet24 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x13 net68 cn hnet24 vss lpnfet w=0.2u l=0.12u m=1 
 x14 hnet26 c net68 vdd lppfet w=0.28u l=0.12u m=1 
 x15 vdd s hnet26 vdd lppfet w=0.28u l=0.12u m=1 
 x16 hnet30 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x17 pm c hnet30 vss lpnfet w=0.2u l=0.12u m=1 
 x18 hnet32 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x19 vdd m hnet32 vdd lppfet w=0.28u l=0.12u m=1 
 x2 net59 nmse vss vss lpnfet w=0.2u l=0.12u m=1 
 x20 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x21 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 vdd net68 s vdd lppfet w=0.28u l=0.12u m=1 
 x23 s net68 vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x25 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x27 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 vdd ck cn vdd lppfet w=0.38u l=0.12u m=1 
 x29 cn ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x3 pm cn net56 vss lpnfet w=0.2u l=0.12u m=1 
 x30 vdd s q vdd lppfet w=1.28u l=0.12u m=1 
 x31 q s vss vss lpnfet w=0.92u l=0.12u m=1 
 x4 net65 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 net68 c m vss lpnfet w=0.2u l=0.12u m=1 
 x6 net71 d net74 vdd lppfet w=0.28u l=0.12u m=1 
 x7 net74 se vdd vdd lppfet w=0.28u l=0.12u m=1 
 x8 net71 nmse net83 vdd lppfet w=0.28u l=0.12u m=1 
 x9 pm c net71 vdd lppfet w=0.28u l=0.12u m=1 
 .ends sdffqx2ts 

 **** 
 *.subckt sdffqx4ts q ck d se si 
 .subckt sdffqx4ts q ck d se si vss vdd
 x0 net56 se net65 vss lpnfet w=0.2u l=0.12u m=1 
 x1 net56 d net59 vss lpnfet w=0.2u l=0.12u m=1 
 x10 net83 si vdd vdd lppfet w=0.28u l=0.12u m=1 
 x11 net68 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x12 hnet24 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x13 net68 cn hnet24 vss lpnfet w=0.2u l=0.12u m=1 
 x14 hnet26 c net68 vdd lppfet w=0.28u l=0.12u m=1 
 x15 vdd s hnet26 vdd lppfet w=0.28u l=0.12u m=1 
 x16 hnet30 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x17 pm c hnet30 vss lpnfet w=0.2u l=0.12u m=1 
 x18 hnet32 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x19 vdd m hnet32 vdd lppfet w=0.28u l=0.12u m=1 
 x2 net59 nmse vss vss lpnfet w=0.2u l=0.12u m=1 
 x20 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x21 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 vdd net68 s vdd lppfet w=0.5u l=0.12u m=1 
 x23 s net68 vss vss lpnfet w=0.36u l=0.12u m=1 
 x24 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x25 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x27 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 vdd ck cn vdd lppfet w=0.38u l=0.12u m=1 
 x29 cn ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x3 pm cn net56 vss lpnfet w=0.2u l=0.12u m=1 
 x30 vdd s q vdd lppfet w=2.56u l=0.12u m=1 
 x31 q s vss vss lpnfet w=1.84u l=0.12u m=1 
 x4 net65 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 net68 c m vss lpnfet w=0.2u l=0.12u m=1 
 x6 net71 d net74 vdd lppfet w=0.28u l=0.12u m=1 
 x7 net74 se vdd vdd lppfet w=0.28u l=0.12u m=1 
 x8 net71 nmse net83 vdd lppfet w=0.28u l=0.12u m=1 
 x9 pm c net71 vdd lppfet w=0.28u l=0.12u m=1 
 .ends sdffqx4ts 

 **** 
 *.subckt sdffqxlts q ck d se si 
 .subckt sdffqxlts q ck d se si vss vdd
 x0 net56 se net65 vss lpnfet w=0.2u l=0.12u m=1 
 x1 net56 d net59 vss lpnfet w=0.2u l=0.12u m=1 
 x10 net83 si vdd vdd lppfet w=0.28u l=0.12u m=1 
 x11 net68 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x12 hnet24 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x13 net68 cn hnet24 vss lpnfet w=0.2u l=0.12u m=1 
 x14 hnet26 c net68 vdd lppfet w=0.28u l=0.12u m=1 
 x15 vdd s hnet26 vdd lppfet w=0.28u l=0.12u m=1 
 x16 hnet30 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x17 pm c hnet30 vss lpnfet w=0.2u l=0.12u m=1 
 x18 hnet32 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x19 vdd m hnet32 vdd lppfet w=0.28u l=0.12u m=1 
 x2 net59 nmse vss vss lpnfet w=0.2u l=0.12u m=1 
 x20 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x21 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 vdd net68 s vdd lppfet w=0.28u l=0.12u m=1 
 x23 s net68 vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x25 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x27 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 vdd ck cn vdd lppfet w=0.38u l=0.12u m=1 
 x29 cn ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x3 pm cn net56 vss lpnfet w=0.2u l=0.12u m=1 
 x30 vdd s q vdd lppfet w=0.34u l=0.12u m=1 
 x31 q s vss vss lpnfet w=0.24u l=0.12u m=1 
 x4 net65 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 net68 c m vss lpnfet w=0.2u l=0.12u m=1 
 x6 net71 d net74 vdd lppfet w=0.28u l=0.12u m=1 
 x7 net74 se vdd vdd lppfet w=0.28u l=0.12u m=1 
 x8 net71 nmse net83 vdd lppfet w=0.28u l=0.12u m=1 
 x9 pm c net71 vdd lppfet w=0.28u l=0.12u m=1 
 .ends sdffqxlts 

 **** 
 *.subckt sdffrhqx1ts q ck d rn se si 
 .subckt sdffrhqx1ts q ck d rn se si vss vdd
 x0 vdd c hnet28 vdd lppfet w=0.62u l=0.12u m=1 
 x1 hnet28 nmsi pm vdd lppfet w=0.62u l=0.12u m=1 
 x10 net122 c net91 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net91 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x12 m rn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x13 m pm vdd vdd lppfet w=0.96u l=0.12u m=1 
 x14 net122 cn m vdd lppfet w=0.92u l=0.12u m=1 
 x15 cn ck vss vss lpnfet w=0.2u l=0.12u m=1 
 x16 nmsi nmse nmin vss lpnfet w=0.3u l=0.12u m=1 
 x17 net115 rn net112 vss lpnfet w=0.2u l=0.12u m=1 
 x18 net122 cn net115 vss lpnfet w=0.2u l=0.12u m=1 
 x19 net112 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet32 cn vss vss lpnfet w=0.44u l=0.12u m=1 
 x20 net122 c m vss lpnfet w=0.48u l=0.12u m=1 
 x21 hnet38 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 nmsi se hnet38 vss lpnfet w=0.2u l=0.12u m=1 
 x23 hnet40 nmse nmsi vdd lppfet w=0.28u l=0.12u m=1 
 x24 vdd si hnet40 vdd lppfet w=0.28u l=0.12u m=1 
 x25 hnet44 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 pm c hnet44 vss lpnfet w=0.2u l=0.12u m=1 
 x27 hnet46 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x28 vdd m hnet46 vdd lppfet w=0.28u l=0.12u m=1 
 x29 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x3 pm nmsi hnet32 vss lpnfet w=0.44u l=0.12u m=1 
 x30 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x31 vdd d nmin vdd lppfet w=0.42u l=0.12u m=1 
 x32 nmin d vss vss lpnfet w=0.3u l=0.12u m=1 
 x33 vdd net122 s vdd lppfet w=0.28u l=0.12u m=1 
 x34 s net122 vss vss lpnfet w=0.2u l=0.12u m=1 
 x35 vdd net122 q vdd lppfet w=0.74u l=0.12u m=1 
 x36 q net122 vss vss lpnfet w=0.46u l=0.12u m=1 
 x37 vdd net141 c vdd lppfet w=0.84u l=0.12u m=1 
 x38 c net141 vss vss lpnfet w=0.3u l=0.12u m=1 
 x39 vdd ck net141 vdd lppfet w=0.28u l=0.12u m=1 
 x4 hnet36 rn vss vss lpnfet w=0.58u l=0.12u m=1 
 x40 net141 ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x5 m pm hnet36 vss lpnfet w=0.58u l=0.12u m=1 
 x6 net80 ck vdd vdd lppfet w=0.7u l=0.12u m=1 
 x7 cn c net80 vdd lppfet w=0.52u l=0.12u m=1 
 x8 nmsi se nmin vdd lppfet w=0.42u l=0.12u m=1 
 x9 net122 rn vdd vdd lppfet w=0.28u l=0.12u m=1 
 .ends sdffrhqx1ts 

 **** 
 *.subckt sdffrhqx2ts q ck d rn se si 
 .subckt sdffrhqx2ts q ck d rn se si vss vdd
 x0 vdd c hnet28 vdd lppfet w=1.02u l=0.12u m=1 
 x1 hnet28 nmsi pm vdd lppfet w=1.02u l=0.12u m=1 
 x10 net122 c net91 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net91 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x12 m rn vdd vdd lppfet w=0.4u l=0.12u m=1 
 x13 m pm vdd vdd lppfet w=1.64u l=0.12u m=1 
 x14 net122 cn m vdd lppfet w=1.64u l=0.12u m=1 
 x15 cn ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x16 nmsi nmse nmin vss lpnfet w=0.5u l=0.12u m=1 
 x17 net115 rn net112 vss lpnfet w=0.2u l=0.12u m=1 
 x18 net122 cn net115 vss lpnfet w=0.2u l=0.12u m=1 
 x19 net112 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet32 cn vss vss lpnfet w=0.74u l=0.12u m=1 
 x20 net122 c m vss lpnfet w=0.74u l=0.12u m=1 
 x21 hnet38 si vss vss lpnfet w=0.28u l=0.12u m=1 
 x22 nmsi se hnet38 vss lpnfet w=0.28u l=0.12u m=1 
 x23 hnet40 nmse nmsi vdd lppfet w=0.36u l=0.12u m=1 
 x24 vdd si hnet40 vdd lppfet w=0.36u l=0.12u m=1 
 x25 hnet44 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 pm c hnet44 vss lpnfet w=0.2u l=0.12u m=1 
 x27 hnet46 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x28 vdd m hnet46 vdd lppfet w=0.28u l=0.12u m=1 
 x29 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x3 pm nmsi hnet32 vss lpnfet w=0.74u l=0.12u m=1 
 x30 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x31 vdd d nmin vdd lppfet w=0.7u l=0.12u m=1 
 x32 nmin d vss vss lpnfet w=0.5u l=0.12u m=1 
 x33 vdd net122 s vdd lppfet w=0.28u l=0.12u m=1 
 x34 s net122 vss vss lpnfet w=0.2u l=0.12u m=1 
 x35 vdd net122 q vdd lppfet w=1.3u l=0.12u m=1 
 x36 q net122 vss vss lpnfet w=0.92u l=0.12u m=1 
 x37 vdd net141 c vdd lppfet w=1.16u l=0.12u m=1 
 x38 c net141 vss vss lpnfet w=0.44u l=0.12u m=1 
 x39 vdd ck net141 vdd lppfet w=0.34u l=0.12u m=1 
 x4 hnet36 rn vss vss lpnfet w=0.98u l=0.12u m=1 
 x40 net141 ck vss vss lpnfet w=0.34u l=0.12u m=1 
 x5 m pm hnet36 vss lpnfet w=0.98u l=0.12u m=1 
 x6 net80 ck vdd vdd lppfet w=0.98u l=0.12u m=1 
 x7 cn c net80 vdd lppfet w=0.74u l=0.12u m=1 
 x8 nmsi se nmin vdd lppfet w=0.7u l=0.12u m=1 
 x9 net122 rn vdd vdd lppfet w=0.4u l=0.12u m=1 
 .ends sdffrhqx2ts 

 **** 
 *.subckt sdffrhqx4ts q ck d rn se si 
 .subckt sdffrhqx4ts q ck d rn se si vss vdd
 x0 hnet29 cn vss vss lpnfet w=0.82u l=0.12u m=1 
 x1 pm nmsi hnet29 vss lpnfet w=0.82u l=0.12u m=1 
 x10 vdd c hnet40 vdd lppfet w=0.96u l=0.12u m=1 
 x11 hnet40 nmsi pm vdd lppfet w=0.96u l=0.12u m=1 
 x12 net83 ck vdd vdd lppfet w=0.84u l=0.12u m=1 
 x13 cn c net83 vdd lppfet w=0.64u l=0.12u m=1 
 x14 net89 ck vdd vdd lppfet w=0.84u l=0.12u m=1 
 x15 cn c net89 vdd lppfet w=0.64u l=0.12u m=1 
 x16 nmsi se nmin vdd lppfet w=1.3u l=0.12u m=1 
 x17 net131 rn vdd vdd lppfet w=0.7u l=0.12u m=1 
 x18 net131 c net100 vdd lppfet w=0.28u l=0.12u m=1 
 x19 net100 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x2 hnet33 cn vss vss lpnfet w=0.58u l=0.12u m=1 
 x20 m rn vdd vdd lppfet w=0.76u l=0.12u m=1 
 x21 m pm vdd vdd lppfet w=2.54u l=0.12u m=1 
 x22 net131 cn m vdd lppfet w=2.64u l=0.12u m=1 
 x23 cn ck vss vss lpnfet w=0.48u l=0.12u m=1 
 x24 nmsi nmse nmin vss lpnfet w=0.84u l=0.12u m=1 
 x25 net124 rn net121 vss lpnfet w=0.2u l=0.12u m=1 
 x26 net131 cn net124 vss lpnfet w=0.2u l=0.12u m=1 
 x27 net121 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 net131 c m vss lpnfet w=1.4u l=0.12u m=1 
 x29 hnet45 si vss vss lpnfet w=0.46u l=0.12u m=1 
 x3 pm nmsi hnet33 vss lpnfet w=0.58u l=0.12u m=1 
 x30 nmsi se hnet45 vss lpnfet w=0.46u l=0.12u m=1 
 x31 hnet47 nmse nmsi vdd lppfet w=0.66u l=0.12u m=1 
 x32 vdd si hnet47 vdd lppfet w=0.66u l=0.12u m=1 
 x33 hnet51 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x34 pm c hnet51 vss lpnfet w=0.2u l=0.12u m=1 
 x35 hnet53 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x36 vdd m hnet53 vdd lppfet w=0.28u l=0.12u m=1 
 x37 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x38 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x39 vdd d nmin vdd lppfet w=1.3u l=0.12u m=1 
 x4 hnet38 rn vss vss lpnfet w=0.8u l=0.12u m=1 
 x40 nmin d vss vss lpnfet w=0.84u l=0.12u m=1 
 x41 vdd net131 s vdd lppfet w=0.28u l=0.12u m=1 
 x42 s net131 vss vss lpnfet w=0.2u l=0.12u m=1 
 x43 vdd net131 q vdd lppfet w=2.6u l=0.12u m=1 
 x44 q net131 vss vss lpnfet w=1.66u l=0.12u m=1 
 x45 vdd net150 c vdd lppfet w=1.96u l=0.12u m=1 
 x46 c net150 vss vss lpnfet w=0.72u l=0.12u m=1 
 x47 vdd ck net150 vdd lppfet w=0.56u l=0.12u m=1 
 x48 net150 ck vss vss lpnfet w=0.56u l=0.12u m=1 
 x5 m pm hnet38 vss lpnfet w=0.8u l=0.12u m=1 
 x6 hnet34 rn vss vss lpnfet w=0.8u l=0.12u m=1 
 x7 m pm hnet34 vss lpnfet w=0.8u l=0.12u m=1 
 x8 vdd c hnet43 vdd lppfet w=0.96u l=0.12u m=1 
 x9 hnet43 nmsi pm vdd lppfet w=0.96u l=0.12u m=1 
 .ends sdffrhqx4ts 

 **** 
 *.subckt sdffrhqx8ts q ck d rn se si 
 .subckt sdffrhqx8ts q ck d rn se si vss vdd
 x0 hnet29 cn vss vss lpnfet w=0.82u l=0.12u m=1 
 x1 pm nmsi hnet29 vss lpnfet w=0.82u l=0.12u m=1 
 x10 vdd c hnet40 vdd lppfet w=0.96u l=0.12u m=1 
 x11 hnet40 nmsi pm vdd lppfet w=0.96u l=0.12u m=1 
 x12 net85 ck vdd vdd lppfet w=0.84u l=0.12u m=1 
 x13 cn c net85 vdd lppfet w=0.64u l=0.12u m=1 
 x14 net91 ck vdd vdd lppfet w=0.84u l=0.12u m=1 
 x15 cn c net91 vdd lppfet w=0.64u l=0.12u m=1 
 x16 nmsi se nmin vdd lppfet w=1.3u l=0.12u m=1 
 x17 net131 rn vdd vdd lppfet w=0.7u l=0.12u m=1 
 x18 net131 c net100 vdd lppfet w=0.28u l=0.12u m=1 
 x19 net100 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x2 hnet33 cn vss vss lpnfet w=0.58u l=0.12u m=1 
 x20 m rn vdd vdd lppfet w=0.76u l=0.12u m=1 
 x21 m pm vdd vdd lppfet w=2.54u l=0.12u m=1 
 x22 net131 cn m vdd lppfet w=2.64u l=0.12u m=1 
 x23 cn ck vss vss lpnfet w=0.48u l=0.12u m=1 
 x24 nmsi nmse nmin vss lpnfet w=0.84u l=0.12u m=1 
 x25 net124 rn net128 vss lpnfet w=0.2u l=0.12u m=1 
 x26 net131 cn net124 vss lpnfet w=0.2u l=0.12u m=1 
 x27 net128 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 net131 c m vss lpnfet w=1.4u l=0.12u m=1 
 x29 hnet45 si vss vss lpnfet w=0.46u l=0.12u m=1 
 x3 pm nmsi hnet33 vss lpnfet w=0.58u l=0.12u m=1 
 x30 nmsi se hnet45 vss lpnfet w=0.46u l=0.12u m=1 
 x31 hnet47 nmse nmsi vdd lppfet w=0.66u l=0.12u m=1 
 x32 vdd si hnet47 vdd lppfet w=0.66u l=0.12u m=1 
 x33 hnet51 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x34 pm c hnet51 vss lpnfet w=0.2u l=0.12u m=1 
 x35 hnet53 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x36 vdd m hnet53 vdd lppfet w=0.28u l=0.12u m=1 
 x37 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x38 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x39 vdd d nmin vdd lppfet w=1.3u l=0.12u m=1 
 x4 hnet38 rn vss vss lpnfet w=0.8u l=0.12u m=1 
 x40 nmin d vss vss lpnfet w=0.84u l=0.12u m=1 
 x41 vdd net131 s vdd lppfet w=0.28u l=0.12u m=1 
 x42 s net131 vss vss lpnfet w=0.2u l=0.12u m=1 
 x43 vdd net131 q vdd lppfet w=5.2u l=0.12u m=1 
 x44 q net131 vss vss lpnfet w=3.32u l=0.12u m=1 
 x45 vdd net150 c vdd lppfet w=1.96u l=0.12u m=1 
 x46 c net150 vss vss lpnfet w=0.72u l=0.12u m=1 
 x47 vdd ck net150 vdd lppfet w=0.56u l=0.12u m=1 
 x48 net150 ck vss vss lpnfet w=0.56u l=0.12u m=1 
 x5 m pm hnet38 vss lpnfet w=0.8u l=0.12u m=1 
 x6 hnet34 rn vss vss lpnfet w=0.8u l=0.12u m=1 
 x7 m pm hnet34 vss lpnfet w=0.8u l=0.12u m=1 
 x8 vdd c hnet43 vdd lppfet w=0.96u l=0.12u m=1 
 x9 hnet43 nmsi pm vdd lppfet w=0.96u l=0.12u m=1 
 .ends sdffrhqx8ts 

 **** 
 *.subckt sdffrx1ts q qn ck d rn se si 
 .subckt sdffrx1ts q qn ck d rn se si vss vdd
 x0 vdd d hnet29 vdd lppfet w=0.36u l=0.12u m=1 
 x1 hnet29 se nmrs vdd lppfet w=0.36u l=0.12u m=1 
 x10 s net127 hnet47 vss lpnfet w=0.32u l=0.12u m=1 
 x11 vdd rn s vdd lppfet w=0.28u l=0.12u m=1 
 x12 vdd net127 s vdd lppfet w=0.28u l=0.12u m=1 
 x13 pm c nmrs vdd lppfet w=0.28u l=0.12u m=1 
 x14 pm rn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x15 net127 c net93 vdd lppfet w=0.28u l=0.12u m=1 
 x16 net93 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x17 net127 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x18 net103 rn vss vss lpnfet w=0.44u l=0.12u m=1 
 x19 net108 d net103 vss lpnfet w=0.26u l=0.12u m=1 
 x2 vdd si hnet33 vdd lppfet w=0.28u l=0.12u m=1 
 x20 nmrs nmse net108 vss lpnfet w=0.26u l=0.12u m=1 
 x21 net114 si net103 vss lpnfet w=0.2u l=0.12u m=1 
 x22 nmrs se net114 vss lpnfet w=0.2u l=0.12u m=1 
 x23 pm cn nmrs vss lpnfet w=0.2u l=0.12u m=1 
 x24 net127 cn net124 vss lpnfet w=0.2u l=0.12u m=1 
 x25 net124 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 net127 c m vss lpnfet w=0.2u l=0.12u m=1 
 x27 vdd s net128 vdd lppfet w=0.28u l=0.12u m=1 
 x28 net128 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x29 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x3 hnet33 nmse nmrs vdd lppfet w=0.28u l=0.12u m=1 
 x30 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x31 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x32 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x33 vdd s q vdd lppfet w=0.64u l=0.12u m=1 
 x34 q s vss vss lpnfet w=0.46u l=0.12u m=1 
 x35 vdd net128 qn vdd lppfet w=0.64u l=0.12u m=1 
 x36 qn net128 vss vss lpnfet w=0.46u l=0.12u m=1 
 x37 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x38 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x39 vdd ck cn vdd lppfet w=0.42u l=0.12u m=1 
 x4 vdd m hnet37 vdd lppfet w=0.28u l=0.12u m=1 
 x40 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x5 hnet37 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x6 hnet43 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x7 hnet38 m hnet43 vss lpnfet w=0.2u l=0.12u m=1 
 x8 pm c hnet38 vss lpnfet w=0.2u l=0.12u m=1 
 x9 hnet47 rn vss vss lpnfet w=0.32u l=0.12u m=1 
 .ends sdffrx1ts 

 **** 
 *.subckt sdffrx2ts q qn ck d rn se si 
 .subckt sdffrx2ts q qn ck d rn se si vss vdd
 x0 vdd d hnet29 vdd lppfet w=0.36u l=0.12u m=1 
 x1 hnet29 se nmrs vdd lppfet w=0.36u l=0.12u m=1 
 x10 s net127 hnet47 vss lpnfet w=0.52u l=0.12u m=1 
 x11 vdd rn s vdd lppfet w=0.38u l=0.12u m=1 
 x12 vdd net127 s vdd lppfet w=0.38u l=0.12u m=1 
 x13 pm c nmrs vdd lppfet w=0.28u l=0.12u m=1 
 x14 pm rn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x15 net127 c net93 vdd lppfet w=0.28u l=0.12u m=1 
 x16 net93 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x17 net127 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x18 net103 rn vss vss lpnfet w=0.44u l=0.12u m=1 
 x19 net108 d net103 vss lpnfet w=0.26u l=0.12u m=1 
 x2 vdd si hnet33 vdd lppfet w=0.28u l=0.12u m=1 
 x20 nmrs nmse net108 vss lpnfet w=0.26u l=0.12u m=1 
 x21 net112 si net103 vss lpnfet w=0.2u l=0.12u m=1 
 x22 nmrs se net112 vss lpnfet w=0.2u l=0.12u m=1 
 x23 pm cn nmrs vss lpnfet w=0.2u l=0.12u m=1 
 x24 net127 cn net124 vss lpnfet w=0.2u l=0.12u m=1 
 x25 net124 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 net127 c m vss lpnfet w=0.2u l=0.12u m=1 
 x27 vdd s net128 vdd lppfet w=0.3u l=0.12u m=1 
 x28 net128 s vss vss lpnfet w=0.22u l=0.12u m=1 
 x29 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x3 hnet33 nmse nmrs vdd lppfet w=0.28u l=0.12u m=1 
 x30 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x31 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x32 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x33 vdd s q vdd lppfet w=1.28u l=0.12u m=1 
 x34 q s vss vss lpnfet w=0.92u l=0.12u m=1 
 x35 vdd net128 qn vdd lppfet w=1.28u l=0.12u m=1 
 x36 qn net128 vss vss lpnfet w=0.92u l=0.12u m=1 
 x37 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x38 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x39 vdd ck cn vdd lppfet w=0.42u l=0.12u m=1 
 x4 vdd m hnet37 vdd lppfet w=0.28u l=0.12u m=1 
 x40 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x5 hnet37 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x6 hnet43 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x7 hnet38 m hnet43 vss lpnfet w=0.2u l=0.12u m=1 
 x8 pm c hnet38 vss lpnfet w=0.2u l=0.12u m=1 
 x9 hnet47 rn vss vss lpnfet w=0.52u l=0.12u m=1 
 .ends sdffrx2ts 

 **** 
 *.subckt sdffrx4ts q qn ck d rn se si 
 .subckt sdffrx4ts q qn ck d rn se si vss vdd
 x0 vdd d hnet29 vdd lppfet w=0.36u l=0.12u m=1 
 x1 hnet29 se nmrs vdd lppfet w=0.36u l=0.12u m=1 
 x10 s net127 hnet47 vss lpnfet w=0.92u l=0.12u m=1 
 x11 vdd rn s vdd lppfet w=0.68u l=0.12u m=1 
 x12 vdd net127 s vdd lppfet w=0.68u l=0.12u m=1 
 x13 pm c nmrs vdd lppfet w=0.28u l=0.12u m=1 
 x14 pm rn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x15 net127 c net93 vdd lppfet w=0.28u l=0.12u m=1 
 x16 net93 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x17 net127 cn m vdd lppfet w=0.48u l=0.12u m=1 
 x18 net103 rn vss vss lpnfet w=0.44u l=0.12u m=1 
 x19 net108 d net103 vss lpnfet w=0.26u l=0.12u m=1 
 x2 vdd si hnet33 vdd lppfet w=0.28u l=0.12u m=1 
 x20 nmrs nmse net108 vss lpnfet w=0.26u l=0.12u m=1 
 x21 net114 si net103 vss lpnfet w=0.2u l=0.12u m=1 
 x22 nmrs se net114 vss lpnfet w=0.2u l=0.12u m=1 
 x23 pm cn nmrs vss lpnfet w=0.2u l=0.12u m=1 
 x24 net127 cn net124 vss lpnfet w=0.2u l=0.12u m=1 
 x25 net124 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 net127 c m vss lpnfet w=0.34u l=0.12u m=1 
 x27 vdd s net128 vdd lppfet w=0.62u l=0.12u m=1 
 x28 net128 s vss vss lpnfet w=0.44u l=0.12u m=1 
 x29 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x3 hnet33 nmse nmrs vdd lppfet w=0.28u l=0.12u m=1 
 x30 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x31 vdd pm m vdd lppfet w=0.48u l=0.12u m=1 
 x32 m pm vss vss lpnfet w=0.34u l=0.12u m=1 
 x33 vdd s q vdd lppfet w=2.56u l=0.12u m=1 
 x34 q s vss vss lpnfet w=1.84u l=0.12u m=1 
 x35 vdd net128 qn vdd lppfet w=2.56u l=0.12u m=1 
 x36 qn net128 vss vss lpnfet w=1.84u l=0.12u m=1 
 x37 vdd cn c vdd lppfet w=0.34u l=0.12u m=1 
 x38 c cn vss vss lpnfet w=0.24u l=0.12u m=1 
 x39 vdd ck cn vdd lppfet w=0.52u l=0.12u m=1 
 x4 vdd m hnet37 vdd lppfet w=0.28u l=0.12u m=1 
 x40 cn ck vss vss lpnfet w=0.38u l=0.12u m=1 
 x5 hnet37 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x6 hnet43 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x7 hnet38 m hnet43 vss lpnfet w=0.2u l=0.12u m=1 
 x8 pm c hnet38 vss lpnfet w=0.2u l=0.12u m=1 
 x9 hnet47 rn vss vss lpnfet w=0.92u l=0.12u m=1 
 .ends sdffrx4ts 

 **** 
 *.subckt sdffrxlts q qn ck d rn se si 
 .subckt sdffrxlts q qn ck d rn se si vss vdd
 x0 vdd d hnet29 vdd lppfet w=0.36u l=0.12u m=1 
 x1 hnet29 se nmrs vdd lppfet w=0.36u l=0.12u m=1 
 x10 s net127 hnet47 vss lpnfet w=0.22u l=0.12u m=1 
 x11 vdd rn s vdd lppfet w=0.28u l=0.12u m=1 
 x12 vdd net127 s vdd lppfet w=0.28u l=0.12u m=1 
 x13 pm c nmrs vdd lppfet w=0.28u l=0.12u m=1 
 x14 pm rn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x15 net127 c net93 vdd lppfet w=0.28u l=0.12u m=1 
 x16 net93 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x17 net127 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x18 net103 rn vss vss lpnfet w=0.44u l=0.12u m=1 
 x19 net108 d net103 vss lpnfet w=0.26u l=0.12u m=1 
 x2 vdd si hnet33 vdd lppfet w=0.28u l=0.12u m=1 
 x20 nmrs nmse net108 vss lpnfet w=0.26u l=0.12u m=1 
 x21 net114 si net103 vss lpnfet w=0.2u l=0.12u m=1 
 x22 nmrs se net114 vss lpnfet w=0.2u l=0.12u m=1 
 x23 pm cn nmrs vss lpnfet w=0.2u l=0.12u m=1 
 x24 net127 cn net124 vss lpnfet w=0.2u l=0.12u m=1 
 x25 net124 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 net127 c m vss lpnfet w=0.2u l=0.12u m=1 
 x27 vdd s net128 vdd lppfet w=0.28u l=0.12u m=1 
 x28 net128 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x29 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x3 hnet33 nmse nmrs vdd lppfet w=0.28u l=0.12u m=1 
 x30 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x31 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x32 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x33 vdd s q vdd lppfet w=0.34u l=0.12u m=1 
 x34 q s vss vss lpnfet w=0.24u l=0.12u m=1 
 x35 vdd net128 qn vdd lppfet w=0.34u l=0.12u m=1 
 x36 qn net128 vss vss lpnfet w=0.24u l=0.12u m=1 
 x37 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x38 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x39 vdd ck cn vdd lppfet w=0.42u l=0.12u m=1 
 x4 vdd m hnet37 vdd lppfet w=0.28u l=0.12u m=1 
 x40 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x5 hnet37 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x6 hnet43 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x7 hnet38 m hnet43 vss lpnfet w=0.2u l=0.12u m=1 
 x8 pm c hnet38 vss lpnfet w=0.2u l=0.12u m=1 
 x9 hnet47 rn vss vss lpnfet w=0.22u l=0.12u m=1 
 .ends sdffrxlts 

 **** 
 *.subckt sdffshqx1ts q ck d se si sn 
 .subckt sdffshqx1ts q ck d se si sn vss vdd
 x0 vdd c hnet29 vdd lppfet w=0.52u l=0.12u m=1 
 x1 hnet29 nmsi pm vdd lppfet w=0.52u l=0.12u m=1 
 x10 net112 c net87 vdd lppfet w=0.26u l=0.12u m=1 
 x11 net91 s vdd vdd lppfet w=0.26u l=0.12u m=1 
 x12 net112 cn m vdd lppfet w=0.96u l=0.12u m=1 
 x13 cn ck vss vss lpnfet w=0.2u l=0.12u m=1 
 x14 nmsi nmse nmin vss lpnfet w=0.3u l=0.12u m=1 
 x15 net112 cn net106 vss lpnfet w=0.2u l=0.12u m=1 
 x16 net106 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x17 net112 nmset vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 net112 c m vss lpnfet w=0.48u l=0.12u m=1 
 x19 hnet37 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet35 sn vss vss lpnfet w=0.54u l=0.12u m=1 
 x20 nmsi se hnet37 vss lpnfet w=0.2u l=0.12u m=1 
 x21 hnet39 nmse nmsi vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd si hnet39 vdd lppfet w=0.28u l=0.12u m=1 
 x23 hnet43 m vss vss lpnfet w=0.18u l=0.12u m=1 
 x24 pm c hnet43 vss lpnfet w=0.18u l=0.12u m=1 
 x25 hnet45 cn pm vdd lppfet w=0.24u l=0.12u m=1 
 x26 vdd m hnet45 vdd lppfet w=0.24u l=0.12u m=1 
 x27 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x28 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x29 vdd pm m vdd lppfet w=0.96u l=0.12u m=1 
 x3 hnet30 cn hnet35 vss lpnfet w=0.54u l=0.12u m=1 
 x30 m pm vss vss lpnfet w=0.46u l=0.12u m=1 
 x31 vdd sn nmset vdd lppfet w=0.28u l=0.12u m=1 
 x32 nmset sn vss vss lpnfet w=0.18u l=0.12u m=1 
 x33 vdd d nmin vdd lppfet w=0.42u l=0.12u m=1 
 x34 nmin d vss vss lpnfet w=0.3u l=0.12u m=1 
 x35 vdd net112 s vdd lppfet w=0.26u l=0.12u m=1 
 x36 s net112 vss vss lpnfet w=0.2u l=0.12u m=1 
 x37 vdd net112 q vdd lppfet w=0.74u l=0.12u m=1 
 x38 q net112 vss vss lpnfet w=0.38u l=0.12u m=1 
 x39 vdd net135 c vdd lppfet w=0.72u l=0.12u m=1 
 x4 pm nmsi hnet30 vss lpnfet w=0.54u l=0.12u m=1 
 x40 c net135 vss vss lpnfet w=0.26u l=0.12u m=1 
 x41 vdd ck net135 vdd lppfet w=0.28u l=0.12u m=1 
 x42 net135 ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x5 net75 ck vdd vdd lppfet w=0.62u l=0.12u m=1 
 x6 cn c net75 vdd lppfet w=0.52u l=0.12u m=1 
 x7 nmsi se nmin vdd lppfet w=0.42u l=0.12u m=1 
 x8 pm sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x9 net87 nmset net91 vdd lppfet w=0.26u l=0.12u m=1 
 .ends sdffshqx1ts 

 **** 
 *.subckt sdffshqx2ts q ck d se si sn 
 .subckt sdffshqx2ts q ck d se si sn vss vdd
 x0 vdd c hnet29 vdd lppfet w=0.9u l=0.12u m=1 
 x1 hnet29 nmsi pm vdd lppfet w=0.9u l=0.12u m=1 
 x10 net112 c net87 vdd lppfet w=0.26u l=0.12u m=1 
 x11 net91 s vdd vdd lppfet w=0.26u l=0.12u m=1 
 x12 net112 cn m vdd lppfet w=1.64u l=0.12u m=1 
 x13 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x14 nmsi nmse nmin vss lpnfet w=0.52u l=0.12u m=1 
 x15 net112 cn net102 vss lpnfet w=0.2u l=0.12u m=1 
 x16 net102 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x17 net112 nmset vss vss lpnfet w=0.28u l=0.12u m=1 
 x18 net112 c m vss lpnfet w=0.82u l=0.12u m=1 
 x19 hnet37 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet35 sn vss vss lpnfet w=0.86u l=0.12u m=1 
 x20 nmsi se hnet37 vss lpnfet w=0.2u l=0.12u m=1 
 x21 hnet39 nmse nmsi vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd si hnet39 vdd lppfet w=0.28u l=0.12u m=1 
 x23 hnet43 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 pm c hnet43 vss lpnfet w=0.2u l=0.12u m=1 
 x25 hnet45 cn pm vdd lppfet w=0.26u l=0.12u m=1 
 x26 vdd m hnet45 vdd lppfet w=0.26u l=0.12u m=1 
 x27 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x28 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x29 vdd pm m vdd lppfet w=1.64u l=0.12u m=1 
 x3 hnet30 cn hnet35 vss lpnfet w=0.86u l=0.12u m=1 
 x30 m pm vss vss lpnfet w=0.84u l=0.12u m=1 
 x31 vdd sn nmset vdd lppfet w=0.28u l=0.12u m=1 
 x32 nmset sn vss vss lpnfet w=0.2u l=0.12u m=1 
 x33 vdd d nmin vdd lppfet w=0.76u l=0.12u m=1 
 x34 nmin d vss vss lpnfet w=0.54u l=0.12u m=1 
 x35 vdd net112 s vdd lppfet w=0.28u l=0.12u m=1 
 x36 s net112 vss vss lpnfet w=0.2u l=0.12u m=1 
 x37 vdd net112 q vdd lppfet w=1.3u l=0.12u m=1 
 x38 q net112 vss vss lpnfet w=0.84u l=0.12u m=1 
 x39 vdd net135 c vdd lppfet w=1.06u l=0.12u m=1 
 x4 pm nmsi hnet30 vss lpnfet w=0.86u l=0.12u m=1 
 x40 c net135 vss vss lpnfet w=0.42u l=0.12u m=1 
 x41 vdd ck net135 vdd lppfet w=0.32u l=0.12u m=1 
 x42 net135 ck vss vss lpnfet w=0.32u l=0.12u m=1 
 x5 net75 ck vdd vdd lppfet w=1.06u l=0.12u m=1 
 x6 cn c net75 vdd lppfet w=0.78u l=0.12u m=1 
 x7 nmsi se nmin vdd lppfet w=0.76u l=0.12u m=1 
 x8 pm sn vdd vdd lppfet w=0.34u l=0.12u m=1 
 x9 net87 nmset net91 vdd lppfet w=0.26u l=0.12u m=1 
 .ends sdffshqx2ts 

 **** 
 *.subckt sdffshqx4ts q ck d se si sn 
 .subckt sdffshqx4ts q ck d se si sn vss vdd
 x0 hnet32 sn vss vss lpnfet w=0.84u l=0.12u m=1 
 x1 hnet26 cn hnet32 vss lpnfet w=0.84u l=0.12u m=1 
 x10 net75 ck vdd vdd lppfet w=1.84u l=0.12u m=1 
 x11 cn c net75 vdd lppfet w=1.3u l=0.12u m=1 
 x12 nmsi se nmin vdd lppfet w=1.3u l=0.12u m=1 
 x13 pm sn vdd vdd lppfet w=0.64u l=0.12u m=1 
 x14 net87 nmset net91 vdd lppfet w=0.28u l=0.12u m=1 
 x15 net112 c net87 vdd lppfet w=0.28u l=0.12u m=1 
 x16 net91 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x17 net112 cn m vdd lppfet w=2.32u l=0.12u m=1 
 x18 cn ck vss vss lpnfet w=0.52u l=0.12u m=1 
 x19 nmsi nmse nmin vss lpnfet w=0.92u l=0.12u m=1 
 x2 pm nmsi hnet26 vss lpnfet w=0.84u l=0.12u m=1 
 x20 net112 cn net102 vss lpnfet w=0.2u l=0.12u m=1 
 x21 net102 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 net112 nmset vss vss lpnfet w=0.52u l=0.12u m=1 
 x23 net112 c m vss lpnfet w=1.36u l=0.12u m=1 
 x24 hnet40 si vss vss lpnfet w=0.34u l=0.12u m=1 
 x25 nmsi se hnet40 vss lpnfet w=0.34u l=0.12u m=1 
 x26 hnet42 nmse nmsi vdd lppfet w=0.48u l=0.12u m=1 
 x27 vdd si hnet42 vdd lppfet w=0.48u l=0.12u m=1 
 x28 hnet46 m vss vss lpnfet w=0.22u l=0.12u m=1 
 x29 pm c hnet46 vss lpnfet w=0.22u l=0.12u m=1 
 x3 hnet33 sn vss vss lpnfet w=0.84u l=0.12u m=1 
 x30 hnet48 cn pm vdd lppfet w=0.3u l=0.12u m=1 
 x31 vdd m hnet48 vdd lppfet w=0.3u l=0.12u m=1 
 x32 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x33 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x34 vdd pm m vdd lppfet w=3u l=0.12u m=1 
 x35 m pm vss vss lpnfet w=1.48u l=0.12u m=1 
 x36 vdd sn nmset vdd lppfet w=0.28u l=0.12u m=1 
 x37 nmset sn vss vss lpnfet w=0.2u l=0.12u m=1 
 x38 vdd d nmin vdd lppfet w=1.34u l=0.12u m=1 
 x39 nmin d vss vss lpnfet w=0.92u l=0.12u m=1 
 x4 hnet28 cn hnet33 vss lpnfet w=0.84u l=0.12u m=1 
 x40 vdd net112 s vdd lppfet w=0.28u l=0.12u m=1 
 x41 s net112 vss vss lpnfet w=0.2u l=0.12u m=1 
 x42 vdd net112 q vdd lppfet w=2.6u l=0.12u m=1 
 x43 q net112 vss vss lpnfet w=1.84u l=0.12u m=1 
 x44 vdd net135 c vdd lppfet w=2.02u l=0.12u m=1 
 x45 c net135 vss vss lpnfet w=0.72u l=0.12u m=1 
 x46 vdd ck net135 vdd lppfet w=0.54u l=0.12u m=1 
 x47 net135 ck vss vss lpnfet w=0.54u l=0.12u m=1 
 x5 pm nmsi hnet28 vss lpnfet w=0.84u l=0.12u m=1 
 x6 vdd c hnet38 vdd lppfet w=0.74u l=0.12u m=1 
 x7 hnet38 nmsi pm vdd lppfet w=0.74u l=0.12u m=1 
 x8 vdd c hnet35 vdd lppfet w=0.74u l=0.12u m=1 
 x9 hnet35 nmsi pm vdd lppfet w=0.74u l=0.12u m=1 
 .ends sdffshqx4ts 

 **** 
 *.subckt sdffshqx8ts q ck d se si sn 
 .subckt sdffshqx8ts q ck d se si sn vss vdd
 x0 hnet32 sn vss vss lpnfet w=0.84u l=0.12u m=1 
 x1 hnet26 cn hnet32 vss lpnfet w=0.84u l=0.12u m=1 
 x10 net75 ck vdd vdd lppfet w=1.84u l=0.12u m=1 
 x11 cn c net75 vdd lppfet w=1.3u l=0.12u m=1 
 x12 nmsi se nmin vdd lppfet w=1.3u l=0.12u m=1 
 x13 pm sn vdd vdd lppfet w=0.64u l=0.12u m=1 
 x14 net87 nmset net91 vdd lppfet w=0.28u l=0.12u m=1 
 x15 net112 c net87 vdd lppfet w=0.28u l=0.12u m=1 
 x16 net91 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x17 net112 cn m vdd lppfet w=2.3u l=0.12u m=1 
 x18 cn ck vss vss lpnfet w=0.52u l=0.12u m=1 
 x19 nmsi nmse nmin vss lpnfet w=0.92u l=0.12u m=1 
 x2 pm nmsi hnet26 vss lpnfet w=0.84u l=0.12u m=1 
 x20 net112 cn net102 vss lpnfet w=0.2u l=0.12u m=1 
 x21 net102 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 net112 nmset vss vss lpnfet w=0.52u l=0.12u m=1 
 x23 net112 c m vss lpnfet w=1.36u l=0.12u m=1 
 x24 hnet40 si vss vss lpnfet w=0.34u l=0.12u m=1 
 x25 nmsi se hnet40 vss lpnfet w=0.34u l=0.12u m=1 
 x26 hnet42 nmse nmsi vdd lppfet w=0.48u l=0.12u m=1 
 x27 vdd si hnet42 vdd lppfet w=0.48u l=0.12u m=1 
 x28 hnet46 m vss vss lpnfet w=0.22u l=0.12u m=1 
 x29 pm c hnet46 vss lpnfet w=0.22u l=0.12u m=1 
 x3 hnet33 sn vss vss lpnfet w=0.84u l=0.12u m=1 
 x30 hnet48 cn pm vdd lppfet w=0.3u l=0.12u m=1 
 x31 vdd m hnet48 vdd lppfet w=0.3u l=0.12u m=1 
 x32 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x33 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x34 vdd pm m vdd lppfet w=3.12u l=0.12u m=1 
 x35 m pm vss vss lpnfet w=1.48u l=0.12u m=1 
 x36 vdd sn nmset vdd lppfet w=0.28u l=0.12u m=1 
 x37 nmset sn vss vss lpnfet w=0.2u l=0.12u m=1 
 x38 vdd d nmin vdd lppfet w=1.34u l=0.12u m=1 
 x39 nmin d vss vss lpnfet w=0.92u l=0.12u m=1 
 x4 hnet28 cn hnet33 vss lpnfet w=0.84u l=0.12u m=1 
 x40 vdd net112 s vdd lppfet w=0.28u l=0.12u m=1 
 x41 s net112 vss vss lpnfet w=0.2u l=0.12u m=1 
 x42 vdd net112 q vdd lppfet w=5.2u l=0.12u m=1 
 x43 q net112 vss vss lpnfet w=3.68u l=0.12u m=1 
 x44 vdd net135 c vdd lppfet w=2u l=0.12u m=1 
 x45 c net135 vss vss lpnfet w=0.72u l=0.12u m=1 
 x46 vdd ck net135 vdd lppfet w=0.54u l=0.12u m=1 
 x47 net135 ck vss vss lpnfet w=0.54u l=0.12u m=1 
 x5 pm nmsi hnet28 vss lpnfet w=0.84u l=0.12u m=1 
 x6 vdd c hnet38 vdd lppfet w=0.74u l=0.12u m=1 
 x7 hnet38 nmsi pm vdd lppfet w=0.74u l=0.12u m=1 
 x8 vdd c hnet35 vdd lppfet w=0.74u l=0.12u m=1 
 x9 hnet35 nmsi pm vdd lppfet w=0.74u l=0.12u m=1 
 .ends sdffshqx8ts 

 **** 
 *.subckt sdffsrhqx1ts q ck d rn se si sn 
 .subckt sdffsrhqx1ts q ck d rn se si sn vss vdd
 x0 hnet33 sn vss vss lpnfet w=0.54u l=0.12u m=1 
 x1 hnet28 cn hnet33 vss lpnfet w=0.54u l=0.12u m=1 
 x10 hnet49 nmset net148 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net102 ck vdd vdd lppfet w=0.7u l=0.12u m=1 
 x12 cn c net102 vdd lppfet w=0.52u l=0.12u m=1 
 x13 nmsi se nmin vdd lppfet w=0.38u l=0.12u m=1 
 x14 pm sn vdd vdd lppfet w=0.26u l=0.12u m=1 
 x15 m pm vdd vdd lppfet w=0.66u l=0.12u m=1 
 x16 net115 nmset net121 vdd lppfet w=0.26u l=0.12u m=1 
 x17 net148 c net115 vdd lppfet w=0.26u l=0.12u m=1 
 x18 net121 s vdd vdd lppfet w=0.26u l=0.12u m=1 
 x19 net148 cn m vdd lppfet w=0.66u l=0.12u m=1 
 x2 pm nmsi hnet28 vss lpnfet w=0.54u l=0.12u m=1 
 x20 cn ck vss vss lpnfet w=0.2u l=0.12u m=1 
 x21 nmsi nmse nmin vss lpnfet w=0.28u l=0.12u m=1 
 x22 net133 rn net132 vss lpnfet w=0.2u l=0.12u m=1 
 x23 net148 cn net133 vss lpnfet w=0.2u l=0.12u m=1 
 x24 net132 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 net148 nmset vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 m nmset vss vss lpnfet w=0.2u l=0.12u m=1 
 x27 net148 c m vss lpnfet w=0.46u l=0.12u m=1 
 x28 hnet51 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x29 nmsi se hnet51 vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet37 rn vss vss lpnfet w=0.5u l=0.12u m=1 
 x30 hnet53 nmse nmsi vdd lppfet w=0.28u l=0.12u m=1 
 x31 vdd si hnet53 vdd lppfet w=0.28u l=0.12u m=1 
 x32 hnet57 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x33 pm c hnet57 vss lpnfet w=0.2u l=0.12u m=1 
 x34 hnet59 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x35 vdd m hnet59 vdd lppfet w=0.28u l=0.12u m=1 
 x36 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x37 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x38 vdd sn nmset vdd lppfet w=0.28u l=0.12u m=1 
 x39 nmset sn vss vss lpnfet w=0.2u l=0.12u m=1 
 x4 m pm hnet37 vss lpnfet w=0.5u l=0.12u m=1 
 x40 vdd d nmin vdd lppfet w=0.38u l=0.12u m=1 
 x41 nmin d vss vss lpnfet w=0.28u l=0.12u m=1 
 x42 vdd net148 s vdd lppfet w=0.28u l=0.12u m=1 
 x43 s net148 vss vss lpnfet w=0.2u l=0.12u m=1 
 x44 vdd net148 q vdd lppfet w=0.76u l=0.12u m=1 
 x45 q net148 vss vss lpnfet w=0.46u l=0.12u m=1 
 x46 vdd net169 c vdd lppfet w=0.78u l=0.12u m=1 
 x47 c net169 vss vss lpnfet w=0.28u l=0.12u m=1 
 x48 vdd ck net169 vdd lppfet w=0.28u l=0.12u m=1 
 x49 net169 ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x5 vdd c hnet41 vdd lppfet w=0.46u l=0.12u m=1 
 x6 hnet41 nmsi pm vdd lppfet w=0.46u l=0.12u m=1 
 x7 vdd nmset hnet45 vdd lppfet w=0.26u l=0.12u m=1 
 x8 hnet45 rn m vdd lppfet w=0.26u l=0.12u m=1 
 x9 vdd rn hnet49 vdd lppfet w=0.28u l=0.12u m=1 
 .ends sdffsrhqx1ts 

 **** 
 *.subckt sdffsrhqx2ts q ck d rn se si sn 
 .subckt sdffsrhqx2ts q ck d rn se si sn vss vdd
 x0 hnet33 sn vss vss lpnfet w=0.88u l=0.12u m=1 
 x1 hnet28 cn hnet33 vss lpnfet w=0.88u l=0.12u m=1 
 x10 hnet49 nmset net148 vdd lppfet w=0.46u l=0.12u m=1 
 x11 net102 ck vdd vdd lppfet w=0.86u l=0.12u m=1 
 x12 cn c net102 vdd lppfet w=0.64u l=0.12u m=1 
 x13 nmsi se nmin vdd lppfet w=0.7u l=0.12u m=1 
 x14 pm sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x15 m pm vdd vdd lppfet w=1.14u l=0.12u m=1 
 x16 net117 nmset net121 vdd lppfet w=0.28u l=0.12u m=1 
 x17 net148 c net117 vdd lppfet w=0.28u l=0.12u m=1 
 x18 net121 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x19 net148 cn m vdd lppfet w=1.14u l=0.12u m=1 
 x2 pm nmsi hnet28 vss lpnfet w=0.88u l=0.12u m=1 
 x20 cn ck vss vss lpnfet w=0.24u l=0.12u m=1 
 x21 nmsi nmse nmin vss lpnfet w=0.5u l=0.12u m=1 
 x22 net135 rn net139 vss lpnfet w=0.2u l=0.12u m=1 
 x23 net148 cn net135 vss lpnfet w=0.2u l=0.12u m=1 
 x24 net139 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 net148 nmset vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 m nmset vss vss lpnfet w=0.2u l=0.12u m=1 
 x27 net148 c m vss lpnfet w=0.82u l=0.12u m=1 
 x28 hnet51 si vss vss lpnfet w=0.24u l=0.12u m=1 
 x29 nmsi se hnet51 vss lpnfet w=0.24u l=0.12u m=1 
 x3 hnet37 rn vss vss lpnfet w=0.86u l=0.12u m=1 
 x30 hnet53 nmse nmsi vdd lppfet w=0.34u l=0.12u m=1 
 x31 vdd si hnet53 vdd lppfet w=0.34u l=0.12u m=1 
 x32 hnet57 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x33 pm c hnet57 vss lpnfet w=0.2u l=0.12u m=1 
 x34 hnet59 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x35 vdd m hnet59 vdd lppfet w=0.28u l=0.12u m=1 
 x36 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x37 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x38 vdd sn nmset vdd lppfet w=0.28u l=0.12u m=1 
 x39 nmset sn vss vss lpnfet w=0.2u l=0.12u m=1 
 x4 m pm hnet37 vss lpnfet w=0.86u l=0.12u m=1 
 x40 vdd d nmin vdd lppfet w=0.7u l=0.12u m=1 
 x41 nmin d vss vss lpnfet w=0.5u l=0.12u m=1 
 x42 vdd net148 s vdd lppfet w=0.28u l=0.12u m=1 
 x43 s net148 vss vss lpnfet w=0.2u l=0.12u m=1 
 x44 vdd net148 q vdd lppfet w=1.48u l=0.12u m=1 
 x45 q net148 vss vss lpnfet w=0.92u l=0.12u m=1 
 x46 vdd net169 c vdd lppfet w=1.1u l=0.12u m=1 
 x47 c net169 vss vss lpnfet w=0.4u l=0.12u m=1 
 x48 vdd ck net169 vdd lppfet w=0.3u l=0.12u m=1 
 x49 net169 ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x5 vdd c hnet41 vdd lppfet w=0.8u l=0.12u m=1 
 x6 hnet41 nmsi pm vdd lppfet w=0.8u l=0.12u m=1 
 x7 vdd nmset hnet45 vdd lppfet w=0.28u l=0.12u m=1 
 x8 hnet45 rn m vdd lppfet w=0.28u l=0.12u m=1 
 x9 vdd rn hnet49 vdd lppfet w=0.46u l=0.12u m=1 
 .ends sdffsrhqx2ts 

 **** 
 *.subckt sdffsrhqx4ts q ck d rn se si sn 
 .subckt sdffsrhqx4ts q ck d rn se si sn vss vdd
 x0 hnet34 sn vss vss lpnfet w=1.1u l=0.12u m=1 
 x1 hnet29 cn hnet34 vss lpnfet w=1.1u l=0.12u m=1 
 x10 hnet41 nmsi pm vdd lppfet w=0.68u l=0.12u m=1 
 x11 vdd nmset hnet48 vdd lppfet w=0.52u l=0.12u m=1 
 x12 hnet48 rn m vdd lppfet w=0.52u l=0.12u m=1 
 x13 vdd rn hnet52 vdd lppfet w=0.84u l=0.12u m=1 
 x14 hnet52 nmset net156 vdd lppfet w=0.84u l=0.12u m=1 
 x15 net110 ck vdd vdd lppfet w=0.74u l=0.12u m=1 
 x16 cn c net104 vdd lppfet w=0.56u l=0.12u m=1 
 x17 net104 ck vdd vdd lppfet w=0.74u l=0.12u m=1 
 x18 cn c net110 vdd lppfet w=0.56u l=0.12u m=1 
 x19 nmsi se nmin vdd lppfet w=1.24u l=0.12u m=1 
 x2 pm nmsi hnet29 vss lpnfet w=1.1u l=0.12u m=1 
 x20 pm sn vdd vdd lppfet w=0.36u l=0.12u m=1 
 x21 m pm vdd vdd lppfet w=2.08u l=0.12u m=1 
 x22 net125 nmset net129 vdd lppfet w=0.28u l=0.12u m=1 
 x23 net156 c net125 vdd lppfet w=0.28u l=0.12u m=1 
 x24 net129 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x25 net156 cn m vdd lppfet w=1.28u l=0.12u m=1 
 x26 cn ck vss vss lpnfet w=0.42u l=0.12u m=1 
 x27 nmsi nmse nmin vss lpnfet w=0.86u l=0.12u m=1 
 x28 net143 rn net147 vss lpnfet w=0.2u l=0.12u m=1 
 x29 net156 cn net143 vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet39 rn vss vss lpnfet w=0.5u l=0.12u m=1 
 x30 net147 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x31 net156 nmset vss vss lpnfet w=0.38u l=0.12u m=1 
 x32 m nmset vss vss lpnfet w=0.38u l=0.12u m=1 
 x33 net156 c m vss lpnfet w=0.92u l=0.12u m=1 
 x34 hnet54 si vss vss lpnfet w=0.44u l=0.12u m=1 
 x35 nmsi se hnet54 vss lpnfet w=0.44u l=0.12u m=1 
 x36 hnet56 nmse nmsi vdd lppfet w=0.62u l=0.12u m=1 
 x37 vdd si hnet56 vdd lppfet w=0.62u l=0.12u m=1 
 x38 hnet60 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x39 pm c hnet60 vss lpnfet w=0.2u l=0.12u m=1 
 x4 m pm hnet39 vss lpnfet w=0.5u l=0.12u m=1 
 x40 hnet62 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x41 vdd m hnet62 vdd lppfet w=0.28u l=0.12u m=1 
 x42 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x43 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x44 vdd sn nmset vdd lppfet w=0.34u l=0.12u m=1 
 x45 nmset sn vss vss lpnfet w=0.24u l=0.12u m=1 
 x46 vdd d nmin vdd lppfet w=1.24u l=0.12u m=1 
 x47 nmin d vss vss lpnfet w=0.86u l=0.12u m=1 
 x48 vdd net156 s vdd lppfet w=0.28u l=0.12u m=1 
 x49 s net156 vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 hnet35 rn vss vss lpnfet w=0.5u l=0.12u m=1 
 x50 vdd net156 q vdd lppfet w=2.6u l=0.12u m=1 
 x51 q net156 vss vss lpnfet w=1.84u l=0.12u m=1 
 x52 vdd net177 c vdd lppfet w=1.66u l=0.12u m=1 
 x53 c net177 vss vss lpnfet w=0.66u l=0.12u m=1 
 x54 vdd ck net177 vdd lppfet w=0.5u l=0.12u m=1 
 x55 net177 ck vss vss lpnfet w=0.5u l=0.12u m=1 
 x6 m pm hnet35 vss lpnfet w=0.5u l=0.12u m=1 
 x7 vdd c hnet44 vdd lppfet w=0.68u l=0.12u m=1 
 x8 hnet44 nmsi pm vdd lppfet w=0.68u l=0.12u m=1 
 x9 vdd c hnet41 vdd lppfet w=0.68u l=0.12u m=1 
 .ends sdffsrhqx4ts 

 **** 
 *.subckt sdffsrhqx8ts q ck d rn se si sn 
 .subckt sdffsrhqx8ts q ck d rn se si sn vss vdd
 x0 hnet34 sn vss vss lpnfet w=1.1u l=0.12u m=1 
 x1 hnet29 cn hnet34 vss lpnfet w=1.1u l=0.12u m=1 
 x10 hnet41 nmsi pm vdd lppfet w=0.68u l=0.12u m=1 
 x11 vdd nmset hnet48 vdd lppfet w=0.52u l=0.12u m=1 
 x12 hnet48 rn m vdd lppfet w=0.52u l=0.12u m=1 
 x13 vdd rn hnet52 vdd lppfet w=0.84u l=0.12u m=1 
 x14 hnet52 nmset net156 vdd lppfet w=0.84u l=0.12u m=1 
 x15 net110 ck vdd vdd lppfet w=0.74u l=0.12u m=1 
 x16 cn c net104 vdd lppfet w=0.56u l=0.12u m=1 
 x17 net104 ck vdd vdd lppfet w=0.74u l=0.12u m=1 
 x18 cn c net110 vdd lppfet w=0.56u l=0.12u m=1 
 x19 nmsi se nmin vdd lppfet w=1.24u l=0.12u m=1 
 x2 pm nmsi hnet29 vss lpnfet w=1.1u l=0.12u m=1 
 x20 pm sn vdd vdd lppfet w=0.36u l=0.12u m=1 
 x21 m pm vdd vdd lppfet w=2.08u l=0.12u m=1 
 x22 net125 nmset net129 vdd lppfet w=0.28u l=0.12u m=1 
 x23 net156 c net125 vdd lppfet w=0.28u l=0.12u m=1 
 x24 net129 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x25 net156 cn m vdd lppfet w=1.28u l=0.12u m=1 
 x26 cn ck vss vss lpnfet w=0.42u l=0.12u m=1 
 x27 nmsi nmse nmin vss lpnfet w=0.86u l=0.12u m=1 
 x28 net143 rn net147 vss lpnfet w=0.2u l=0.12u m=1 
 x29 net156 cn net143 vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet39 rn vss vss lpnfet w=0.5u l=0.12u m=1 
 x30 net147 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x31 net156 nmset vss vss lpnfet w=0.38u l=0.12u m=1 
 x32 m nmset vss vss lpnfet w=0.38u l=0.12u m=1 
 x33 net156 c m vss lpnfet w=0.92u l=0.12u m=1 
 x34 hnet54 si vss vss lpnfet w=0.44u l=0.12u m=1 
 x35 nmsi se hnet54 vss lpnfet w=0.44u l=0.12u m=1 
 x36 hnet56 nmse nmsi vdd lppfet w=0.62u l=0.12u m=1 
 x37 vdd si hnet56 vdd lppfet w=0.62u l=0.12u m=1 
 x38 hnet60 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x39 pm c hnet60 vss lpnfet w=0.2u l=0.12u m=1 
 x4 m pm hnet39 vss lpnfet w=0.5u l=0.12u m=1 
 x40 hnet62 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x41 vdd m hnet62 vdd lppfet w=0.28u l=0.12u m=1 
 x42 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x43 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x44 vdd sn nmset vdd lppfet w=0.34u l=0.12u m=1 
 x45 nmset sn vss vss lpnfet w=0.24u l=0.12u m=1 
 x46 vdd d nmin vdd lppfet w=1.24u l=0.12u m=1 
 x47 nmin d vss vss lpnfet w=0.86u l=0.12u m=1 
 x48 vdd net156 s vdd lppfet w=0.28u l=0.12u m=1 
 x49 s net156 vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 hnet35 rn vss vss lpnfet w=0.5u l=0.12u m=1 
 x50 vdd net156 q vdd lppfet w=5.2u l=0.12u m=1 
 x51 q net156 vss vss lpnfet w=3.68u l=0.12u m=1 
 x52 vdd net177 c vdd lppfet w=1.66u l=0.12u m=1 
 x53 c net177 vss vss lpnfet w=0.66u l=0.12u m=1 
 x54 vdd ck net177 vdd lppfet w=0.5u l=0.12u m=1 
 x55 net177 ck vss vss lpnfet w=0.5u l=0.12u m=1 
 x6 m pm hnet35 vss lpnfet w=0.5u l=0.12u m=1 
 x7 vdd c hnet44 vdd lppfet w=0.68u l=0.12u m=1 
 x8 hnet44 nmsi pm vdd lppfet w=0.68u l=0.12u m=1 
 x9 vdd c hnet41 vdd lppfet w=0.68u l=0.12u m=1 
 .ends sdffsrhqx8ts 

 **** 
 *.subckt sdffsrx1ts q qn ck d rn se si sn 
 .subckt sdffsrx1ts q qn ck d rn se si sn vss vdd
 x0 vdd d hnet32 vdd lppfet w=0.28u l=0.12u m=1 
 x1 hnet32 se nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x10 net146 c net104 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net146 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x12 net115 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x13 nminsi nmse net115 vss lpnfet w=0.2u l=0.12u m=1 
 x14 net119 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 nminsi se net119 vss lpnfet w=0.2u l=0.12u m=1 
 x16 pm cn nminsi vss lpnfet w=0.2u l=0.12u m=1 
 x17 m net157 net140 vss lpnfet w=0.2u l=0.12u m=1 
 x18 m pm net140 vss lpnfet w=0.3u l=0.12u m=1 
 x19 net146 net157 net140 vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd si hnet36 vdd lppfet w=0.28u l=0.12u m=1 
 x20 net137 s net140 vss lpnfet w=0.2u l=0.12u m=1 
 x21 net140 sn vss vss lpnfet w=0.4u l=0.12u m=1 
 x22 net146 cn net137 vss lpnfet w=0.2u l=0.12u m=1 
 x23 net146 c m vss lpnfet w=0.2u l=0.12u m=1 
 x24 hnet38 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 pm c hnet38 vss lpnfet w=0.2u l=0.12u m=1 
 x26 hnet40 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x27 vdd m hnet40 vdd lppfet w=0.28u l=0.12u m=1 
 x28 vdd s net151 vdd lppfet w=0.28u l=0.12u m=1 
 x29 net151 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet36 nmse nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x30 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x31 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x32 vdd s q vdd lppfet w=0.64u l=0.12u m=1 
 x33 q s vss vss lpnfet w=0.46u l=0.12u m=1 
 x34 vdd rn net157 vdd lppfet w=0.28u l=0.12u m=1 
 x35 net157 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x36 vdd net146 s vdd lppfet w=0.28u l=0.12u m=1 
 x37 s net146 vss vss lpnfet w=0.2u l=0.12u m=1 
 x38 vdd net151 qn vdd lppfet w=0.64u l=0.12u m=1 
 x39 qn net151 vss vss lpnfet w=0.46u l=0.12u m=1 
 x4 pm c nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x40 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x41 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x42 vdd ck cn vdd lppfet w=0.42u l=0.12u m=1 
 x43 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x5 m sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x6 m pm net94 vdd lppfet w=0.42u l=0.12u m=1 
 x7 net94 net157 vdd vdd lppfet w=0.56u l=0.12u m=1 
 x8 net146 sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x9 net104 s net94 vdd lppfet w=0.28u l=0.12u m=1 
 .ends sdffsrx1ts 

 **** 
 *.subckt sdffsrx2ts q qn ck d rn se si sn 
 .subckt sdffsrx2ts q qn ck d rn se si sn vss vdd
 x0 vdd d hnet32 vdd lppfet w=0.28u l=0.12u m=1 
 x1 hnet32 se nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x10 net146 c net104 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net146 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x12 net115 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x13 nminsi nmse net115 vss lpnfet w=0.2u l=0.12u m=1 
 x14 net121 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 nminsi se net121 vss lpnfet w=0.2u l=0.12u m=1 
 x16 pm cn nminsi vss lpnfet w=0.2u l=0.12u m=1 
 x17 m net157 net140 vss lpnfet w=0.2u l=0.12u m=1 
 x18 m pm net140 vss lpnfet w=0.3u l=0.12u m=1 
 x19 net146 net157 net140 vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd si hnet36 vdd lppfet w=0.28u l=0.12u m=1 
 x20 net142 s net140 vss lpnfet w=0.2u l=0.12u m=1 
 x21 net140 sn vss vss lpnfet w=0.4u l=0.12u m=1 
 x22 net146 cn net142 vss lpnfet w=0.2u l=0.12u m=1 
 x23 net146 c m vss lpnfet w=0.2u l=0.12u m=1 
 x24 hnet38 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 pm c hnet38 vss lpnfet w=0.2u l=0.12u m=1 
 x26 hnet40 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x27 vdd m hnet40 vdd lppfet w=0.28u l=0.12u m=1 
 x28 vdd s net151 vdd lppfet w=0.3u l=0.12u m=1 
 x29 net151 s vss vss lpnfet w=0.22u l=0.12u m=1 
 x3 hnet36 nmse nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x30 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x31 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x32 vdd s q vdd lppfet w=1.28u l=0.12u m=1 
 x33 q s vss vss lpnfet w=0.92u l=0.12u m=1 
 x34 vdd rn net157 vdd lppfet w=0.28u l=0.12u m=1 
 x35 net157 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x36 vdd net146 s vdd lppfet w=0.34u l=0.12u m=1 
 x37 s net146 vss vss lpnfet w=0.28u l=0.12u m=1 
 x38 vdd net151 qn vdd lppfet w=1.28u l=0.12u m=1 
 x39 qn net151 vss vss lpnfet w=0.92u l=0.12u m=1 
 x4 pm c nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x40 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x41 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x42 vdd ck cn vdd lppfet w=0.42u l=0.12u m=1 
 x43 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x5 m sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x6 m pm net94 vdd lppfet w=0.42u l=0.12u m=1 
 x7 net94 net157 vdd vdd lppfet w=0.56u l=0.12u m=1 
 x8 net146 sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x9 net104 s net94 vdd lppfet w=0.28u l=0.12u m=1 
 .ends sdffsrx2ts 

 **** 
 *.subckt sdffsrx4ts q qn ck d rn se si sn 
 .subckt sdffsrx4ts q qn ck d rn se si sn vss vdd
 x0 vdd d hnet32 vdd lppfet w=0.28u l=0.12u m=1 
 x1 hnet32 se nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x10 net146 c net104 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net146 cn m vdd lppfet w=0.3u l=0.12u m=1 
 x12 net115 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x13 nminsi nmse net115 vss lpnfet w=0.2u l=0.12u m=1 
 x14 net121 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 nminsi se net121 vss lpnfet w=0.2u l=0.12u m=1 
 x16 pm cn nminsi vss lpnfet w=0.2u l=0.12u m=1 
 x17 m net157 net140 vss lpnfet w=0.2u l=0.12u m=1 
 x18 m pm net140 vss lpnfet w=0.34u l=0.12u m=1 
 x19 net146 net157 net140 vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd si hnet36 vdd lppfet w=0.28u l=0.12u m=1 
 x20 net142 s net140 vss lpnfet w=0.2u l=0.12u m=1 
 x21 net140 sn vss vss lpnfet w=0.46u l=0.12u m=1 
 x22 net146 cn net142 vss lpnfet w=0.2u l=0.12u m=1 
 x23 net146 c m vss lpnfet w=0.22u l=0.12u m=1 
 x24 hnet38 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 pm c hnet38 vss lpnfet w=0.2u l=0.12u m=1 
 x26 hnet40 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x27 vdd m hnet40 vdd lppfet w=0.28u l=0.12u m=1 
 x28 vdd s net151 vdd lppfet w=0.62u l=0.12u m=1 
 x29 net151 s vss vss lpnfet w=0.4u l=0.12u m=1 
 x3 hnet36 nmse nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x30 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x31 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x32 vdd s q vdd lppfet w=2.4u l=0.12u m=1 
 x33 q s vss vss lpnfet w=1.84u l=0.12u m=1 
 x34 vdd rn net157 vdd lppfet w=0.28u l=0.12u m=1 
 x35 net157 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x36 vdd net146 s vdd lppfet w=0.66u l=0.12u m=1 
 x37 s net146 vss vss lpnfet w=0.44u l=0.12u m=1 
 x38 vdd net151 qn vdd lppfet w=2.4u l=0.12u m=1 
 x39 qn net151 vss vss lpnfet w=1.84u l=0.12u m=1 
 x4 pm c nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x40 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x41 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x42 vdd ck cn vdd lppfet w=0.44u l=0.12u m=1 
 x43 cn ck vss vss lpnfet w=0.32u l=0.12u m=1 
 x5 m sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x6 m pm net94 vdd lppfet w=0.46u l=0.12u m=1 
 x7 net94 net157 vdd vdd lppfet w=0.62u l=0.12u m=1 
 x8 net146 sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x9 net104 s net94 vdd lppfet w=0.28u l=0.12u m=1 
 .ends sdffsrx4ts 

 **** 
 *.subckt sdffsrxlts q qn ck d rn se si sn 
 .subckt sdffsrxlts q qn ck d rn se si sn vss vdd
 x0 vdd d hnet32 vdd lppfet w=0.28u l=0.12u m=1 
 x1 hnet32 se nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x10 net146 c net104 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net146 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x12 net115 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x13 nminsi nmse net115 vss lpnfet w=0.2u l=0.12u m=1 
 x14 net121 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 nminsi se net121 vss lpnfet w=0.2u l=0.12u m=1 
 x16 pm cn nminsi vss lpnfet w=0.2u l=0.12u m=1 
 x17 m net157 net140 vss lpnfet w=0.2u l=0.12u m=1 
 x18 m pm net140 vss lpnfet w=0.3u l=0.12u m=1 
 x19 net146 net157 net140 vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd si hnet36 vdd lppfet w=0.28u l=0.12u m=1 
 x20 net137 s net140 vss lpnfet w=0.2u l=0.12u m=1 
 x21 net140 sn vss vss lpnfet w=0.4u l=0.12u m=1 
 x22 net146 cn net137 vss lpnfet w=0.2u l=0.12u m=1 
 x23 net146 c m vss lpnfet w=0.2u l=0.12u m=1 
 x24 hnet38 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 pm c hnet38 vss lpnfet w=0.2u l=0.12u m=1 
 x26 hnet40 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x27 vdd m hnet40 vdd lppfet w=0.28u l=0.12u m=1 
 x28 vdd s net151 vdd lppfet w=0.28u l=0.12u m=1 
 x29 net151 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet36 nmse nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x30 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x31 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x32 vdd s q vdd lppfet w=0.34u l=0.12u m=1 
 x33 q s vss vss lpnfet w=0.24u l=0.12u m=1 
 x34 vdd rn net157 vdd lppfet w=0.28u l=0.12u m=1 
 x35 net157 rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x36 vdd net146 s vdd lppfet w=0.28u l=0.12u m=1 
 x37 s net146 vss vss lpnfet w=0.2u l=0.12u m=1 
 x38 vdd net151 qn vdd lppfet w=0.34u l=0.12u m=1 
 x39 qn net151 vss vss lpnfet w=0.24u l=0.12u m=1 
 x4 pm c nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x40 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x41 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x42 vdd ck cn vdd lppfet w=0.42u l=0.12u m=1 
 x43 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x5 m sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x6 m pm net94 vdd lppfet w=0.42u l=0.12u m=1 
 x7 net94 net157 vdd vdd lppfet w=0.56u l=0.12u m=1 
 x8 net146 sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x9 net104 s net94 vdd lppfet w=0.28u l=0.12u m=1 
 .ends sdffsrxlts 

 **** 
 *.subckt sdffsx1ts q qn ck d se si sn 
 .subckt sdffsx1ts q qn ck d se si sn vss vdd
 x0 vdd d hnet29 vdd lppfet w=0.28u l=0.12u m=1 
 x1 hnet29 se nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x10 net128 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x11 net101 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x12 nminsi nmse net101 vss lpnfet w=0.2u l=0.12u m=1 
 x13 net109 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x14 nminsi se net109 vss lpnfet w=0.2u l=0.12u m=1 
 x15 pm cn nminsi vss lpnfet w=0.2u l=0.12u m=1 
 x16 m pm net122 vss lpnfet w=0.3u l=0.12u m=1 
 x17 net119 s net122 vss lpnfet w=0.2u l=0.12u m=1 
 x18 net122 sn vss vss lpnfet w=0.4u l=0.12u m=1 
 x19 net128 cn net119 vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd si hnet33 vdd lppfet w=0.28u l=0.12u m=1 
 x20 net128 c m vss lpnfet w=0.2u l=0.12u m=1 
 x21 hnet35 m vss vss lpnfet w=0.22u l=0.12u m=1 
 x22 pm c hnet35 vss lpnfet w=0.22u l=0.12u m=1 
 x23 hnet37 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x24 vdd m hnet37 vdd lppfet w=0.28u l=0.12u m=1 
 x25 vdd s net133 vdd lppfet w=0.28u l=0.12u m=1 
 x26 net133 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x27 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x28 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x29 vdd s q vdd lppfet w=0.64u l=0.12u m=1 
 x3 hnet33 nmse nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x30 q s vss vss lpnfet w=0.46u l=0.12u m=1 
 x31 vdd net128 s vdd lppfet w=0.28u l=0.12u m=1 
 x32 s net128 vss vss lpnfet w=0.2u l=0.12u m=1 
 x33 vdd net133 qn vdd lppfet w=0.64u l=0.12u m=1 
 x34 qn net133 vss vss lpnfet w=0.46u l=0.12u m=1 
 x35 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x36 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x37 vdd ck cn vdd lppfet w=0.34u l=0.12u m=1 
 x38 cn ck vss vss lpnfet w=0.24u l=0.12u m=1 
 x4 pm c nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x5 net83 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x6 m sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x7 m pm vdd vdd lppfet w=0.28u l=0.12u m=1 
 x8 net128 sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x9 net128 c net83 vdd lppfet w=0.28u l=0.12u m=1 
 .ends sdffsx1ts 

 **** 
 *.subckt sdffsx2ts q qn ck d se si sn 
 .subckt sdffsx2ts q qn ck d se si sn vss vdd
 x0 vdd d hnet29 vdd lppfet w=0.28u l=0.12u m=1 
 x1 hnet29 se nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x10 net128 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x11 net103 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x12 nminsi nmse net103 vss lpnfet w=0.2u l=0.12u m=1 
 x13 net109 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x14 nminsi se net109 vss lpnfet w=0.2u l=0.12u m=1 
 x15 pm cn nminsi vss lpnfet w=0.22u l=0.12u m=1 
 x16 m pm net122 vss lpnfet w=0.3u l=0.12u m=1 
 x17 net119 s net122 vss lpnfet w=0.2u l=0.12u m=1 
 x18 net122 sn vss vss lpnfet w=0.4u l=0.12u m=1 
 x19 net128 cn net119 vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd si hnet33 vdd lppfet w=0.28u l=0.12u m=1 
 x20 net128 c m vss lpnfet w=0.2u l=0.12u m=1 
 x21 hnet35 m vss vss lpnfet w=0.22u l=0.12u m=1 
 x22 pm c hnet35 vss lpnfet w=0.22u l=0.12u m=1 
 x23 hnet37 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x24 vdd m hnet37 vdd lppfet w=0.28u l=0.12u m=1 
 x25 vdd s net133 vdd lppfet w=0.3u l=0.12u m=1 
 x26 net133 s vss vss lpnfet w=0.22u l=0.12u m=1 
 x27 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x28 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x29 vdd s q vdd lppfet w=1.28u l=0.12u m=1 
 x3 hnet33 nmse nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x30 q s vss vss lpnfet w=0.92u l=0.12u m=1 
 x31 vdd net128 s vdd lppfet w=0.36u l=0.12u m=1 
 x32 s net128 vss vss lpnfet w=0.26u l=0.12u m=1 
 x33 vdd net133 qn vdd lppfet w=1.28u l=0.12u m=1 
 x34 qn net133 vss vss lpnfet w=0.92u l=0.12u m=1 
 x35 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x36 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x37 vdd ck cn vdd lppfet w=0.42u l=0.12u m=1 
 x38 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x4 pm c nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x5 net94 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x6 m sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x7 m pm vdd vdd lppfet w=0.28u l=0.12u m=1 
 x8 net128 sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x9 net128 c net94 vdd lppfet w=0.28u l=0.12u m=1 
 .ends sdffsx2ts 

 **** 
 *.subckt sdffsx4ts q qn ck d se si sn 
 .subckt sdffsx4ts q qn ck d se si sn vss vdd
 x0 vdd d hnet29 vdd lppfet w=0.28u l=0.12u m=1 
 x1 hnet29 se nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x10 net128 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x11 net103 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x12 nminsi nmse net103 vss lpnfet w=0.2u l=0.12u m=1 
 x13 net109 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x14 nminsi se net109 vss lpnfet w=0.2u l=0.12u m=1 
 x15 pm cn nminsi vss lpnfet w=0.2u l=0.12u m=1 
 x16 m pm net122 vss lpnfet w=0.34u l=0.12u m=1 
 x17 net119 s net122 vss lpnfet w=0.2u l=0.12u m=1 
 x18 net122 sn vss vss lpnfet w=0.46u l=0.12u m=1 
 x19 net128 cn net119 vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd si hnet33 vdd lppfet w=0.28u l=0.12u m=1 
 x20 net128 c m vss lpnfet w=0.22u l=0.12u m=1 
 x21 hnet35 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 pm c hnet35 vss lpnfet w=0.2u l=0.12u m=1 
 x23 hnet37 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x24 vdd m hnet37 vdd lppfet w=0.28u l=0.12u m=1 
 x25 vdd s net133 vdd lppfet w=0.62u l=0.12u m=1 
 x26 net133 s vss vss lpnfet w=0.44u l=0.12u m=1 
 x27 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x28 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x29 vdd s q vdd lppfet w=2.56u l=0.12u m=1 
 x3 hnet33 nmse nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x30 q s vss vss lpnfet w=1.84u l=0.12u m=1 
 x31 vdd net128 s vdd lppfet w=0.66u l=0.12u m=1 
 x32 s net128 vss vss lpnfet w=0.48u l=0.12u m=1 
 x33 vdd net133 qn vdd lppfet w=2.56u l=0.12u m=1 
 x34 qn net133 vss vss lpnfet w=1.84u l=0.12u m=1 
 x35 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x36 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x37 vdd ck cn vdd lppfet w=0.42u l=0.12u m=1 
 x38 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x4 pm c nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x5 net94 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x6 m sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x7 m pm vdd vdd lppfet w=0.28u l=0.12u m=1 
 x8 net128 sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x9 net128 c net94 vdd lppfet w=0.28u l=0.12u m=1 
 .ends sdffsx4ts 

 **** 
 *.subckt sdffsxlts q qn ck d se si sn 
 .subckt sdffsxlts q qn ck d se si sn vss vdd
 x0 vdd d hnet29 vdd lppfet w=0.28u l=0.12u m=1 
 x1 hnet29 se nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x10 net128 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x11 net101 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x12 nminsi nmse net101 vss lpnfet w=0.2u l=0.12u m=1 
 x13 net109 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x14 nminsi se net109 vss lpnfet w=0.2u l=0.12u m=1 
 x15 pm cn nminsi vss lpnfet w=0.2u l=0.12u m=1 
 x16 m pm net122 vss lpnfet w=0.3u l=0.12u m=1 
 x17 net119 s net122 vss lpnfet w=0.2u l=0.12u m=1 
 x18 net122 sn vss vss lpnfet w=0.4u l=0.12u m=1 
 x19 net128 cn net119 vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd si hnet33 vdd lppfet w=0.28u l=0.12u m=1 
 x20 net128 c m vss lpnfet w=0.2u l=0.12u m=1 
 x21 hnet35 m vss vss lpnfet w=0.22u l=0.12u m=1 
 x22 pm c hnet35 vss lpnfet w=0.22u l=0.12u m=1 
 x23 hnet37 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x24 vdd m hnet37 vdd lppfet w=0.28u l=0.12u m=1 
 x25 vdd s net133 vdd lppfet w=0.28u l=0.12u m=1 
 x26 net133 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x27 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x28 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x29 vdd s q vdd lppfet w=0.34u l=0.12u m=1 
 x3 hnet33 nmse nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x30 q s vss vss lpnfet w=0.24u l=0.12u m=1 
 x31 vdd net128 s vdd lppfet w=0.28u l=0.12u m=1 
 x32 s net128 vss vss lpnfet w=0.2u l=0.12u m=1 
 x33 vdd net133 qn vdd lppfet w=0.34u l=0.12u m=1 
 x34 qn net133 vss vss lpnfet w=0.24u l=0.12u m=1 
 x35 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x36 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x37 vdd ck cn vdd lppfet w=0.34u l=0.12u m=1 
 x38 cn ck vss vss lpnfet w=0.24u l=0.12u m=1 
 x4 pm c nminsi vdd lppfet w=0.28u l=0.12u m=1 
 x5 net83 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x6 m sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x7 m pm vdd vdd lppfet w=0.28u l=0.12u m=1 
 x8 net128 sn vdd vdd lppfet w=0.28u l=0.12u m=1 
 x9 net128 c net83 vdd lppfet w=0.28u l=0.12u m=1 
 .ends sdffsxlts 

 **** 
 *.subckt sdfftrx1ts q qn ck d rn se si 
 .subckt sdfftrx1ts q qn ck d rn se si vss vdd
 x0 vdd se hnet29 vdd lppfet w=0.28u l=0.12u m=1 
 x1 hnet29 rn net99 vdd lppfet w=0.28u l=0.12u m=1 
 x10 pm c net99 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net117 c net87 vdd lppfet w=0.28u l=0.12u m=1 
 x12 net87 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x13 net117 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x14 net93 rn vss vss lpnfet w=0.28u l=0.12u m=1 
 x15 net98 d net93 vss lpnfet w=0.28u l=0.12u m=1 
 x16 net99 nmse net98 vss lpnfet w=0.28u l=0.12u m=1 
 x17 net104 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 net99 se net104 vss lpnfet w=0.2u l=0.12u m=1 
 x19 pm cn net99 vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd d hnet33 vdd lppfet w=0.36u l=0.12u m=1 
 x20 net117 cn net114 vss lpnfet w=0.2u l=0.12u m=1 
 x21 net114 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 net117 c m vss lpnfet w=0.2u l=0.12u m=1 
 x23 vdd s net118 vdd lppfet w=0.28u l=0.12u m=1 
 x24 net118 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x26 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x27 vdd net117 s vdd lppfet w=0.28u l=0.12u m=1 
 x28 s net117 vss vss lpnfet w=0.2u l=0.12u m=1 
 x29 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x3 hnet33 se net99 vdd lppfet w=0.36u l=0.12u m=1 
 x30 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x31 vdd s q vdd lppfet w=0.64u l=0.12u m=1 
 x32 q s vss vss lpnfet w=0.46u l=0.12u m=1 
 x33 vdd net118 qn vdd lppfet w=0.64u l=0.12u m=1 
 x34 qn net118 vss vss lpnfet w=0.46u l=0.12u m=1 
 x35 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x36 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x37 vdd ck cn vdd lppfet w=0.42u l=0.12u m=1 
 x38 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x4 vdd si hnet37 vdd lppfet w=0.28u l=0.12u m=1 
 x5 hnet37 nmse net99 vdd lppfet w=0.28u l=0.12u m=1 
 x6 vdd m hnet41 vdd lppfet w=0.28u l=0.12u m=1 
 x7 hnet41 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x8 hnet45 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x9 pm c hnet45 vss lpnfet w=0.2u l=0.12u m=1 
 .ends sdfftrx1ts 

 **** 
 *.subckt sdfftrx2ts q qn ck d rn se si 
 .subckt sdfftrx2ts q qn ck d rn se si vss vdd
 x0 vdd se hnet29 vdd lppfet w=0.28u l=0.12u m=1 
 x1 hnet29 rn net99 vdd lppfet w=0.28u l=0.12u m=1 
 x10 pm c net99 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net117 c net87 vdd lppfet w=0.28u l=0.12u m=1 
 x12 net87 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x13 net117 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x14 net93 rn vss vss lpnfet w=0.28u l=0.12u m=1 
 x15 net98 d net93 vss lpnfet w=0.28u l=0.12u m=1 
 x16 net99 nmse net98 vss lpnfet w=0.28u l=0.12u m=1 
 x17 net104 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 net99 se net104 vss lpnfet w=0.2u l=0.12u m=1 
 x19 pm cn net99 vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd d hnet33 vdd lppfet w=0.36u l=0.12u m=1 
 x20 net117 cn net114 vss lpnfet w=0.2u l=0.12u m=1 
 x21 net114 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 net117 c m vss lpnfet w=0.2u l=0.12u m=1 
 x23 vdd s net118 vdd lppfet w=0.3u l=0.12u m=1 
 x24 net118 s vss vss lpnfet w=0.22u l=0.12u m=1 
 x25 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x26 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x27 vdd net117 s vdd lppfet w=0.36u l=0.12u m=1 
 x28 s net117 vss vss lpnfet w=0.26u l=0.12u m=1 
 x29 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x3 hnet33 se net99 vdd lppfet w=0.36u l=0.12u m=1 
 x30 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x31 vdd s q vdd lppfet w=1.28u l=0.12u m=1 
 x32 q s vss vss lpnfet w=0.92u l=0.12u m=1 
 x33 vdd net118 qn vdd lppfet w=1.28u l=0.12u m=1 
 x34 qn net118 vss vss lpnfet w=0.92u l=0.12u m=1 
 x35 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x36 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x37 vdd ck cn vdd lppfet w=0.42u l=0.12u m=1 
 x38 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x4 vdd si hnet37 vdd lppfet w=0.28u l=0.12u m=1 
 x5 hnet37 nmse net99 vdd lppfet w=0.28u l=0.12u m=1 
 x6 vdd m hnet41 vdd lppfet w=0.28u l=0.12u m=1 
 x7 hnet41 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x8 hnet45 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x9 pm c hnet45 vss lpnfet w=0.2u l=0.12u m=1 
 .ends sdfftrx2ts 

 **** 
 *.subckt sdfftrx4ts q qn ck d rn se si 
 .subckt sdfftrx4ts q qn ck d rn se si vss vdd
 x0 vdd se hnet29 vdd lppfet w=0.28u l=0.12u m=1 
 x1 hnet29 rn net99 vdd lppfet w=0.28u l=0.12u m=1 
 x10 pm c net99 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net117 c net87 vdd lppfet w=0.28u l=0.12u m=1 
 x12 net87 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x13 net117 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x14 net93 rn vss vss lpnfet w=0.28u l=0.12u m=1 
 x15 net98 d net93 vss lpnfet w=0.28u l=0.12u m=1 
 x16 net99 nmse net98 vss lpnfet w=0.28u l=0.12u m=1 
 x17 net104 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 net99 se net104 vss lpnfet w=0.2u l=0.12u m=1 
 x19 pm cn net99 vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd d hnet33 vdd lppfet w=0.36u l=0.12u m=1 
 x20 net117 cn net114 vss lpnfet w=0.2u l=0.12u m=1 
 x21 net114 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 net117 c m vss lpnfet w=0.22u l=0.12u m=1 
 x23 vdd s net118 vdd lppfet w=0.62u l=0.12u m=1 
 x24 net118 s vss vss lpnfet w=0.4u l=0.12u m=1 
 x25 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x26 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x27 vdd net117 s vdd lppfet w=0.66u l=0.12u m=1 
 x28 s net117 vss vss lpnfet w=0.44u l=0.12u m=1 
 x29 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x3 hnet33 se net99 vdd lppfet w=0.36u l=0.12u m=1 
 x30 m pm vss vss lpnfet w=0.22u l=0.12u m=1 
 x31 vdd s q vdd lppfet w=2.4u l=0.12u m=1 
 x32 q s vss vss lpnfet w=1.84u l=0.12u m=1 
 x33 vdd net118 qn vdd lppfet w=2.4u l=0.12u m=1 
 x34 qn net118 vss vss lpnfet w=1.84u l=0.12u m=1 
 x35 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x36 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x37 vdd ck cn vdd lppfet w=0.44u l=0.12u m=1 
 x38 cn ck vss vss lpnfet w=0.32u l=0.12u m=1 
 x4 vdd si hnet37 vdd lppfet w=0.28u l=0.12u m=1 
 x5 hnet37 nmse net99 vdd lppfet w=0.28u l=0.12u m=1 
 x6 vdd m hnet41 vdd lppfet w=0.28u l=0.12u m=1 
 x7 hnet41 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x8 hnet45 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x9 pm c hnet45 vss lpnfet w=0.2u l=0.12u m=1 
 .ends sdfftrx4ts 

 **** 
 *.subckt sdfftrxlts q qn ck d rn se si 
 .subckt sdfftrxlts q qn ck d rn se si vss vdd
 x0 vdd se hnet29 vdd lppfet w=0.28u l=0.12u m=1 
 x1 hnet29 rn net99 vdd lppfet w=0.28u l=0.12u m=1 
 x10 pm c net99 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net117 c net87 vdd lppfet w=0.28u l=0.12u m=1 
 x12 net87 s vdd vdd lppfet w=0.28u l=0.12u m=1 
 x13 net117 cn m vdd lppfet w=0.28u l=0.12u m=1 
 x14 net93 rn vss vss lpnfet w=0.28u l=0.12u m=1 
 x15 net98 d net93 vss lpnfet w=0.28u l=0.12u m=1 
 x16 net99 nmse net98 vss lpnfet w=0.28u l=0.12u m=1 
 x17 net104 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 net99 se net104 vss lpnfet w=0.2u l=0.12u m=1 
 x19 pm cn net99 vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd d hnet33 vdd lppfet w=0.36u l=0.12u m=1 
 x20 net117 cn net114 vss lpnfet w=0.2u l=0.12u m=1 
 x21 net114 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 net117 c m vss lpnfet w=0.2u l=0.12u m=1 
 x23 vdd s net118 vdd lppfet w=0.28u l=0.12u m=1 
 x24 net118 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x26 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x27 vdd net117 s vdd lppfet w=0.28u l=0.12u m=1 
 x28 s net117 vss vss lpnfet w=0.2u l=0.12u m=1 
 x29 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x3 hnet33 se net99 vdd lppfet w=0.36u l=0.12u m=1 
 x30 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x31 vdd s q vdd lppfet w=0.34u l=0.12u m=1 
 x32 q s vss vss lpnfet w=0.24u l=0.12u m=1 
 x33 vdd net118 qn vdd lppfet w=0.34u l=0.12u m=1 
 x34 qn net118 vss vss lpnfet w=0.24u l=0.12u m=1 
 x35 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x36 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x37 vdd ck cn vdd lppfet w=0.42u l=0.12u m=1 
 x38 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x4 vdd si hnet37 vdd lppfet w=0.28u l=0.12u m=1 
 x5 hnet37 nmse net99 vdd lppfet w=0.28u l=0.12u m=1 
 x6 vdd m hnet41 vdd lppfet w=0.28u l=0.12u m=1 
 x7 hnet41 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x8 hnet45 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x9 pm c hnet45 vss lpnfet w=0.2u l=0.12u m=1 
 .ends sdfftrxlts 

 **** 
 *.subckt sdffx1ts q qn ck d se si 
 .subckt sdffx1ts q qn ck d se si vss vdd
 x0 vdd se hnet26 vdd lppfet w=0.28u l=0.12u m=1 
 x1 hnet26 d net50 vdd lppfet w=0.28u l=0.12u m=1 
 x10 hnet28 m vss vss lpnfet w=0.58u l=0.12u m=1 
 x11 net82 c hnet28 vss lpnfet w=0.58u l=0.12u m=1 
 x12 hnet30 cn net82 vdd lppfet w=0.8u l=0.12u m=1 
 x13 vdd m hnet30 vdd lppfet w=0.8u l=0.12u m=1 
 x14 hnet34 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 net82 cn hnet34 vss lpnfet w=0.2u l=0.12u m=1 
 x16 hnet36 c net82 vdd lppfet w=0.28u l=0.12u m=1 
 x17 vdd s hnet36 vdd lppfet w=0.28u l=0.12u m=1 
 x18 hnet40 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x19 pm c hnet40 vss lpnfet w=0.2u l=0.12u m=1 
 x2 net58 se net67 vss lpnfet w=0.2u l=0.12u m=1 
 x20 hnet42 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x21 vdd m hnet42 vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd s qn vdd lppfet w=0.64u l=0.12u m=1 
 x23 qn s vss vss lpnfet w=0.46u l=0.12u m=1 
 x24 vdd net82 s vdd lppfet w=0.36u l=0.12u m=1 
 x25 s net82 vss vss lpnfet w=0.26u l=0.12u m=1 
 x26 vdd pm m vdd lppfet w=0.3u l=0.12u m=1 
 x27 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x29 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 net58 d net61 vss lpnfet w=0.2u l=0.12u m=1 
 x30 vdd cn c vdd lppfet w=0.3u l=0.12u m=1 
 x31 c cn vss vss lpnfet w=0.22u l=0.12u m=1 
 x32 vdd ck cn vdd lppfet w=0.46u l=0.12u m=1 
 x33 cn ck vss vss lpnfet w=0.34u l=0.12u m=1 
 x34 vdd net82 q vdd lppfet w=0.64u l=0.12u m=1 
 x35 q net82 vss vss lpnfet w=0.42u l=0.12u m=1 
 x4 net61 nmse vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 pm cn net58 vss lpnfet w=0.2u l=0.12u m=1 
 x6 net67 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x7 net50 nmse net76 vdd lppfet w=0.28u l=0.12u m=1 
 x8 pm c net50 vdd lppfet w=0.28u l=0.12u m=1 
 x9 net76 si vdd vdd lppfet w=0.28u l=0.12u m=1 
 .ends sdffx1ts 

 **** 
 *.subckt sdffx2ts q qn ck d se si 
 .subckt sdffx2ts q qn ck d se si vss vdd
 x0 vdd se hnet26 vdd lppfet w=0.32u l=0.12u m=1 
 x1 hnet26 d net50 vdd lppfet w=0.32u l=0.12u m=1 
 x10 hnet28 m vss vss lpnfet w=0.92u l=0.12u m=1 
 x11 net82 c hnet28 vss lpnfet w=0.92u l=0.12u m=1 
 x12 hnet30 cn net82 vdd lppfet w=1.3u l=0.12u m=1 
 x13 vdd m hnet30 vdd lppfet w=1.3u l=0.12u m=1 
 x14 hnet34 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 net82 cn hnet34 vss lpnfet w=0.2u l=0.12u m=1 
 x16 hnet36 c net82 vdd lppfet w=0.26u l=0.12u m=1 
 x17 vdd s hnet36 vdd lppfet w=0.26u l=0.12u m=1 
 x18 hnet40 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x19 pm c hnet40 vss lpnfet w=0.2u l=0.12u m=1 
 x2 net58 se net67 vss lpnfet w=0.2u l=0.12u m=1 
 x20 hnet42 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x21 vdd m hnet42 vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd s qn vdd lppfet w=1.3u l=0.12u m=1 
 x23 qn s vss vss lpnfet w=0.92u l=0.12u m=1 
 x24 vdd net82 s vdd lppfet w=0.62u l=0.12u m=1 
 x25 s net82 vss vss lpnfet w=0.44u l=0.12u m=1 
 x26 vdd pm m vdd lppfet w=0.44u l=0.12u m=1 
 x27 m pm vss vss lpnfet w=0.36u l=0.12u m=1 
 x28 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x29 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 net58 d net61 vss lpnfet w=0.22u l=0.12u m=1 
 x30 vdd cn c vdd lppfet w=0.44u l=0.12u m=1 
 x31 c cn vss vss lpnfet w=0.3u l=0.12u m=1 
 x32 vdd ck cn vdd lppfet w=0.66u l=0.12u m=1 
 x33 cn ck vss vss lpnfet w=0.48u l=0.12u m=1 
 x34 vdd net82 q vdd lppfet w=1.28u l=0.12u m=1 
 x35 q net82 vss vss lpnfet w=0.92u l=0.12u m=1 
 x4 net61 nmse vss vss lpnfet w=0.22u l=0.12u m=1 
 x5 pm cn net58 vss lpnfet w=0.22u l=0.12u m=1 
 x6 net67 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x7 net50 nmse net76 vdd lppfet w=0.28u l=0.12u m=1 
 x8 pm c net50 vdd lppfet w=0.32u l=0.12u m=1 
 x9 net76 si vdd vdd lppfet w=0.28u l=0.12u m=1 
 .ends sdffx2ts 

 **** 
 *.subckt sdffx4ts q qn ck d se si 
 .subckt sdffx4ts q qn ck d se si vss vdd
 x0 vdd se hnet26 vdd lppfet w=0.58u l=0.12u m=1 
 x1 hnet26 d net50 vdd lppfet w=0.58u l=0.12u m=1 
 x10 hnet28 cn net82 vdd lppfet w=0.98u l=0.12u m=1 
 x11 vdd m hnet30 vdd lppfet w=0.98u l=0.12u m=1 
 x12 vdd m hnet32 vdd lppfet w=0.98u l=0.12u m=1 
 x13 vdd m hnet28 vdd lppfet w=0.98u l=0.12u m=1 
 x14 net62 se net71 vss lpnfet w=0.2u l=0.12u m=1 
 x15 net62 d net65 vss lpnfet w=0.42u l=0.12u m=1 
 x16 net65 nmse vss vss lpnfet w=0.42u l=0.12u m=1 
 x17 pm cn net62 vss lpnfet w=0.42u l=0.12u m=1 
 x18 net71 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x19 net50 nmse net80 vdd lppfet w=0.28u l=0.12u m=1 
 x2 hnet29 m vss vss lpnfet w=0.66u l=0.12u m=1 
 x20 pm c net50 vdd lppfet w=0.58u l=0.12u m=1 
 x21 net80 si vdd vdd lppfet w=0.28u l=0.12u m=1 
 x22 hnet38 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x23 net82 cn hnet38 vss lpnfet w=0.2u l=0.12u m=1 
 x24 hnet40 c net82 vdd lppfet w=0.28u l=0.12u m=1 
 x25 vdd s hnet40 vdd lppfet w=0.28u l=0.12u m=1 
 x26 hnet44 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x27 pm c hnet44 vss lpnfet w=0.2u l=0.12u m=1 
 x28 hnet46 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x29 vdd m hnet46 vdd lppfet w=0.28u l=0.12u m=1 
 x3 hnet31 m vss vss lpnfet w=0.66u l=0.12u m=1 
 x30 vdd s qn vdd lppfet w=2.4u l=0.12u m=1 
 x31 qn s vss vss lpnfet w=1.84u l=0.12u m=1 
 x32 vdd net82 s vdd lppfet w=1.14u l=0.12u m=1 
 x33 s net82 vss vss lpnfet w=0.82u l=0.12u m=1 
 x34 vdd pm m vdd lppfet w=0.88u l=0.12u m=1 
 x35 m pm vss vss lpnfet w=0.62u l=0.12u m=1 
 x36 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x37 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x38 vdd cn c vdd lppfet w=0.8u l=0.12u m=1 
 x39 c cn vss vss lpnfet w=0.54u l=0.12u m=1 
 x4 hnet35 m vss vss lpnfet w=0.66u l=0.12u m=1 
 x40 vdd ck cn vdd lppfet w=1.06u l=0.12u m=1 
 x41 cn ck vss vss lpnfet w=0.7u l=0.12u m=1 
 x42 vdd net82 q vdd lppfet w=2.4u l=0.12u m=1 
 x43 q net82 vss vss lpnfet w=1.84u l=0.12u m=1 
 x5 net82 c hnet29 vss lpnfet w=0.66u l=0.12u m=1 
 x6 net82 c hnet31 vss lpnfet w=0.66u l=0.12u m=1 
 x7 net82 c hnet35 vss lpnfet w=0.66u l=0.12u m=1 
 x8 hnet30 cn net82 vdd lppfet w=0.98u l=0.12u m=1 
 x9 hnet32 cn net82 vdd lppfet w=0.98u l=0.12u m=1 
 .ends sdffx4ts 

 **** 
 *.subckt sdffxlts q qn ck d se si 
 .subckt sdffxlts q qn ck d se si vss vdd
 x0 vdd se hnet26 vdd lppfet w=0.28u l=0.12u m=1 
 x1 hnet26 d net50 vdd lppfet w=0.28u l=0.12u m=1 
 x10 hnet28 m vss vss lpnfet w=0.36u l=0.12u m=1 
 x11 net82 c hnet28 vss lpnfet w=0.36u l=0.12u m=1 
 x12 hnet30 cn net82 vdd lppfet w=0.5u l=0.12u m=1 
 x13 vdd m hnet30 vdd lppfet w=0.5u l=0.12u m=1 
 x14 hnet34 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 net82 cn hnet34 vss lpnfet w=0.2u l=0.12u m=1 
 x16 hnet36 c net82 vdd lppfet w=0.28u l=0.12u m=1 
 x17 vdd s hnet36 vdd lppfet w=0.28u l=0.12u m=1 
 x18 hnet40 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x19 pm c hnet40 vss lpnfet w=0.2u l=0.12u m=1 
 x2 net58 se net67 vss lpnfet w=0.2u l=0.12u m=1 
 x20 hnet42 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x21 vdd m hnet42 vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd s qn vdd lppfet w=0.34u l=0.12u m=1 
 x23 qn s vss vss lpnfet w=0.24u l=0.12u m=1 
 x24 vdd net82 s vdd lppfet w=0.28u l=0.12u m=1 
 x25 s net82 vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x27 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x29 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 net58 d net61 vss lpnfet w=0.2u l=0.12u m=1 
 x30 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x31 c cn vss vss lpnfet w=0.18u l=0.12u m=1 
 x32 vdd ck cn vdd lppfet w=0.38u l=0.12u m=1 
 x33 cn ck vss vss lpnfet w=0.26u l=0.12u m=1 
 x34 vdd net82 q vdd lppfet w=0.34u l=0.12u m=1 
 x35 q net82 vss vss lpnfet w=0.24u l=0.12u m=1 
 x4 net61 nmse vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 pm cn net58 vss lpnfet w=0.2u l=0.12u m=1 
 x6 net67 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x7 net50 nmse net76 vdd lppfet w=0.28u l=0.12u m=1 
 x8 pm c net50 vdd lppfet w=0.28u l=0.12u m=1 
 x9 net76 si vdd vdd lppfet w=0.28u l=0.12u m=1 
 .ends sdffxlts 

 **** 
 *.subckt sedffhqx1ts q ck d e se si 
 .subckt sedffhqx1ts q ck d e se si vss vdd
 x0 nmen se vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 nmen e vss vss lpnfet w=0.2u l=0.12u m=1 
 x10 hnet41 cn vss vss lpnfet w=0.36u l=0.12u m=1 
 x11 pm nmsi hnet41 vss lpnfet w=0.36u l=0.12u m=1 
 x12 net89 ck vdd vdd lppfet w=0.7u l=0.12u m=1 
 x13 cn c net89 vdd lppfet w=0.52u l=0.12u m=1 
 x14 nmsi net79 nmin vdd lppfet w=0.34u l=0.12u m=1 
 x15 net121 cn m vdd lppfet w=0.82u l=0.12u m=1 
 x16 cn ck vss vss lpnfet w=0.2u l=0.12u m=1 
 x17 nmsi net128 nmin vss lpnfet w=0.24u l=0.12u m=1 
 x18 net121 c m vss lpnfet w=0.42u l=0.12u m=1 
 x19 hnet43 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd se hnet27 vdd lppfet w=0.36u l=0.12u m=1 
 x20 nmsi nmen hnet43 vss lpnfet w=0.2u l=0.12u m=1 
 x21 hnet45 net130 nmsi vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd s hnet45 vdd lppfet w=0.28u l=0.12u m=1 
 x23 hnet49 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 nmsi se hnet49 vss lpnfet w=0.2u l=0.12u m=1 
 x25 hnet51 nmse nmsi vdd lppfet w=0.28u l=0.12u m=1 
 x26 vdd si hnet51 vdd lppfet w=0.28u l=0.12u m=1 
 x27 hnet55 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 pm c hnet55 vss lpnfet w=0.2u l=0.12u m=1 
 x29 hnet57 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x3 hnet27 e nmen vdd lppfet w=0.36u l=0.12u m=1 
 x30 vdd m hnet57 vdd lppfet w=0.28u l=0.12u m=1 
 x31 hnet61 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x32 net121 cn hnet61 vss lpnfet w=0.2u l=0.12u m=1 
 x33 hnet63 c net121 vdd lppfet w=0.28u l=0.12u m=1 
 x34 vdd s hnet63 vdd lppfet w=0.28u l=0.12u m=1 
 x35 vdd d nmin vdd lppfet w=0.34u l=0.12u m=1 
 x36 nmin d vss vss lpnfet w=0.24u l=0.12u m=1 
 x37 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x38 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x39 vdd net79 net128 vdd lppfet w=0.28u l=0.12u m=1 
 x4 hnet33 nmse vss vss lpnfet w=0.2u l=0.12u m=1 
 x40 net128 net79 vss vss lpnfet w=0.2u l=0.12u m=1 
 x41 vdd nmen net130 vdd lppfet w=0.28u l=0.12u m=1 
 x42 net130 nmen vss vss lpnfet w=0.2u l=0.12u m=1 
 x43 vdd pm m vdd lppfet w=0.84u l=0.12u m=1 
 x44 m pm vss vss lpnfet w=0.44u l=0.12u m=1 
 x45 vdd net121 s vdd lppfet w=0.28u l=0.12u m=1 
 x46 s net121 vss vss lpnfet w=0.2u l=0.12u m=1 
 x47 vdd net121 q vdd lppfet w=0.74u l=0.12u m=1 
 x48 q net121 vss vss lpnfet w=0.44u l=0.12u m=1 
 x49 vdd net140 c vdd lppfet w=0.78u l=0.12u m=1 
 x5 net79 e hnet33 vss lpnfet w=0.2u l=0.12u m=1 
 x50 c net140 vss vss lpnfet w=0.28u l=0.12u m=1 
 x51 vdd ck net140 vdd lppfet w=0.28u l=0.12u m=1 
 x52 net140 ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x6 vdd nmse net79 vdd lppfet w=0.28u l=0.12u m=1 
 x7 vdd e net79 vdd lppfet w=0.28u l=0.12u m=1 
 x8 vdd c hnet37 vdd lppfet w=0.5u l=0.12u m=1 
 x9 hnet37 nmsi pm vdd lppfet w=0.5u l=0.12u m=1 
 .ends sedffhqx1ts 

 **** 
 *.subckt sedffhqx2ts q ck d e se si 
 .subckt sedffhqx2ts q ck d e se si vss vdd
 x0 nmen se vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 nmen e vss vss lpnfet w=0.2u l=0.12u m=1 
 x10 hnet41 cn vss vss lpnfet w=0.68u l=0.12u m=1 
 x11 pm nmsi hnet41 vss lpnfet w=0.68u l=0.12u m=1 
 x12 net89 ck vdd vdd lppfet w=0.9u l=0.12u m=1 
 x13 cn c net89 vdd lppfet w=0.68u l=0.12u m=1 
 x14 nmsi net79 nmin vdd lppfet w=0.64u l=0.12u m=1 
 x15 net121 cn m vdd lppfet w=1.38u l=0.12u m=1 
 x16 cn ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x17 nmsi net128 nmin vss lpnfet w=0.46u l=0.12u m=1 
 x18 net121 c m vss lpnfet w=0.68u l=0.12u m=1 
 x19 hnet43 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd se hnet27 vdd lppfet w=0.36u l=0.12u m=1 
 x20 nmsi nmen hnet43 vss lpnfet w=0.2u l=0.12u m=1 
 x21 hnet45 net130 nmsi vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd s hnet45 vdd lppfet w=0.28u l=0.12u m=1 
 x23 hnet49 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 nmsi se hnet49 vss lpnfet w=0.2u l=0.12u m=1 
 x25 hnet51 nmse nmsi vdd lppfet w=0.28u l=0.12u m=1 
 x26 vdd si hnet51 vdd lppfet w=0.28u l=0.12u m=1 
 x27 hnet55 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 pm c hnet55 vss lpnfet w=0.2u l=0.12u m=1 
 x29 hnet57 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x3 hnet27 e nmen vdd lppfet w=0.36u l=0.12u m=1 
 x30 vdd m hnet57 vdd lppfet w=0.28u l=0.12u m=1 
 x31 hnet61 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x32 net121 cn hnet61 vss lpnfet w=0.2u l=0.12u m=1 
 x33 hnet63 c net121 vdd lppfet w=0.28u l=0.12u m=1 
 x34 vdd s hnet63 vdd lppfet w=0.28u l=0.12u m=1 
 x35 vdd d nmin vdd lppfet w=0.64u l=0.12u m=1 
 x36 nmin d vss vss lpnfet w=0.46u l=0.12u m=1 
 x37 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x38 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x39 vdd net79 net128 vdd lppfet w=0.28u l=0.12u m=1 
 x4 hnet33 nmse vss vss lpnfet w=0.2u l=0.12u m=1 
 x40 net128 net79 vss vss lpnfet w=0.18u l=0.12u m=1 
 x41 vdd nmen net130 vdd lppfet w=0.28u l=0.12u m=1 
 x42 net130 nmen vss vss lpnfet w=0.2u l=0.12u m=1 
 x43 vdd pm m vdd lppfet w=1.38u l=0.12u m=1 
 x44 m pm vss vss lpnfet w=0.68u l=0.12u m=1 
 x45 vdd net121 s vdd lppfet w=0.28u l=0.12u m=1 
 x46 s net121 vss vss lpnfet w=0.2u l=0.12u m=1 
 x47 vdd net121 q vdd lppfet w=1.48u l=0.12u m=1 
 x48 q net121 vss vss lpnfet w=0.92u l=0.12u m=1 
 x49 vdd net140 c vdd lppfet w=1.18u l=0.12u m=1 
 x5 net79 e hnet33 vss lpnfet w=0.2u l=0.12u m=1 
 x50 c net140 vss vss lpnfet w=0.42u l=0.12u m=1 
 x51 vdd ck net140 vdd lppfet w=0.32u l=0.12u m=1 
 x52 net140 ck vss vss lpnfet w=0.32u l=0.12u m=1 
 x6 vdd nmse net79 vdd lppfet w=0.28u l=0.12u m=1 
 x7 vdd e net79 vdd lppfet w=0.28u l=0.12u m=1 
 x8 vdd c hnet37 vdd lppfet w=0.94u l=0.12u m=1 
 x9 hnet37 nmsi pm vdd lppfet w=0.94u l=0.12u m=1 
 .ends sedffhqx2ts 

 **** 
 *.subckt sedffhqx4ts q ck d e se si 
 .subckt sedffhqx4ts q ck d e se si vss vdd
 x0 vdd c hnet31 vdd lppfet w=0.86u l=0.12u m=1 
 x1 hnet31 nmsi pm vdd lppfet w=0.86u l=0.12u m=1 
 x10 vdd se hnet38 vdd lppfet w=0.4u l=0.12u m=1 
 x11 hnet38 e nmen vdd lppfet w=0.4u l=0.12u m=1 
 x12 hnet44 nmse vss vss lpnfet w=0.2u l=0.12u m=1 
 x13 net86 e hnet44 vss lpnfet w=0.2u l=0.12u m=1 
 x14 vdd nmse net86 vdd lppfet w=0.28u l=0.12u m=1 
 x15 vdd e net86 vdd lppfet w=0.28u l=0.12u m=1 
 x16 cn c net89 vdd lppfet w=0.62u l=0.12u m=1 
 x17 net89 ck vdd vdd lppfet w=0.84u l=0.12u m=1 
 x18 net98 ck vdd vdd lppfet w=0.72u l=0.12u m=1 
 x19 cn c net98 vdd lppfet w=0.62u l=0.12u m=1 
 x2 vdd c hnet28 vdd lppfet w=0.86u l=0.12u m=1 
 x20 nmsi net86 nmin vdd lppfet w=1.22u l=0.12u m=1 
 x21 net128 cn m vdd lppfet w=2.62u l=0.12u m=1 
 x22 cn ck vss vss lpnfet w=0.48u l=0.12u m=1 
 x23 nmsi net135 nmin vss lpnfet w=0.88u l=0.12u m=1 
 x24 net128 c m vss lpnfet w=1.5u l=0.12u m=1 
 x25 hnet46 s vss vss lpnfet w=0.36u l=0.12u m=1 
 x26 nmsi nmen hnet46 vss lpnfet w=0.36u l=0.12u m=1 
 x27 hnet48 net137 nmsi vdd lppfet w=0.5u l=0.12u m=1 
 x28 vdd s hnet48 vdd lppfet w=0.5u l=0.12u m=1 
 x29 hnet52 si vss vss lpnfet w=0.22u l=0.12u m=1 
 x3 hnet28 nmsi pm vdd lppfet w=0.86u l=0.12u m=1 
 x30 nmsi se hnet52 vss lpnfet w=0.22u l=0.12u m=1 
 x31 hnet54 nmse nmsi vdd lppfet w=0.3u l=0.12u m=1 
 x32 vdd si hnet54 vdd lppfet w=0.3u l=0.12u m=1 
 x33 hnet58 m vss vss lpnfet w=0.18u l=0.12u m=1 
 x34 pm c hnet58 vss lpnfet w=0.18u l=0.12u m=1 
 x35 hnet60 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x36 vdd m hnet60 vdd lppfet w=0.28u l=0.12u m=1 
 x37 hnet64 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x38 net128 cn hnet64 vss lpnfet w=0.2u l=0.12u m=1 
 x39 hnet66 c net128 vdd lppfet w=0.28u l=0.12u m=1 
 x4 hnet36 cn vss vss lpnfet w=0.66u l=0.12u m=1 
 x40 vdd s hnet66 vdd lppfet w=0.28u l=0.12u m=1 
 x41 vdd d nmin vdd lppfet w=1.22u l=0.12u m=1 
 x42 nmin d vss vss lpnfet w=0.88u l=0.12u m=1 
 x43 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x44 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x45 vdd net86 net135 vdd lppfet w=0.28u l=0.12u m=1 
 x46 net135 net86 vss vss lpnfet w=0.2u l=0.12u m=1 
 x47 vdd nmen net137 vdd lppfet w=0.28u l=0.12u m=1 
 x48 net137 nmen vss vss lpnfet w=0.2u l=0.12u m=1 
 x49 vdd pm m vdd lppfet w=2.78u l=0.12u m=1 
 x5 pm nmsi hnet36 vss lpnfet w=0.66u l=0.12u m=1 
 x50 m pm vss vss lpnfet w=1.56u l=0.12u m=1 
 x51 vdd net128 s vdd lppfet w=0.28u l=0.12u m=1 
 x52 s net128 vss vss lpnfet w=0.2u l=0.12u m=1 
 x53 vdd net128 q vdd lppfet w=2.6u l=0.12u m=1 
 x54 q net128 vss vss lpnfet w=1.84u l=0.12u m=1 
 x55 vdd net147 c vdd lppfet w=2.02u l=0.12u m=1 
 x56 c net147 vss vss lpnfet w=0.72u l=0.12u m=1 
 x57 vdd ck net147 vdd lppfet w=0.54u l=0.12u m=1 
 x58 net147 ck vss vss lpnfet w=0.54u l=0.12u m=1 
 x6 hnet32 cn vss vss lpnfet w=0.66u l=0.12u m=1 
 x7 pm nmsi hnet32 vss lpnfet w=0.66u l=0.12u m=1 
 x8 nmen se vss vss lpnfet w=0.2u l=0.12u m=1 
 x9 nmen e vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends sedffhqx4ts 

 **** 
 *.subckt sedffhqx8ts q ck d e se si 
 .subckt sedffhqx8ts q ck d e se si vss vdd
 x0 vdd c hnet31 vdd lppfet w=0.86u l=0.12u m=1 
 x1 hnet31 nmsi pm vdd lppfet w=0.86u l=0.12u m=1 
 x10 vdd se hnet38 vdd lppfet w=0.4u l=0.12u m=1 
 x11 hnet38 e nmen vdd lppfet w=0.4u l=0.12u m=1 
 x12 hnet44 nmse vss vss lpnfet w=0.2u l=0.12u m=1 
 x13 net86 e hnet44 vss lpnfet w=0.2u l=0.12u m=1 
 x14 vdd nmse net86 vdd lppfet w=0.28u l=0.12u m=1 
 x15 vdd e net86 vdd lppfet w=0.28u l=0.12u m=1 
 x16 cn c net89 vdd lppfet w=0.62u l=0.12u m=1 
 x17 net89 ck vdd vdd lppfet w=0.84u l=0.12u m=1 
 x18 net98 ck vdd vdd lppfet w=0.72u l=0.12u m=1 
 x19 cn c net98 vdd lppfet w=0.62u l=0.12u m=1 
 x2 vdd c hnet28 vdd lppfet w=0.86u l=0.12u m=1 
 x20 nmsi net86 nmin vdd lppfet w=1.22u l=0.12u m=1 
 x21 net128 cn m vdd lppfet w=2.62u l=0.12u m=1 
 x22 cn ck vss vss lpnfet w=0.48u l=0.12u m=1 
 x23 nmsi net135 nmin vss lpnfet w=0.88u l=0.12u m=1 
 x24 net128 c m vss lpnfet w=1.5u l=0.12u m=1 
 x25 hnet46 s vss vss lpnfet w=0.36u l=0.12u m=1 
 x26 nmsi nmen hnet46 vss lpnfet w=0.36u l=0.12u m=1 
 x27 hnet48 net137 nmsi vdd lppfet w=0.5u l=0.12u m=1 
 x28 vdd s hnet48 vdd lppfet w=0.5u l=0.12u m=1 
 x29 hnet52 si vss vss lpnfet w=0.22u l=0.12u m=1 
 x3 hnet28 nmsi pm vdd lppfet w=0.86u l=0.12u m=1 
 x30 nmsi se hnet52 vss lpnfet w=0.22u l=0.12u m=1 
 x31 hnet54 nmse nmsi vdd lppfet w=0.3u l=0.12u m=1 
 x32 vdd si hnet54 vdd lppfet w=0.3u l=0.12u m=1 
 x33 hnet58 m vss vss lpnfet w=0.18u l=0.12u m=1 
 x34 pm c hnet58 vss lpnfet w=0.18u l=0.12u m=1 
 x35 hnet60 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x36 vdd m hnet60 vdd lppfet w=0.28u l=0.12u m=1 
 x37 hnet64 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x38 net128 cn hnet64 vss lpnfet w=0.2u l=0.12u m=1 
 x39 hnet66 c net128 vdd lppfet w=0.28u l=0.12u m=1 
 x4 hnet36 cn vss vss lpnfet w=0.66u l=0.12u m=1 
 x40 vdd s hnet66 vdd lppfet w=0.28u l=0.12u m=1 
 x41 vdd d nmin vdd lppfet w=1.22u l=0.12u m=1 
 x42 nmin d vss vss lpnfet w=0.88u l=0.12u m=1 
 x43 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x44 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x45 vdd net86 net135 vdd lppfet w=0.28u l=0.12u m=1 
 x46 net135 net86 vss vss lpnfet w=0.2u l=0.12u m=1 
 x47 vdd nmen net137 vdd lppfet w=0.28u l=0.12u m=1 
 x48 net137 nmen vss vss lpnfet w=0.2u l=0.12u m=1 
 x49 vdd pm m vdd lppfet w=2.78u l=0.12u m=1 
 x5 pm nmsi hnet36 vss lpnfet w=0.66u l=0.12u m=1 
 x50 m pm vss vss lpnfet w=1.56u l=0.12u m=1 
 x51 vdd net128 s vdd lppfet w=0.28u l=0.12u m=1 
 x52 s net128 vss vss lpnfet w=0.2u l=0.12u m=1 
 x53 vdd net128 q vdd lppfet w=5.2u l=0.12u m=1 
 x54 q net128 vss vss lpnfet w=3.68u l=0.12u m=1 
 x55 vdd net147 c vdd lppfet w=2.02u l=0.12u m=1 
 x56 c net147 vss vss lpnfet w=0.72u l=0.12u m=1 
 x57 vdd ck net147 vdd lppfet w=0.54u l=0.12u m=1 
 x58 net147 ck vss vss lpnfet w=0.54u l=0.12u m=1 
 x6 hnet32 cn vss vss lpnfet w=0.66u l=0.12u m=1 
 x7 pm nmsi hnet32 vss lpnfet w=0.66u l=0.12u m=1 
 x8 nmen se vss vss lpnfet w=0.2u l=0.12u m=1 
 x9 nmen e vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends sedffhqx8ts 

 **** 
 *.subckt sedfftrx1ts q qn ck d e rn se si 
 .subckt sedfftrx1ts q qn ck d e rn se si vss vdd
 x0 nmrs se vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 nmrs rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x10 hnet46 c net130 vdd lppfet w=0.26u l=0.12u m=1 
 x11 vdd s hnet46 vdd lppfet w=0.26u l=0.12u m=1 
 x12 net103 net139 net112 vdd lppfet w=0.36u l=0.12u m=1 
 x13 net130 cn net153 vdd lppfet w=0.64u l=0.12u m=1 
 x14 net103 nmrs vdd vdd lppfet w=0.36u l=0.12u m=1 
 x15 net112 c pm vdd lppfet w=0.36u l=0.12u m=1 
 x16 net139 nmse nmsi vdd lppfet w=0.28u l=0.12u m=1 
 x17 net139 net167 net145 vdd lppfet w=0.4u l=0.12u m=1 
 x18 net145 net171 s vdd lppfet w=0.44u l=0.12u m=1 
 x19 net145 nmen nmin vdd lppfet w=0.44u l=0.12u m=1 
 x2 vdd se hnet34 vdd lppfet w=0.36u l=0.12u m=1 
 x20 net127 nmrs vss vss lpnfet w=0.38u l=0.12u m=1 
 x21 net130 c net153 vss lpnfet w=0.46u l=0.12u m=1 
 x22 net127 net139 vss vss lpnfet w=0.26u l=0.12u m=1 
 x23 pm cn net127 vss lpnfet w=0.26u l=0.12u m=1 
 x24 net139 net167 nmsi vss lpnfet w=0.2u l=0.12u m=1 
 x25 net139 nmse net145 vss lpnfet w=0.32u l=0.12u m=1 
 x26 net145 nmen s vss lpnfet w=0.32u l=0.12u m=1 
 x27 net145 net171 nmin vss lpnfet w=0.32u l=0.12u m=1 
 x28 vdd s net149 vdd lppfet w=0.28u l=0.12u m=1 
 x29 net149 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet34 rn nmrs vdd lppfet w=0.36u l=0.12u m=1 
 x30 vdd net149 qn vdd lppfet w=0.64u l=0.12u m=1 
 x31 qn net149 vss vss lpnfet w=0.46u l=0.12u m=1 
 x32 vdd m net153 vdd lppfet w=0.64u l=0.12u m=1 
 x33 net153 m vss vss lpnfet w=0.46u l=0.12u m=1 
 x34 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x35 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x36 vdd net130 s vdd lppfet w=0.8u l=0.12u m=1 
 x37 s net130 vss vss lpnfet w=0.58u l=0.12u m=1 
 x38 vdd s q vdd lppfet w=0.64u l=0.12u m=1 
 x39 q s vss vss lpnfet w=0.46u l=0.12u m=1 
 x4 hnet38 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x40 vdd cn c vdd lppfet w=0.3u l=0.12u m=1 
 x41 c cn vss vss lpnfet w=0.22u l=0.12u m=1 
 x42 vdd ck cn vdd lppfet w=0.44u l=0.12u m=1 
 x43 cn ck vss vss lpnfet w=0.32u l=0.12u m=1 
 x44 vdd si nmsi vdd lppfet w=0.28u l=0.12u m=1 
 x45 nmsi si vss vss lpnfet w=0.2u l=0.12u m=1 
 x46 vdd nmse net167 vdd lppfet w=0.28u l=0.12u m=1 
 x47 net167 nmse vss vss lpnfet w=0.2u l=0.12u m=1 
 x48 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x49 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 pm c hnet38 vss lpnfet w=0.2u l=0.12u m=1 
 x50 vdd nmen net171 vdd lppfet w=0.28u l=0.12u m=1 
 x51 net171 nmen vss vss lpnfet w=0.2u l=0.12u m=1 
 x52 vdd e nmen vdd lppfet w=0.28u l=0.12u m=1 
 x53 nmen e vss vss lpnfet w=0.2u l=0.12u m=1 
 x54 vdd d nmin vdd lppfet w=0.44u l=0.12u m=1 
 x55 nmin d vss vss lpnfet w=0.32u l=0.12u m=1 
 x6 hnet40 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x7 vdd m hnet40 vdd lppfet w=0.28u l=0.12u m=1 
 x8 hnet44 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x9 net130 cn hnet44 vss lpnfet w=0.2u l=0.12u m=1 
 .ends sedfftrx1ts 

 **** 
 *.subckt sedfftrx2ts q qn ck d e rn se si 
 .subckt sedfftrx2ts q qn ck d e rn se si vss vdd
 x0 nmrs se vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 nmrs rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x10 hnet46 c net130 vdd lppfet w=0.26u l=0.12u m=1 
 x11 vdd s hnet46 vdd lppfet w=0.26u l=0.12u m=1 
 x12 net103 net139 net112 vdd lppfet w=0.36u l=0.12u m=1 
 x13 net130 cn net153 vdd lppfet w=0.84u l=0.12u m=1 
 x14 net103 nmrs vdd vdd lppfet w=0.36u l=0.12u m=1 
 x15 net112 c pm vdd lppfet w=0.36u l=0.12u m=1 
 x16 net139 nmse nmsi vdd lppfet w=0.28u l=0.12u m=1 
 x17 net139 net167 net145 vdd lppfet w=0.44u l=0.12u m=1 
 x18 net145 net171 s vdd lppfet w=0.44u l=0.12u m=1 
 x19 net145 nmen nmin vdd lppfet w=0.44u l=0.12u m=1 
 x2 vdd se hnet34 vdd lppfet w=0.36u l=0.12u m=1 
 x20 net127 nmrs vss vss lpnfet w=0.38u l=0.12u m=1 
 x21 net130 c net153 vss lpnfet w=0.6u l=0.12u m=1 
 x22 net127 net139 vss vss lpnfet w=0.26u l=0.12u m=1 
 x23 pm cn net127 vss lpnfet w=0.26u l=0.12u m=1 
 x24 net139 net167 nmsi vss lpnfet w=0.2u l=0.12u m=1 
 x25 net139 nmse net145 vss lpnfet w=0.32u l=0.12u m=1 
 x26 net145 nmen s vss lpnfet w=0.32u l=0.12u m=1 
 x27 net145 net171 nmin vss lpnfet w=0.32u l=0.12u m=1 
 x28 vdd s net149 vdd lppfet w=0.3u l=0.12u m=1 
 x29 net149 s vss vss lpnfet w=0.22u l=0.12u m=1 
 x3 hnet34 rn nmrs vdd lppfet w=0.36u l=0.12u m=1 
 x30 vdd net149 qn vdd lppfet w=1.28u l=0.12u m=1 
 x31 qn net149 vss vss lpnfet w=0.92u l=0.12u m=1 
 x32 vdd m net153 vdd lppfet w=0.84u l=0.12u m=1 
 x33 net153 m vss vss lpnfet w=0.56u l=0.12u m=1 
 x34 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x35 m pm vss vss lpnfet w=0.24u l=0.12u m=1 
 x36 vdd net130 s vdd lppfet w=0.98u l=0.12u m=1 
 x37 s net130 vss vss lpnfet w=0.7u l=0.12u m=1 
 x38 vdd s q vdd lppfet w=1.28u l=0.12u m=1 
 x39 q s vss vss lpnfet w=0.92u l=0.12u m=1 
 x4 hnet38 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x40 vdd cn c vdd lppfet w=0.34u l=0.12u m=1 
 x41 c cn vss vss lpnfet w=0.24u l=0.12u m=1 
 x42 vdd ck cn vdd lppfet w=0.5u l=0.12u m=1 
 x43 cn ck vss vss lpnfet w=0.36u l=0.12u m=1 
 x44 vdd si nmsi vdd lppfet w=0.28u l=0.12u m=1 
 x45 nmsi si vss vss lpnfet w=0.2u l=0.12u m=1 
 x46 vdd nmse net167 vdd lppfet w=0.28u l=0.12u m=1 
 x47 net167 nmse vss vss lpnfet w=0.2u l=0.12u m=1 
 x48 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x49 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 pm c hnet38 vss lpnfet w=0.2u l=0.12u m=1 
 x50 vdd nmen net171 vdd lppfet w=0.28u l=0.12u m=1 
 x51 net171 nmen vss vss lpnfet w=0.2u l=0.12u m=1 
 x52 vdd e nmen vdd lppfet w=0.28u l=0.12u m=1 
 x53 nmen e vss vss lpnfet w=0.2u l=0.12u m=1 
 x54 vdd d nmin vdd lppfet w=0.44u l=0.12u m=1 
 x55 nmin d vss vss lpnfet w=0.32u l=0.12u m=1 
 x6 hnet40 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x7 vdd m hnet40 vdd lppfet w=0.28u l=0.12u m=1 
 x8 hnet44 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x9 net130 cn hnet44 vss lpnfet w=0.2u l=0.12u m=1 
 .ends sedfftrx2ts 

 **** 
 *.subckt sedfftrx4ts q qn ck d e rn se si 
 .subckt sedfftrx4ts q qn ck d e rn se si vss vdd
 x0 nmrs se vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 nmrs rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x10 hnet46 c net130 vdd lppfet w=0.26u l=0.12u m=1 
 x11 vdd s hnet46 vdd lppfet w=0.26u l=0.12u m=1 
 x12 net103 net139 net112 vdd lppfet w=0.36u l=0.12u m=1 
 x13 net130 cn net153 vdd lppfet w=1.2u l=0.12u m=1 
 x14 net103 nmrs vdd vdd lppfet w=0.36u l=0.12u m=1 
 x15 net112 c pm vdd lppfet w=0.36u l=0.12u m=1 
 x16 net139 nmse nmsi vdd lppfet w=0.28u l=0.12u m=1 
 x17 net139 net167 net145 vdd lppfet w=0.44u l=0.12u m=1 
 x18 net145 net171 s vdd lppfet w=0.44u l=0.12u m=1 
 x19 net145 nmen nmin vdd lppfet w=0.44u l=0.12u m=1 
 x2 vdd se hnet34 vdd lppfet w=0.36u l=0.12u m=1 
 x20 net127 nmrs vss vss lpnfet w=0.38u l=0.12u m=1 
 x21 net130 c net153 vss lpnfet w=0.9u l=0.12u m=1 
 x22 net127 net139 vss vss lpnfet w=0.26u l=0.12u m=1 
 x23 pm cn net127 vss lpnfet w=0.26u l=0.12u m=1 
 x24 net139 net167 nmsi vss lpnfet w=0.2u l=0.12u m=1 
 x25 net139 nmse net145 vss lpnfet w=0.32u l=0.12u m=1 
 x26 net145 nmen s vss lpnfet w=0.32u l=0.12u m=1 
 x27 net145 net171 nmin vss lpnfet w=0.32u l=0.12u m=1 
 x28 vdd s net149 vdd lppfet w=0.62u l=0.12u m=1 
 x29 net149 s vss vss lpnfet w=0.44u l=0.12u m=1 
 x3 hnet34 rn nmrs vdd lppfet w=0.36u l=0.12u m=1 
 x30 vdd net149 qn vdd lppfet w=2.56u l=0.12u m=1 
 x31 qn net149 vss vss lpnfet w=1.84u l=0.12u m=1 
 x32 vdd m net153 vdd lppfet w=1.2u l=0.12u m=1 
 x33 net153 m vss vss lpnfet w=0.6u l=0.12u m=1 
 x34 vdd pm m vdd lppfet w=0.44u l=0.12u m=1 
 x35 m pm vss vss lpnfet w=0.32u l=0.12u m=1 
 x36 vdd net130 s vdd lppfet w=1.56u l=0.12u m=1 
 x37 s net130 vss vss lpnfet w=1.12u l=0.12u m=1 
 x38 vdd s q vdd lppfet w=2.56u l=0.12u m=1 
 x39 q s vss vss lpnfet w=1.84u l=0.12u m=1 
 x4 hnet38 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x40 vdd cn c vdd lppfet w=0.42u l=0.12u m=1 
 x41 c cn vss vss lpnfet w=0.3u l=0.12u m=1 
 x42 vdd ck cn vdd lppfet w=0.64u l=0.12u m=1 
 x43 cn ck vss vss lpnfet w=0.42u l=0.12u m=1 
 x44 vdd si nmsi vdd lppfet w=0.28u l=0.12u m=1 
 x45 nmsi si vss vss lpnfet w=0.2u l=0.12u m=1 
 x46 vdd nmse net167 vdd lppfet w=0.28u l=0.12u m=1 
 x47 net167 nmse vss vss lpnfet w=0.2u l=0.12u m=1 
 x48 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x49 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 pm c hnet38 vss lpnfet w=0.2u l=0.12u m=1 
 x50 vdd nmen net171 vdd lppfet w=0.28u l=0.12u m=1 
 x51 net171 nmen vss vss lpnfet w=0.2u l=0.12u m=1 
 x52 vdd e nmen vdd lppfet w=0.28u l=0.12u m=1 
 x53 nmen e vss vss lpnfet w=0.2u l=0.12u m=1 
 x54 vdd d nmin vdd lppfet w=0.44u l=0.12u m=1 
 x55 nmin d vss vss lpnfet w=0.32u l=0.12u m=1 
 x6 hnet40 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x7 vdd m hnet40 vdd lppfet w=0.28u l=0.12u m=1 
 x8 hnet44 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x9 net130 cn hnet44 vss lpnfet w=0.2u l=0.12u m=1 
 .ends sedfftrx4ts 

 **** 
 *.subckt sedfftrxlts q qn ck d e rn se si 
 .subckt sedfftrxlts q qn ck d e rn se si vss vdd
 x0 nmrs se vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 nmrs rn vss vss lpnfet w=0.2u l=0.12u m=1 
 x10 hnet46 c net130 vdd lppfet w=0.28u l=0.12u m=1 
 x11 vdd s hnet46 vdd lppfet w=0.28u l=0.12u m=1 
 x12 net103 net139 net112 vdd lppfet w=0.36u l=0.12u m=1 
 x13 net130 cn net153 vdd lppfet w=0.52u l=0.12u m=1 
 x14 net103 nmrs vdd vdd lppfet w=0.36u l=0.12u m=1 
 x15 net112 c pm vdd lppfet w=0.36u l=0.12u m=1 
 x16 net139 nmse nmsi vdd lppfet w=0.28u l=0.12u m=1 
 x17 net139 net167 net145 vdd lppfet w=0.4u l=0.12u m=1 
 x18 net145 net171 s vdd lppfet w=0.44u l=0.12u m=1 
 x19 net145 nmen nmin vdd lppfet w=0.44u l=0.12u m=1 
 x2 vdd se hnet34 vdd lppfet w=0.36u l=0.12u m=1 
 x20 net127 nmrs vss vss lpnfet w=0.38u l=0.12u m=1 
 x21 net130 c net153 vss lpnfet w=0.38u l=0.12u m=1 
 x22 net127 net139 vss vss lpnfet w=0.26u l=0.12u m=1 
 x23 pm cn net127 vss lpnfet w=0.26u l=0.12u m=1 
 x24 net139 net167 nmsi vss lpnfet w=0.2u l=0.12u m=1 
 x25 net139 nmse net145 vss lpnfet w=0.32u l=0.12u m=1 
 x26 net145 nmen s vss lpnfet w=0.32u l=0.12u m=1 
 x27 net145 net171 nmin vss lpnfet w=0.32u l=0.12u m=1 
 x28 vdd s net149 vdd lppfet w=0.28u l=0.12u m=1 
 x29 net149 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet34 rn nmrs vdd lppfet w=0.36u l=0.12u m=1 
 x30 vdd net149 qn vdd lppfet w=0.34u l=0.12u m=1 
 x31 qn net149 vss vss lpnfet w=0.24u l=0.12u m=1 
 x32 vdd m net153 vdd lppfet w=0.52u l=0.12u m=1 
 x33 net153 m vss vss lpnfet w=0.38u l=0.12u m=1 
 x34 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x35 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x36 vdd net130 s vdd lppfet w=0.66u l=0.12u m=1 
 x37 s net130 vss vss lpnfet w=0.48u l=0.12u m=1 
 x38 vdd s q vdd lppfet w=0.34u l=0.12u m=1 
 x39 q s vss vss lpnfet w=0.24u l=0.12u m=1 
 x4 hnet38 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x40 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x41 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x42 vdd ck cn vdd lppfet w=0.44u l=0.12u m=1 
 x43 cn ck vss vss lpnfet w=0.3u l=0.12u m=1 
 x44 vdd si nmsi vdd lppfet w=0.28u l=0.12u m=1 
 x45 nmsi si vss vss lpnfet w=0.2u l=0.12u m=1 
 x46 vdd nmse net167 vdd lppfet w=0.28u l=0.12u m=1 
 x47 net167 nmse vss vss lpnfet w=0.2u l=0.12u m=1 
 x48 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x49 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 pm c hnet38 vss lpnfet w=0.2u l=0.12u m=1 
 x50 vdd nmen net171 vdd lppfet w=0.28u l=0.12u m=1 
 x51 net171 nmen vss vss lpnfet w=0.2u l=0.12u m=1 
 x52 vdd e nmen vdd lppfet w=0.28u l=0.12u m=1 
 x53 nmen e vss vss lpnfet w=0.2u l=0.12u m=1 
 x54 vdd d nmin vdd lppfet w=0.44u l=0.12u m=1 
 x55 nmin d vss vss lpnfet w=0.32u l=0.12u m=1 
 x6 hnet40 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x7 vdd m hnet40 vdd lppfet w=0.28u l=0.12u m=1 
 x8 hnet44 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x9 net130 cn hnet44 vss lpnfet w=0.2u l=0.12u m=1 
 .ends sedfftrxlts 

 **** 
 *.subckt sedffx1ts q qn ck d e se si 
 .subckt sedffx1ts q qn ck d e se si vss vdd
 x0 hnet31 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 net71 se hnet31 vss lpnfet w=0.2u l=0.12u m=1 
 x10 net102 se vdd vdd lppfet w=0.28u l=0.12u m=1 
 x11 net108 e net102 vdd lppfet w=0.28u l=0.12u m=1 
 x12 net105 nmen net102 vdd lppfet w=0.28u l=0.12u m=1 
 x13 net74 d net105 vdd lppfet w=0.28u l=0.12u m=1 
 x14 net74 s net108 vdd lppfet w=0.28u l=0.12u m=1 
 x15 pm c net74 vdd lppfet w=0.28u l=0.12u m=1 
 x16 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x17 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 vdd e nmen vdd lppfet w=0.28u l=0.12u m=1 
 x19 nmen e vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd si hnet35 vdd lppfet w=0.28u l=0.12u m=1 
 x20 vdd net130 q vdd lppfet w=0.64u l=0.12u m=1 
 x21 q net130 vss vss lpnfet w=0.44u l=0.12u m=1 
 x22 vdd s qn vdd lppfet w=0.64u l=0.12u m=1 
 x23 qn s vss vss lpnfet w=0.46u l=0.12u m=1 
 x24 vdd net130 s vdd lppfet w=0.28u l=0.12u m=1 
 x25 s net130 vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x27 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x29 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet35 nmse net74 vdd lppfet w=0.28u l=0.12u m=1 
 x30 vdd ck cn vdd lppfet w=0.3u l=0.12u m=1 
 x31 cn ck vss vss lpnfet w=0.22u l=0.12u m=1 
 x32 hnet53 m vss vss lpnfet w=0.22u l=0.12u m=1 
 x33 net130 c hnet53 vss lpnfet w=0.22u l=0.12u m=1 
 x34 hnet55 cn net130 vdd lppfet w=0.3u l=0.12u m=1 
 x35 vdd m hnet55 vdd lppfet w=0.3u l=0.12u m=1 
 x36 hnet59 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x37 net130 cn hnet59 vss lpnfet w=0.2u l=0.12u m=1 
 x38 hnet61 c net130 vdd lppfet w=0.28u l=0.12u m=1 
 x39 vdd s hnet61 vdd lppfet w=0.28u l=0.12u m=1 
 x4 net79 nmse vss vss lpnfet w=0.2u l=0.12u m=1 
 x40 hnet65 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x41 pm c hnet65 vss lpnfet w=0.2u l=0.12u m=1 
 x42 hnet67 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x43 vdd m hnet67 vdd lppfet w=0.28u l=0.12u m=1 
 x5 net82 nmen net79 vss lpnfet w=0.2u l=0.12u m=1 
 x6 net71 s net82 vss lpnfet w=0.2u l=0.12u m=1 
 x7 net88 e net79 vss lpnfet w=0.2u l=0.12u m=1 
 x8 net71 d net88 vss lpnfet w=0.2u l=0.12u m=1 
 x9 pm cn net71 vss lpnfet w=0.2u l=0.12u m=1 
 .ends sedffx1ts 

 **** 
 *.subckt sedffx2ts q qn ck d e se si 
 .subckt sedffx2ts q qn ck d e se si vss vdd
 x0 hnet31 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 net71 se hnet31 vss lpnfet w=0.2u l=0.12u m=1 
 x10 net102 se vdd vdd lppfet w=0.28u l=0.12u m=1 
 x11 net108 e net102 vdd lppfet w=0.28u l=0.12u m=1 
 x12 net105 nmen net102 vdd lppfet w=0.28u l=0.12u m=1 
 x13 net74 d net105 vdd lppfet w=0.28u l=0.12u m=1 
 x14 net74 s net108 vdd lppfet w=0.28u l=0.12u m=1 
 x15 pm c net74 vdd lppfet w=0.28u l=0.12u m=1 
 x16 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x17 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 vdd e nmen vdd lppfet w=0.28u l=0.12u m=1 
 x19 nmen e vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd si hnet35 vdd lppfet w=0.28u l=0.12u m=1 
 x20 vdd net130 q vdd lppfet w=1.28u l=0.12u m=1 
 x21 q net130 vss vss lpnfet w=0.88u l=0.12u m=1 
 x22 vdd s qn vdd lppfet w=1.26u l=0.12u m=1 
 x23 qn s vss vss lpnfet w=0.9u l=0.12u m=1 
 x24 vdd net130 s vdd lppfet w=0.28u l=0.12u m=1 
 x25 s net130 vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x27 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x29 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet35 nmse net74 vdd lppfet w=0.28u l=0.12u m=1 
 x30 vdd ck cn vdd lppfet w=0.36u l=0.12u m=1 
 x31 cn ck vss vss lpnfet w=0.26u l=0.12u m=1 
 x32 hnet53 m vss vss lpnfet w=0.38u l=0.12u m=1 
 x33 net130 c hnet53 vss lpnfet w=0.38u l=0.12u m=1 
 x34 hnet55 cn net130 vdd lppfet w=0.52u l=0.12u m=1 
 x35 vdd m hnet55 vdd lppfet w=0.52u l=0.12u m=1 
 x36 hnet59 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x37 net130 cn hnet59 vss lpnfet w=0.2u l=0.12u m=1 
 x38 hnet61 c net130 vdd lppfet w=0.28u l=0.12u m=1 
 x39 vdd s hnet61 vdd lppfet w=0.28u l=0.12u m=1 
 x4 net79 nmse vss vss lpnfet w=0.2u l=0.12u m=1 
 x40 hnet65 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x41 pm c hnet65 vss lpnfet w=0.2u l=0.12u m=1 
 x42 hnet67 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x43 vdd m hnet67 vdd lppfet w=0.28u l=0.12u m=1 
 x5 net82 nmen net79 vss lpnfet w=0.2u l=0.12u m=1 
 x6 net71 s net82 vss lpnfet w=0.2u l=0.12u m=1 
 x7 net88 e net79 vss lpnfet w=0.2u l=0.12u m=1 
 x8 net71 d net88 vss lpnfet w=0.2u l=0.12u m=1 
 x9 pm cn net71 vss lpnfet w=0.2u l=0.12u m=1 
 .ends sedffx2ts 

 **** 
 *.subckt sedffx4ts q qn ck d e se si 
 .subckt sedffx4ts q qn ck d e se si vss vdd
 x0 hnet31 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 net71 se hnet31 vss lpnfet w=0.2u l=0.12u m=1 
 x10 net102 se vdd vdd lppfet w=0.28u l=0.12u m=1 
 x11 net108 e net102 vdd lppfet w=0.28u l=0.12u m=1 
 x12 net105 nmen net102 vdd lppfet w=0.28u l=0.12u m=1 
 x13 net74 d net105 vdd lppfet w=0.28u l=0.12u m=1 
 x14 net74 s net108 vdd lppfet w=0.28u l=0.12u m=1 
 x15 pm c net74 vdd lppfet w=0.28u l=0.12u m=1 
 x16 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x17 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 vdd e nmen vdd lppfet w=0.28u l=0.12u m=1 
 x19 nmen e vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd si hnet35 vdd lppfet w=0.28u l=0.12u m=1 
 x20 vdd net130 q vdd lppfet w=2.28u l=0.12u m=1 
 x21 q net130 vss vss lpnfet w=1.36u l=0.12u m=1 
 x22 vdd s qn vdd lppfet w=2.52u l=0.12u m=1 
 x23 qn s vss vss lpnfet w=1.8u l=0.12u m=1 
 x24 vdd net130 s vdd lppfet w=0.52u l=0.12u m=1 
 x25 s net130 vss vss lpnfet w=0.32u l=0.12u m=1 
 x26 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x27 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 vdd cn c vdd lppfet w=0.34u l=0.12u m=1 
 x29 c cn vss vss lpnfet w=0.24u l=0.12u m=1 
 x3 hnet35 nmse net74 vdd lppfet w=0.28u l=0.12u m=1 
 x30 vdd ck cn vdd lppfet w=0.48u l=0.12u m=1 
 x31 cn ck vss vss lpnfet w=0.32u l=0.12u m=1 
 x32 hnet53 m vss vss lpnfet w=0.7u l=0.12u m=1 
 x33 net130 c hnet53 vss lpnfet w=0.7u l=0.12u m=1 
 x34 hnet55 cn net130 vdd lppfet w=0.96u l=0.12u m=1 
 x35 vdd m hnet55 vdd lppfet w=0.96u l=0.12u m=1 
 x36 hnet59 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x37 net130 cn hnet59 vss lpnfet w=0.2u l=0.12u m=1 
 x38 hnet61 c net130 vdd lppfet w=0.28u l=0.12u m=1 
 x39 vdd s hnet61 vdd lppfet w=0.28u l=0.12u m=1 
 x4 net79 nmse vss vss lpnfet w=0.2u l=0.12u m=1 
 x40 hnet65 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x41 pm c hnet65 vss lpnfet w=0.2u l=0.12u m=1 
 x42 hnet67 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x43 vdd m hnet67 vdd lppfet w=0.28u l=0.12u m=1 
 x5 net82 nmen net79 vss lpnfet w=0.2u l=0.12u m=1 
 x6 net71 s net82 vss lpnfet w=0.2u l=0.12u m=1 
 x7 net88 e net79 vss lpnfet w=0.2u l=0.12u m=1 
 x8 net71 d net88 vss lpnfet w=0.2u l=0.12u m=1 
 x9 pm cn net71 vss lpnfet w=0.2u l=0.12u m=1 
 .ends sedffx4ts 

 **** 
 *.subckt sedffxlts q qn ck d e se si 
 .subckt sedffxlts q qn ck d e se si vss vdd
 x0 hnet31 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 net71 se hnet31 vss lpnfet w=0.2u l=0.12u m=1 
 x10 net102 se vdd vdd lppfet w=0.28u l=0.12u m=1 
 x11 net108 e net102 vdd lppfet w=0.28u l=0.12u m=1 
 x12 net105 nmen net102 vdd lppfet w=0.28u l=0.12u m=1 
 x13 net74 d net105 vdd lppfet w=0.28u l=0.12u m=1 
 x14 net74 s net108 vdd lppfet w=0.28u l=0.12u m=1 
 x15 pm c net74 vdd lppfet w=0.28u l=0.12u m=1 
 x16 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x17 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 vdd e nmen vdd lppfet w=0.28u l=0.12u m=1 
 x19 nmen e vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd si hnet35 vdd lppfet w=0.28u l=0.12u m=1 
 x20 vdd net130 q vdd lppfet w=0.34u l=0.12u m=1 
 x21 q net130 vss vss lpnfet w=0.24u l=0.12u m=1 
 x22 vdd s qn vdd lppfet w=0.34u l=0.12u m=1 
 x23 qn s vss vss lpnfet w=0.24u l=0.12u m=1 
 x24 vdd net130 s vdd lppfet w=0.28u l=0.12u m=1 
 x25 s net130 vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x27 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x28 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x29 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet35 nmse net74 vdd lppfet w=0.28u l=0.12u m=1 
 x30 vdd ck cn vdd lppfet w=0.3u l=0.12u m=1 
 x31 cn ck vss vss lpnfet w=0.22u l=0.12u m=1 
 x32 hnet53 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x33 net130 c hnet53 vss lpnfet w=0.2u l=0.12u m=1 
 x34 hnet55 cn net130 vdd lppfet w=0.28u l=0.12u m=1 
 x35 vdd m hnet55 vdd lppfet w=0.28u l=0.12u m=1 
 x36 hnet59 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x37 net130 cn hnet59 vss lpnfet w=0.2u l=0.12u m=1 
 x38 hnet61 c net130 vdd lppfet w=0.28u l=0.12u m=1 
 x39 vdd s hnet61 vdd lppfet w=0.28u l=0.12u m=1 
 x4 net79 nmse vss vss lpnfet w=0.2u l=0.12u m=1 
 x40 hnet65 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x41 pm c hnet65 vss lpnfet w=0.2u l=0.12u m=1 
 x42 hnet67 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x43 vdd m hnet67 vdd lppfet w=0.28u l=0.12u m=1 
 x5 net82 nmen net79 vss lpnfet w=0.2u l=0.12u m=1 
 x6 net71 s net82 vss lpnfet w=0.2u l=0.12u m=1 
 x7 net88 e net79 vss lpnfet w=0.2u l=0.12u m=1 
 x8 net71 d net88 vss lpnfet w=0.2u l=0.12u m=1 
 x9 pm cn net71 vss lpnfet w=0.2u l=0.12u m=1 
 .ends sedffxlts 

 **** 
 *.subckt smdffhqx1ts q ck d0 d1 s0 se si 
 .subckt smdffhqx1ts q ck d0 d1 s0 se si vss vdd
 x0 nmsel se vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 nmsel s0 vss vss lpnfet w=0.2u l=0.12u m=1 
 x10 hnet43 cn vss vss lpnfet w=0.42u l=0.12u m=1 
 x11 pm nmsi hnet43 vss lpnfet w=0.42u l=0.12u m=1 
 x12 net92 ck vdd vdd lppfet w=0.7u l=0.12u m=1 
 x13 cn c net92 vdd lppfet w=0.52u l=0.12u m=1 
 x14 nmsi net135 nmin0 vdd lppfet w=0.38u l=0.12u m=1 
 x15 nmsi net80 nmin1 vdd lppfet w=0.38u l=0.12u m=1 
 x16 net124 cn m vdd lppfet w=0.96u l=0.12u m=1 
 x17 cn ck vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 nmsi nmsel nmin0 vss lpnfet w=0.28u l=0.12u m=1 
 x19 nmsi net133 nmin1 vss lpnfet w=0.28u l=0.12u m=1 
 x2 vdd se hnet29 vdd lppfet w=0.38u l=0.12u m=1 
 x20 net124 c m vss lpnfet w=0.5u l=0.12u m=1 
 x21 hnet45 si vss vss lpnfet w=0.2u l=0.12u m=1 
 x22 nmsi se hnet45 vss lpnfet w=0.2u l=0.12u m=1 
 x23 hnet47 nmse nmsi vdd lppfet w=0.28u l=0.12u m=1 
 x24 vdd si hnet47 vdd lppfet w=0.28u l=0.12u m=1 
 x25 hnet51 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 pm c hnet51 vss lpnfet w=0.2u l=0.12u m=1 
 x27 hnet53 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x28 vdd m hnet53 vdd lppfet w=0.28u l=0.12u m=1 
 x29 hnet57 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet29 s0 nmsel vdd lppfet w=0.38u l=0.12u m=1 
 x30 net124 cn hnet57 vss lpnfet w=0.2u l=0.12u m=1 
 x31 hnet59 c net124 vdd lppfet w=0.28u l=0.12u m=1 
 x32 vdd s hnet59 vdd lppfet w=0.28u l=0.12u m=1 
 x33 vdd d0 nmin0 vdd lppfet w=0.38u l=0.12u m=1 
 x34 nmin0 d0 vss vss lpnfet w=0.28u l=0.12u m=1 
 x35 vdd d1 nmin1 vdd lppfet w=0.38u l=0.12u m=1 
 x36 nmin1 d1 vss vss lpnfet w=0.28u l=0.12u m=1 
 x37 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x38 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x39 vdd net80 net133 vdd lppfet w=0.28u l=0.12u m=1 
 x4 hnet35 nmse vss vss lpnfet w=0.2u l=0.12u m=1 
 x40 net133 net80 vss vss lpnfet w=0.2u l=0.12u m=1 
 x41 vdd nmsel net135 vdd lppfet w=0.28u l=0.12u m=1 
 x42 net135 nmsel vss vss lpnfet w=0.2u l=0.12u m=1 
 x43 vdd pm m vdd lppfet w=0.96u l=0.12u m=1 
 x44 m pm vss vss lpnfet w=0.5u l=0.12u m=1 
 x45 vdd net124 s vdd lppfet w=0.28u l=0.12u m=1 
 x46 s net124 vss vss lpnfet w=0.2u l=0.12u m=1 
 x47 vdd net124 q vdd lppfet w=0.74u l=0.12u m=1 
 x48 q net124 vss vss lpnfet w=0.56u l=0.12u m=1 
 x49 vdd net145 c vdd lppfet w=0.84u l=0.12u m=1 
 x5 net80 s0 hnet35 vss lpnfet w=0.2u l=0.12u m=1 
 x50 c net145 vss vss lpnfet w=0.3u l=0.12u m=1 
 x51 vdd ck net145 vdd lppfet w=0.28u l=0.12u m=1 
 x52 net145 ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x6 vdd nmse net80 vdd lppfet w=0.28u l=0.12u m=1 
 x7 vdd s0 net80 vdd lppfet w=0.28u l=0.12u m=1 
 x8 vdd c hnet39 vdd lppfet w=0.58u l=0.12u m=1 
 x9 hnet39 nmsi pm vdd lppfet w=0.58u l=0.12u m=1 
 .ends smdffhqx1ts 

 **** 
 *.subckt smdffhqx2ts q ck d0 d1 s0 se si 
 .subckt smdffhqx2ts q ck d0 d1 s0 se si vss vdd
 x0 nmsel se vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 nmsel s0 vss vss lpnfet w=0.2u l=0.12u m=1 
 x10 hnet43 cn vss vss lpnfet w=0.66u l=0.12u m=1 
 x11 pm nmsi hnet43 vss lpnfet w=0.66u l=0.12u m=1 
 x12 net92 ck vdd vdd lppfet w=0.9u l=0.12u m=1 
 x13 cn c net92 vdd lppfet w=0.68u l=0.12u m=1 
 x14 nmsi net135 nmin0 vdd lppfet w=0.68u l=0.12u m=1 
 x15 nmsi net80 nmin1 vdd lppfet w=0.68u l=0.12u m=1 
 x16 net124 cn m vdd lppfet w=1.38u l=0.12u m=1 
 x17 cn ck vss vss lpnfet w=0.28u l=0.12u m=1 
 x18 nmsi nmsel nmin0 vss lpnfet w=0.46u l=0.12u m=1 
 x19 nmsi net133 nmin1 vss lpnfet w=0.5u l=0.12u m=1 
 x2 vdd se hnet29 vdd lppfet w=0.4u l=0.12u m=1 
 x20 net124 c m vss lpnfet w=0.7u l=0.12u m=1 
 x21 hnet45 si vss vss lpnfet w=0.24u l=0.12u m=1 
 x22 nmsi se hnet45 vss lpnfet w=0.24u l=0.12u m=1 
 x23 hnet47 nmse nmsi vdd lppfet w=0.34u l=0.12u m=1 
 x24 vdd si hnet47 vdd lppfet w=0.34u l=0.12u m=1 
 x25 hnet51 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x26 pm c hnet51 vss lpnfet w=0.2u l=0.12u m=1 
 x27 hnet53 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x28 vdd m hnet53 vdd lppfet w=0.28u l=0.12u m=1 
 x29 hnet57 s vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet29 s0 nmsel vdd lppfet w=0.4u l=0.12u m=1 
 x30 net124 cn hnet57 vss lpnfet w=0.2u l=0.12u m=1 
 x31 hnet59 c net124 vdd lppfet w=0.28u l=0.12u m=1 
 x32 vdd s hnet59 vdd lppfet w=0.28u l=0.12u m=1 
 x33 vdd d0 nmin0 vdd lppfet w=0.68u l=0.12u m=1 
 x34 nmin0 d0 vss vss lpnfet w=0.52u l=0.12u m=1 
 x35 vdd d1 nmin1 vdd lppfet w=0.68u l=0.12u m=1 
 x36 nmin1 d1 vss vss lpnfet w=0.5u l=0.12u m=1 
 x37 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x38 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x39 vdd net80 net133 vdd lppfet w=0.28u l=0.12u m=1 
 x4 hnet35 nmse vss vss lpnfet w=0.2u l=0.12u m=1 
 x40 net133 net80 vss vss lpnfet w=0.2u l=0.12u m=1 
 x41 vdd nmsel net135 vdd lppfet w=0.28u l=0.12u m=1 
 x42 net135 nmsel vss vss lpnfet w=0.2u l=0.12u m=1 
 x43 vdd pm m vdd lppfet w=1.48u l=0.12u m=1 
 x44 m pm vss vss lpnfet w=0.7u l=0.12u m=1 
 x45 vdd net124 s vdd lppfet w=0.28u l=0.12u m=1 
 x46 s net124 vss vss lpnfet w=0.2u l=0.12u m=1 
 x47 vdd net124 q vdd lppfet w=1.48u l=0.12u m=1 
 x48 q net124 vss vss lpnfet w=0.72u l=0.12u m=1 
 x49 vdd net145 c vdd lppfet w=1.18u l=0.12u m=1 
 x5 net80 s0 hnet35 vss lpnfet w=0.2u l=0.12u m=1 
 x50 c net145 vss vss lpnfet w=0.42u l=0.12u m=1 
 x51 vdd ck net145 vdd lppfet w=0.32u l=0.12u m=1 
 x52 net145 ck vss vss lpnfet w=0.32u l=0.12u m=1 
 x6 vdd nmse net80 vdd lppfet w=0.28u l=0.12u m=1 
 x7 vdd s0 net80 vdd lppfet w=0.28u l=0.12u m=1 
 x8 vdd c hnet39 vdd lppfet w=1u l=0.12u m=1 
 x9 hnet39 nmsi pm vdd lppfet w=1u l=0.12u m=1 
 .ends smdffhqx2ts 

 **** 
 *.subckt smdffhqx4ts q ck d0 d1 s0 se si 
 .subckt smdffhqx4ts q ck d0 d1 s0 se si vss vdd
 x0 vdd c hnet33 vdd lppfet w=0.9u l=0.12u m=1 
 x1 hnet33 nmsi pm vdd lppfet w=0.9u l=0.12u m=1 
 x10 vdd se hnet40 vdd lppfet w=0.4u l=0.12u m=1 
 x11 hnet40 s0 nmsel vdd lppfet w=0.4u l=0.12u m=1 
 x12 hnet46 nmse vss vss lpnfet w=0.24u l=0.12u m=1 
 x13 net83 s0 hnet46 vss lpnfet w=0.24u l=0.12u m=1 
 x14 vdd nmse net83 vdd lppfet w=0.28u l=0.12u m=1 
 x15 vdd s0 net83 vdd lppfet w=0.28u l=0.12u m=1 
 x16 cn c net90 vdd lppfet w=0.64u l=0.12u m=1 
 x17 net90 ck vdd vdd lppfet w=0.84u l=0.12u m=1 
 x18 net93 ck vdd vdd lppfet w=0.72u l=0.12u m=1 
 x19 cn c net93 vdd lppfet w=0.64u l=0.12u m=1 
 x2 vdd c hnet30 vdd lppfet w=0.9u l=0.12u m=1 
 x20 nmsi net138 nmin0 vdd lppfet w=1.22u l=0.12u m=1 
 x21 nmsi net83 nmin1 vdd lppfet w=1.22u l=0.12u m=1 
 x22 net127 cn m vdd lppfet w=2.72u l=0.12u m=1 
 x23 cn ck vss vss lpnfet w=0.54u l=0.12u m=1 
 x24 nmsi nmsel nmin0 vss lpnfet w=0.88u l=0.12u m=1 
 x25 nmsi net136 nmin1 vss lpnfet w=0.88u l=0.12u m=1 
 x26 net127 c m vss lpnfet w=1.5u l=0.12u m=1 
 x27 hnet48 si vss vss lpnfet w=0.44u l=0.12u m=1 
 x28 nmsi se hnet48 vss lpnfet w=0.44u l=0.12u m=1 
 x29 hnet50 nmse nmsi vdd lppfet w=0.62u l=0.12u m=1 
 x3 hnet30 nmsi pm vdd lppfet w=0.9u l=0.12u m=1 
 x30 vdd si hnet50 vdd lppfet w=0.62u l=0.12u m=1 
 x31 hnet54 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x32 pm c hnet54 vss lpnfet w=0.2u l=0.12u m=1 
 x33 hnet56 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x34 vdd m hnet56 vdd lppfet w=0.28u l=0.12u m=1 
 x35 hnet60 s vss vss lpnfet w=0.32u l=0.12u m=1 
 x36 net127 cn hnet60 vss lpnfet w=0.32u l=0.12u m=1 
 x37 hnet62 c net127 vdd lppfet w=0.28u l=0.12u m=1 
 x38 vdd s hnet62 vdd lppfet w=0.28u l=0.12u m=1 
 x39 vdd d0 nmin0 vdd lppfet w=1.22u l=0.12u m=1 
 x4 hnet38 cn vss vss lpnfet w=0.66u l=0.12u m=1 
 x40 nmin0 d0 vss vss lpnfet w=0.88u l=0.12u m=1 
 x41 vdd d1 nmin1 vdd lppfet w=1.22u l=0.12u m=1 
 x42 nmin1 d1 vss vss lpnfet w=0.88u l=0.12u m=1 
 x43 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x44 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x45 vdd net83 net136 vdd lppfet w=0.28u l=0.12u m=1 
 x46 net136 net83 vss vss lpnfet w=0.2u l=0.12u m=1 
 x47 vdd nmsel net138 vdd lppfet w=0.28u l=0.12u m=1 
 x48 net138 nmsel vss vss lpnfet w=0.2u l=0.12u m=1 
 x49 vdd pm m vdd lppfet w=2.72u l=0.12u m=1 
 x5 pm nmsi hnet38 vss lpnfet w=0.66u l=0.12u m=1 
 x50 m pm vss vss lpnfet w=1.56u l=0.12u m=1 
 x51 vdd net127 s vdd lppfet w=0.28u l=0.12u m=1 
 x52 s net127 vss vss lpnfet w=0.2u l=0.12u m=1 
 x53 vdd net127 q vdd lppfet w=2.6u l=0.12u m=1 
 x54 q net127 vss vss lpnfet w=1.84u l=0.12u m=1 
 x55 vdd net148 c vdd lppfet w=2.02u l=0.12u m=1 
 x56 c net148 vss vss lpnfet w=0.72u l=0.12u m=1 
 x57 vdd ck net148 vdd lppfet w=0.54u l=0.12u m=1 
 x58 net148 ck vss vss lpnfet w=0.54u l=0.12u m=1 
 x6 hnet34 cn vss vss lpnfet w=0.66u l=0.12u m=1 
 x7 pm nmsi hnet34 vss lpnfet w=0.66u l=0.12u m=1 
 x8 nmsel se vss vss lpnfet w=0.2u l=0.12u m=1 
 x9 nmsel s0 vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends smdffhqx4ts 

 **** 
 *.subckt smdffhqx8ts q ck d0 d1 s0 se si 
 .subckt smdffhqx8ts q ck d0 d1 s0 se si vss vdd
 x0 vdd c hnet33 vdd lppfet w=0.9u l=0.12u m=1 
 x1 hnet33 nmsi pm vdd lppfet w=0.9u l=0.12u m=1 
 x10 vdd se hnet40 vdd lppfet w=0.4u l=0.12u m=1 
 x11 hnet40 s0 nmsel vdd lppfet w=0.4u l=0.12u m=1 
 x12 hnet46 nmse vss vss lpnfet w=0.24u l=0.12u m=1 
 x13 net83 s0 hnet46 vss lpnfet w=0.24u l=0.12u m=1 
 x14 vdd nmse net83 vdd lppfet w=0.28u l=0.12u m=1 
 x15 vdd s0 net83 vdd lppfet w=0.28u l=0.12u m=1 
 x16 cn c net90 vdd lppfet w=0.64u l=0.12u m=1 
 x17 net90 ck vdd vdd lppfet w=0.84u l=0.12u m=1 
 x18 net93 ck vdd vdd lppfet w=0.72u l=0.12u m=1 
 x19 cn c net93 vdd lppfet w=0.64u l=0.12u m=1 
 x2 vdd c hnet30 vdd lppfet w=0.9u l=0.12u m=1 
 x20 nmsi net138 nmin0 vdd lppfet w=1.22u l=0.12u m=1 
 x21 nmsi net83 nmin1 vdd lppfet w=1.22u l=0.12u m=1 
 x22 net127 cn m vdd lppfet w=2.72u l=0.12u m=1 
 x23 cn ck vss vss lpnfet w=0.54u l=0.12u m=1 
 x24 nmsi nmsel nmin0 vss lpnfet w=0.88u l=0.12u m=1 
 x25 nmsi net136 nmin1 vss lpnfet w=0.88u l=0.12u m=1 
 x26 net127 c m vss lpnfet w=1.5u l=0.12u m=1 
 x27 hnet48 si vss vss lpnfet w=0.44u l=0.12u m=1 
 x28 nmsi se hnet48 vss lpnfet w=0.44u l=0.12u m=1 
 x29 hnet50 nmse nmsi vdd lppfet w=0.62u l=0.12u m=1 
 x3 hnet30 nmsi pm vdd lppfet w=0.9u l=0.12u m=1 
 x30 vdd si hnet50 vdd lppfet w=0.62u l=0.12u m=1 
 x31 hnet54 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x32 pm c hnet54 vss lpnfet w=0.2u l=0.12u m=1 
 x33 hnet56 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x34 vdd m hnet56 vdd lppfet w=0.28u l=0.12u m=1 
 x35 hnet60 s vss vss lpnfet w=0.32u l=0.12u m=1 
 x36 net127 cn hnet60 vss lpnfet w=0.32u l=0.12u m=1 
 x37 hnet62 c net127 vdd lppfet w=0.28u l=0.12u m=1 
 x38 vdd s hnet62 vdd lppfet w=0.28u l=0.12u m=1 
 x39 vdd d0 nmin0 vdd lppfet w=1.22u l=0.12u m=1 
 x4 hnet38 cn vss vss lpnfet w=0.66u l=0.12u m=1 
 x40 nmin0 d0 vss vss lpnfet w=0.88u l=0.12u m=1 
 x41 vdd d1 nmin1 vdd lppfet w=1.22u l=0.12u m=1 
 x42 nmin1 d1 vss vss lpnfet w=0.88u l=0.12u m=1 
 x43 vdd se nmse vdd lppfet w=0.28u l=0.12u m=1 
 x44 nmse se vss vss lpnfet w=0.2u l=0.12u m=1 
 x45 vdd net83 net136 vdd lppfet w=0.28u l=0.12u m=1 
 x46 net136 net83 vss vss lpnfet w=0.2u l=0.12u m=1 
 x47 vdd nmsel net138 vdd lppfet w=0.28u l=0.12u m=1 
 x48 net138 nmsel vss vss lpnfet w=0.2u l=0.12u m=1 
 x49 vdd pm m vdd lppfet w=2.72u l=0.12u m=1 
 x5 pm nmsi hnet38 vss lpnfet w=0.66u l=0.12u m=1 
 x50 m pm vss vss lpnfet w=1.56u l=0.12u m=1 
 x51 vdd net127 s vdd lppfet w=0.28u l=0.12u m=1 
 x52 s net127 vss vss lpnfet w=0.2u l=0.12u m=1 
 x53 vdd net127 q vdd lppfet w=5.2u l=0.12u m=1 
 x54 q net127 vss vss lpnfet w=3.68u l=0.12u m=1 
 x55 vdd net148 c vdd lppfet w=2.02u l=0.12u m=1 
 x56 c net148 vss vss lpnfet w=0.72u l=0.12u m=1 
 x57 vdd ck net148 vdd lppfet w=0.54u l=0.12u m=1 
 x58 net148 ck vss vss lpnfet w=0.54u l=0.12u m=1 
 x6 hnet34 cn vss vss lpnfet w=0.66u l=0.12u m=1 
 x7 pm nmsi hnet34 vss lpnfet w=0.66u l=0.12u m=1 
 x8 nmsel se vss vss lpnfet w=0.2u l=0.12u m=1 
 x9 nmsel s0 vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends smdffhqx8ts 

 **** 
 *.subckt tbufx12ts y a oe 
 .subckt tbufx12ts y a oe vss vdd
 x0 vdd oe nmen vdd lppfet w=0.52u l=0.12u m=1 
 x1 nmen oe vss vss lpnfet w=0.38u l=0.12u m=1 
 x2 net28 a vss vss lpnfet w=2.2u l=0.12u m=1 
 x3 net28 nmen vss vss lpnfet w=0.64u l=0.12u m=1 
 x4 y net28 vss vss lpnfet w=5.52u l=0.12u m=1 
 x5 nmin oe net28 vss lpnfet w=1.14u l=0.12u m=1 
 x6 nmin a vdd vdd lppfet w=3.06u l=0.12u m=1 
 x7 nmin oe vdd vdd lppfet w=0.94u l=0.12u m=1 
 x8 net28 nmen nmin vdd lppfet w=1.54u l=0.12u m=1 
 x9 y nmin vdd vdd lppfet w=7.32u l=0.12u m=1 
 .ends tbufx12ts 

 **** 
 *.subckt tbufx16ts y a oe 
 .subckt tbufx16ts y a oe vss vdd
 x0 vdd oe nmen vdd lppfet w=0.7u l=0.12u m=1 
 x1 nmen oe vss vss lpnfet w=0.5u l=0.12u m=1 
 x2 net28 a vss vss lpnfet w=2.7u l=0.12u m=1 
 x3 net28 nmen vss vss lpnfet w=0.82u l=0.12u m=1 
 x4 y net28 vss vss lpnfet w=6.06u l=0.12u m=1 
 x5 nmin oe net28 vss lpnfet w=1.18u l=0.12u m=1 
 x6 nmin a vdd vdd lppfet w=3.9u l=0.12u m=1 
 x7 nmin oe vdd vdd lppfet w=1.26u l=0.12u m=1 
 x8 net28 nmen nmin vdd lppfet w=1.98u l=0.12u m=1 
 x9 y nmin vdd vdd lppfet w=9.16u l=0.12u m=1 
 .ends tbufx16ts 

 **** 
 *.subckt tbufx1ts y a oe 
 .subckt tbufx1ts y a oe vss vdd
 x0 vdd oe nmen vdd lppfet w=0.28u l=0.12u m=1 
 x1 nmen oe vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 net28 a vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 net28 nmen vss vss lpnfet w=0.18u l=0.12u m=1 
 x4 y net28 vss vss lpnfet w=0.46u l=0.12u m=1 
 x5 nmin oe net28 vss lpnfet w=0.2u l=0.12u m=1 
 x6 nmin a vdd vdd lppfet w=0.28u l=0.12u m=1 
 x7 nmin oe vdd vdd lppfet w=0.28u l=0.12u m=1 
 x8 net28 nmen nmin vdd lppfet w=0.28u l=0.12u m=1 
 x9 y nmin vdd vdd lppfet w=0.64u l=0.12u m=1 
 .ends tbufx1ts 

 **** 
 *.subckt tbufx20ts y a oe 
 .subckt tbufx20ts y a oe vss vdd
 x0 vdd oe nmen vdd lppfet w=0.82u l=0.12u m=1 
 x1 nmen oe vss vss lpnfet w=0.62u l=0.12u m=1 
 x2 net28 a vss vss lpnfet w=3.24u l=0.12u m=1 
 x3 net28 nmen vss vss lpnfet w=1.06u l=0.12u m=1 
 x4 y net28 vss vss lpnfet w=7.58u l=0.12u m=1 
 x5 nmin oe net28 vss lpnfet w=1.2u l=0.12u m=1 
 x6 nmin a vdd vdd lppfet w=4.44u l=0.12u m=1 
 x7 nmin oe vdd vdd lppfet w=1.6u l=0.12u m=1 
 x8 net28 nmen nmin vdd lppfet w=1.84u l=0.12u m=1 
 x9 y nmin vdd vdd lppfet w=11.42u l=0.12u m=1 
 .ends tbufx20ts 

 **** 
 *.subckt tbufx2ts y a oe 
 .subckt tbufx2ts y a oe vss vdd
 x0 vdd oe nmen vdd lppfet w=0.28u l=0.12u m=1 
 x1 nmen oe vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 net28 a vss vss lpnfet w=0.36u l=0.12u m=1 
 x3 net28 nmen vss vss lpnfet w=0.18u l=0.12u m=1 
 x4 y net28 vss vss lpnfet w=0.92u l=0.12u m=1 
 x5 nmin oe net28 vss lpnfet w=0.2u l=0.12u m=1 
 x6 nmin a vdd vdd lppfet w=0.5u l=0.12u m=1 
 x7 nmin oe vdd vdd lppfet w=0.28u l=0.12u m=1 
 x8 net28 nmen nmin vdd lppfet w=0.28u l=0.12u m=1 
 x9 y nmin vdd vdd lppfet w=1.24u l=0.12u m=1 
 .ends tbufx2ts 

 **** 
 *.subckt tbufx3ts y a oe 
 .subckt tbufx3ts y a oe vss vdd
 x0 vdd oe nmen vdd lppfet w=0.28u l=0.12u m=1 
 x1 nmen oe vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 net28 a vss vss lpnfet w=0.56u l=0.12u m=1 
 x3 net28 nmen vss vss lpnfet w=0.18u l=0.12u m=1 
 x4 y net28 vss vss lpnfet w=1.32u l=0.12u m=1 
 x5 nmin oe net28 vss lpnfet w=0.28u l=0.12u m=1 
 x6 nmin a vdd vdd lppfet w=0.78u l=0.12u m=1 
 x7 nmin oe vdd vdd lppfet w=0.28u l=0.12u m=1 
 x8 net28 nmen nmin vdd lppfet w=0.38u l=0.12u m=1 
 x9 y nmin vdd vdd lppfet w=1.92u l=0.12u m=1 
 .ends tbufx3ts 

 **** 
 *.subckt tbufx4ts y a oe 
 .subckt tbufx4ts y a oe vss vdd
 x0 vdd oe nmen vdd lppfet w=0.28u l=0.12u m=1 
 x1 nmen oe vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 net28 a vss vss lpnfet w=0.66u l=0.12u m=1 
 x3 net28 nmen vss vss lpnfet w=0.22u l=0.12u m=1 
 x4 y net28 vss vss lpnfet w=1.76u l=0.12u m=1 
 x5 nmin oe net28 vss lpnfet w=0.36u l=0.12u m=1 
 x6 nmin a vdd vdd lppfet w=1.02u l=0.12u m=1 
 x7 nmin oe vdd vdd lppfet w=0.34u l=0.12u m=1 
 x8 net28 nmen nmin vdd lppfet w=0.5u l=0.12u m=1 
 x9 y nmin vdd vdd lppfet w=2.56u l=0.12u m=1 
 .ends tbufx4ts 

 **** 
 *.subckt tbufx6ts y a oe 
 .subckt tbufx6ts y a oe vss vdd
 x0 vdd oe nmen vdd lppfet w=0.28u l=0.12u m=1 
 x1 nmen oe vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 net28 a vss vss lpnfet w=0.92u l=0.12u m=1 
 x3 net28 nmen vss vss lpnfet w=0.34u l=0.12u m=1 
 x4 y net28 vss vss lpnfet w=2.7u l=0.12u m=1 
 x5 nmin oe net28 vss lpnfet w=0.56u l=0.12u m=1 
 x6 nmin a vdd vdd lppfet w=1.54u l=0.12u m=1 
 x7 nmin oe vdd vdd lppfet w=0.48u l=0.12u m=1 
 x8 net28 nmen nmin vdd lppfet w=0.78u l=0.12u m=1 
 x9 y nmin vdd vdd lppfet w=3.5u l=0.12u m=1 
 .ends tbufx6ts 

 **** 
 *.subckt tbufx8ts y a oe 
 .subckt tbufx8ts y a oe vss vdd
 x0 vdd oe nmen vdd lppfet w=0.34u l=0.12u m=1 
 x1 nmen oe vss vss lpnfet w=0.24u l=0.12u m=1 
 x2 net28 a vss vss lpnfet w=1.38u l=0.12u m=1 
 x3 net28 nmen vss vss lpnfet w=0.46u l=0.12u m=1 
 x4 y net28 vss vss lpnfet w=3.5u l=0.12u m=1 
 x5 nmin oe net28 vss lpnfet w=0.74u l=0.12u m=1 
 x6 nmin a vdd vdd lppfet w=2.06u l=0.12u m=1 
 x7 nmin oe vdd vdd lppfet w=0.62u l=0.12u m=1 
 x8 net28 nmen nmin vdd lppfet w=1.02u l=0.12u m=1 
 x9 y nmin vdd vdd lppfet w=4.98u l=0.12u m=1 
 .ends tbufx8ts 

 **** 
 *.subckt tbufxlts y a oe 
 .subckt tbufxlts y a oe vss vdd
 x0 vdd oe nmen vdd lppfet w=0.28u l=0.12u m=1 
 x1 nmen oe vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 net28 a vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 net28 nmen vss vss lpnfet w=0.18u l=0.12u m=1 
 x4 y net28 vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 nmin oe net28 vss lpnfet w=0.2u l=0.12u m=1 
 x6 nmin a vdd vdd lppfet w=0.28u l=0.12u m=1 
 x7 nmin oe vdd vdd lppfet w=0.28u l=0.12u m=1 
 x8 net28 nmen nmin vdd lppfet w=0.28u l=0.12u m=1 
 x9 y nmin vdd vdd lppfet w=0.42u l=0.12u m=1 
 .ends tbufxlts 

 **** 
 *.subckt tiehits y 
 .subckt tiehits y vss vdd
 x0 net4 net4 vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 y net4 vdd vdd lppfet w=0.64u l=0.12u m=1 
 .ends tiehits 

 **** 
 *.subckt tielots y 
 .subckt tielots y vss vdd
 x0 y net7 vss vss lpnfet w=0.46u l=0.12u m=1 
 x1 net7 net7 vdd vdd lppfet w=0.28u l=0.12u m=1 
 .ends tielots 

 **** 
 *.subckt tlatncax12ts eck ck e 
 .subckt tlatncax12ts eck ck e vss vdd
 x0 net23 c vss vss lpnfet w=0.44u l=0.12u m=1 
 x1 net23 nmin vss vss lpnfet w=0.44u l=0.12u m=1 
 x10 hnet27 c nmin vdd lppfet w=0.28u l=0.12u m=1 
 x11 vdd m hnet27 vdd lppfet w=0.28u l=0.12u m=1 
 x12 vdd net35 eck vdd lppfet w=14.3u l=0.12u m=1 
 x13 eck net35 vss vss lpnfet w=5.52u l=0.12u m=1 
 x14 vdd net23 net35 vdd lppfet w=4.76u l=0.12u m=1 
 x15 net35 net23 vss vss lpnfet w=1.8u l=0.12u m=1 
 x16 vdd c cn vdd lppfet w=0.28u l=0.12u m=1 
 x17 cn c vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 vdd ck c vdd lppfet w=0.84u l=0.12u m=1 
 x19 c ck vss vss lpnfet w=0.6u l=0.12u m=1 
 x2 vdd c hnet13 vdd lppfet w=1.3u l=0.12u m=1 
 x20 vdd nmin m vdd lppfet w=0.28u l=0.12u m=1 
 x21 m nmin vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet13 nmin net23 vdd lppfet w=1.3u l=0.12u m=1 
 x4 hnet19 e vss vss lpnfet w=0.82u l=0.12u m=1 
 x5 nmin c hnet19 vss lpnfet w=0.82u l=0.12u m=1 
 x6 hnet21 cn nmin vdd lppfet w=1.14u l=0.12u m=1 
 x7 vdd e hnet21 vdd lppfet w=1.14u l=0.12u m=1 
 x8 hnet25 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x9 nmin cn hnet25 vss lpnfet w=0.2u l=0.12u m=1 
 .ends tlatncax12ts 

 **** 
 *.subckt tlatncax16ts eck ck e 
 .subckt tlatncax16ts eck ck e vss vdd
 x0 net23 c vss vss lpnfet w=0.58u l=0.12u m=1 
 x1 net23 nmin vss vss lpnfet w=0.58u l=0.12u m=1 
 x10 hnet26 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x11 nmin cn hnet26 vss lpnfet w=0.2u l=0.12u m=1 
 x12 hnet28 c nmin vdd lppfet w=0.28u l=0.12u m=1 
 x13 vdd m hnet28 vdd lppfet w=0.28u l=0.12u m=1 
 x14 vdd net35 eck vdd lppfet w=18.9u l=0.12u m=1 
 x15 eck net35 vss vss lpnfet w=7.36u l=0.12u m=1 
 x16 vdd net23 net35 vdd lppfet w=6.3u l=0.12u m=1 
 x17 net35 net23 vss vss lpnfet w=2.34u l=0.12u m=1 
 x18 vdd c cn vdd lppfet w=0.3u l=0.12u m=1 
 x19 cn c vss vss lpnfet w=0.22u l=0.12u m=1 
 x2 vdd c hnet14 vdd lppfet w=0.98u l=0.12u m=1 
 x20 vdd ck c vdd lppfet w=1.02u l=0.12u m=1 
 x21 c ck vss vss lpnfet w=0.74u l=0.12u m=1 
 x22 vdd nmin m vdd lppfet w=0.28u l=0.12u m=1 
 x23 m nmin vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet14 nmin net23 vdd lppfet w=0.98u l=0.12u m=1 
 x4 vdd c hnet12 vdd lppfet w=0.98u l=0.12u m=1 
 x5 hnet12 nmin net23 vdd lppfet w=0.98u l=0.12u m=1 
 x6 hnet20 e vss vss lpnfet w=0.84u l=0.12u m=1 
 x7 nmin c hnet20 vss lpnfet w=0.84u l=0.12u m=1 
 x8 hnet22 cn nmin vdd lppfet w=1.26u l=0.12u m=1 
 x9 vdd e hnet22 vdd lppfet w=1.26u l=0.12u m=1 
 .ends tlatncax16ts 

 **** 
 *.subckt tlatncax20ts eck ck e 
 .subckt tlatncax20ts eck ck e vss vdd
 x0 net23 c vss vss lpnfet w=0.74u l=0.12u m=1 
 x1 net23 nmin vss vss lpnfet w=0.74u l=0.12u m=1 
 x10 hnet26 cn nmin vdd lppfet w=0.88u l=0.12u m=1 
 x11 hnet24 cn nmin vdd lppfet w=0.88u l=0.12u m=1 
 x12 vdd e hnet26 vdd lppfet w=0.88u l=0.12u m=1 
 x13 vdd e hnet24 vdd lppfet w=0.88u l=0.12u m=1 
 x14 hnet28 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 nmin cn hnet28 vss lpnfet w=0.2u l=0.12u m=1 
 x16 hnet30 c nmin vdd lppfet w=0.28u l=0.12u m=1 
 x17 vdd m hnet30 vdd lppfet w=0.28u l=0.12u m=1 
 x18 vdd net36 eck vdd lppfet w=21.6u l=0.12u m=1 
 x19 eck net36 vss vss lpnfet w=8.28u l=0.12u m=1 
 x2 vdd c hnet14 vdd lppfet w=1.3u l=0.12u m=1 
 x20 vdd net23 net36 vdd lppfet w=7.8u l=0.12u m=1 
 x21 net36 net23 vss vss lpnfet w=2.94u l=0.12u m=1 
 x22 vdd c cn vdd lppfet w=0.42u l=0.12u m=1 
 x23 cn c vss vss lpnfet w=0.3u l=0.12u m=1 
 x24 vdd ck c vdd lppfet w=1.3u l=0.12u m=1 
 x25 c ck vss vss lpnfet w=0.92u l=0.12u m=1 
 x26 vdd nmin m vdd lppfet w=0.28u l=0.12u m=1 
 x27 m nmin vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet14 nmin net23 vdd lppfet w=1.3u l=0.12u m=1 
 x4 vdd c hnet12 vdd lppfet w=1.3u l=0.12u m=1 
 x5 hnet12 nmin net23 vdd lppfet w=1.3u l=0.12u m=1 
 x6 hnet20 e vss vss lpnfet w=0.6u l=0.12u m=1 
 x7 hnet21 e vss vss lpnfet w=0.6u l=0.12u m=1 
 x8 nmin c hnet20 vss lpnfet w=0.6u l=0.12u m=1 
 x9 nmin c hnet21 vss lpnfet w=0.6u l=0.12u m=1 
 .ends tlatncax20ts 

 **** 
 *.subckt tlatncax2ts eck ck e 
 .subckt tlatncax2ts eck ck e vss vdd
 x0 eck c vss vss lpnfet w=0.38u l=0.12u m=1 
 x1 eck nmin vss vss lpnfet w=0.38u l=0.12u m=1 
 x10 hnet25 c nmin vdd lppfet w=0.28u l=0.12u m=1 
 x11 vdd m hnet25 vdd lppfet w=0.28u l=0.12u m=1 
 x12 vdd c cn vdd lppfet w=0.28u l=0.12u m=1 
 x13 cn c vss vss lpnfet w=0.2u l=0.12u m=1 
 x14 vdd ck c vdd lppfet w=0.72u l=0.12u m=1 
 x15 c ck vss vss lpnfet w=0.52u l=0.12u m=1 
 x16 vdd nmin m vdd lppfet w=0.28u l=0.12u m=1 
 x17 m nmin vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd c hnet11 vdd lppfet w=1.3u l=0.12u m=1 
 x3 hnet11 nmin eck vdd lppfet w=1.3u l=0.12u m=1 
 x4 hnet17 e vss vss lpnfet w=0.72u l=0.12u m=1 
 x5 nmin c hnet17 vss lpnfet w=0.72u l=0.12u m=1 
 x6 hnet19 cn nmin vdd lppfet w=1u l=0.12u m=1 
 x7 vdd e hnet19 vdd lppfet w=1u l=0.12u m=1 
 x8 hnet23 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x9 nmin cn hnet23 vss lpnfet w=0.2u l=0.12u m=1 
 .ends tlatncax2ts 

 **** 
 *.subckt tlatncax3ts eck ck e 
 .subckt tlatncax3ts eck ck e vss vdd
 x0 eck c vss vss lpnfet w=0.56u l=0.12u m=1 
 x1 eck nmin vss vss lpnfet w=0.56u l=0.12u m=1 
 x10 hnet24 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x11 nmin cn hnet24 vss lpnfet w=0.2u l=0.12u m=1 
 x12 hnet26 c nmin vdd lppfet w=0.28u l=0.12u m=1 
 x13 vdd m hnet26 vdd lppfet w=0.28u l=0.12u m=1 
 x14 vdd c cn vdd lppfet w=0.3u l=0.12u m=1 
 x15 cn c vss vss lpnfet w=0.22u l=0.12u m=1 
 x16 vdd ck c vdd lppfet w=1u l=0.12u m=1 
 x17 c ck vss vss lpnfet w=0.72u l=0.12u m=1 
 x18 vdd nmin m vdd lppfet w=0.28u l=0.12u m=1 
 x19 m nmin vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd c hnet12 vdd lppfet w=0.96u l=0.12u m=1 
 x3 hnet12 nmin eck vdd lppfet w=0.96u l=0.12u m=1 
 x4 vdd c hnet10 vdd lppfet w=0.96u l=0.12u m=1 
 x5 hnet10 nmin eck vdd lppfet w=0.96u l=0.12u m=1 
 x6 hnet18 e vss vss lpnfet w=0.82u l=0.12u m=1 
 x7 nmin c hnet18 vss lpnfet w=0.82u l=0.12u m=1 
 x8 hnet20 cn nmin vdd lppfet w=1.26u l=0.12u m=1 
 x9 vdd e hnet20 vdd lppfet w=1.26u l=0.12u m=1 
 .ends tlatncax3ts 

 **** 
 *.subckt tlatncax4ts eck ck e 
 .subckt tlatncax4ts eck ck e vss vdd
 x0 eck c vss vss lpnfet w=0.74u l=0.12u m=1 
 x1 eck nmin vss vss lpnfet w=0.74u l=0.12u m=1 
 x10 hnet24 cn nmin vdd lppfet w=0.88u l=0.12u m=1 
 x11 hnet22 cn nmin vdd lppfet w=0.88u l=0.12u m=1 
 x12 vdd e hnet24 vdd lppfet w=0.88u l=0.12u m=1 
 x13 vdd e hnet22 vdd lppfet w=0.88u l=0.12u m=1 
 x14 hnet26 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 nmin cn hnet26 vss lpnfet w=0.2u l=0.12u m=1 
 x16 hnet28 c nmin vdd lppfet w=0.28u l=0.12u m=1 
 x17 vdd m hnet28 vdd lppfet w=0.28u l=0.12u m=1 
 x18 vdd c cn vdd lppfet w=0.42u l=0.12u m=1 
 x19 cn c vss vss lpnfet w=0.3u l=0.12u m=1 
 x2 vdd c hnet12 vdd lppfet w=1.28u l=0.12u m=1 
 x20 vdd ck c vdd lppfet w=1.3u l=0.12u m=1 
 x21 c ck vss vss lpnfet w=0.92u l=0.12u m=1 
 x22 vdd nmin m vdd lppfet w=0.28u l=0.12u m=1 
 x23 m nmin vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet12 nmin eck vdd lppfet w=1.28u l=0.12u m=1 
 x4 vdd c hnet10 vdd lppfet w=1.28u l=0.12u m=1 
 x5 hnet10 nmin eck vdd lppfet w=1.28u l=0.12u m=1 
 x6 hnet18 e vss vss lpnfet w=0.6u l=0.12u m=1 
 x7 hnet19 e vss vss lpnfet w=0.6u l=0.12u m=1 
 x8 nmin c hnet18 vss lpnfet w=0.6u l=0.12u m=1 
 x9 nmin c hnet19 vss lpnfet w=0.6u l=0.12u m=1 
 .ends tlatncax4ts 

 **** 
 *.subckt tlatncax6ts eck ck e 
 .subckt tlatncax6ts eck ck e vss vdd
 x0 eck c vss vss lpnfet w=1.12u l=0.12u m=1 
 x1 eck nmin vss vss lpnfet w=1.12u l=0.12u m=1 
 x10 nmin c hnet19 vss lpnfet w=0.88u l=0.12u m=1 
 x11 nmin c hnet20 vss lpnfet w=0.88u l=0.12u m=1 
 x12 hnet25 cn nmin vdd lppfet w=1.22u l=0.12u m=1 
 x13 hnet23 cn nmin vdd lppfet w=1.22u l=0.12u m=1 
 x14 vdd e hnet25 vdd lppfet w=1.22u l=0.12u m=1 
 x15 vdd e hnet23 vdd lppfet w=1.22u l=0.12u m=1 
 x16 hnet27 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x17 nmin cn hnet27 vss lpnfet w=0.2u l=0.12u m=1 
 x18 hnet29 c nmin vdd lppfet w=0.28u l=0.12u m=1 
 x19 vdd m hnet29 vdd lppfet w=0.28u l=0.12u m=1 
 x2 vdd c hnet12 vdd lppfet w=1.28u l=0.12u m=1 
 x20 vdd c cn vdd lppfet w=0.56u l=0.12u m=1 
 x21 cn c vss vss lpnfet w=0.4u l=0.12u m=1 
 x22 vdd ck c vdd lppfet w=1.92u l=0.12u m=1 
 x23 c ck vss vss lpnfet w=1.32u l=0.12u m=1 
 x24 vdd nmin m vdd lppfet w=0.28u l=0.12u m=1 
 x25 m nmin vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet12 nmin eck vdd lppfet w=1.28u l=0.12u m=1 
 x4 vdd c hnet10 vdd lppfet w=1.28u l=0.12u m=1 
 x5 hnet10 nmin eck vdd lppfet w=1.28u l=0.12u m=1 
 x6 vdd c hnet14 vdd lppfet w=1.28u l=0.12u m=1 
 x7 hnet14 nmin eck vdd lppfet w=1.28u l=0.12u m=1 
 x8 hnet19 e vss vss lpnfet w=0.88u l=0.12u m=1 
 x9 hnet20 e vss vss lpnfet w=0.88u l=0.12u m=1 
 .ends tlatncax6ts 

 **** 
 *.subckt tlatncax8ts eck ck e 
 .subckt tlatncax8ts eck ck e vss vdd
 x0 eck c vss vss lpnfet w=1.86u l=0.12u m=1 
 x1 eck nmin vss vss lpnfet w=1.86u l=0.12u m=1 
 x10 vdd c hnet13 vdd lppfet w=1.3u l=0.12u m=1 
 x11 hnet13 nmin eck vdd lppfet w=1.3u l=0.12u m=1 
 x12 vdd c hnet10 vdd lppfet w=1.3u l=0.12u m=1 
 x13 hnet10 nmin eck vdd lppfet w=1.3u l=0.12u m=1 
 x14 vdd c hnet20 vdd lppfet w=1.3u l=0.12u m=1 
 x15 hnet20 nmin eck vdd lppfet w=1.3u l=0.12u m=1 
 x16 hnet23 e vss vss lpnfet w=0.84u l=0.12u m=1 
 x17 hnet25 e vss vss lpnfet w=0.84u l=0.12u m=1 
 x18 hnet32 e vss vss lpnfet w=0.84u l=0.12u m=1 
 x19 hnet24 e vss vss lpnfet w=0.84u l=0.12u m=1 
 x2 vdd c hnet17 vdd lppfet w=1.3u l=0.12u m=1 
 x20 nmin c hnet23 vss lpnfet w=0.84u l=0.12u m=1 
 x21 nmin c hnet25 vss lpnfet w=0.84u l=0.12u m=1 
 x22 nmin c hnet32 vss lpnfet w=0.84u l=0.12u m=1 
 x23 nmin c hnet24 vss lpnfet w=0.84u l=0.12u m=1 
 x24 hnet30 cn nmin vdd lppfet w=1.26u l=0.12u m=1 
 x25 hnet33 cn nmin vdd lppfet w=1.26u l=0.12u m=1 
 x26 hnet26 cn nmin vdd lppfet w=1.26u l=0.12u m=1 
 x27 hnet31 cn nmin vdd lppfet w=1.26u l=0.12u m=1 
 x28 vdd e hnet30 vdd lppfet w=1.26u l=0.12u m=1 
 x29 vdd e hnet33 vdd lppfet w=1.26u l=0.12u m=1 
 x3 hnet17 nmin eck vdd lppfet w=1.3u l=0.12u m=1 
 x30 vdd e hnet26 vdd lppfet w=1.26u l=0.12u m=1 
 x31 vdd e hnet31 vdd lppfet w=1.26u l=0.12u m=1 
 x32 hnet35 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x33 nmin cn hnet35 vss lpnfet w=0.2u l=0.12u m=1 
 x34 hnet37 c nmin vdd lppfet w=0.28u l=0.12u m=1 
 x35 vdd m hnet37 vdd lppfet w=0.28u l=0.12u m=1 
 x36 vdd c cn vdd lppfet w=1.08u l=0.12u m=1 
 x37 cn c vss vss lpnfet w=0.78u l=0.12u m=1 
 x38 vdd ck c vdd lppfet w=3.9u l=0.12u m=1 
 x39 c ck vss vss lpnfet w=2.76u l=0.12u m=1 
 x4 vdd c hnet11 vdd lppfet w=1.3u l=0.12u m=1 
 x40 vdd nmin m vdd lppfet w=0.28u l=0.12u m=1 
 x41 m nmin vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 hnet11 nmin eck vdd lppfet w=1.3u l=0.12u m=1 
 x6 vdd c hnet16 vdd lppfet w=1.3u l=0.12u m=1 
 x7 hnet16 nmin eck vdd lppfet w=1.3u l=0.12u m=1 
 x8 vdd c hnet15 vdd lppfet w=1.3u l=0.12u m=1 
 x9 hnet15 nmin eck vdd lppfet w=1.3u l=0.12u m=1 
 .ends tlatncax8ts 

 **** 
 *.subckt tlatnsrx1ts q qn d gn rn sn 
 .subckt tlatnsrx1ts q qn d gn rn sn vss vdd
 x0 vdd d hnet20 vdd lppfet w=0.54u l=0.12u m=1 
 x1 hnet20 nms hnet25 vdd lppfet w=0.54u l=0.12u m=1 
 x10 vdd pm q vdd lppfet w=0.58u l=0.12u m=1 
 x11 q pm vss vss lpnfet w=0.42u l=0.12u m=1 
 x12 vdd sn nms vdd lppfet w=0.42u l=0.12u m=1 
 x13 nms sn vss vss lpnfet w=0.3u l=0.12u m=1 
 x14 vdd c cn vdd lppfet w=0.28u l=0.12u m=1 
 x15 cn c vss vss lpnfet w=0.2u l=0.12u m=1 
 x16 vdd gn c vdd lppfet w=0.38u l=0.12u m=1 
 x17 c gn vss vss lpnfet w=0.26u l=0.12u m=1 
 x18 vdd pm m vdd lppfet w=0.3u l=0.12u m=1 
 x19 m pm vss vss lpnfet w=0.22u l=0.12u m=1 
 x2 hnet25 cn pm vdd lppfet w=0.54u l=0.12u m=1 
 x20 net66 nms net72 vdd lppfet w=0.36u l=0.12u m=1 
 x21 pm c net66 vdd lppfet w=0.36u l=0.12u m=1 
 x22 net72 m vdd vdd lppfet w=0.36u l=0.12u m=1 
 x23 net75 rn net78 vss lpnfet w=0.32u l=0.12u m=1 
 x24 net78 m vss vss lpnfet w=0.32u l=0.12u m=1 
 x25 pm cn net75 vss lpnfet w=0.32u l=0.12u m=1 
 x26 pm nms vss vss lpnfet w=0.28u l=0.12u m=1 
 x3 hnet31 d vss vss lpnfet w=0.42u l=0.12u m=1 
 x4 hnet26 rn hnet31 vss lpnfet w=0.42u l=0.12u m=1 
 x5 pm c hnet26 vss lpnfet w=0.42u l=0.12u m=1 
 x6 vdd rn hnet35 vdd lppfet w=0.48u l=0.12u m=1 
 x7 hnet35 nms pm vdd lppfet w=0.48u l=0.12u m=1 
 x8 vdd m qn vdd lppfet w=0.54u l=0.12u m=1 
 x9 qn m vss vss lpnfet w=0.46u l=0.12u m=1 
 .ends tlatnsrx1ts 

 **** 
 *.subckt tlatnsrx2ts q qn d gn rn sn 
 .subckt tlatnsrx2ts q qn d gn rn sn vss vdd
 x0 vdd d hnet20 vdd lppfet w=1.12u l=0.12u m=1 
 x1 hnet20 nms hnet25 vdd lppfet w=1.12u l=0.12u m=1 
 x10 vdd pm q vdd lppfet w=1.28u l=0.12u m=1 
 x11 q pm vss vss lpnfet w=0.9u l=0.12u m=1 
 x12 vdd sn nms vdd lppfet w=0.66u l=0.12u m=1 
 x13 nms sn vss vss lpnfet w=0.48u l=0.12u m=1 
 x14 vdd c cn vdd lppfet w=0.28u l=0.12u m=1 
 x15 cn c vss vss lpnfet w=0.22u l=0.12u m=1 
 x16 vdd gn c vdd lppfet w=0.42u l=0.12u m=1 
 x17 c gn vss vss lpnfet w=0.3u l=0.12u m=1 
 x18 vdd pm m vdd lppfet w=0.48u l=0.12u m=1 
 x19 m pm vss vss lpnfet w=0.34u l=0.12u m=1 
 x2 hnet25 cn pm vdd lppfet w=1.12u l=0.12u m=1 
 x20 net66 nms net72 vdd lppfet w=0.36u l=0.12u m=1 
 x21 pm c net66 vdd lppfet w=0.36u l=0.12u m=1 
 x22 net72 m vdd vdd lppfet w=0.36u l=0.12u m=1 
 x23 net75 rn net78 vss lpnfet w=0.32u l=0.12u m=1 
 x24 net78 m vss vss lpnfet w=0.32u l=0.12u m=1 
 x25 pm cn net75 vss lpnfet w=0.32u l=0.12u m=1 
 x26 pm nms vss vss lpnfet w=0.5u l=0.12u m=1 
 x3 hnet31 d vss vss lpnfet w=0.74u l=0.12u m=1 
 x4 hnet26 rn hnet31 vss lpnfet w=0.74u l=0.12u m=1 
 x5 pm c hnet26 vss lpnfet w=0.74u l=0.12u m=1 
 x6 vdd rn hnet35 vdd lppfet w=0.92u l=0.12u m=1 
 x7 hnet35 nms pm vdd lppfet w=0.92u l=0.12u m=1 
 x8 vdd m qn vdd lppfet w=1.28u l=0.12u m=1 
 x9 qn m vss vss lpnfet w=0.9u l=0.12u m=1 
 .ends tlatnsrx2ts 

 **** 
 *.subckt tlatnsrx4ts q qn d gn rn sn 
 .subckt tlatnsrx4ts q qn d gn rn sn vss vdd
 x0 hnet27 d vss vss lpnfet w=0.48u l=0.12u m=1 
 x1 hnet20 rn hnet27 vss lpnfet w=0.48u l=0.12u m=1 
 x10 hnet31 nms hnet30 vdd lppfet w=0.98u l=0.12u m=1 
 x11 hnet30 cn pm vdd lppfet w=0.98u l=0.12u m=1 
 x12 vdd d hnet33 vdd lppfet w=0.98u l=0.12u m=1 
 x13 hnet33 nms hnet34 vdd lppfet w=0.98u l=0.12u m=1 
 x14 hnet34 cn pm vdd lppfet w=0.98u l=0.12u m=1 
 x15 vdd rn hnet42 vdd lppfet w=0.92u l=0.12u m=1 
 x16 hnet42 nms pm vdd lppfet w=0.92u l=0.12u m=1 
 x17 vdd rn hnet39 vdd lppfet w=0.92u l=0.12u m=1 
 x18 hnet39 nms pm vdd lppfet w=0.92u l=0.12u m=1 
 x19 vdd m qn vdd lppfet w=2.56u l=0.12u m=1 
 x2 pm c hnet20 vss lpnfet w=0.48u l=0.12u m=1 
 x20 qn m vss vss lpnfet w=1.84u l=0.12u m=1 
 x21 vdd pm q vdd lppfet w=2.56u l=0.12u m=1 
 x22 q pm vss vss lpnfet w=1.84u l=0.12u m=1 
 x23 vdd sn nms vdd lppfet w=1.22u l=0.12u m=1 
 x24 nms sn vss vss lpnfet w=0.88u l=0.12u m=1 
 x25 vdd c cn vdd lppfet w=0.5u l=0.12u m=1 
 x26 cn c vss vss lpnfet w=0.36u l=0.12u m=1 
 x27 vdd gn c vdd lppfet w=0.7u l=0.12u m=1 
 x28 c gn vss vss lpnfet w=0.5u l=0.12u m=1 
 x29 vdd pm m vdd lppfet w=0.84u l=0.12u m=1 
 x3 hnet29 d vss vss lpnfet w=0.48u l=0.12u m=1 
 x30 m pm vss vss lpnfet w=0.6u l=0.12u m=1 
 x31 net66 nms net72 vdd lppfet w=0.32u l=0.12u m=1 
 x32 pm c net66 vdd lppfet w=0.32u l=0.12u m=1 
 x33 net72 m vdd vdd lppfet w=0.32u l=0.12u m=1 
 x34 net75 rn net78 vss lpnfet w=0.32u l=0.12u m=1 
 x35 net78 m vss vss lpnfet w=0.32u l=0.12u m=1 
 x36 pm cn net75 vss lpnfet w=0.32u l=0.12u m=1 
 x37 pm nms vss vss lpnfet w=0.92u l=0.12u m=1 
 x4 hnet28 rn hnet29 vss lpnfet w=0.48u l=0.12u m=1 
 x5 pm c hnet28 vss lpnfet w=0.48u l=0.12u m=1 
 x6 hnet23 d vss vss lpnfet w=0.48u l=0.12u m=1 
 x7 hnet21 rn hnet23 vss lpnfet w=0.48u l=0.12u m=1 
 x8 pm c hnet21 vss lpnfet w=0.48u l=0.12u m=1 
 x9 vdd d hnet31 vdd lppfet w=0.98u l=0.12u m=1 
 .ends tlatnsrx4ts 

 **** 
 *.subckt tlatnsrxlts q qn d gn rn sn 
 .subckt tlatnsrxlts q qn d gn rn sn vss vdd
 x0 vdd d hnet20 vdd lppfet w=0.36u l=0.12u m=1 
 x1 hnet20 nms hnet25 vdd lppfet w=0.36u l=0.12u m=1 
 x10 vdd pm q vdd lppfet w=0.42u l=0.12u m=1 
 x11 q pm vss vss lpnfet w=0.24u l=0.12u m=1 
 x12 vdd sn nms vdd lppfet w=0.28u l=0.12u m=1 
 x13 nms sn vss vss lpnfet w=0.2u l=0.12u m=1 
 x14 vdd c cn vdd lppfet w=0.28u l=0.12u m=1 
 x15 cn c vss vss lpnfet w=0.2u l=0.12u m=1 
 x16 vdd gn c vdd lppfet w=0.28u l=0.12u m=1 
 x17 c gn vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x19 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet25 cn pm vdd lppfet w=0.36u l=0.12u m=1 
 x20 net66 nms net72 vdd lppfet w=0.36u l=0.12u m=1 
 x21 pm c net66 vdd lppfet w=0.36u l=0.12u m=1 
 x22 net72 m vdd vdd lppfet w=0.36u l=0.12u m=1 
 x23 net75 rn net78 vss lpnfet w=0.32u l=0.12u m=1 
 x24 net78 m vss vss lpnfet w=0.32u l=0.12u m=1 
 x25 pm cn net75 vss lpnfet w=0.32u l=0.12u m=1 
 x26 pm nms vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet31 d vss vss lpnfet w=0.32u l=0.12u m=1 
 x4 hnet26 rn hnet31 vss lpnfet w=0.32u l=0.12u m=1 
 x5 pm c hnet26 vss lpnfet w=0.32u l=0.12u m=1 
 x6 vdd rn hnet35 vdd lppfet w=0.3u l=0.12u m=1 
 x7 hnet35 nms pm vdd lppfet w=0.3u l=0.12u m=1 
 x8 vdd m qn vdd lppfet w=0.42u l=0.12u m=1 
 x9 qn m vss vss lpnfet w=0.24u l=0.12u m=1 
 .ends tlatnsrxlts 

 **** 
 *.subckt tlatntscax12ts eck ck e se 
 .subckt tlatntscax12ts eck ck e se vss vdd
 x0 net27 se vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 net27 e vss vss lpnfet w=0.2u l=0.12u m=1 
 x10 hnet30 cn net34 vdd lppfet w=1.14u l=0.12u m=1 
 x11 vdd net45 hnet30 vdd lppfet w=1.14u l=0.12u m=1 
 x12 hnet34 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x13 net34 cn hnet34 vss lpnfet w=0.2u l=0.12u m=1 
 x14 hnet36 c net34 vdd lppfet w=0.28u l=0.12u m=1 
 x15 vdd m hnet36 vdd lppfet w=0.28u l=0.12u m=1 
 x16 vdd net43 eck vdd lppfet w=14.9u l=0.12u m=1 
 x17 eck net43 vss vss lpnfet w=5.48u l=0.12u m=1 
 x18 vdd net30 net43 vdd lppfet w=4.28u l=0.12u m=1 
 x19 net43 net30 vss vss lpnfet w=1.58u l=0.12u m=1 
 x2 vdd se hnet16 vdd lppfet w=0.36u l=0.12u m=1 
 x20 vdd net27 net45 vdd lppfet w=0.44u l=0.12u m=1 
 x21 net45 net27 vss vss lpnfet w=0.32u l=0.12u m=1 
 x22 vdd c cn vdd lppfet w=0.28u l=0.12u m=1 
 x23 cn c vss vss lpnfet w=0.2u l=0.12u m=1 
 x24 vdd ck c vdd lppfet w=0.84u l=0.12u m=1 
 x25 c ck vss vss lpnfet w=0.6u l=0.12u m=1 
 x26 vdd net34 m vdd lppfet w=0.28u l=0.12u m=1 
 x27 m net34 vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet16 e net27 vdd lppfet w=0.36u l=0.12u m=1 
 x4 net30 c vss vss lpnfet w=0.44u l=0.12u m=1 
 x5 net30 net34 vss vss lpnfet w=0.44u l=0.12u m=1 
 x6 vdd c hnet22 vdd lppfet w=1.42u l=0.12u m=1 
 x7 hnet22 net34 net30 vdd lppfet w=1.42u l=0.12u m=1 
 x8 hnet28 net45 vss vss lpnfet w=0.82u l=0.12u m=1 
 x9 net34 c hnet28 vss lpnfet w=0.82u l=0.12u m=1 
 .ends tlatntscax12ts 

 **** 
 *.subckt tlatntscax16ts eck ck e se 
 .subckt tlatntscax16ts eck ck e se vss vdd
 x0 net27 se vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 net27 e vss vss lpnfet w=0.2u l=0.12u m=1 
 x10 hnet27 net45 vss vss lpnfet w=0.84u l=0.12u m=1 
 x11 net34 c hnet27 vss lpnfet w=0.84u l=0.12u m=1 
 x12 hnet29 cn net34 vdd lppfet w=1.28u l=0.12u m=1 
 x13 vdd net45 hnet29 vdd lppfet w=1.28u l=0.12u m=1 
 x14 hnet33 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 net34 cn hnet33 vss lpnfet w=0.2u l=0.12u m=1 
 x16 hnet35 c net34 vdd lppfet w=0.28u l=0.12u m=1 
 x17 vdd m hnet35 vdd lppfet w=0.28u l=0.12u m=1 
 x18 vdd net43 eck vdd lppfet w=19.86u l=0.12u m=1 
 x19 eck net43 vss vss lpnfet w=7.36u l=0.12u m=1 
 x2 vdd se hnet16 vdd lppfet w=0.36u l=0.12u m=1 
 x20 vdd net30 net43 vdd lppfet w=5.68u l=0.12u m=1 
 x21 net43 net30 vss vss lpnfet w=2.32u l=0.12u m=1 
 x22 vdd net27 net45 vdd lppfet w=0.5u l=0.12u m=1 
 x23 net45 net27 vss vss lpnfet w=0.36u l=0.12u m=1 
 x24 vdd c cn vdd lppfet w=0.3u l=0.12u m=1 
 x25 cn c vss vss lpnfet w=0.22u l=0.12u m=1 
 x26 vdd ck c vdd lppfet w=1.02u l=0.12u m=1 
 x27 c ck vss vss lpnfet w=0.74u l=0.12u m=1 
 x28 vdd net34 m vdd lppfet w=0.28u l=0.12u m=1 
 x29 m net34 vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet16 e net27 vdd lppfet w=0.36u l=0.12u m=1 
 x4 net30 c vss vss lpnfet w=0.58u l=0.12u m=1 
 x5 net30 net34 vss vss lpnfet w=0.58u l=0.12u m=1 
 x6 vdd c hnet23 vdd lppfet w=1u l=0.12u m=1 
 x7 hnet23 net34 net30 vdd lppfet w=1u l=0.12u m=1 
 x8 vdd c hnet21 vdd lppfet w=1u l=0.12u m=1 
 x9 hnet21 net34 net30 vdd lppfet w=1u l=0.12u m=1 
 .ends tlatntscax16ts 

 **** 
 *.subckt tlatntscax20ts eck ck e se 
 .subckt tlatntscax20ts eck ck e se vss vdd
 x0 net27 se vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 net27 e vss vss lpnfet w=0.2u l=0.12u m=1 
 x10 hnet27 net45 vss vss lpnfet w=0.64u l=0.12u m=1 
 x11 hnet28 net45 vss vss lpnfet w=0.64u l=0.12u m=1 
 x12 net34 c hnet27 vss lpnfet w=0.64u l=0.12u m=1 
 x13 net34 c hnet28 vss lpnfet w=0.64u l=0.12u m=1 
 x14 hnet33 cn net34 vdd lppfet w=0.86u l=0.12u m=1 
 x15 hnet31 cn net34 vdd lppfet w=0.86u l=0.12u m=1 
 x16 vdd net45 hnet33 vdd lppfet w=0.86u l=0.12u m=1 
 x17 vdd net45 hnet31 vdd lppfet w=0.86u l=0.12u m=1 
 x18 hnet35 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x19 net34 cn hnet35 vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd se hnet16 vdd lppfet w=0.36u l=0.12u m=1 
 x20 hnet37 c net34 vdd lppfet w=0.28u l=0.12u m=1 
 x21 vdd m hnet37 vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd net42 eck vdd lppfet w=23.36u l=0.12u m=1 
 x23 eck net42 vss vss lpnfet w=9.2u l=0.12u m=1 
 x24 vdd net30 net42 vdd lppfet w=8.04u l=0.12u m=1 
 x25 net42 net30 vss vss lpnfet w=2.94u l=0.12u m=1 
 x26 vdd net27 net45 vdd lppfet w=0.7u l=0.12u m=1 
 x27 net45 net27 vss vss lpnfet w=0.5u l=0.12u m=1 
 x28 vdd c cn vdd lppfet w=0.42u l=0.12u m=1 
 x29 cn c vss vss lpnfet w=0.3u l=0.12u m=1 
 x3 hnet16 e net27 vdd lppfet w=0.36u l=0.12u m=1 
 x30 vdd ck c vdd lppfet w=1.36u l=0.12u m=1 
 x31 c ck vss vss lpnfet w=0.92u l=0.12u m=1 
 x32 vdd net34 m vdd lppfet w=0.28u l=0.12u m=1 
 x33 m net34 vss vss lpnfet w=0.2u l=0.12u m=1 
 x4 net30 c vss vss lpnfet w=0.74u l=0.12u m=1 
 x5 net30 net34 vss vss lpnfet w=0.74u l=0.12u m=1 
 x6 vdd c hnet23 vdd lppfet w=1.28u l=0.12u m=1 
 x7 hnet23 net34 net30 vdd lppfet w=1.28u l=0.12u m=1 
 x8 vdd c hnet21 vdd lppfet w=1.28u l=0.12u m=1 
 x9 hnet21 net34 net30 vdd lppfet w=1.28u l=0.12u m=1 
 .ends tlatntscax20ts 

 **** 
 *.subckt tlatntscax2ts eck ck e se 
 .subckt tlatntscax2ts eck ck e se vss vdd
 x0 net26 se vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 net26 e vss vss lpnfet w=0.2u l=0.12u m=1 
 x10 hnet28 cn net33 vdd lppfet w=1u l=0.12u m=1 
 x11 vdd net40 hnet28 vdd lppfet w=1u l=0.12u m=1 
 x12 hnet32 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x13 net33 cn hnet32 vss lpnfet w=0.2u l=0.12u m=1 
 x14 hnet34 c net33 vdd lppfet w=0.28u l=0.12u m=1 
 x15 vdd m hnet34 vdd lppfet w=0.28u l=0.12u m=1 
 x16 vdd net26 net40 vdd lppfet w=0.38u l=0.12u m=1 
 x17 net40 net26 vss vss lpnfet w=0.28u l=0.12u m=1 
 x18 vdd c cn vdd lppfet w=0.28u l=0.12u m=1 
 x19 cn c vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd se hnet14 vdd lppfet w=0.36u l=0.12u m=1 
 x20 vdd ck c vdd lppfet w=0.78u l=0.12u m=1 
 x21 c ck vss vss lpnfet w=0.56u l=0.12u m=1 
 x22 vdd net33 m vdd lppfet w=0.28u l=0.12u m=1 
 x23 m net33 vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet14 e net26 vdd lppfet w=0.36u l=0.12u m=1 
 x4 eck c vss vss lpnfet w=0.38u l=0.12u m=1 
 x5 eck net33 vss vss lpnfet w=0.38u l=0.12u m=1 
 x6 vdd c hnet20 vdd lppfet w=1.3u l=0.12u m=1 
 x7 hnet20 net33 eck vdd lppfet w=1.3u l=0.12u m=1 
 x8 hnet26 net40 vss vss lpnfet w=0.72u l=0.12u m=1 
 x9 net33 c hnet26 vss lpnfet w=0.72u l=0.12u m=1 
 .ends tlatntscax2ts 

 **** 
 *.subckt tlatntscax3ts eck ck e se 
 .subckt tlatntscax3ts eck ck e se vss vdd
 x0 net26 se vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 net26 e vss vss lpnfet w=0.2u l=0.12u m=1 
 x10 hnet25 net40 vss vss lpnfet w=0.84u l=0.12u m=1 
 x11 net33 c hnet25 vss lpnfet w=0.84u l=0.12u m=1 
 x12 hnet27 cn net33 vdd lppfet w=1.26u l=0.12u m=1 
 x13 vdd net40 hnet27 vdd lppfet w=1.26u l=0.12u m=1 
 x14 hnet31 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x15 net33 cn hnet31 vss lpnfet w=0.2u l=0.12u m=1 
 x16 hnet33 c net33 vdd lppfet w=0.28u l=0.12u m=1 
 x17 vdd m hnet33 vdd lppfet w=0.28u l=0.12u m=1 
 x18 vdd net26 net40 vdd lppfet w=0.5u l=0.12u m=1 
 x19 net40 net26 vss vss lpnfet w=0.36u l=0.12u m=1 
 x2 vdd se hnet14 vdd lppfet w=0.36u l=0.12u m=1 
 x20 vdd c cn vdd lppfet w=0.3u l=0.12u m=1 
 x21 cn c vss vss lpnfet w=0.22u l=0.12u m=1 
 x22 vdd ck c vdd lppfet w=1u l=0.12u m=1 
 x23 c ck vss vss lpnfet w=0.72u l=0.12u m=1 
 x24 vdd net33 m vdd lppfet w=0.28u l=0.12u m=1 
 x25 m net33 vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet14 e net26 vdd lppfet w=0.36u l=0.12u m=1 
 x4 eck c vss vss lpnfet w=0.56u l=0.12u m=1 
 x5 eck net33 vss vss lpnfet w=0.56u l=0.12u m=1 
 x6 vdd c hnet21 vdd lppfet w=0.96u l=0.12u m=1 
 x7 hnet21 net33 eck vdd lppfet w=0.96u l=0.12u m=1 
 x8 vdd c hnet19 vdd lppfet w=0.96u l=0.12u m=1 
 x9 hnet19 net33 eck vdd lppfet w=0.96u l=0.12u m=1 
 .ends tlatntscax3ts 

 **** 
 *.subckt tlatntscax4ts eck ck e se 
 .subckt tlatntscax4ts eck ck e se vss vdd
 x0 net26 se vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 net26 e vss vss lpnfet w=0.2u l=0.12u m=1 
 x10 hnet25 net40 vss vss lpnfet w=0.64u l=0.12u m=1 
 x11 hnet26 net40 vss vss lpnfet w=0.64u l=0.12u m=1 
 x12 net33 c hnet25 vss lpnfet w=0.64u l=0.12u m=1 
 x13 net33 c hnet26 vss lpnfet w=0.64u l=0.12u m=1 
 x14 hnet31 cn net33 vdd lppfet w=0.88u l=0.12u m=1 
 x15 hnet29 cn net33 vdd lppfet w=0.88u l=0.12u m=1 
 x16 vdd net40 hnet31 vdd lppfet w=0.88u l=0.12u m=1 
 x17 vdd net40 hnet29 vdd lppfet w=0.88u l=0.12u m=1 
 x18 hnet33 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x19 net33 cn hnet33 vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd se hnet14 vdd lppfet w=0.36u l=0.12u m=1 
 x20 hnet35 c net33 vdd lppfet w=0.28u l=0.12u m=1 
 x21 vdd m hnet35 vdd lppfet w=0.28u l=0.12u m=1 
 x22 vdd net26 net40 vdd lppfet w=0.7u l=0.12u m=1 
 x23 net40 net26 vss vss lpnfet w=0.5u l=0.12u m=1 
 x24 vdd c cn vdd lppfet w=0.42u l=0.12u m=1 
 x25 cn c vss vss lpnfet w=0.3u l=0.12u m=1 
 x26 vdd ck c vdd lppfet w=1.36u l=0.12u m=1 
 x27 c ck vss vss lpnfet w=0.92u l=0.12u m=1 
 x28 vdd net33 m vdd lppfet w=0.28u l=0.12u m=1 
 x29 m net33 vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet14 e net26 vdd lppfet w=0.36u l=0.12u m=1 
 x4 eck c vss vss lpnfet w=0.74u l=0.12u m=1 
 x5 eck net33 vss vss lpnfet w=0.74u l=0.12u m=1 
 x6 vdd c hnet21 vdd lppfet w=1.28u l=0.12u m=1 
 x7 hnet21 net33 eck vdd lppfet w=1.28u l=0.12u m=1 
 x8 vdd c hnet19 vdd lppfet w=1.28u l=0.12u m=1 
 x9 hnet19 net33 eck vdd lppfet w=1.28u l=0.12u m=1 
 .ends tlatntscax4ts 

 **** 
 *.subckt tlatntscax6ts eck ck e se 
 .subckt tlatntscax6ts eck ck e se vss vdd
 x0 hnet15 net40 vss vss lpnfet w=0.6u l=0.12u m=1 
 x1 hnet17 net40 vss vss lpnfet w=0.6u l=0.12u m=1 
 x10 vdd net40 hnet18 vdd lppfet w=0.84u l=0.12u m=1 
 x11 vdd net40 hnet14 vdd lppfet w=0.84u l=0.12u m=1 
 x12 net30 se vss vss lpnfet w=0.3u l=0.12u m=1 
 x13 net30 e vss vss lpnfet w=0.3u l=0.12u m=1 
 x14 vdd se hnet26 vdd lppfet w=0.54u l=0.12u m=1 
 x15 hnet26 e net30 vdd lppfet w=0.54u l=0.12u m=1 
 x16 eck c vss vss lpnfet w=1.12u l=0.12u m=1 
 x17 eck net27 vss vss lpnfet w=1.12u l=0.12u m=1 
 x18 vdd c hnet31 vdd lppfet w=1.28u l=0.12u m=1 
 x19 hnet31 net27 eck vdd lppfet w=1.28u l=0.12u m=1 
 x2 hnet22 net40 vss vss lpnfet w=0.6u l=0.12u m=1 
 x20 vdd c hnet29 vdd lppfet w=1.28u l=0.12u m=1 
 x21 hnet29 net27 eck vdd lppfet w=1.28u l=0.12u m=1 
 x22 vdd c hnet32 vdd lppfet w=1.28u l=0.12u m=1 
 x23 hnet32 net27 eck vdd lppfet w=1.28u l=0.12u m=1 
 x24 hnet36 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x25 net27 cn hnet36 vss lpnfet w=0.2u l=0.12u m=1 
 x26 hnet38 c net27 vdd lppfet w=0.28u l=0.12u m=1 
 x27 vdd m hnet38 vdd lppfet w=0.28u l=0.12u m=1 
 x28 vdd net30 net40 vdd lppfet w=1.02u l=0.12u m=1 
 x29 net40 net30 vss vss lpnfet w=0.74u l=0.12u m=1 
 x3 net27 c hnet15 vss lpnfet w=0.6u l=0.12u m=1 
 x30 vdd c cn vdd lppfet w=0.56u l=0.12u m=1 
 x31 cn c vss vss lpnfet w=0.4u l=0.12u m=1 
 x32 vdd ck c vdd lppfet w=1.92u l=0.12u m=1 
 x33 c ck vss vss lpnfet w=1.38u l=0.12u m=1 
 x34 vdd net27 m vdd lppfet w=0.28u l=0.12u m=1 
 x35 m net27 vss vss lpnfet w=0.2u l=0.12u m=1 
 x4 net27 c hnet17 vss lpnfet w=0.6u l=0.12u m=1 
 x5 net27 c hnet22 vss lpnfet w=0.6u l=0.12u m=1 
 x6 hnet16 cn net27 vdd lppfet w=0.84u l=0.12u m=1 
 x7 hnet18 cn net27 vdd lppfet w=0.84u l=0.12u m=1 
 x8 hnet14 cn net27 vdd lppfet w=0.84u l=0.12u m=1 
 x9 vdd net40 hnet16 vdd lppfet w=0.84u l=0.12u m=1 
 .ends tlatntscax6ts 

 **** 
 *.subckt tlatntscax8ts eck ck e se 
 .subckt tlatntscax8ts eck ck e se vss vdd
 x0 eck c vss vss lpnfet w=1.84u l=0.12u m=1 
 x1 eck net49 vss vss lpnfet w=1.84u l=0.12u m=1 
 x10 vdd c hnet20 vdd lppfet w=1.3u l=0.12u m=1 
 x11 hnet20 net49 eck vdd lppfet w=1.3u l=0.12u m=1 
 x12 vdd c hnet17 vdd lppfet w=1.3u l=0.12u m=1 
 x13 hnet17 net49 eck vdd lppfet w=1.3u l=0.12u m=1 
 x14 vdd c hnet25 vdd lppfet w=1.3u l=0.12u m=1 
 x15 hnet25 net49 eck vdd lppfet w=1.3u l=0.12u m=1 
 x16 net49 c net37 vss lpnfet w=0.92u l=0.12u m=1 
 x17 net37 net59 vss vss lpnfet w=0.92u l=0.12u m=1 
 x18 vdd net59 net47 vdd lppfet w=1.12u l=0.12u m=1 
 x19 net47 cn net49 vdd lppfet w=1.12u l=0.12u m=1 
 x2 vdd c hnet23 vdd lppfet w=1.3u l=0.12u m=1 
 x20 hnet28 net59 vss vss lpnfet w=0.6u l=0.12u m=1 
 x21 hnet30 net59 vss vss lpnfet w=0.6u l=0.12u m=1 
 x22 hnet37 net59 vss vss lpnfet w=0.6u l=0.12u m=1 
 x23 hnet29 net59 vss vss lpnfet w=0.6u l=0.12u m=1 
 x24 net49 c hnet28 vss lpnfet w=0.6u l=0.12u m=1 
 x25 net49 c hnet30 vss lpnfet w=0.6u l=0.12u m=1 
 x26 net49 c hnet37 vss lpnfet w=0.6u l=0.12u m=1 
 x27 net49 c hnet29 vss lpnfet w=0.6u l=0.12u m=1 
 x28 hnet35 cn net49 vdd lppfet w=0.86u l=0.12u m=1 
 x29 hnet38 cn net49 vdd lppfet w=0.86u l=0.12u m=1 
 x3 hnet23 net49 eck vdd lppfet w=1.3u l=0.12u m=1 
 x30 hnet31 cn net49 vdd lppfet w=0.86u l=0.12u m=1 
 x31 hnet36 cn net49 vdd lppfet w=0.86u l=0.12u m=1 
 x32 vdd net59 hnet35 vdd lppfet w=0.86u l=0.12u m=1 
 x33 vdd net59 hnet38 vdd lppfet w=0.86u l=0.12u m=1 
 x34 vdd net59 hnet31 vdd lppfet w=0.86u l=0.12u m=1 
 x35 vdd net59 hnet36 vdd lppfet w=0.86u l=0.12u m=1 
 x36 net52 se vss vss lpnfet w=0.6u l=0.12u m=1 
 x37 net52 e vss vss lpnfet w=0.6u l=0.12u m=1 
 x38 vdd se hnet40 vdd lppfet w=1.1u l=0.12u m=1 
 x39 hnet40 e net52 vdd lppfet w=1.1u l=0.12u m=1 
 x4 vdd c hnet18 vdd lppfet w=1.3u l=0.12u m=1 
 x40 hnet44 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x41 net49 cn hnet44 vss lpnfet w=0.2u l=0.12u m=1 
 x42 hnet46 c net49 vdd lppfet w=0.28u l=0.12u m=1 
 x43 vdd m hnet46 vdd lppfet w=0.28u l=0.12u m=1 
 x44 vdd net52 net59 vdd lppfet w=2.06u l=0.12u m=1 
 x45 net59 net52 vss vss lpnfet w=1.48u l=0.12u m=1 
 x46 vdd c cn vdd lppfet w=1.08u l=0.12u m=1 
 x47 cn c vss vss lpnfet w=0.74u l=0.12u m=1 
 x48 vdd ck c vdd lppfet w=3.9u l=0.12u m=1 
 x49 c ck vss vss lpnfet w=2.76u l=0.12u m=1 
 x5 hnet18 net49 eck vdd lppfet w=1.3u l=0.12u m=1 
 x50 vdd net49 m vdd lppfet w=0.28u l=0.12u m=1 
 x51 m net49 vss vss lpnfet w=0.2u l=0.12u m=1 
 x6 vdd c hnet22 vdd lppfet w=1.3u l=0.12u m=1 
 x7 hnet22 net49 eck vdd lppfet w=1.3u l=0.12u m=1 
 x8 vdd c hnet21 vdd lppfet w=1.3u l=0.12u m=1 
 x9 hnet21 net49 eck vdd lppfet w=1.3u l=0.12u m=1 
 .ends tlatntscax8ts 

 **** 
 *.subckt tlatnx1ts q qn d gn 
 .subckt tlatnx1ts q qn d gn vss vdd
 x0 hnet12 d vss vss lpnfet w=0.48u l=0.12u m=1 
 x1 nmin c hnet12 vss lpnfet w=0.48u l=0.12u m=1 
 x10 vdd gn c vdd lppfet w=0.34u l=0.12u m=1 
 x11 c gn vss vss lpnfet w=0.28u l=0.12u m=1 
 x12 vdd nmin q vdd lppfet w=0.64u l=0.12u m=1 
 x13 q nmin vss vss lpnfet w=0.44u l=0.12u m=1 
 x14 vdd m qn vdd lppfet w=0.64u l=0.12u m=1 
 x15 qn m vss vss lpnfet w=0.46u l=0.12u m=1 
 x16 vdd nmin m vdd lppfet w=0.28u l=0.12u m=1 
 x17 m nmin vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet14 cn nmin vdd lppfet w=0.72u l=0.12u m=1 
 x3 vdd d hnet14 vdd lppfet w=0.72u l=0.12u m=1 
 x4 hnet20 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 nmin cn hnet20 vss lpnfet w=0.2u l=0.12u m=1 
 x6 hnet22 c nmin vdd lppfet w=0.28u l=0.12u m=1 
 x7 vdd m hnet22 vdd lppfet w=0.28u l=0.12u m=1 
 x8 vdd c cn vdd lppfet w=0.28u l=0.12u m=1 
 x9 cn c vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends tlatnx1ts 

 **** 
 *.subckt tlatnx2ts q qn d gn 
 .subckt tlatnx2ts q qn d gn vss vdd
 x0 hnet12 d vss vss lpnfet w=0.84u l=0.12u m=1 
 x1 nmin c hnet12 vss lpnfet w=0.84u l=0.12u m=1 
 x10 vdd gn c vdd lppfet w=0.42u l=0.12u m=1 
 x11 c gn vss vss lpnfet w=0.3u l=0.12u m=1 
 x12 vdd nmin q vdd lppfet w=1.28u l=0.12u m=1 
 x13 q nmin vss vss lpnfet w=0.92u l=0.12u m=1 
 x14 vdd m qn vdd lppfet w=1.28u l=0.12u m=1 
 x15 qn m vss vss lpnfet w=0.92u l=0.12u m=1 
 x16 vdd nmin m vdd lppfet w=0.44u l=0.12u m=1 
 x17 m nmin vss vss lpnfet w=0.32u l=0.12u m=1 
 x2 hnet14 cn nmin vdd lppfet w=1.26u l=0.12u m=1 
 x3 vdd d hnet14 vdd lppfet w=1.26u l=0.12u m=1 
 x4 hnet20 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 nmin cn hnet20 vss lpnfet w=0.2u l=0.12u m=1 
 x6 hnet22 c nmin vdd lppfet w=0.28u l=0.12u m=1 
 x7 vdd m hnet22 vdd lppfet w=0.28u l=0.12u m=1 
 x8 vdd c cn vdd lppfet w=0.3u l=0.12u m=1 
 x9 cn c vss vss lpnfet w=0.22u l=0.12u m=1 
 .ends tlatnx2ts 

 **** 
 *.subckt tlatnx4ts q qn d gn 
 .subckt tlatnx4ts q qn d gn vss vdd
 x0 hnet12 d vss vss lpnfet w=0.92u l=0.12u m=1 
 x1 hnet13 d vss vss lpnfet w=0.92u l=0.12u m=1 
 x10 hnet24 c nmin vdd lppfet w=0.28u l=0.12u m=1 
 x11 vdd m hnet24 vdd lppfet w=0.28u l=0.12u m=1 
 x12 vdd c cn vdd lppfet w=0.56u l=0.12u m=1 
 x13 cn c vss vss lpnfet w=0.4u l=0.12u m=1 
 x14 vdd gn c vdd lppfet w=0.78u l=0.12u m=1 
 x15 c gn vss vss lpnfet w=0.56u l=0.12u m=1 
 x16 vdd nmin q vdd lppfet w=2.48u l=0.12u m=1 
 x17 q nmin vss vss lpnfet w=1.84u l=0.12u m=1 
 x18 vdd m qn vdd lppfet w=2.48u l=0.12u m=1 
 x19 qn m vss vss lpnfet w=1.84u l=0.12u m=1 
 x2 nmin c hnet12 vss lpnfet w=0.92u l=0.12u m=1 
 x20 vdd nmin m vdd lppfet w=0.8u l=0.12u m=1 
 x21 m nmin vss vss lpnfet w=0.58u l=0.12u m=1 
 x3 nmin c hnet13 vss lpnfet w=0.92u l=0.12u m=1 
 x4 hnet20 cn nmin vdd lppfet w=1.2u l=0.12u m=1 
 x5 hnet17 cn nmin vdd lppfet w=1.2u l=0.12u m=1 
 x6 vdd d hnet20 vdd lppfet w=1.2u l=0.12u m=1 
 x7 vdd d hnet17 vdd lppfet w=1.2u l=0.12u m=1 
 x8 hnet22 m vss vss lpnfet w=0.18u l=0.12u m=1 
 x9 nmin cn hnet22 vss lpnfet w=0.18u l=0.12u m=1 
 .ends tlatnx4ts 

 **** 
 *.subckt tlatnxlts q qn d gn 
 .subckt tlatnxlts q qn d gn vss vdd
 x0 hnet12 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 nmin c hnet12 vss lpnfet w=0.2u l=0.12u m=1 
 x10 vdd gn c vdd lppfet w=0.28u l=0.12u m=1 
 x11 c gn vss vss lpnfet w=0.2u l=0.12u m=1 
 x12 vdd nmin q vdd lppfet w=0.42u l=0.12u m=1 
 x13 q nmin vss vss lpnfet w=0.24u l=0.12u m=1 
 x14 vdd m qn vdd lppfet w=0.42u l=0.12u m=1 
 x15 qn m vss vss lpnfet w=0.24u l=0.12u m=1 
 x16 vdd nmin m vdd lppfet w=0.28u l=0.12u m=1 
 x17 m nmin vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet14 cn nmin vdd lppfet w=0.28u l=0.12u m=1 
 x3 vdd d hnet14 vdd lppfet w=0.28u l=0.12u m=1 
 x4 hnet20 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 nmin cn hnet20 vss lpnfet w=0.2u l=0.12u m=1 
 x6 hnet22 c nmin vdd lppfet w=0.28u l=0.12u m=1 
 x7 vdd m hnet22 vdd lppfet w=0.28u l=0.12u m=1 
 x8 vdd c cn vdd lppfet w=0.28u l=0.12u m=1 
 x9 cn c vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends tlatnxlts 

 **** 
 *.subckt tlatsrx1ts q qn d g rn sn 
 .subckt tlatsrx1ts q qn d g rn sn vss vdd
 x0 vdd d hnet20 vdd lppfet w=0.6u l=0.12u m=1 
 x1 hnet20 nms hnet25 vdd lppfet w=0.6u l=0.12u m=1 
 x10 vdd pm q vdd lppfet w=0.56u l=0.12u m=1 
 x11 q pm vss vss lpnfet w=0.42u l=0.12u m=1 
 x12 vdd sn nms vdd lppfet w=0.42u l=0.12u m=1 
 x13 nms sn vss vss lpnfet w=0.3u l=0.12u m=1 
 x14 vdd cn c vdd lppfet w=0.26u l=0.12u m=1 
 x15 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x16 vdd g cn vdd lppfet w=0.38u l=0.12u m=1 
 x17 cn g vss vss lpnfet w=0.28u l=0.12u m=1 
 x18 vdd pm m vdd lppfet w=0.3u l=0.12u m=1 
 x19 m pm vss vss lpnfet w=0.22u l=0.12u m=1 
 x2 hnet25 cn pm vdd lppfet w=0.6u l=0.12u m=1 
 x20 net65 nms net71 vdd lppfet w=0.36u l=0.12u m=1 
 x21 pm c net65 vdd lppfet w=0.36u l=0.12u m=1 
 x22 net71 m vdd vdd lppfet w=0.36u l=0.12u m=1 
 x23 net74 rn net77 vss lpnfet w=0.32u l=0.12u m=1 
 x24 net77 m vss vss lpnfet w=0.32u l=0.12u m=1 
 x25 pm cn net74 vss lpnfet w=0.32u l=0.12u m=1 
 x26 pm nms vss vss lpnfet w=0.28u l=0.12u m=1 
 x3 hnet31 d vss vss lpnfet w=0.42u l=0.12u m=1 
 x4 hnet26 rn hnet31 vss lpnfet w=0.42u l=0.12u m=1 
 x5 pm c hnet26 vss lpnfet w=0.42u l=0.12u m=1 
 x6 vdd rn hnet35 vdd lppfet w=0.5u l=0.12u m=1 
 x7 hnet35 nms pm vdd lppfet w=0.5u l=0.12u m=1 
 x8 vdd m qn vdd lppfet w=0.56u l=0.12u m=1 
 x9 qn m vss vss lpnfet w=0.46u l=0.12u m=1 
 .ends tlatsrx1ts 

 **** 
 *.subckt tlatsrx2ts q qn d g rn sn 
 .subckt tlatsrx2ts q qn d g rn sn vss vdd
 x0 vdd d hnet20 vdd lppfet w=1.12u l=0.12u m=1 
 x1 hnet20 nms hnet25 vdd lppfet w=1.12u l=0.12u m=1 
 x10 vdd pm q vdd lppfet w=1.28u l=0.12u m=1 
 x11 q pm vss vss lpnfet w=0.9u l=0.12u m=1 
 x12 vdd sn nms vdd lppfet w=0.66u l=0.12u m=1 
 x13 nms sn vss vss lpnfet w=0.48u l=0.12u m=1 
 x14 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x15 c cn vss vss lpnfet w=0.22u l=0.12u m=1 
 x16 vdd g cn vdd lppfet w=0.42u l=0.12u m=1 
 x17 cn g vss vss lpnfet w=0.28u l=0.12u m=1 
 x18 vdd pm m vdd lppfet w=0.48u l=0.12u m=1 
 x19 m pm vss vss lpnfet w=0.34u l=0.12u m=1 
 x2 hnet25 cn pm vdd lppfet w=1.12u l=0.12u m=1 
 x20 net65 nms net71 vdd lppfet w=0.36u l=0.12u m=1 
 x21 pm c net65 vdd lppfet w=0.36u l=0.12u m=1 
 x22 net71 m vdd vdd lppfet w=0.36u l=0.12u m=1 
 x23 net74 rn net77 vss lpnfet w=0.32u l=0.12u m=1 
 x24 net77 m vss vss lpnfet w=0.32u l=0.12u m=1 
 x25 pm cn net74 vss lpnfet w=0.32u l=0.12u m=1 
 x26 pm nms vss vss lpnfet w=0.5u l=0.12u m=1 
 x3 hnet31 d vss vss lpnfet w=0.64u l=0.12u m=1 
 x4 hnet26 rn hnet31 vss lpnfet w=0.64u l=0.12u m=1 
 x5 pm c hnet26 vss lpnfet w=0.64u l=0.12u m=1 
 x6 vdd rn hnet35 vdd lppfet w=0.88u l=0.12u m=1 
 x7 hnet35 nms pm vdd lppfet w=0.88u l=0.12u m=1 
 x8 vdd m qn vdd lppfet w=1.28u l=0.12u m=1 
 x9 qn m vss vss lpnfet w=0.9u l=0.12u m=1 
 .ends tlatsrx2ts 

 **** 
 *.subckt tlatsrx4ts q qn d g rn sn 
 .subckt tlatsrx4ts q qn d g rn sn vss vdd
 x0 vdd d hnet21 vdd lppfet w=0.98u l=0.12u m=1 
 x1 hnet21 nms hnet20 vdd lppfet w=0.98u l=0.12u m=1 
 x10 hnet36 rn hnet37 vss lpnfet w=0.48u l=0.12u m=1 
 x11 pm c hnet36 vss lpnfet w=0.48u l=0.12u m=1 
 x12 hnet31 d vss vss lpnfet w=0.48u l=0.12u m=1 
 x13 hnet29 rn hnet31 vss lpnfet w=0.48u l=0.12u m=1 
 x14 pm c hnet29 vss lpnfet w=0.48u l=0.12u m=1 
 x15 vdd rn hnet42 vdd lppfet w=0.92u l=0.12u m=1 
 x16 hnet42 nms pm vdd lppfet w=0.92u l=0.12u m=1 
 x17 vdd rn hnet39 vdd lppfet w=0.92u l=0.12u m=1 
 x18 hnet39 nms pm vdd lppfet w=0.92u l=0.12u m=1 
 x19 vdd m qn vdd lppfet w=2.56u l=0.12u m=1 
 x2 hnet20 cn pm vdd lppfet w=0.98u l=0.12u m=1 
 x20 qn m vss vss lpnfet w=1.84u l=0.12u m=1 
 x21 vdd pm q vdd lppfet w=2.56u l=0.12u m=1 
 x22 q pm vss vss lpnfet w=1.84u l=0.12u m=1 
 x23 vdd sn nms vdd lppfet w=1.22u l=0.12u m=1 
 x24 nms sn vss vss lpnfet w=0.88u l=0.12u m=1 
 x25 vdd cn c vdd lppfet w=0.5u l=0.12u m=1 
 x26 c cn vss vss lpnfet w=0.36u l=0.12u m=1 
 x27 vdd g cn vdd lppfet w=0.7u l=0.12u m=1 
 x28 cn g vss vss lpnfet w=0.5u l=0.12u m=1 
 x29 vdd pm m vdd lppfet w=0.84u l=0.12u m=1 
 x3 vdd d hnet23 vdd lppfet w=0.98u l=0.12u m=1 
 x30 m pm vss vss lpnfet w=0.6u l=0.12u m=1 
 x31 net65 nms net71 vdd lppfet w=0.32u l=0.12u m=1 
 x32 pm c net65 vdd lppfet w=0.32u l=0.12u m=1 
 x33 net71 m vdd vdd lppfet w=0.32u l=0.12u m=1 
 x34 net74 rn net77 vss lpnfet w=0.32u l=0.12u m=1 
 x35 net77 m vss vss lpnfet w=0.32u l=0.12u m=1 
 x36 pm cn net74 vss lpnfet w=0.32u l=0.12u m=1 
 x37 pm nms vss vss lpnfet w=0.92u l=0.12u m=1 
 x4 hnet23 nms hnet24 vdd lppfet w=0.98u l=0.12u m=1 
 x5 hnet24 cn pm vdd lppfet w=0.98u l=0.12u m=1 
 x6 hnet35 d vss vss lpnfet w=0.48u l=0.12u m=1 
 x7 hnet28 rn hnet35 vss lpnfet w=0.48u l=0.12u m=1 
 x8 pm c hnet28 vss lpnfet w=0.48u l=0.12u m=1 
 x9 hnet37 d vss vss lpnfet w=0.48u l=0.12u m=1 
 .ends tlatsrx4ts 

 **** 
 *.subckt tlatsrxlts q qn d g rn sn 
 .subckt tlatsrxlts q qn d g rn sn vss vdd
 x0 vdd d hnet20 vdd lppfet w=0.36u l=0.12u m=1 
 x1 hnet20 nms hnet25 vdd lppfet w=0.36u l=0.12u m=1 
 x10 vdd pm q vdd lppfet w=0.42u l=0.12u m=1 
 x11 q pm vss vss lpnfet w=0.24u l=0.12u m=1 
 x12 vdd sn nms vdd lppfet w=0.28u l=0.12u m=1 
 x13 nms sn vss vss lpnfet w=0.2u l=0.12u m=1 
 x14 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x15 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 x16 vdd g cn vdd lppfet w=0.28u l=0.12u m=1 
 x17 cn g vss vss lpnfet w=0.2u l=0.12u m=1 
 x18 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x19 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet25 cn pm vdd lppfet w=0.36u l=0.12u m=1 
 x20 net65 nms net71 vdd lppfet w=0.36u l=0.12u m=1 
 x21 pm c net65 vdd lppfet w=0.36u l=0.12u m=1 
 x22 net71 m vdd vdd lppfet w=0.36u l=0.12u m=1 
 x23 net74 rn net77 vss lpnfet w=0.32u l=0.12u m=1 
 x24 net77 m vss vss lpnfet w=0.32u l=0.12u m=1 
 x25 pm cn net74 vss lpnfet w=0.32u l=0.12u m=1 
 x26 pm nms vss vss lpnfet w=0.2u l=0.12u m=1 
 x3 hnet31 d vss vss lpnfet w=0.32u l=0.12u m=1 
 x4 hnet26 rn hnet31 vss lpnfet w=0.32u l=0.12u m=1 
 x5 pm c hnet26 vss lpnfet w=0.32u l=0.12u m=1 
 x6 vdd rn hnet35 vdd lppfet w=0.3u l=0.12u m=1 
 x7 hnet35 nms pm vdd lppfet w=0.3u l=0.12u m=1 
 x8 vdd m qn vdd lppfet w=0.42u l=0.12u m=1 
 x9 qn m vss vss lpnfet w=0.24u l=0.12u m=1 
 .ends tlatsrxlts 

 **** 
 *.subckt tlatx1ts q qn d g 
 .subckt tlatx1ts q qn d g vss vdd
 x0 hnet12 d vss vss lpnfet w=0.48u l=0.12u m=1 
 x1 pm c hnet12 vss lpnfet w=0.48u l=0.12u m=1 
 x10 vdd g cn vdd lppfet w=0.38u l=0.12u m=1 
 x11 cn g vss vss lpnfet w=0.28u l=0.12u m=1 
 x12 vdd pm q vdd lppfet w=0.64u l=0.12u m=1 
 x13 q pm vss vss lpnfet w=0.46u l=0.12u m=1 
 x14 vdd m qn vdd lppfet w=0.64u l=0.12u m=1 
 x15 qn m vss vss lpnfet w=0.46u l=0.12u m=1 
 x16 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x17 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet14 cn pm vdd lppfet w=0.72u l=0.12u m=1 
 x3 vdd d hnet14 vdd lppfet w=0.72u l=0.12u m=1 
 x4 hnet20 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 pm cn hnet20 vss lpnfet w=0.2u l=0.12u m=1 
 x6 hnet22 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x7 vdd m hnet22 vdd lppfet w=0.28u l=0.12u m=1 
 x8 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x9 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends tlatx1ts 

 **** 
 *.subckt tlatx2ts q qn d g 
 .subckt tlatx2ts q qn d g vss vdd
 x0 hnet12 d vss vss lpnfet w=0.84u l=0.12u m=1 
 x1 pm c hnet12 vss lpnfet w=0.84u l=0.12u m=1 
 x10 vdd g cn vdd lppfet w=0.42u l=0.12u m=1 
 x11 cn g vss vss lpnfet w=0.3u l=0.12u m=1 
 x12 vdd pm q vdd lppfet w=1.28u l=0.12u m=1 
 x13 q pm vss vss lpnfet w=0.92u l=0.12u m=1 
 x14 vdd m qn vdd lppfet w=1.28u l=0.12u m=1 
 x15 qn m vss vss lpnfet w=0.92u l=0.12u m=1 
 x16 vdd pm m vdd lppfet w=0.44u l=0.12u m=1 
 x17 m pm vss vss lpnfet w=0.32u l=0.12u m=1 
 x2 hnet14 cn pm vdd lppfet w=1.26u l=0.12u m=1 
 x3 vdd d hnet14 vdd lppfet w=1.26u l=0.12u m=1 
 x4 hnet20 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 pm cn hnet20 vss lpnfet w=0.2u l=0.12u m=1 
 x6 hnet22 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x7 vdd m hnet22 vdd lppfet w=0.28u l=0.12u m=1 
 x8 vdd cn c vdd lppfet w=0.3u l=0.12u m=1 
 x9 c cn vss vss lpnfet w=0.22u l=0.12u m=1 
 .ends tlatx2ts 

 **** 
 *.subckt tlatx4ts q qn d g 
 .subckt tlatx4ts q qn d g vss vdd
 x0 hnet12 d vss vss lpnfet w=0.66u l=0.12u m=1 
 x1 hnet13 d vss vss lpnfet w=0.66u l=0.12u m=1 
 x10 hnet24 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x11 vdd m hnet24 vdd lppfet w=0.28u l=0.12u m=1 
 x12 vdd cn c vdd lppfet w=0.56u l=0.12u m=1 
 x13 c cn vss vss lpnfet w=0.4u l=0.12u m=1 
 x14 vdd g cn vdd lppfet w=0.78u l=0.12u m=1 
 x15 cn g vss vss lpnfet w=0.56u l=0.12u m=1 
 x16 vdd pm q vdd lppfet w=2.48u l=0.12u m=1 
 x17 q pm vss vss lpnfet w=1.84u l=0.12u m=1 
 x18 vdd m qn vdd lppfet w=2.48u l=0.12u m=1 
 x19 qn m vss vss lpnfet w=1.84u l=0.12u m=1 
 x2 pm c hnet12 vss lpnfet w=0.66u l=0.12u m=1 
 x20 vdd pm m vdd lppfet w=0.8u l=0.12u m=1 
 x21 m pm vss vss lpnfet w=0.52u l=0.12u m=1 
 x3 pm c hnet13 vss lpnfet w=0.66u l=0.12u m=1 
 x4 hnet20 cn pm vdd lppfet w=1.14u l=0.12u m=1 
 x5 hnet17 cn pm vdd lppfet w=1.14u l=0.12u m=1 
 x6 vdd d hnet20 vdd lppfet w=1.14u l=0.12u m=1 
 x7 vdd d hnet17 vdd lppfet w=1.14u l=0.12u m=1 
 x8 hnet22 m vss vss lpnfet w=0.18u l=0.12u m=1 
 x9 pm cn hnet22 vss lpnfet w=0.18u l=0.12u m=1 
 .ends tlatx4ts 

 **** 
 *.subckt tlatxlts q qn d g 
 .subckt tlatxlts q qn d g vss vdd
 x0 hnet12 d vss vss lpnfet w=0.2u l=0.12u m=1 
 x1 pm c hnet12 vss lpnfet w=0.2u l=0.12u m=1 
 x10 vdd g cn vdd lppfet w=0.28u l=0.12u m=1 
 x11 cn g vss vss lpnfet w=0.2u l=0.12u m=1 
 x12 vdd pm q vdd lppfet w=0.42u l=0.12u m=1 
 x13 q pm vss vss lpnfet w=0.24u l=0.12u m=1 
 x14 vdd m qn vdd lppfet w=0.42u l=0.12u m=1 
 x15 qn m vss vss lpnfet w=0.24u l=0.12u m=1 
 x16 vdd pm m vdd lppfet w=0.28u l=0.12u m=1 
 x17 m pm vss vss lpnfet w=0.2u l=0.12u m=1 
 x2 hnet14 cn pm vdd lppfet w=0.28u l=0.12u m=1 
 x3 vdd d hnet14 vdd lppfet w=0.28u l=0.12u m=1 
 x4 hnet20 m vss vss lpnfet w=0.2u l=0.12u m=1 
 x5 pm cn hnet20 vss lpnfet w=0.2u l=0.12u m=1 
 x6 hnet22 c pm vdd lppfet w=0.28u l=0.12u m=1 
 x7 vdd m hnet22 vdd lppfet w=0.28u l=0.12u m=1 
 x8 vdd cn c vdd lppfet w=0.28u l=0.12u m=1 
 x9 c cn vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends tlatxlts 

 **** 
 *.subckt xnor2x1ts y a b 
 .subckt xnor2x1ts y a b vss vdd
 x0 y nmin1 net35 vdd lppfet w=0.78u l=0.12u m=1 
 x1 y a nmin2 vdd lppfet w=0.78u l=0.12u m=1 
 x2 y a net35 vss lpnfet w=0.56u l=0.12u m=1 
 x3 y nmin1 nmin2 vss lpnfet w=0.56u l=0.12u m=1 
 x4 vdd a nmin1 vdd lppfet w=0.3u l=0.12u m=1 
 x5 nmin1 a vss vss lpnfet w=0.22u l=0.12u m=1 
 x6 vdd nmin2 net35 vdd lppfet w=0.78u l=0.12u m=1 
 x7 net35 nmin2 vss vss lpnfet w=0.56u l=0.12u m=1 
 x8 vdd b nmin2 vdd lppfet w=0.72u l=0.12u m=1 
 x9 nmin2 b vss vss lpnfet w=0.56u l=0.12u m=1 
 .ends xnor2x1ts 

 **** 
 *.subckt xnor2x2ts y a b 
 .subckt xnor2x2ts y a b vss vdd
 x0 y nmin1 net35 vdd lppfet w=1.56u l=0.12u m=1 
 x1 y a nmin2 vdd lppfet w=1.56u l=0.12u m=1 
 x2 y a net35 vss lpnfet w=1.1u l=0.12u m=1 
 x3 y nmin1 nmin2 vss lpnfet w=1.1u l=0.12u m=1 
 x4 vdd a nmin1 vdd lppfet w=0.62u l=0.12u m=1 
 x5 nmin1 a vss vss lpnfet w=0.44u l=0.12u m=1 
 x6 vdd nmin2 net35 vdd lppfet w=1.56u l=0.12u m=1 
 x7 net35 nmin2 vss vss lpnfet w=1.1u l=0.12u m=1 
 x8 vdd b nmin2 vdd lppfet w=1.56u l=0.12u m=1 
 x9 nmin2 b vss vss lpnfet w=1.1u l=0.12u m=1 
 .ends xnor2x2ts 

 **** 
 *.subckt xnor2x4ts y a b 
 .subckt xnor2x4ts y a b vss vdd
 x0 y nmin1 net35 vdd lppfet w=3.12u l=0.12u m=1 
 x1 y a nmin2 vdd lppfet w=3.12u l=0.12u m=1 
 x2 y a net35 vss lpnfet w=2.1u l=0.12u m=1 
 x3 y nmin1 nmin2 vss lpnfet w=2.1u l=0.12u m=1 
 x4 vdd a nmin1 vdd lppfet w=1.22u l=0.12u m=1 
 x5 nmin1 a vss vss lpnfet w=0.88u l=0.12u m=1 
 x6 vdd nmin2 net35 vdd lppfet w=3.12u l=0.12u m=1 
 x7 net35 nmin2 vss vss lpnfet w=2.1u l=0.12u m=1 
 x8 vdd b nmin2 vdd lppfet w=3.12u l=0.12u m=1 
 x9 nmin2 b vss vss lpnfet w=2.16u l=0.12u m=1 
 .ends xnor2x4ts 

 **** 
 *.subckt xnor2xlts y a b 
 .subckt xnor2xlts y a b vss vdd
 x0 y nmin1 net35 vdd lppfet w=0.4u l=0.12u m=1 
 x1 y a nmin2 vdd lppfet w=0.4u l=0.12u m=1 
 x2 y a net35 vss lpnfet w=0.28u l=0.12u m=1 
 x3 y nmin1 nmin2 vss lpnfet w=0.28u l=0.12u m=1 
 x4 vdd a nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x5 nmin1 a vss vss lpnfet w=0.2u l=0.12u m=1 
 x6 vdd nmin2 net35 vdd lppfet w=0.4u l=0.12u m=1 
 x7 net35 nmin2 vss vss lpnfet w=0.28u l=0.12u m=1 
 x8 vdd b nmin2 vdd lppfet w=0.4u l=0.12u m=1 
 x9 nmin2 b vss vss lpnfet w=0.28u l=0.12u m=1 
 .ends xnor2xlts 

 **** 
 *.subckt xnor3x1ts y a b c 
 .subckt xnor3x1ts y a b c vss vdd
 x0 vdd nmin1 net54 vdd lppfet w=0.5u l=0.12u m=1 
 x1 net54 nmin1 vss vss lpnfet w=0.36u l=0.12u m=1 
 x10 net87 nmin2 nmin1 vdd lppfet w=0.72u l=0.12u m=1 
 x11 net87 b net54 vdd lppfet w=0.5u l=0.12u m=1 
 x12 net93 nmin3 net99 vdd lppfet w=0.5u l=0.12u m=1 
 x13 net93 c net87 vdd lppfet w=0.5u l=0.12u m=1 
 x14 net99 b nmin1 vdd lppfet w=0.72u l=0.12u m=1 
 x15 net99 nmin2 net54 vdd lppfet w=0.5u l=0.12u m=1 
 x16 net87 b nmin1 vss lpnfet w=0.52u l=0.12u m=1 
 x17 net87 nmin2 net54 vss lpnfet w=0.36u l=0.12u m=1 
 x18 net93 c net99 vss lpnfet w=0.36u l=0.12u m=1 
 x19 net93 nmin3 net87 vss lpnfet w=0.36u l=0.12u m=1 
 x2 vdd net93 y vdd lppfet w=0.64u l=0.12u m=1 
 x20 net99 nmin2 nmin1 vss lpnfet w=0.52u l=0.12u m=1 
 x21 net99 b net54 vss lpnfet w=0.36u l=0.12u m=1 
 x3 y net93 vss vss lpnfet w=0.46u l=0.12u m=1 
 x4 vdd c nmin3 vdd lppfet w=0.28u l=0.12u m=1 
 x5 nmin3 c vss vss lpnfet w=0.2u l=0.12u m=1 
 x6 vdd b nmin2 vdd lppfet w=0.5u l=0.12u m=1 
 x7 nmin2 b vss vss lpnfet w=0.36u l=0.12u m=1 
 x8 vdd a nmin1 vdd lppfet w=0.72u l=0.12u m=1 
 x9 nmin1 a vss vss lpnfet w=0.52u l=0.12u m=1 
 .ends xnor3x1ts 

 **** 
 *.subckt xnor3x2ts y a b c 
 .subckt xnor3x2ts y a b c vss vdd
 x0 vdd nmin1 net54 vdd lppfet w=0.96u l=0.12u m=1 
 x1 net54 nmin1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x10 net87 nmin2 nmin1 vdd lppfet w=1.28u l=0.12u m=1 
 x11 net87 b net54 vdd lppfet w=1.02u l=0.12u m=1 
 x12 net93 nmin3 net99 vdd lppfet w=0.98u l=0.12u m=1 
 x13 net93 c net87 vdd lppfet w=1.02u l=0.12u m=1 
 x14 net99 b nmin1 vdd lppfet w=1.16u l=0.12u m=1 
 x15 net99 nmin2 net54 vdd lppfet w=0.96u l=0.12u m=1 
 x16 net87 b nmin1 vss lpnfet w=0.86u l=0.12u m=1 
 x17 net87 nmin2 net54 vss lpnfet w=0.68u l=0.12u m=1 
 x18 net93 c net99 vss lpnfet w=0.74u l=0.12u m=1 
 x19 net93 nmin3 net87 vss lpnfet w=0.68u l=0.12u m=1 
 x2 vdd net93 y vdd lppfet w=1.3u l=0.12u m=1 
 x20 net99 nmin2 nmin1 vss lpnfet w=0.92u l=0.12u m=1 
 x21 net99 b net54 vss lpnfet w=0.68u l=0.12u m=1 
 x3 y net93 vss vss lpnfet w=0.92u l=0.12u m=1 
 x4 vdd c nmin3 vdd lppfet w=0.42u l=0.12u m=1 
 x5 nmin3 c vss vss lpnfet w=0.3u l=0.12u m=1 
 x6 vdd b nmin2 vdd lppfet w=0.94u l=0.12u m=1 
 x7 nmin2 b vss vss lpnfet w=0.68u l=0.12u m=1 
 x8 vdd a nmin1 vdd lppfet w=1.28u l=0.12u m=1 
 x9 nmin1 a vss vss lpnfet w=0.92u l=0.12u m=1 
 .ends xnor3x2ts 

 **** 
 *.subckt xnor3x4ts y a b c 
 .subckt xnor3x4ts y a b c vss vdd
 x0 vdd nmin1 net54 vdd lppfet w=1.86u l=0.12u m=1 
 x1 net54 nmin1 vss vss lpnfet w=1.48u l=0.12u m=1 
 x10 net87 nmin2 nmin1 vdd lppfet w=1.28u l=0.12u m=1 
 x11 net87 b net54 vdd lppfet w=2.06u l=0.12u m=1 
 x12 net93 nmin3 net99 vdd lppfet w=1.84u l=0.12u m=1 
 x13 net93 c net87 vdd lppfet w=1.84u l=0.12u m=1 
 x14 net99 b nmin1 vdd lppfet w=1.18u l=0.12u m=1 
 x15 net99 nmin2 net54 vdd lppfet w=1.8u l=0.12u m=1 
 x16 net87 b nmin1 vss lpnfet w=0.82u l=0.12u m=1 
 x17 net87 nmin2 net54 vss lpnfet w=1.42u l=0.12u m=1 
 x18 net93 c net99 vss lpnfet w=1.34u l=0.12u m=1 
 x19 net93 nmin3 net87 vss lpnfet w=1.38u l=0.12u m=1 
 x2 vdd net93 y vdd lppfet w=2.6u l=0.12u m=1 
 x20 net99 nmin2 nmin1 vss lpnfet w=0.92u l=0.12u m=1 
 x21 net99 b net54 vss lpnfet w=1.42u l=0.12u m=1 
 x3 y net93 vss vss lpnfet w=1.84u l=0.12u m=1 
 x4 vdd c nmin3 vdd lppfet w=0.84u l=0.12u m=1 
 x5 nmin3 c vss vss lpnfet w=0.6u l=0.12u m=1 
 x6 vdd b nmin2 vdd lppfet w=1.12u l=0.12u m=1 
 x7 nmin2 b vss vss lpnfet w=0.82u l=0.12u m=1 
 x8 vdd a nmin1 vdd lppfet w=1.28u l=0.12u m=1 
 x9 nmin1 a vss vss lpnfet w=0.92u l=0.12u m=1 
 .ends xnor3x4ts 

 **** 
 *.subckt xnor3xlts y a b c 
 .subckt xnor3xlts y a b c vss vdd
 x0 vdd nmin1 net54 vdd lppfet w=0.28u l=0.12u m=1 
 x1 net54 nmin1 vss vss lpnfet w=0.2u l=0.12u m=1 
 x10 net87 nmin2 nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net87 b net54 vdd lppfet w=0.28u l=0.12u m=1 
 x12 net93 nmin3 net99 vdd lppfet w=0.28u l=0.12u m=1 
 x13 net93 c net87 vdd lppfet w=0.28u l=0.12u m=1 
 x14 net99 b nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x15 net99 nmin2 net54 vdd lppfet w=0.28u l=0.12u m=1 
 x16 net87 b nmin1 vss lpnfet w=0.2u l=0.12u m=1 
 x17 net87 nmin2 net54 vss lpnfet w=0.2u l=0.12u m=1 
 x18 net93 c net99 vss lpnfet w=0.2u l=0.12u m=1 
 x19 net93 nmin3 net87 vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd net93 y vdd lppfet w=0.42u l=0.12u m=1 
 x20 net99 nmin2 nmin1 vss lpnfet w=0.2u l=0.12u m=1 
 x21 net99 b net54 vss lpnfet w=0.2u l=0.12u m=1 
 x3 y net93 vss vss lpnfet w=0.24u l=0.12u m=1 
 x4 vdd c nmin3 vdd lppfet w=0.28u l=0.12u m=1 
 x5 nmin3 c vss vss lpnfet w=0.2u l=0.12u m=1 
 x6 vdd b nmin2 vdd lppfet w=0.28u l=0.12u m=1 
 x7 nmin2 b vss vss lpnfet w=0.2u l=0.12u m=1 
 x8 vdd a nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x9 nmin1 a vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends xnor3xlts 

 **** 
 *.subckt xor2x1ts y a b 
 .subckt xor2x1ts y a b vss vdd
 x0 y a net35 vdd lppfet w=0.76u l=0.12u m=1 
 x1 y nmin1 nmin2 vdd lppfet w=0.78u l=0.12u m=1 
 x2 y nmin1 net35 vss lpnfet w=0.56u l=0.12u m=1 
 x3 y a nmin2 vss lpnfet w=0.54u l=0.12u m=1 
 x4 vdd a nmin1 vdd lppfet w=0.3u l=0.12u m=1 
 x5 nmin1 a vss vss lpnfet w=0.22u l=0.12u m=1 
 x6 vdd nmin2 net35 vdd lppfet w=0.76u l=0.12u m=1 
 x7 net35 nmin2 vss vss lpnfet w=0.56u l=0.12u m=1 
 x8 vdd b nmin2 vdd lppfet w=0.78u l=0.12u m=1 
 x9 nmin2 b vss vss lpnfet w=0.54u l=0.12u m=1 
 .ends xor2x1ts 

 **** 
 *.subckt xor2x2ts y a b 
 .subckt xor2x2ts y a b vss vdd
 x0 y a net35 vdd lppfet w=1.56u l=0.12u m=1 
 x1 y nmin1 nmin2 vdd lppfet w=1.56u l=0.12u m=1 
 x2 y nmin1 net35 vss lpnfet w=1.1u l=0.12u m=1 
 x3 y a nmin2 vss lpnfet w=1.08u l=0.12u m=1 
 x4 vdd a nmin1 vdd lppfet w=0.62u l=0.12u m=1 
 x5 nmin1 a vss vss lpnfet w=0.44u l=0.12u m=1 
 x6 vdd nmin2 net35 vdd lppfet w=1.56u l=0.12u m=1 
 x7 net35 nmin2 vss vss lpnfet w=1.1u l=0.12u m=1 
 x8 vdd b nmin2 vdd lppfet w=1.56u l=0.12u m=1 
 x9 nmin2 b vss vss lpnfet w=1.1u l=0.12u m=1 
 .ends xor2x2ts 

 **** 
 *.subckt xor2x4ts y a b 
 .subckt xor2x4ts y a b vss vdd
 x0 y a net35 vdd lppfet w=3.12u l=0.12u m=1 
 x1 y nmin1 nmin2 vdd lppfet w=3.12u l=0.12u m=1 
 x2 y nmin1 net35 vss lpnfet w=2.16u l=0.12u m=1 
 x3 y a nmin2 vss lpnfet w=2.16u l=0.12u m=1 
 x4 vdd a nmin1 vdd lppfet w=1.22u l=0.12u m=1 
 x5 nmin1 a vss vss lpnfet w=0.88u l=0.12u m=1 
 x6 vdd nmin2 net35 vdd lppfet w=3.06u l=0.12u m=1 
 x7 net35 nmin2 vss vss lpnfet w=2.16u l=0.12u m=1 
 x8 vdd b nmin2 vdd lppfet w=3.12u l=0.12u m=1 
 x9 nmin2 b vss vss lpnfet w=2.2u l=0.12u m=1 
 .ends xor2x4ts 

 **** 
 *.subckt xor2xlts y a b 
 .subckt xor2xlts y a b vss vdd
 x0 y a net35 vdd lppfet w=0.4u l=0.12u m=1 
 x1 y nmin1 nmin2 vdd lppfet w=0.38u l=0.12u m=1 
 x2 y nmin1 net35 vss lpnfet w=0.26u l=0.12u m=1 
 x3 y a nmin2 vss lpnfet w=0.28u l=0.12u m=1 
 x4 vdd a nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x5 nmin1 a vss vss lpnfet w=0.2u l=0.12u m=1 
 x6 vdd nmin2 net35 vdd lppfet w=0.4u l=0.12u m=1 
 x7 net35 nmin2 vss vss lpnfet w=0.28u l=0.12u m=1 
 x8 vdd b nmin2 vdd lppfet w=0.4u l=0.12u m=1 
 x9 nmin2 b vss vss lpnfet w=0.28u l=0.12u m=1 
 .ends xor2xlts 

 **** 
 *.subckt xor3x1ts y a b c 
 .subckt xor3x1ts y a b c vss vdd
 x0 vdd nmin1 net53 vdd lppfet w=0.5u l=0.12u m=1 
 x1 net53 nmin1 vss vss lpnfet w=0.36u l=0.12u m=1 
 x10 net86 nmin2 nmin1 vdd lppfet w=0.72u l=0.12u m=1 
 x11 net86 b net53 vdd lppfet w=0.5u l=0.12u m=1 
 x12 net92 c net98 vdd lppfet w=0.5u l=0.12u m=1 
 x13 net92 nmin3 net86 vdd lppfet w=0.5u l=0.12u m=1 
 x14 net98 b nmin1 vdd lppfet w=0.72u l=0.12u m=1 
 x15 net98 nmin2 net53 vdd lppfet w=0.5u l=0.12u m=1 
 x16 net86 b nmin1 vss lpnfet w=0.52u l=0.12u m=1 
 x17 net86 nmin2 net53 vss lpnfet w=0.36u l=0.12u m=1 
 x18 net92 nmin3 net98 vss lpnfet w=0.36u l=0.12u m=1 
 x19 net92 c net86 vss lpnfet w=0.36u l=0.12u m=1 
 x2 vdd net92 y vdd lppfet w=0.64u l=0.12u m=1 
 x20 net98 nmin2 nmin1 vss lpnfet w=0.52u l=0.12u m=1 
 x21 net98 b net53 vss lpnfet w=0.36u l=0.12u m=1 
 x3 y net92 vss vss lpnfet w=0.46u l=0.12u m=1 
 x4 vdd c nmin3 vdd lppfet w=0.28u l=0.12u m=1 
 x5 nmin3 c vss vss lpnfet w=0.2u l=0.12u m=1 
 x6 vdd b nmin2 vdd lppfet w=0.5u l=0.12u m=1 
 x7 nmin2 b vss vss lpnfet w=0.36u l=0.12u m=1 
 x8 vdd a nmin1 vdd lppfet w=0.72u l=0.12u m=1 
 x9 nmin1 a vss vss lpnfet w=0.52u l=0.12u m=1 
 .ends xor3x1ts 

 **** 
 *.subckt xor3x2ts y a b c 
 .subckt xor3x2ts y a b c vss vdd
 x0 vdd nmin1 net53 vdd lppfet w=0.96u l=0.12u m=1 
 x1 net53 nmin1 vss vss lpnfet w=0.6u l=0.12u m=1 
 x10 net86 nmin2 nmin1 vdd lppfet w=1.28u l=0.12u m=1 
 x11 net86 b net53 vdd lppfet w=1.02u l=0.12u m=1 
 x12 net92 c net98 vdd lppfet w=0.98u l=0.12u m=1 
 x13 net92 nmin3 net86 vdd lppfet w=1.02u l=0.12u m=1 
 x14 net98 b nmin1 vdd lppfet w=1.16u l=0.12u m=1 
 x15 net98 nmin2 net53 vdd lppfet w=0.96u l=0.12u m=1 
 x16 net86 b nmin1 vss lpnfet w=0.86u l=0.12u m=1 
 x17 net86 nmin2 net53 vss lpnfet w=0.68u l=0.12u m=1 
 x18 net92 nmin3 net98 vss lpnfet w=0.68u l=0.12u m=1 
 x19 net92 c net86 vss lpnfet w=0.68u l=0.12u m=1 
 x2 vdd net92 y vdd lppfet w=1.3u l=0.12u m=1 
 x20 net98 nmin2 nmin1 vss lpnfet w=0.92u l=0.12u m=1 
 x21 net98 b net53 vss lpnfet w=0.68u l=0.12u m=1 
 x3 y net92 vss vss lpnfet w=0.92u l=0.12u m=1 
 x4 vdd c nmin3 vdd lppfet w=0.42u l=0.12u m=1 
 x5 nmin3 c vss vss lpnfet w=0.3u l=0.12u m=1 
 x6 vdd b nmin2 vdd lppfet w=0.94u l=0.12u m=1 
 x7 nmin2 b vss vss lpnfet w=0.68u l=0.12u m=1 
 x8 vdd a nmin1 vdd lppfet w=1.28u l=0.12u m=1 
 x9 nmin1 a vss vss lpnfet w=0.92u l=0.12u m=1 
 .ends xor3x2ts 

 **** 
 *.subckt xor3x4ts y a b c 
 .subckt xor3x4ts y a b c vss vdd
 x0 vdd nmin1 net53 vdd lppfet w=1.86u l=0.12u m=1 
 x1 net53 nmin1 vss vss lpnfet w=1.48u l=0.12u m=1 
 x10 net86 nmin2 nmin1 vdd lppfet w=1.28u l=0.12u m=1 
 x11 net86 b net53 vdd lppfet w=2.06u l=0.12u m=1 
 x12 net92 c net98 vdd lppfet w=1.94u l=0.12u m=1 
 x13 net92 nmin3 net86 vdd lppfet w=2.06u l=0.12u m=1 
 x14 net98 b nmin1 vdd lppfet w=1.18u l=0.12u m=1 
 x15 net98 nmin2 net53 vdd lppfet w=1.8u l=0.12u m=1 
 x16 net86 b nmin1 vss lpnfet w=0.82u l=0.12u m=1 
 x17 net86 nmin2 net53 vss lpnfet w=1.42u l=0.12u m=1 
 x18 net92 nmin3 net98 vss lpnfet w=1.2u l=0.12u m=1 
 x19 net92 c net86 vss lpnfet w=1.48u l=0.12u m=1 
 x2 vdd net92 y vdd lppfet w=2.6u l=0.12u m=1 
 x20 net98 nmin2 nmin1 vss lpnfet w=0.92u l=0.12u m=1 
 x21 net98 b net53 vss lpnfet w=1.42u l=0.12u m=1 
 x3 y net92 vss vss lpnfet w=1.84u l=0.12u m=1 
 x4 vdd c nmin3 vdd lppfet w=0.84u l=0.12u m=1 
 x5 nmin3 c vss vss lpnfet w=0.6u l=0.12u m=1 
 x6 vdd b nmin2 vdd lppfet w=1.12u l=0.12u m=1 
 x7 nmin2 b vss vss lpnfet w=0.82u l=0.12u m=1 
 x8 vdd a nmin1 vdd lppfet w=1.28u l=0.12u m=1 
 x9 nmin1 a vss vss lpnfet w=0.92u l=0.12u m=1 
 .ends xor3x4ts 

 **** 
 *.subckt xor3xlts y a b c 
 .subckt xor3xlts y a b c vss vdd
 x0 vdd nmin1 net53 vdd lppfet w=0.28u l=0.12u m=1 
 x1 net53 nmin1 vss vss lpnfet w=0.2u l=0.12u m=1 
 x10 net86 nmin2 nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x11 net86 b net53 vdd lppfet w=0.28u l=0.12u m=1 
 x12 net92 c net98 vdd lppfet w=0.28u l=0.12u m=1 
 x13 net92 nmin3 net86 vdd lppfet w=0.28u l=0.12u m=1 
 x14 net98 b nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x15 net98 nmin2 net53 vdd lppfet w=0.28u l=0.12u m=1 
 x16 net86 b nmin1 vss lpnfet w=0.2u l=0.12u m=1 
 x17 net86 nmin2 net53 vss lpnfet w=0.2u l=0.12u m=1 
 x18 net92 nmin3 net98 vss lpnfet w=0.2u l=0.12u m=1 
 x19 net92 c net86 vss lpnfet w=0.2u l=0.12u m=1 
 x2 vdd net92 y vdd lppfet w=0.42u l=0.12u m=1 
 x20 net98 nmin2 nmin1 vss lpnfet w=0.2u l=0.12u m=1 
 x21 net98 b net53 vss lpnfet w=0.2u l=0.12u m=1 
 x3 y net92 vss vss lpnfet w=0.24u l=0.12u m=1 
 x4 vdd c nmin3 vdd lppfet w=0.28u l=0.12u m=1 
 x5 nmin3 c vss vss lpnfet w=0.2u l=0.12u m=1 
 x6 vdd b nmin2 vdd lppfet w=0.28u l=0.12u m=1 
 x7 nmin2 b vss vss lpnfet w=0.2u l=0.12u m=1 
 x8 vdd a nmin1 vdd lppfet w=0.28u l=0.12u m=1 
 x9 nmin1 a vss vss lpnfet w=0.2u l=0.12u m=1 
 .ends xor3xlts 

 .temp 25
 *define options
  .option post=1
  .option accurate=1
  .option gmin=1e-15
  .option gmindc=1.0e-15
  .option method=gear

 *circuit instantiation
 x1and2xlts a_i abar_i out vss vdd and2xlts

 *power and input signals
 va_i a_i 0 pulse(0 1.2 0 100n 100n 2u 4u)
 vabar_i abar_i 0 pulse(1.2 0 0 100n 10n 2u 4u)
 vvss vss 0 dc=0
 vvdd vdd 0 dc=1.2

 *measurements
 .tran 100n 10u
 .measure avg_pow avg power from=1u to=10u
 .end

 **warning**  pivtol too large
 ** reset to half minimum value of (gmindc,gmin)


 ***********************************************************************
 ** runlvl is invoked, you can disable it by:
      a) Add option runlvl=0 to your current simulation job.
      b) Copy $installdir/hspice.ini to your HOME directory and
         customize it by adding option runlvl=0, which disables
         it for all of your simulation jobs.
      c) Re-invoke $installdir/bin/config program and unselect the
         option runlvl setting in box 'hspice.ini' which disables
         it for whole group simulation jobs.

 ** runlvl is invoked, some options are ignored or automatically set:
      Options below are automatically set(user setting will overwrite them):
      if runlvl=6,            .option bypass=0
      if runlvl=[1|2|3|4|5],  .option bypass=2

      Options below are ignored, they are replaced by automated algorithms:
        lvltim    dvdt      ft    fast   trtol  absvar  relvar
          relq  chgtol    dvtr    imin    itl3    rmax

 ** runlvl is invoked, actual option value used by HSPICE are:
       runlvl= 5       bypass= 0      mbypass=   2.00   bytol= 100.00u
 ***********************************************************************

1****** HSPICE  --  A-2007.09  32-BIT    (Aug 28 2007) 14:54:14 02/23/2013 linux
 ******  
 *include model and subckts                                                     
  ******  circuit name directory                                                
 ******  
 circuit number to circuit name directory
   number circuitname                     definition         multiplier
        0 main circuit
        1 x1and2xlts.                     and2xlts           1.00 
        2 x1and2xlts.x0.                  lppfet             1.00 
        3 x1and2xlts.x1.                  lpnfet             1.00 
        4 x1and2xlts.x2.                  lpnfet             1.00 
        5 x1and2xlts.x3.                  lpnfet             1.00 
        6 x1and2xlts.x4.                  lppfet             1.00 
        7 x1and2xlts.x5.                  lppfet             1.00 
1****** HSPICE  --  A-2007.09  32-BIT    (Aug 28 2007) 14:54:14 02/23/2013 linux
 ******  
 *include model and subckts                                                     
  ******  mos   model parameters           tnom=  25.000 temp=  25.000          
 ******  
 
Model Name: lppch  

 BSIM4 Model (Level 54)

    MOBMOD = 0
    BINUNIT = 1
    PARAMCHK = 1
    CAPMOD = 2
    DIOMOD = 1
    RDSMOD = 1
    TRNQSMOD = 0
    ACNQSMOD = 0
    RBODYMOD = 0
    RGATEMOD = 0
    PERMOD = 1
    GEOMOD = 0
    RGEOMOD = 1
    FNOIMOD = 1
    TNOIMOD = 0
    IGCMOD = 1
    IGBMOD = 1
    STIMOD = 1
    VBFWDMOD = 0
    VERSION =    4.4 
    TOXREF = 3.23e-09 
    TOXE = 3.23e-09 
    TOXP = 2.864e-09 
    TOXM = 3.12e-09 
    DTOX =      0 
    EPSROX =    3.9 
    CDSC = 0.0007852 
    CDSCB = 0.0008325 
    CDSCD =      0 
    CIT = 0.001358 
    NFACTOR =    1.1 
    XJ = 1.5e-07 
    VSAT = 2.259e+05 
    A0 = 2.665e-15 
    AGS = -0.00138 
    A1 =      0 
    A2 =      1 
    AT = 3.137e+04 
    KETA = 0.001312 
    NSUB =  6e+16 
    NDEP = 4.5e+17 
    NSD =  1e+20 
    NGATE = 1.2e+20 
    GAMMA1 =      0 
    GAMMA2 =      0 
    VBX =      0 
    VBM =     -3 
    XT = 1.55e-07 
    K1 = 0.4644 
    KT1 = -0.1959 
    KT1L = -1.928e-09 
    KT2 = -0.0937 
    K2 =  -0.05 
    K3 =  27.36 
    K3B =  48.65 
    LPE0 = 4.7e-08 
    LPEB = 5.383e-08 
    DVTP0 =  1e-09 
    DVTP1 =      0 
    W0 = 3.388e-06 
    DVT0 = 8.266e-09 
    DVT1 = 0.5129 
    DVT2 = -0.0001678 
    DVT0W = 1.315e-09 
    DVT1W = 2.208e+04 
    DVT2W = -0.032 
    DROUT = 0.07505 
    DSUB = 0.2358 
    VTH0 = -0.4577 
    EU =      1 
    UA = 1.796e-09 
    UA1 = 1.834e-09 
    UB = 3.932e-19 
    UB1 = -3.083e-18 
    UC =      0 
    UC1 =      0 
    U0 =  114.8 
    UTE = -0.7622 
    VOFF = -0.1562 
    VOFFL = -1.575e-09 
    MINV = -0.2565 
    FPROUT = 0.9267 
    PDITS = 0.1321 
    PDITSD = 0.8218 
    PDITSL = 1.074e+05 
    DELTA = 0.01511 
    RDSW =    200 
    RDSWMIN =      0 
    RDWMIN =  3.099 
    RSWMIN =  3.038 
    RDW =    162 
    RSW =    162 
    PRWG = 0.004431 
    PRWB =    0.1 
    PRT =  55.98 
    ETA0 =  0.009 
    ETAB = -0.01659 
    PCLM = 0.8658 
    PDIBLC1 = 3.9e-07 
    PDIBLC2 = 0.01062 
    PDIBLCB = 0.09527 
    PSCBE1 = 4.24e+08 
    PSCBE2 =  1e-05 
    PVAG = 2.22e-15 
    WR =      1 
    DWG =      0 
    DWB = 8.424e-11 
    XW = -4e-08 
    XWREF = -4e-08 
    XL = -2.8e-08 
    XLREF = -2.8e-08 
    B0 = 1.3e-05 
    B1 = 1.858e-05 
    ALPHA0 =  1e-12 
    ALPHA1 = 0.00355 
    AGIDL = 5.9e-09 
    BGIDL = 1.738e+09 
    CGIDL =      1 
    PHIN =      0 
    EGIDL =   0.55 
    AIGC = 0.006931 
    BIGC = 0.0001684 
    CIGC = -0.016 
    AIGSD = 0.006931 
    BIGSD = 0.000405 
    CIGSD = 0.000898 
    AIGBACC = 0.01153 
    BIGBACC = 0.00131 
    CIGBACC = -0.0001 
    AIGBINV = 0.00809 
    BIGBINV = 0.0007038 
    CIGBINV = 0.01089 
    NIGC =  2.781 
    NIGBINV =  3.162 
    NIGBACC =  2.355 
    NTOX =      1 
    EIGBINV =   1.48 
    PIGCD =   3.36 
    POXEDGE =      1 
    XRCRG1 =  2.532 
    TNOIA =    1.5 
    TNOIB =    3.5 
    NTNOI =  1.653 
    XRCRG2 =  139.5 
    BETA0 =     10 
    IJTHDFWD =    0.1 
    IJTHSFWD =    0.1 
    IJTHDREV =    0.1 
    IJTHSREV =    0.1 
    XJBVD =      1 
    XJBVS =      1 
    BVD =   10.5 
    BVS =   10.5 
    VFB =     -1 
    GBMIN =  1e-12 
    RBDB =  1e+09 
    RBPB =     50 
    RBSB =  1e+09 
    RBPS =    100 
    RBPD =    100 
    CGSL = 3.1e-10 
    CGDL = 3.1e-10 
    CKAPPAS =  5.902 
    CKAPPAD =  5.902 
    CF =      0 
    CLC =  1e-07 
    CLE =    0.6 
    DWC =      0 
    DLC = 1.4e-08 
    DLCIG = 2.14e-09 
    DWJ =      0 
    VFBCV =     -1 
    ACDE =    0.4 
    MOIN =   8.97 
    NOFF =   2.27 
    VOFFCV = -0.0969 
    DMCG = 2.3e-07 
    DMCI = 3.2e-07 
    DMDG =      0 
    DMCGT =      0 
    XGW = 4.3e-07 
    XGL = -2.8e-08 
    RSHG =      7 
    NGCON =      1 
    TCJ =  0.001 
    TPB = 0.0011 
    TCJSW = 0.0025 
    TPBSW =      0 
    TCJSWG = 0.0025 
    TPBSWG =      0 
    SK0 =      0 
    SK1 =      0 
    SK2 =      0 
    SL =  2e-06 
    SW =  2e-06 
    K =      0 
    LUA = -7.55e-11 
    WVTH0 =  0.022 
    WUA = -7.211e-11 
    PNFACTOR = -0.015 
    PVTH0 = -0.00295 
    PU0 =   0.37 
    TNOM =  298.1 
    CGSO =      0 
    CGDO =      0 
    CGBO = 1.706e-11 
    XPART =      0 
    RSH =      7 
    JSS =  9e-08 
    JSWS = 2.7e-14 
    JSWGS = 2.7e-14 
    PBS =   0.65 
    MJS =   0.41 
    PBSWS =      1 
    MJSWS =   0.01 
    CJS = 0.00125 
    CJSWS =  5e-11 
    NJS =  1.006 
    PBSWGS =   1.16 
    MJSWGS =  0.574 
    CJSWGS = 4.94e-10 
    XTIS =      3 
    JSD =  9e-08 
    JSWD = 2.7e-14 
    JSWGD = 2.7e-14 
    PBD =   0.65 
    MJD =   0.41 
    PBSWD =      1 
    MJSWD =   0.01 
    CJD = 0.00125 
    CJSWD =  5e-11 
    NJD =  1.006 
    PBSWGD =   1.16 
    MJSWGD =  0.574 
    CJSWGD = 4.94e-10 
    XTID =      3 
    LMLT =      1 
    WMLT =      1 
    LINT = -4.2e-08 
    LL = 1.45e-16 
    LLC =      0 
    LLN =    1.2 
    LW = -4e-15 
    LWC =      0 
    LWN =      1 
    LWL =      0 
    LWLC =      0 
    LMIN =      0 
    LMAX =      1 
    WINT =  3e-08 
    WL =      0 
    WLC =      0 
    WLN =      1 
    WW = -2.5e-16 
    WWC =      0 
    WWN =    1.2 
    WWL =      0 
    WWLC =      0 
    WMIN =      0 
    WMAX =      1 
    NOIA =  3e+42 
    NOIB = 1.6e+27 
    NOIC = 2.1e+08 
    EM = 4.1e+07 
    EF =   1.15 
    AF =      1 
    KF =      0 
    TRS =      0 
    TRD =      0 
    TEMPMOD  =      0 
    LAMBDA   =      0 
    VTL      =  2e+05 m/s
    LC       =  5e-09 
    XN       =      3 
    LLAMBDA  =      0 
    LVTL     =      0 
    LXN      =      0 
    WLAMBDA  =      0 
    WVTL     =      0 
    WXN      =      0 
    PLAMBDA  =      0 
    PVTL     =      0 
    PXN      =      0 
    RNOIA    =  0.577 
    RNOIB    = 0.5164 
    SAREF(SA0) =  3e-06 m
    SBREF(SB0) =  3e-06 m
    WLOD     =      0 m
    KU0      = 1.7e-07 1/m
    KVSAT    =     -1 
    KVTH0    =      0 m
    TKU0     =      0 
    LLODKU0  =      1 
    WLODKU0  =      1 
    LLODVTH  =      1 
    WLODVTH  =      1 
    LKU0     = 1.9e-07 
    WKU0     = 2.8e-06 
    PKU0     =      0 
    LKVTH0   =      0 
    WKVTH0   = -1.84e-07 
    PKVTH0   =      0 
    STK2     =  4e-09 
    LODK2    =      1 
    STETA0   =      0 
    LODETA0  =      1 
    LXRCRG1  =      0 
    WXRCRG1  =      0 
    PXRCRG1  =      0 
    LXRCRG2  =      0 
    WXRCRG2  =      0 
    PXRCRG2  =      0 
 

    *** UCB's BSIM4.4.0 new diode model is activated. ***
    *** UCB's Diode Model Parameters ***

    JTSS         =      0 
    JTSSWS       =      0 
    JTSSWGS      =      0 
    JTSD         =      0 
    JTSSWD       =      0 
    JTSSWGD      =      0 
    NJTS         =     20 
    NJTSSW       =     20 
    NJTSSWG      =     20 
    XTSS         =   0.02 
    XTSSWS       =   0.02 
    XTSSWGS      =   0.02 
    XTSD         =   0.02 
    XTSSWD       =   0.02 
    XTSSWGD      =   0.02 
    TNJTS        =      0 
    TNJTSSW      =      0 
    TNJTSSWG     =      0 
    VFBSDOFF     =      0 
    LVFBSDOFF    =      0 
    WVFBSDOFF    =      0 
    PVFBSDOFF    =      0 
    LINTNOI      =      0 
    VTSS         =     10 
    VTSD         =     10 
    VTSSWS       =     10 
    VTSSWD       =     10 
    VTSSWGS      =     10 
    VTSSWGD      =     10 
    TTDIOMOD     =      1 
 

 
Model Name: lpnch  

 BSIM4 Model (Level 54)

    MOBMOD = 0
    BINUNIT = 1
    PARAMCHK = 1
    CAPMOD = 2
    DIOMOD = 1
    RDSMOD = 1
    TRNQSMOD = 0
    ACNQSMOD = 0
    RBODYMOD = 0
    RGATEMOD = 0
    PERMOD = 1
    GEOMOD = 0
    RGEOMOD = 1
    FNOIMOD = 1
    TNOIMOD = 0
    IGCMOD = 1
    IGBMOD = 1
    STIMOD = 1
    VBFWDMOD = 0
    VERSION =    4.4 
    TOXREF = 3.03e-09 
    TOXE = 3.03e-09 
    TOXP = 2.637e-09 
    TOXM = 3.12e-09 
    DTOX =      0 
    EPSROX =    3.9 
    CDSC = 0.0007852 
    CDSCB =      0 
    CDSCD =      0 
    CIT = 0.001449 
    NFACTOR =  1.102 
    XJ = 1.5e-07 
    VSAT = 1.08e+05 
    A0 =  1.188 
    AGS = 0.8577 
    A1 =      0 
    A2 =      1 
    AT =    500 
    KETA = 1.388e-18 
    NSUB =  6e+16 
    NDEP =  7e+17 
    NSD =  1e+20 
    NGATE =  3e+20 
    GAMMA1 =      0 
    GAMMA2 =      0 
    VBX =      0 
    VBM =     -3 
    XT = 1.55e-07 
    K1 = 0.2699 
    KT1 = -0.1817 
    KT1L = -7.172e-10 
    KT2 = -2.2e-07 
    K2 = 0.03473 
    K3 =  56.29 
    K3B =  21.37 
    LPE0 = 1.193e-07 
    LPEB = 1.741e-07 
    DVTP0 =  1e-09 
    DVTP1 =      0 
    W0 = 7.244e-07 
    DVT0 =  5.417 
    DVT1 =      1 
    DVT2 =      0 
    DVT0W =  -0.09 
    DVT1W =  1e+06 
    DVT2W =      0 
    DROUT =   1.08 
    DSUB = 0.2982 
    VTH0 = 0.5583 
    EU =   1.67 
    UA = 5.1e-12 
    UA1 =      0 
    UB = 1.905e-18 
    UB1 =      0 
    UC = 1.395e-10 
    UC1 =      0 
    U0 =  440.2 
    UTE = -1.521 
    VOFF = -0.1594 
    VOFFL = -1.459e-09 
    MINV = -0.4054 
    FPROUT = 4.441e-16 
    PDITS = 0.003091 
    PDITSD =  0.001 
    PDITSL =   3967 
    DELTA =  0.008 
    RDSW =    200 
    RDSWMIN =      0 
    RDWMIN =  1.302 
    RSWMIN =  1.864 
    RDW =     50 
    RSW =     45 
    PRWG =      0 
    PRWB = -0.1014 
    PRT =   0.33 
    ETA0 = 0.1185 
    ETAB = -0.05133 
    PCLM = 0.6534 
    PDIBLC1 = 8.882e-16 
    PDIBLC2 = 0.004978 
    PDIBLCB =   0.02 
    PSCBE1 = 4.24e+08 
    PSCBE2 =  1e-05 
    PVAG =  1.988 
    WR =      1 
    DWG = 1.77e-08 
    DWB =      0 
    XW = -1e-08 
    XWREF = -1e-08 
    XL = -2.8e-08 
    XLREF = -2.8e-08 
    B0 = 7.386e-06 
    B1 = 3.575e-05 
    ALPHA0 = 2.965e-12 
    ALPHA1 = 0.0001472 
    AGIDL = 1.988e-07 
    BGIDL = 2.184e+09 
    CGIDL =  13.22 
    PHIN =      0 
    EGIDL = 2.22e-16 
    AIGC = 0.01011 
    BIGC = 0.0007852 
    CIGC = 0.002265 
    AIGSD = 0.01041 
    BIGSD = 0.0003373 
    CIGSD = -0.03802 
    AIGBACC = 0.01098 
    BIGBACC = 0.001486 
    CIGBACC = 0.0758 
    AIGBINV = 0.008728 
    BIGBINV = 0.0008679 
    CIGBINV = 0.01274 
    NIGC =  2.483 
    NIGBINV =  1.778 
    NIGBACC =  1.085 
    NTOX =  1.035 
    EIGBINV =      1 
    PIGCD =    2.7 
    POXEDGE =      1 
    XRCRG1 = 0.5714 
    TNOIA =    1.5 
    TNOIB =    3.5 
    NTNOI =  2.464 
    XRCRG2 =  3.279 
    BETA0 =  3.436 
    IJTHDFWD =    0.1 
    IJTHSFWD =    0.1 
    IJTHDREV =    0.1 
    IJTHSREV =    0.1 
    XJBVD =      1 
    XJBVS =      1 
    BVD =   10.5 
    BVS =   10.5 
    VFB =     -1 
    GBMIN =  1e-12 
    RBDB =  1e+09 
    RBPB =     50 
    RBSB =  1e+09 
    RBPS =    100 
    RBPD =    100 
    CGSL = 3.3e-10 
    CGDL = 3.3e-10 
    CKAPPAS =  10.97 
    CKAPPAD =  10.97 
    CF =      0 
    CLC =  1e-07 
    CLE =    0.6 
    DWC =      0 
    DLC = 1.7e-08 
    DLCIG = 4.178e-09 
    DWJ =      0 
    VFBCV =     -1 
    ACDE =    0.4 
    MOIN =   14.6 
    NOFF =    1.8 
    VOFFCV = -0.099 
    DMCG = 2.3e-07 
    DMCI = 3.2e-07 
    DMDG =      0 
    DMCGT =      0 
    XGW = 4.3e-07 
    XGL = -2.8e-08 
    RSHG =      7 
    NGCON =      1 
    TCJ =  0.001 
    TPB = 0.0015 
    TCJSW = 0.0014 
    TPBSW =      0 
    TCJSWG = 0.0014 
    TPBSWG =      0 
    SK0 =      0 
    SK1 =      0 
    SK2 =      0 
    SL =  2e-06 
    SW =  2e-06 
    K =      0 
    LKETA = -0.006 
    LK1 = -0.001 
    LK3 =  1.315 
    LU0 =  5.522 
    LUTE =   0.01 
    LALPHA0 = 9.153e-12 
    LALPHA1 = -1.08e-05 
    WK3 = -8.337 
    WUA = 1.053e-10 
    WUB = -1e-19 
    WUC = -2.692e-11 
    WU0 = -4.613 
    WDWG = -2.1e-09 
    PK3 = -0.4966 
    PUC = -1.702e-12 
    TNOM =  298.1 
    CGSO =      0 
    CGDO =      0 
    CGBO = 1.706e-11 
    XPART =      0 
    RSH =      7 
    JSS = 1.07e-07 
    JSWS = 7.3e-14 
    JSWGS = 7.3e-14 
    PBS =   0.72 
    MJS =   0.35 
    PBSWS =      1 
    MJSWS =   0.01 
    CJS = 0.00115 
    CJSWS =  5e-11 
    NJS =  1.017 
    PBSWGS =  1.128 
    MJSWGS =  0.639 
    CJSWGS = 4.41e-10 
    XTIS =      3 
    JSD = 1.07e-07 
    JSWD = 7.3e-14 
    JSWGD = 7.3e-14 
    PBD =   0.72 
    MJD =   0.35 
    PBSWD =      1 
    MJSWD =   0.01 
    CJD = 0.00115 
    CJSWD =  5e-11 
    NJD =  1.017 
    PBSWGD =  1.128 
    MJSWGD =  0.639 
    CJSWGD = 4.41e-10 
    XTID =      3 
    LMLT =      1 
    WMLT =      1 
    LINT =      0 
    LL =      0 
    LLC =      0 
    LLN =      1 
    LW =      0 
    LWC =      0 
    LWN =      1 
    LWL =      0 
    LWLC =      0 
    LMIN =      0 
    LMAX =      1 
    WINT =      0 
    WL =      0 
    WLC =      0 
    WLN =      1 
    WW =      0 
    WWC =      0 
    WWN =      1 
    WWL =      0 
    WWLC =      0 
    WMIN =      0 
    WMAX =      1 
    NOIA = 9.1e+41 
    NOIB =  5e+23 
    NOIC =   1.75 
    EM = 4.1e+07 
    EF =   0.95 
    AF =      1 
    KF =      0 
    TRS =      0 
    TRD =      0 
    TEMPMOD  =      0 
    LAMBDA   =      0 
    VTL      =  2e+05 m/s
    LC       =  5e-09 
    XN       =      3 
    LLAMBDA  =      0 
    LVTL     =      0 
    LXN      =      0 
    WLAMBDA  =      0 
    WVTL     =      0 
    WXN      =      0 
    PLAMBDA  =      0 
    PVTL     =      0 
    PXN      =      0 
    RNOIA    =  0.577 
    RNOIB    = 0.5164 
    SAREF(SA0) =  3e-06 m
    SBREF(SB0) =  3e-06 m
    WLOD     =      0 m
    KU0      = -2e-08 1/m
    KVSAT    =   -0.3 
    KVTH0    =  2e-08 m
    TKU0     =      0 
    LLODKU0  =      1 
    WLODKU0  =      1 
    LLODVTH  =      1 
    WLODVTH  =      1 
    LKU0     = -2e-08 
    WKU0     = -5e-08 
    PKU0     =      0 
    LKVTH0   = 8.5e-08 
    WKVTH0   =  2e-07 
    PKVTH0   =      0 
    STK2     =      0 
    LODK2    =      1 
    STETA0   =      0 
    LODETA0  =      1 
    LXRCRG1  =      0 
    WXRCRG1  =      0 
    PXRCRG1  =      0 
    LXRCRG2  =      0 
    WXRCRG2  =      0 
    PXRCRG2  =      0 
 

    *** UCB's BSIM4.4.0 new diode model is activated. ***
    *** UCB's Diode Model Parameters ***

    JTSS         =      0 
    JTSSWS       =      0 
    JTSSWGS      =      0 
    JTSD         =      0 
    JTSSWD       =      0 
    JTSSWGD      =      0 
    NJTS         =     20 
    NJTSSW       =     20 
    NJTSSWG      =     20 
    XTSS         =   0.02 
    XTSSWS       =   0.02 
    XTSSWGS      =   0.02 
    XTSD         =   0.02 
    XTSSWD       =   0.02 
    XTSSWGD      =   0.02 
    TNJTS        =      0 
    TNJTSSW      =      0 
    TNJTSSWG     =      0 
    VFBSDOFF     =      0 
    LVFBSDOFF    =      0 
    WVFBSDOFF    =      0 
    PVFBSDOFF    =      0 
    LINTNOI      =      0 
    VTSS         =     10 
    VTSD         =     10 
    VTSSWS       =     10 
    VTSSWD       =     10 
    VTSSWGS      =     10 
    VTSSWGD      =     10 
    TTDIOMOD     =      1 
 

 
Model Name: lpnch  

 BSIM4 Model (Level 54)

    MOBMOD = 0
    BINUNIT = 1
    PARAMCHK = 1
    CAPMOD = 2
    DIOMOD = 1
    RDSMOD = 1
    TRNQSMOD = 0
    ACNQSMOD = 0
    RBODYMOD = 0
    RGATEMOD = 0
    PERMOD = 1
    GEOMOD = 0
    RGEOMOD = 1
    FNOIMOD = 1
    TNOIMOD = 0
    IGCMOD = 1
    IGBMOD = 1
    STIMOD = 1
    VBFWDMOD = 0
    VERSION =    4.4 
    TOXREF = 3.03e-09 
    TOXE = 3.03e-09 
    TOXP = 2.637e-09 
    TOXM = 3.12e-09 
    DTOX =      0 
    EPSROX =    3.9 
    CDSC = 0.0007852 
    CDSCB =      0 
    CDSCD =      0 
    CIT = 0.001449 
    NFACTOR =  1.102 
    XJ = 1.5e-07 
    VSAT = 1.08e+05 
    A0 =  1.188 
    AGS = 0.8577 
    A1 =      0 
    A2 =      1 
    AT =    500 
    KETA = 1.388e-18 
    NSUB =  6e+16 
    NDEP =  7e+17 
    NSD =  1e+20 
    NGATE =  3e+20 
    GAMMA1 =      0 
    GAMMA2 =      0 
    VBX =      0 
    VBM =     -3 
    XT = 1.55e-07 
    K1 = 0.2699 
    KT1 = -0.1817 
    KT1L = -7.172e-10 
    KT2 = -2.2e-07 
    K2 = 0.03473 
    K3 =  56.29 
    K3B =  21.37 
    LPE0 = 1.193e-07 
    LPEB = 1.741e-07 
    DVTP0 =  1e-09 
    DVTP1 =      0 
    W0 = 7.244e-07 
    DVT0 =  5.417 
    DVT1 =      1 
    DVT2 =      0 
    DVT0W =  -0.09 
    DVT1W =  1e+06 
    DVT2W =      0 
    DROUT =   1.08 
    DSUB = 0.2982 
    VTH0 = 0.5583 
    EU =   1.67 
    UA = 5.1e-12 
    UA1 =      0 
    UB = 1.905e-18 
    UB1 =      0 
    UC = 1.395e-10 
    UC1 =      0 
    U0 =  440.2 
    UTE = -1.521 
    VOFF = -0.1594 
    VOFFL = -1.459e-09 
    MINV = -0.4054 
    FPROUT = 4.441e-16 
    PDITS = 0.003091 
    PDITSD =  0.001 
    PDITSL =   3967 
    DELTA =  0.008 
    RDSW =    200 
    RDSWMIN =      0 
    RDWMIN =  1.302 
    RSWMIN =  1.864 
    RDW =     50 
    RSW =     45 
    PRWG =      0 
    PRWB = -0.1014 
    PRT =   0.33 
    ETA0 = 0.1185 
    ETAB = -0.05133 
    PCLM = 0.6534 
    PDIBLC1 = 8.882e-16 
    PDIBLC2 = 0.004978 
    PDIBLCB =   0.02 
    PSCBE1 = 4.24e+08 
    PSCBE2 =  1e-05 
    PVAG =  1.988 
    WR =      1 
    DWG = 1.77e-08 
    DWB =      0 
    XW = -1e-08 
    XWREF = -1e-08 
    XL = -2.8e-08 
    XLREF = -2.8e-08 
    B0 = 7.386e-06 
    B1 = 3.575e-05 
    ALPHA0 = 2.965e-12 
    ALPHA1 = 0.0001472 
    AGIDL = 1.988e-07 
    BGIDL = 2.184e+09 
    CGIDL =  13.22 
    PHIN =      0 
    EGIDL = 2.22e-16 
    AIGC = 0.01011 
    BIGC = 0.0007852 
    CIGC = 0.002265 
    AIGSD = 0.01041 
    BIGSD = 0.0003373 
    CIGSD = -0.03802 
    AIGBACC = 0.01098 
    BIGBACC = 0.001486 
    CIGBACC = 0.0758 
    AIGBINV = 0.008728 
    BIGBINV = 0.0008679 
    CIGBINV = 0.01274 
    NIGC =  2.483 
    NIGBINV =  1.778 
    NIGBACC =  1.085 
    NTOX =  1.035 
    EIGBINV =      1 
    PIGCD =    2.7 
    POXEDGE =      1 
    XRCRG1 = 0.5714 
    TNOIA =    1.5 
    TNOIB =    3.5 
    NTNOI =  2.464 
    XRCRG2 =  3.275 
    BETA0 =  3.436 
    IJTHDFWD =    0.1 
    IJTHSFWD =    0.1 
    IJTHDREV =    0.1 
    IJTHSREV =    0.1 
    XJBVD =      1 
    XJBVS =      1 
    BVD =   10.5 
    BVS =   10.5 
    VFB =     -1 
    GBMIN =  1e-12 
    RBDB =  1e+09 
    RBPB =     50 
    RBSB =  1e+09 
    RBPS =    100 
    RBPD =    100 
    CGSL = 3.3e-10 
    CGDL = 3.3e-10 
    CKAPPAS =  10.97 
    CKAPPAD =  10.97 
    CF =      0 
    CLC =  1e-07 
    CLE =    0.6 
    DWC =      0 
    DLC = 1.7e-08 
    DLCIG = 4.178e-09 
    DWJ =      0 
    VFBCV =     -1 
    ACDE =    0.4 
    MOIN =   14.6 
    NOFF =    1.8 
    VOFFCV = -0.099 
    DMCG = 2.3e-07 
    DMCI = 3.2e-07 
    DMDG =      0 
    DMCGT =      0 
    XGW = 4.3e-07 
    XGL = -2.8e-08 
    RSHG =      7 
    NGCON =      1 
    TCJ =  0.001 
    TPB = 0.0015 
    TCJSW = 0.0014 
    TPBSW =      0 
    TCJSWG = 0.0014 
    TPBSWG =      0 
    SK0 =      0 
    SK1 =      0 
    SK2 =      0 
    SL =  2e-06 
    SW =  2e-06 
    K =      0 
    LKETA = -0.006 
    LK1 = -0.001 
    LK3 =  1.315 
    LU0 =  5.522 
    LUTE =   0.01 
    LALPHA0 = 9.153e-12 
    LALPHA1 = -1.08e-05 
    WK3 = -8.337 
    WUA = 1.053e-10 
    WUB = -1e-19 
    WUC = -2.692e-11 
    WU0 = -4.613 
    WDWG = -2.1e-09 
    PK3 = -0.4966 
    PUC = -1.702e-12 
    TNOM =  298.1 
    CGSO =      0 
    CGDO =      0 
    CGBO = 1.706e-11 
    XPART =      0 
    RSH =      7 
    JSS = 1.07e-07 
    JSWS = 7.3e-14 
    JSWGS = 7.3e-14 
    PBS =   0.72 
    MJS =   0.35 
    PBSWS =      1 
    MJSWS =   0.01 
    CJS = 0.00115 
    CJSWS =  5e-11 
    NJS =  1.017 
    PBSWGS =  1.128 
    MJSWGS =  0.639 
    CJSWGS = 4.41e-10 
    XTIS =      3 
    JSD = 1.07e-07 
    JSWD = 7.3e-14 
    JSWGD = 7.3e-14 
    PBD =   0.72 
    MJD =   0.35 
    PBSWD =      1 
    MJSWD =   0.01 
    CJD = 0.00115 
    CJSWD =  5e-11 
    NJD =  1.017 
    PBSWGD =  1.128 
    MJSWGD =  0.639 
    CJSWGD = 4.41e-10 
    XTID =      3 
    LMLT =      1 
    WMLT =      1 
    LINT =      0 
    LL =      0 
    LLC =      0 
    LLN =      1 
    LW =      0 
    LWC =      0 
    LWN =      1 
    LWL =      0 
    LWLC =      0 
    LMIN =      0 
    LMAX =      1 
    WINT =      0 
    WL =      0 
    WLC =      0 
    WLN =      1 
    WW =      0 
    WWC =      0 
    WWN =      1 
    WWL =      0 
    WWLC =      0 
    WMIN =      0 
    WMAX =      1 
    NOIA = 9.1e+41 
    NOIB =  5e+23 
    NOIC =   1.75 
    EM = 4.1e+07 
    EF =   0.95 
    AF =      1 
    KF =      0 
    TRS =      0 
    TRD =      0 
    TEMPMOD  =      0 
    LAMBDA   =      0 
    VTL      =  2e+05 m/s
    LC       =  5e-09 
    XN       =      3 
    LLAMBDA  =      0 
    LVTL     =      0 
    LXN      =      0 
    WLAMBDA  =      0 
    WVTL     =      0 
    WXN      =      0 
    PLAMBDA  =      0 
    PVTL     =      0 
    PXN      =      0 
    RNOIA    =  0.577 
    RNOIB    = 0.5164 
    SAREF(SA0) =  3e-06 m
    SBREF(SB0) =  3e-06 m
    WLOD     =      0 m
    KU0      = -2e-08 1/m
    KVSAT    =   -0.3 
    KVTH0    =  2e-08 m
    TKU0     =      0 
    LLODKU0  =      1 
    WLODKU0  =      1 
    LLODVTH  =      1 
    WLODVTH  =      1 
    LKU0     = -2e-08 
    WKU0     = -5e-08 
    PKU0     =      0 
    LKVTH0   = 8.5e-08 
    WKVTH0   =  2e-07 
    PKVTH0   =      0 
    STK2     =      0 
    LODK2    =      1 
    STETA0   =      0 
    LODETA0  =      1 
    LXRCRG1  =      0 
    WXRCRG1  =      0 
    PXRCRG1  =      0 
    LXRCRG2  =      0 
    WXRCRG2  =      0 
    PXRCRG2  =      0 
 

    *** UCB's BSIM4.4.0 new diode model is activated. ***
    *** UCB's Diode Model Parameters ***

    JTSS         =      0 
    JTSSWS       =      0 
    JTSSWGS      =      0 
    JTSD         =      0 
    JTSSWD       =      0 
    JTSSWGD      =      0 
    NJTS         =     20 
    NJTSSW       =     20 
    NJTSSWG      =     20 
    XTSS         =   0.02 
    XTSSWS       =   0.02 
    XTSSWGS      =   0.02 
    XTSD         =   0.02 
    XTSSWD       =   0.02 
    XTSSWGD      =   0.02 
    TNJTS        =      0 
    TNJTSSW      =      0 
    TNJTSSWG     =      0 
    VFBSDOFF     =      0 
    LVFBSDOFF    =      0 
    WVFBSDOFF    =      0 
    PVFBSDOFF    =      0 
    LINTNOI      =      0 
    VTSS         =     10 
    VTSD         =     10 
    VTSSWS       =     10 
    VTSSWD       =     10 
    VTSSWGS      =     10 
    VTSSWGD      =     10 
    TTDIOMOD     =      1 
 

 
Model Name: lpnch  

 BSIM4 Model (Level 54)

    MOBMOD = 0
    BINUNIT = 1
    PARAMCHK = 1
    CAPMOD = 2
    DIOMOD = 1
    RDSMOD = 1
    TRNQSMOD = 0
    ACNQSMOD = 0
    RBODYMOD = 0
    RGATEMOD = 0
    PERMOD = 1
    GEOMOD = 0
    RGEOMOD = 1
    FNOIMOD = 1
    TNOIMOD = 0
    IGCMOD = 1
    IGBMOD = 1
    STIMOD = 1
    VBFWDMOD = 0
    VERSION =    4.4 
    TOXREF = 3.03e-09 
    TOXE = 3.03e-09 
    TOXP = 2.637e-09 
    TOXM = 3.12e-09 
    DTOX =      0 
    EPSROX =    3.9 
    CDSC = 0.0007852 
    CDSCB =      0 
    CDSCD =      0 
    CIT = 0.001449 
    NFACTOR =  1.102 
    XJ = 1.5e-07 
    VSAT = 1.08e+05 
    A0 =  1.188 
    AGS = 0.8577 
    A1 =      0 
    A2 =      1 
    AT =    500 
    KETA = 1.388e-18 
    NSUB =  6e+16 
    NDEP =  7e+17 
    NSD =  1e+20 
    NGATE =  3e+20 
    GAMMA1 =      0 
    GAMMA2 =      0 
    VBX =      0 
    VBM =     -3 
    XT = 1.55e-07 
    K1 = 0.2699 
    KT1 = -0.1817 
    KT1L = -7.172e-10 
    KT2 = -2.2e-07 
    K2 = 0.03473 
    K3 =  56.29 
    K3B =  21.37 
    LPE0 = 1.193e-07 
    LPEB = 1.741e-07 
    DVTP0 =  1e-09 
    DVTP1 =      0 
    W0 = 7.244e-07 
    DVT0 =  5.417 
    DVT1 =      1 
    DVT2 =      0 
    DVT0W =  -0.09 
    DVT1W =  1e+06 
    DVT2W =      0 
    DROUT =   1.08 
    DSUB = 0.2982 
    VTH0 = 0.5583 
    EU =   1.67 
    UA = 5.1e-12 
    UA1 =      0 
    UB = 1.905e-18 
    UB1 =      0 
    UC = 1.395e-10 
    UC1 =      0 
    U0 =  440.2 
    UTE = -1.521 
    VOFF = -0.1594 
    VOFFL = -1.459e-09 
    MINV = -0.4054 
    FPROUT = 4.441e-16 
    PDITS = 0.003091 
    PDITSD =  0.001 
    PDITSL =   3967 
    DELTA =  0.008 
    RDSW =    200 
    RDSWMIN =      0 
    RDWMIN =  1.302 
    RSWMIN =  1.864 
    RDW =     50 
    RSW =     45 
    PRWG =      0 
    PRWB = -0.1014 
    PRT =   0.33 
    ETA0 = 0.1185 
    ETAB = -0.05133 
    PCLM = 0.6534 
    PDIBLC1 = 8.882e-16 
    PDIBLC2 = 0.004978 
    PDIBLCB =   0.02 
    PSCBE1 = 4.24e+08 
    PSCBE2 =  1e-05 
    PVAG =  1.988 
    WR =      1 
    DWG = 1.77e-08 
    DWB =      0 
    XW = -1e-08 
    XWREF = -1e-08 
    XL = -2.8e-08 
    XLREF = -2.8e-08 
    B0 = 7.386e-06 
    B1 = 3.575e-05 
    ALPHA0 = 2.965e-12 
    ALPHA1 = 0.0001472 
    AGIDL = 1.988e-07 
    BGIDL = 2.184e+09 
    CGIDL =  13.22 
    PHIN =      0 
    EGIDL = 2.22e-16 
    AIGC = 0.01011 
    BIGC = 0.0007852 
    CIGC = 0.002265 
    AIGSD = 0.01041 
    BIGSD = 0.0003373 
    CIGSD = -0.03802 
    AIGBACC = 0.01098 
    BIGBACC = 0.001486 
    CIGBACC = 0.0758 
    AIGBINV = 0.008728 
    BIGBINV = 0.0008679 
    CIGBINV = 0.01274 
    NIGC =  2.483 
    NIGBINV =  1.778 
    NIGBACC =  1.085 
    NTOX =  1.035 
    EIGBINV =      1 
    PIGCD =    2.7 
    POXEDGE =      1 
    XRCRG1 = 0.5714 
    TNOIA =    1.5 
    TNOIB =    3.5 
    NTNOI =  2.464 
    XRCRG2 =  3.275 
    BETA0 =  3.436 
    IJTHDFWD =    0.1 
    IJTHSFWD =    0.1 
    IJTHDREV =    0.1 
    IJTHSREV =    0.1 
    XJBVD =      1 
    XJBVS =      1 
    BVD =   10.5 
    BVS =   10.5 
    VFB =     -1 
    GBMIN =  1e-12 
    RBDB =  1e+09 
    RBPB =     50 
    RBSB =  1e+09 
    RBPS =    100 
    RBPD =    100 
    CGSL = 3.3e-10 
    CGDL = 3.3e-10 
    CKAPPAS =  10.97 
    CKAPPAD =  10.97 
    CF =      0 
    CLC =  1e-07 
    CLE =    0.6 
    DWC =      0 
    DLC = 1.7e-08 
    DLCIG = 4.178e-09 
    DWJ =      0 
    VFBCV =     -1 
    ACDE =    0.4 
    MOIN =   14.6 
    NOFF =    1.8 
    VOFFCV = -0.099 
    DMCG = 2.3e-07 
    DMCI = 3.2e-07 
    DMDG =      0 
    DMCGT =      0 
    XGW = 4.3e-07 
    XGL = -2.8e-08 
    RSHG =      7 
    NGCON =      1 
    TCJ =  0.001 
    TPB = 0.0015 
    TCJSW = 0.0014 
    TPBSW =      0 
    TCJSWG = 0.0014 
    TPBSWG =      0 
    SK0 =      0 
    SK1 =      0 
    SK2 =      0 
    SL =  2e-06 
    SW =  2e-06 
    K =      0 
    LKETA = -0.006 
    LK1 = -0.001 
    LK3 =  1.315 
    LU0 =  5.522 
    LUTE =   0.01 
    LALPHA0 = 9.153e-12 
    LALPHA1 = -1.08e-05 
    WK3 = -8.337 
    WUA = 1.053e-10 
    WUB = -1e-19 
    WUC = -2.692e-11 
    WU0 = -4.613 
    WDWG = -2.1e-09 
    PK3 = -0.4966 
    PUC = -1.702e-12 
    TNOM =  298.1 
    CGSO =      0 
    CGDO =      0 
    CGBO = 1.706e-11 
    XPART =      0 
    RSH =      7 
    JSS = 1.07e-07 
    JSWS = 7.3e-14 
    JSWGS = 7.3e-14 
    PBS =   0.72 
    MJS =   0.35 
    PBSWS =      1 
    MJSWS =   0.01 
    CJS = 0.00115 
    CJSWS =  5e-11 
    NJS =  1.017 
    PBSWGS =  1.128 
    MJSWGS =  0.639 
    CJSWGS = 4.41e-10 
    XTIS =      3 
    JSD = 1.07e-07 
    JSWD = 7.3e-14 
    JSWGD = 7.3e-14 
    PBD =   0.72 
    MJD =   0.35 
    PBSWD =      1 
    MJSWD =   0.01 
    CJD = 0.00115 
    CJSWD =  5e-11 
    NJD =  1.017 
    PBSWGD =  1.128 
    MJSWGD =  0.639 
    CJSWGD = 4.41e-10 
    XTID =      3 
    LMLT =      1 
    WMLT =      1 
    LINT =      0 
    LL =      0 
    LLC =      0 
    LLN =      1 
    LW =      0 
    LWC =      0 
    LWN =      1 
    LWL =      0 
    LWLC =      0 
    LMIN =      0 
    LMAX =      1 
    WINT =      0 
    WL =      0 
    WLC =      0 
    WLN =      1 
    WW =      0 
    WWC =      0 
    WWN =      1 
    WWL =      0 
    WWLC =      0 
    WMIN =      0 
    WMAX =      1 
    NOIA = 9.1e+41 
    NOIB =  5e+23 
    NOIC =   1.75 
    EM = 4.1e+07 
    EF =   0.95 
    AF =      1 
    KF =      0 
    TRS =      0 
    TRD =      0 
    TEMPMOD  =      0 
    LAMBDA   =      0 
    VTL      =  2e+05 m/s
    LC       =  5e-09 
    XN       =      3 
    LLAMBDA  =      0 
    LVTL     =      0 
    LXN      =      0 
    WLAMBDA  =      0 
    WVTL     =      0 
    WXN      =      0 
    PLAMBDA  =      0 
    PVTL     =      0 
    PXN      =      0 
    RNOIA    =  0.577 
    RNOIB    = 0.5164 
    SAREF(SA0) =  3e-06 m
    SBREF(SB0) =  3e-06 m
    WLOD     =      0 m
    KU0      = -2e-08 1/m
    KVSAT    =   -0.3 
    KVTH0    =  2e-08 m
    TKU0     =      0 
    LLODKU0  =      1 
    WLODKU0  =      1 
    LLODVTH  =      1 
    WLODVTH  =      1 
    LKU0     = -2e-08 
    WKU0     = -5e-08 
    PKU0     =      0 
    LKVTH0   = 8.5e-08 
    WKVTH0   =  2e-07 
    PKVTH0   =      0 
    STK2     =      0 
    LODK2    =      1 
    STETA0   =      0 
    LODETA0  =      1 
    LXRCRG1  =      0 
    WXRCRG1  =      0 
    PXRCRG1  =      0 
    LXRCRG2  =      0 
    WXRCRG2  =      0 
    PXRCRG2  =      0 
 

    *** UCB's BSIM4.4.0 new diode model is activated. ***
    *** UCB's Diode Model Parameters ***

    JTSS         =      0 
    JTSSWS       =      0 
    JTSSWGS      =      0 
    JTSD         =      0 
    JTSSWD       =      0 
    JTSSWGD      =      0 
    NJTS         =     20 
    NJTSSW       =     20 
    NJTSSWG      =     20 
    XTSS         =   0.02 
    XTSSWS       =   0.02 
    XTSSWGS      =   0.02 
    XTSD         =   0.02 
    XTSSWD       =   0.02 
    XTSSWGD      =   0.02 
    TNJTS        =      0 
    TNJTSSW      =      0 
    TNJTSSWG     =      0 
    VFBSDOFF     =      0 
    LVFBSDOFF    =      0 
    WVFBSDOFF    =      0 
    PVFBSDOFF    =      0 
    LINTNOI      =      0 
    VTSS         =     10 
    VTSD         =     10 
    VTSSWS       =     10 
    VTSSWD       =     10 
    VTSSWGS      =     10 
    VTSSWGD      =     10 
    TTDIOMOD     =      1 
 

 
Model Name: lppch  

 BSIM4 Model (Level 54)

    MOBMOD = 0
    BINUNIT = 1
    PARAMCHK = 1
    CAPMOD = 2
    DIOMOD = 1
    RDSMOD = 1
    TRNQSMOD = 0
    ACNQSMOD = 0
    RBODYMOD = 0
    RGATEMOD = 0
    PERMOD = 1
    GEOMOD = 0
    RGEOMOD = 1
    FNOIMOD = 1
    TNOIMOD = 0
    IGCMOD = 1
    IGBMOD = 1
    STIMOD = 1
    VBFWDMOD = 0
    VERSION =    4.4 
    TOXREF = 3.23e-09 
    TOXE = 3.23e-09 
    TOXP = 2.864e-09 
    TOXM = 3.12e-09 
    DTOX =      0 
    EPSROX =    3.9 
    CDSC = 0.0007852 
    CDSCB = 0.0008325 
    CDSCD =      0 
    CIT = 0.001358 
    NFACTOR =    1.1 
    XJ = 1.5e-07 
    VSAT = 2.259e+05 
    A0 = 2.665e-15 
    AGS = -0.00138 
    A1 =      0 
    A2 =      1 
    AT = 3.137e+04 
    KETA = 0.001312 
    NSUB =  6e+16 
    NDEP = 4.5e+17 
    NSD =  1e+20 
    NGATE = 1.2e+20 
    GAMMA1 =      0 
    GAMMA2 =      0 
    VBX =      0 
    VBM =     -3 
    XT = 1.55e-07 
    K1 = 0.4644 
    KT1 = -0.1959 
    KT1L = -1.928e-09 
    KT2 = -0.0937 
    K2 =  -0.05 
    K3 =  27.36 
    K3B =  48.65 
    LPE0 = 4.7e-08 
    LPEB = 5.383e-08 
    DVTP0 =  1e-09 
    DVTP1 =      0 
    W0 = 3.388e-06 
    DVT0 = 8.266e-09 
    DVT1 = 0.5129 
    DVT2 = -0.0001678 
    DVT0W = 1.315e-09 
    DVT1W = 2.208e+04 
    DVT2W = -0.032 
    DROUT = 0.07505 
    DSUB = 0.2358 
    VTH0 = -0.4577 
    EU =      1 
    UA = 1.796e-09 
    UA1 = 1.834e-09 
    UB = 3.932e-19 
    UB1 = -3.083e-18 
    UC =      0 
    UC1 =      0 
    U0 =  114.8 
    UTE = -0.7622 
    VOFF = -0.1562 
    VOFFL = -1.575e-09 
    MINV = -0.2565 
    FPROUT = 0.9267 
    PDITS = 0.1321 
    PDITSD = 0.8218 
    PDITSL = 1.074e+05 
    DELTA = 0.01511 
    RDSW =    200 
    RDSWMIN =      0 
    RDWMIN =  3.099 
    RSWMIN =  3.038 
    RDW =    162 
    RSW =    162 
    PRWG = 0.004431 
    PRWB =    0.1 
    PRT =  55.98 
    ETA0 =  0.009 
    ETAB = -0.01659 
    PCLM = 0.8658 
    PDIBLC1 = 3.9e-07 
    PDIBLC2 = 0.01062 
    PDIBLCB = 0.09527 
    PSCBE1 = 4.24e+08 
    PSCBE2 =  1e-05 
    PVAG = 2.22e-15 
    WR =      1 
    DWG =      0 
    DWB = 8.424e-11 
    XW = -4e-08 
    XWREF = -4e-08 
    XL = -2.8e-08 
    XLREF = -2.8e-08 
    B0 = 1.3e-05 
    B1 = 1.858e-05 
    ALPHA0 =  1e-12 
    ALPHA1 = 0.00355 
    AGIDL = 5.9e-09 
    BGIDL = 1.738e+09 
    CGIDL =      1 
    PHIN =      0 
    EGIDL =   0.55 
    AIGC = 0.006931 
    BIGC = 0.0001684 
    CIGC = -0.016 
    AIGSD = 0.006931 
    BIGSD = 0.000405 
    CIGSD = 0.000898 
    AIGBACC = 0.01153 
    BIGBACC = 0.00131 
    CIGBACC = -0.0001 
    AIGBINV = 0.00809 
    BIGBINV = 0.0007038 
    CIGBINV = 0.01089 
    NIGC =  2.781 
    NIGBINV =  3.162 
    NIGBACC =  2.355 
    NTOX =      1 
    EIGBINV =   1.48 
    PIGCD =   3.36 
    POXEDGE =      1 
    XRCRG1 =  2.532 
    TNOIA =    1.5 
    TNOIB =    3.5 
    NTNOI =  1.653 
    XRCRG2 =    205 
    BETA0 =     10 
    IJTHDFWD =    0.1 
    IJTHSFWD =    0.1 
    IJTHDREV =    0.1 
    IJTHSREV =    0.1 
    XJBVD =      1 
    XJBVS =      1 
    BVD =   10.5 
    BVS =   10.5 
    VFB =     -1 
    GBMIN =  1e-12 
    RBDB =  1e+09 
    RBPB =     50 
    RBSB =  1e+09 
    RBPS =    100 
    RBPD =    100 
    CGSL = 3.1e-10 
    CGDL = 3.1e-10 
    CKAPPAS =  5.902 
    CKAPPAD =  5.902 
    CF =      0 
    CLC =  1e-07 
    CLE =    0.6 
    DWC =      0 
    DLC = 1.4e-08 
    DLCIG = 2.14e-09 
    DWJ =      0 
    VFBCV =     -1 
    ACDE =    0.4 
    MOIN =   8.97 
    NOFF =   2.27 
    VOFFCV = -0.0969 
    DMCG = 2.3e-07 
    DMCI = 3.2e-07 
    DMDG =      0 
    DMCGT =      0 
    XGW = 4.3e-07 
    XGL = -2.8e-08 
    RSHG =      7 
    NGCON =      1 
    TCJ =  0.001 
    TPB = 0.0011 
    TCJSW = 0.0025 
    TPBSW =      0 
    TCJSWG = 0.0025 
    TPBSWG =      0 
    SK0 =      0 
    SK1 =      0 
    SK2 =      0 
    SL =  2e-06 
    SW =  2e-06 
    K =      0 
    LUA = -7.55e-11 
    WVTH0 =  0.022 
    WUA = -7.211e-11 
    PNFACTOR = -0.015 
    PVTH0 = -0.00295 
    PU0 =   0.37 
    TNOM =  298.1 
    CGSO =      0 
    CGDO =      0 
    CGBO = 1.706e-11 
    XPART =      0 
    RSH =      7 
    JSS =  9e-08 
    JSWS = 2.7e-14 
    JSWGS = 2.7e-14 
    PBS =   0.65 
    MJS =   0.41 
    PBSWS =      1 
    MJSWS =   0.01 
    CJS = 0.00125 
    CJSWS =  5e-11 
    NJS =  1.006 
    PBSWGS =   1.16 
    MJSWGS =  0.574 
    CJSWGS = 4.94e-10 
    XTIS =      3 
    JSD =  9e-08 
    JSWD = 2.7e-14 
    JSWGD = 2.7e-14 
    PBD =   0.65 
    MJD =   0.41 
    PBSWD =      1 
    MJSWD =   0.01 
    CJD = 0.00125 
    CJSWD =  5e-11 
    NJD =  1.006 
    PBSWGD =   1.16 
    MJSWGD =  0.574 
    CJSWGD = 4.94e-10 
    XTID =      3 
    LMLT =      1 
    WMLT =      1 
    LINT = -4.2e-08 
    LL = 1.45e-16 
    LLC =      0 
    LLN =    1.2 
    LW = -4e-15 
    LWC =      0 
    LWN =      1 
    LWL =      0 
    LWLC =      0 
    LMIN =      0 
    LMAX =      1 
    WINT =  3e-08 
    WL =      0 
    WLC =      0 
    WLN =      1 
    WW = -2.5e-16 
    WWC =      0 
    WWN =    1.2 
    WWL =      0 
    WWLC =      0 
    WMIN =      0 
    WMAX =      1 
    NOIA =  3e+42 
    NOIB = 1.6e+27 
    NOIC = 2.1e+08 
    EM = 4.1e+07 
    EF =   1.15 
    AF =      1 
    KF =      0 
    TRS =      0 
    TRD =      0 
    TEMPMOD  =      0 
    LAMBDA   =      0 
    VTL      =  2e+05 m/s
    LC       =  5e-09 
    XN       =      3 
    LLAMBDA  =      0 
    LVTL     =      0 
    LXN      =      0 
    WLAMBDA  =      0 
    WVTL     =      0 
    WXN      =      0 
    PLAMBDA  =      0 
    PVTL     =      0 
    PXN      =      0 
    RNOIA    =  0.577 
    RNOIB    = 0.5164 
    SAREF(SA0) =  3e-06 m
    SBREF(SB0) =  3e-06 m
    WLOD     =      0 m
    KU0      = 1.7e-07 1/m
    KVSAT    =     -1 
    KVTH0    =      0 m
    TKU0     =      0 
    LLODKU0  =      1 
    WLODKU0  =      1 
    LLODVTH  =      1 
    WLODVTH  =      1 
    LKU0     = 1.9e-07 
    WKU0     = 2.8e-06 
    PKU0     =      0 
    LKVTH0   =      0 
    WKVTH0   = -1.84e-07 
    PKVTH0   =      0 
    STK2     =  4e-09 
    LODK2    =      1 
    STETA0   =      0 
    LODETA0  =      1 
    LXRCRG1  =      0 
    WXRCRG1  =      0 
    PXRCRG1  =      0 
    LXRCRG2  =      0 
    WXRCRG2  =      0 
    PXRCRG2  =      0 
 

    *** UCB's BSIM4.4.0 new diode model is activated. ***
    *** UCB's Diode Model Parameters ***

    JTSS         =      0 
    JTSSWS       =      0 
    JTSSWGS      =      0 
    JTSD         =      0 
    JTSSWD       =      0 
    JTSSWGD      =      0 
    NJTS         =     20 
    NJTSSW       =     20 
    NJTSSWG      =     20 
    XTSS         =   0.02 
    XTSSWS       =   0.02 
    XTSSWGS      =   0.02 
    XTSD         =   0.02 
    XTSSWD       =   0.02 
    XTSSWGD      =   0.02 
    TNJTS        =      0 
    TNJTSSW      =      0 
    TNJTSSWG     =      0 
    VFBSDOFF     =      0 
    LVFBSDOFF    =      0 
    WVFBSDOFF    =      0 
    PVFBSDOFF    =      0 
    LINTNOI      =      0 
    VTSS         =     10 
    VTSD         =     10 
    VTSSWS       =     10 
    VTSSWD       =     10 
    VTSSWGS      =     10 
    VTSSWGD      =     10 
    TTDIOMOD     =      1 
 

 
Model Name: lppch  

 BSIM4 Model (Level 54)

    MOBMOD = 0
    BINUNIT = 1
    PARAMCHK = 1
    CAPMOD = 2
    DIOMOD = 1
    RDSMOD = 1
    TRNQSMOD = 0
    ACNQSMOD = 0
    RBODYMOD = 0
    RGATEMOD = 0
    PERMOD = 1
    GEOMOD = 0
    RGEOMOD = 1
    FNOIMOD = 1
    TNOIMOD = 0
    IGCMOD = 1
    IGBMOD = 1
    STIMOD = 1
    VBFWDMOD = 0
    VERSION =    4.4 
    TOXREF = 3.23e-09 
    TOXE = 3.23e-09 
    TOXP = 2.864e-09 
    TOXM = 3.12e-09 
    DTOX =      0 
    EPSROX =    3.9 
    CDSC = 0.0007852 
    CDSCB = 0.0008325 
    CDSCD =      0 
    CIT = 0.001358 
    NFACTOR =    1.1 
    XJ = 1.5e-07 
    VSAT = 2.259e+05 
    A0 = 2.665e-15 
    AGS = -0.00138 
    A1 =      0 
    A2 =      1 
    AT = 3.137e+04 
    KETA = 0.001312 
    NSUB =  6e+16 
    NDEP = 4.5e+17 
    NSD =  1e+20 
    NGATE = 1.2e+20 
    GAMMA1 =      0 
    GAMMA2 =      0 
    VBX =      0 
    VBM =     -3 
    XT = 1.55e-07 
    K1 = 0.4644 
    KT1 = -0.1959 
    KT1L = -1.928e-09 
    KT2 = -0.0937 
    K2 =  -0.05 
    K3 =  27.36 
    K3B =  48.65 
    LPE0 = 4.7e-08 
    LPEB = 5.383e-08 
    DVTP0 =  1e-09 
    DVTP1 =      0 
    W0 = 3.388e-06 
    DVT0 = 8.266e-09 
    DVT1 = 0.5129 
    DVT2 = -0.0001678 
    DVT0W = 1.315e-09 
    DVT1W = 2.208e+04 
    DVT2W = -0.032 
    DROUT = 0.07505 
    DSUB = 0.2358 
    VTH0 = -0.4577 
    EU =      1 
    UA = 1.796e-09 
    UA1 = 1.834e-09 
    UB = 3.932e-19 
    UB1 = -3.083e-18 
    UC =      0 
    UC1 =      0 
    U0 =  114.8 
    UTE = -0.7622 
    VOFF = -0.1562 
    VOFFL = -1.575e-09 
    MINV = -0.2565 
    FPROUT = 0.9267 
    PDITS = 0.1321 
    PDITSD = 0.8218 
    PDITSL = 1.074e+05 
    DELTA = 0.01511 
    RDSW =    200 
    RDSWMIN =      0 
    RDWMIN =  3.099 
    RSWMIN =  3.038 
    RDW =    162 
    RSW =    162 
    PRWG = 0.004431 
    PRWB =    0.1 
    PRT =  55.98 
    ETA0 =  0.009 
    ETAB = -0.01659 
    PCLM = 0.8658 
    PDIBLC1 = 3.9e-07 
    PDIBLC2 = 0.01062 
    PDIBLCB = 0.09527 
    PSCBE1 = 4.24e+08 
    PSCBE2 =  1e-05 
    PVAG = 2.22e-15 
    WR =      1 
    DWG =      0 
    DWB = 8.424e-11 
    XW = -4e-08 
    XWREF = -4e-08 
    XL = -2.8e-08 
    XLREF = -2.8e-08 
    B0 = 1.3e-05 
    B1 = 1.858e-05 
    ALPHA0 =  1e-12 
    ALPHA1 = 0.00355 
    AGIDL = 5.9e-09 
    BGIDL = 1.738e+09 
    CGIDL =      1 
    PHIN =      0 
    EGIDL =   0.55 
    AIGC = 0.006931 
    BIGC = 0.0001684 
    CIGC = -0.016 
    AIGSD = 0.006931 
    BIGSD = 0.000405 
    CIGSD = 0.000898 
    AIGBACC = 0.01153 
    BIGBACC = 0.00131 
    CIGBACC = -0.0001 
    AIGBINV = 0.00809 
    BIGBINV = 0.0007038 
    CIGBINV = 0.01089 
    NIGC =  2.781 
    NIGBINV =  3.162 
    NIGBACC =  2.355 
    NTOX =      1 
    EIGBINV =   1.48 
    PIGCD =   3.36 
    POXEDGE =      1 
    XRCRG1 =  2.532 
    TNOIA =    1.5 
    TNOIB =    3.5 
    NTNOI =  1.653 
    XRCRG2 =    205 
    BETA0 =     10 
    IJTHDFWD =    0.1 
    IJTHSFWD =    0.1 
    IJTHDREV =    0.1 
    IJTHSREV =    0.1 
    XJBVD =      1 
    XJBVS =      1 
    BVD =   10.5 
    BVS =   10.5 
    VFB =     -1 
    GBMIN =  1e-12 
    RBDB =  1e+09 
    RBPB =     50 
    RBSB =  1e+09 
    RBPS =    100 
    RBPD =    100 
    CGSL = 3.1e-10 
    CGDL = 3.1e-10 
    CKAPPAS =  5.902 
    CKAPPAD =  5.902 
    CF =      0 
    CLC =  1e-07 
    CLE =    0.6 
    DWC =      0 
    DLC = 1.4e-08 
    DLCIG = 2.14e-09 
    DWJ =      0 
    VFBCV =     -1 
    ACDE =    0.4 
    MOIN =   8.97 
    NOFF =   2.27 
    VOFFCV = -0.0969 
    DMCG = 2.3e-07 
    DMCI = 3.2e-07 
    DMDG =      0 
    DMCGT =      0 
    XGW = 4.3e-07 
    XGL = -2.8e-08 
    RSHG =      7 
    NGCON =      1 
    TCJ =  0.001 
    TPB = 0.0011 
    TCJSW = 0.0025 
    TPBSW =      0 
    TCJSWG = 0.0025 
    TPBSWG =      0 
    SK0 =      0 
    SK1 =      0 
    SK2 =      0 
    SL =  2e-06 
    SW =  2e-06 
    K =      0 
    LUA = -7.55e-11 
    WVTH0 =  0.022 
    WUA = -7.211e-11 
    PNFACTOR = -0.015 
    PVTH0 = -0.00295 
    PU0 =   0.37 
    TNOM =  298.1 
    CGSO =      0 
    CGDO =      0 
    CGBO = 1.706e-11 
    XPART =      0 
    RSH =      7 
    JSS =  9e-08 
    JSWS = 2.7e-14 
    JSWGS = 2.7e-14 
    PBS =   0.65 
    MJS =   0.41 
    PBSWS =      1 
    MJSWS =   0.01 
    CJS = 0.00125 
    CJSWS =  5e-11 
    NJS =  1.006 
    PBSWGS =   1.16 
    MJSWGS =  0.574 
    CJSWGS = 4.94e-10 
    XTIS =      3 
    JSD =  9e-08 
    JSWD = 2.7e-14 
    JSWGD = 2.7e-14 
    PBD =   0.65 
    MJD =   0.41 
    PBSWD =      1 
    MJSWD =   0.01 
    CJD = 0.00125 
    CJSWD =  5e-11 
    NJD =  1.006 
    PBSWGD =   1.16 
    MJSWGD =  0.574 
    CJSWGD = 4.94e-10 
    XTID =      3 
    LMLT =      1 
    WMLT =      1 
    LINT = -4.2e-08 
    LL = 1.45e-16 
    LLC =      0 
    LLN =    1.2 
    LW = -4e-15 
    LWC =      0 
    LWN =      1 
    LWL =      0 
    LWLC =      0 
    LMIN =      0 
    LMAX =      1 
    WINT =  3e-08 
    WL =      0 
    WLC =      0 
    WLN =      1 
    WW = -2.5e-16 
    WWC =      0 
    WWN =    1.2 
    WWL =      0 
    WWLC =      0 
    WMIN =      0 
    WMAX =      1 
    NOIA =  3e+42 
    NOIB = 1.6e+27 
    NOIC = 2.1e+08 
    EM = 4.1e+07 
    EF =   1.15 
    AF =      1 
    KF =      0 
    TRS =      0 
    TRD =      0 
    TEMPMOD  =      0 
    LAMBDA   =      0 
    VTL      =  2e+05 m/s
    LC       =  5e-09 
    XN       =      3 
    LLAMBDA  =      0 
    LVTL     =      0 
    LXN      =      0 
    WLAMBDA  =      0 
    WVTL     =      0 
    WXN      =      0 
    PLAMBDA  =      0 
    PVTL     =      0 
    PXN      =      0 
    RNOIA    =  0.577 
    RNOIB    = 0.5164 
    SAREF(SA0) =  3e-06 m
    SBREF(SB0) =  3e-06 m
    WLOD     =      0 m
    KU0      = 1.7e-07 1/m
    KVSAT    =     -1 
    KVTH0    =      0 m
    TKU0     =      0 
    LLODKU0  =      1 
    WLODKU0  =      1 
    LLODVTH  =      1 
    WLODVTH  =      1 
    LKU0     = 1.9e-07 
    WKU0     = 2.8e-06 
    PKU0     =      0 
    LKVTH0   =      0 
    WKVTH0   = -1.84e-07 
    PKVTH0   =      0 
    STK2     =  4e-09 
    LODK2    =      1 
    STETA0   =      0 
    LODETA0  =      1 
    LXRCRG1  =      0 
    WXRCRG1  =      0 
    PXRCRG1  =      0 
    LXRCRG2  =      0 
    WXRCRG2  =      0 
    PXRCRG2  =      0 
 

    *** UCB's BSIM4.4.0 new diode model is activated. ***
    *** UCB's Diode Model Parameters ***

    JTSS         =      0 
    JTSSWS       =      0 
    JTSSWGS      =      0 
    JTSD         =      0 
    JTSSWD       =      0 
    JTSSWGD      =      0 
    NJTS         =     20 
    NJTSSW       =     20 
    NJTSSWG      =     20 
    XTSS         =   0.02 
    XTSSWS       =   0.02 
    XTSSWGS      =   0.02 
    XTSD         =   0.02 
    XTSSWD       =   0.02 
    XTSSWGD      =   0.02 
    TNJTS        =      0 
    TNJTSSW      =      0 
    TNJTSSWG     =      0 
    VFBSDOFF     =      0 
    LVFBSDOFF    =      0 
    WVFBSDOFF    =      0 
    PVFBSDOFF    =      0 
    LINTNOI      =      0 
    VTSS         =     10 
    VTSD         =     10 
    VTSSWS       =     10 
    VTSSWD       =     10 
    VTSSWGS      =     10 
    VTSSWGD      =     10 
    TTDIOMOD     =      1 
 


 **warning** dc voltage reset to initial transient source value
             in source        0:va_i                new dc=  0.0000D+00


 **warning** dc voltage reset to initial transient source value
             in source        0:vabar_i             new dc=  0.1200D+01

 Warning: Source diffusion conductance reset to 1.0e3 mho.

 Warning: Drain diffusion conductance reset to 1.0e3 mho.

 Warning: Source diffusion conductance reset to 1.0e3 mho.

 Warning: Drain diffusion conductance reset to 1.0e3 mho.

 Warning: Source diffusion conductance reset to 1.0e3 mho.

 Warning: Drain diffusion conductance reset to 1.0e3 mho.

 Warning: Source diffusion conductance reset to 1.0e3 mho.

 Warning: Drain diffusion conductance reset to 1.0e3 mho.

 Warning: Source diffusion conductance reset to 1.0e3 mho.

 Warning: Drain diffusion conductance reset to 1.0e3 mho.

 Warning: Source diffusion conductance reset to 1.0e3 mho.

 Warning: Drain diffusion conductance reset to 1.0e3 mho.

  Opening plot unit= 15
 file=and2.pa0                                                                 

1****** HSPICE  --  A-2007.09  32-BIT    (Aug 28 2007) 14:54:14 02/23/2013 linux
 ******  
 *include model and subckts                                                     
  ******  operating point information      tnom=  25.000 temp=  25.000          
 ******  
 ***** operating point status is voltage   simulation time is     0.     
    node    =voltage      node    =voltage      node    =voltage

 +0:a_i     =   0.      0:abar_i  =   1.2000  0:out     =   1.3163n
 +0:vdd     =   1.2000  0:vss     =   0.      1:hnet14  =   3.4934n
 +1:net11   =   1.2000 

 ******  
 *include model and subckts                                                     
  ******  transient analysis               tnom=  25.000 temp=  25.000          
 ******  
   avg_pow=  6.1745E-09  from=  1.0000E-06     to=  1.0000E-05

          ***** job concluded
1****** HSPICE  --  A-2007.09  32-BIT    (Aug 28 2007) 14:54:14 02/23/2013 linux
 ******  
 *include model and subckts                                                     
  ******  job statistics summary           tnom=  25.000 temp=  25.000          
 ******  

           total memory used      12162 kbytes

  # nodes =      20 # elements=      10
  # diodes=       0 # bjts    =       0 # jfets   =       0 # mosfets =       6
  # va device =       0

    analysis           time    # points   tot. iter  conv.iter

    op point           0.00           1           9
    transient          0.22         101        1618         612 rev=       130
    readin             0.89
    errchk             0.06
    setup              0.00
    output             0.00
           total cpu time          1.17 seconds
               job started at  14:54:14 02/23/2013
               job ended   at  14:54:16 02/23/2013


 Init: hspice initialization file: /usr/cad/meta/rel/hspice/hspice.ini
 lic: Release hspice token(s) 
